{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 236,
	"files_parsed": 1,
	"lines_parsed": 232,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 10,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-08T12:35:04.517135+02:00",
	"end": "2024-05-08T12:35:06.72844+02:00",
	"paths": [
		"templates/node-problem-detector_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "6e961cf754ae6652a788975a9767acc19b2e884e6b55eaef2322b009e628bc20",
					"line": 179,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "c0d5f77c8c972ae76d946178d67c563e6ebdd5b537851f968abfe76d40f313c1",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "22b6bb7340e734f5a56af58f95388e12174cbabe1dbb14619c7516d4e987f243",
					"line": 202,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{systemd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{systemd}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{systemd}}.readOnly is undefined"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "c19f33b85da730ca2213267b79aa511437a674068891884bf87680b8cc1ac0ae",
					"line": 204,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{dbus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{dbus}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.volumeMounts.name={{dbus}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "6b99b1b27acd33080b91951cd98315435dc36b894f1455a88349cf12bc85dfd0",
					"line": 212,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{kmsg}}.hostPath.path",
					"search_line": 212,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev/kmsg' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev/kmsg' with hostPath"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "effbabbf0d67ea9c75774181d44082c9455733ee782eb97f7ed8490aa3d25cd5",
					"line": 209,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{log}}.hostPath.path",
					"search_line": 209,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/log/' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/log/' with hostPath"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "0a720379a2f871b9b4b91aaea50923614ebb36d33f1b8ce92dd075c119e61edb",
					"line": 234,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{dbus}}.hostPath.path",
					"search_line": 234,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/dbus/' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/dbus/' with hostPath"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "acda7d99486f5587b439473ae4c256eb69b25d0121572056a7e6cfffb33253f3",
					"line": 226,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{machine-id}}.hostPath.path",
					"search_line": 226,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/machine-id' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/machine-id' with hostPath"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "d893124f38d5281ee04fb6435a6f24c5f434a9334022d80b7c04062ca7f070c6",
					"line": 230,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{systemd}}.hostPath.path",
					"search_line": 230,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/systemd/system/' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/systemd/system/' with hostPath"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "c31bd1d28b7d14823b978164841dc250ef0828a30d274b321c2f005506018469",
					"line": 215,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.volumes.name={{localtime}}.hostPath.path",
					"search_line": 215,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/localtime' with hostPath",
					"actual_value": "Workload name 'release-name-node-problem-detector' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/localtime' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "5f362ff3ffbe40adf5ce5faf02110b8bce04a3cd3b796968a40760a0a86a4347",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "f46318a488adef6f572bb8e0d2e120db454ca62cbb716619cea619f08170acb0",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "cc3fb3dc8b329efd21083bde9bc308ff8deb1b7145fca8425cf6edf18831b626",
					"line": 164,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "1a1046250335b2d71315d7c7001e3cbf9c154845b5e689a1e69d25c67aa2ec2e",
					"line": 164,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "ebe3acda05992dd3c114f65c8c1fcf0e3b69b51c00ed6cc6db1532bd09c65d34",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "b9e4cde867684c590b74989fb226206a8a8a877020bb9e6c6931d7851805331f",
					"line": 152,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "be4bd01ceb08821632f0f913de3b4de80b7f649d893f9b3978203562e4d514a5",
					"line": 143,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.namespace",
					"search_line": 143,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-node-problem-detector-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-problem-detector-config}}.namespace",
					"search_line": 25,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-node-problem-detector}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "d35a3f0476357cc32f00de42b9c1a6cf4dbc734b364f2d3e84d7d2c71f928b08",
					"line": 149,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-node-problem-detector}}",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-node-problem-detector}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "beb2d64f6c48c5b22c15b35631cb96a6b97a73cf1e662c1e901c4a9bcef6ac00",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.containers.name={{release-name-node-problem-detector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.containers.name={{release-name-node-problem-detector}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.containers.name={{release-name-node-problem-detector}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "e1de017c32b034ba7b7382ca27cccec62582bc033b8eaae2e5f2cdcff9075df3",
					"line": 143,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}",
					"search_line": 143,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-problem-detector}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "714cf08894b0a00a919c365946f067e3d08a30b8cfe1b95438d69c5057cc9c3c",
					"line": 143,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}",
					"search_line": 143,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-problem-detector}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-problem-detector_template.yaml",
					"similarity_id": "5d1a36395f0d3c7ed89c6f89147f54be57c2994f14b4b9731dd824e7366f7bb8",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-problem-detector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-problem-detector}}.spec.template.spec.containers.name={{release-name-node-problem-detector}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
