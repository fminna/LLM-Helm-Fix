{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 154,
	"files_parsed": 1,
	"lines_parsed": 151,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:38:30.144119+02:00",
	"end": "2024-06-26T01:38:32.187228+02:00",
	"paths": [
		"templates/sqream-transform_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "e74e97ebf63e9d0cf769b260758e800467249aef65c819b9b5a7f38fd62ad56f",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "cb1ecaa69a4d8b20d917768f57102dfdba8737703ac404ddad6b2f52f8e20d5f",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{config}}.readOnly is undefined"
				},
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "2b32d719b69225d47955cca4dc590728e19245299ef3274e3a3913980d336199",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{sqream-transform-sqreamd-log-properties}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{sqream-transform-sqreamd-log-properties}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.volumeMounts.name={{sqream-transform-sqreamd-log-properties}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "9e908cc195762adb3896598a19d1bfb771adc29b885b606fddaaff6c41caf66d",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "dc245881ee16926bc85c109de0233343044ad9ac2fee7bd63754d61c7b6ce134",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "d98de2458d825ca49fc57f694b8307c57641c51c86898ae37ae9b1598ff3db09",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "fffef43985aafdffba6ca3d736c15fa78910af572fa17a6994333cae99b9b984",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "a466786b8701dd5c13aaca55cc202be65ffe8621930faf95b6ee39d6640d7c13",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "8c8fd8506f4a0bfe80f2812566038e4664444843fc67a45da8c04c8329bd8493",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "sqream-transform-sqreamd-log-properties",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{sqream-transform-sqreamd-log-properties}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "dcb3bf33d51c44d56beb342059a2c016976cb29db5b95340ca8d47f663f99ac8",
					"line": 65,
					"resource_type": "Service",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{sqream-transform}}",
					"search_line": 65,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "e2abd5f262de947b348a276f53f2b9b052e9981ea4136ff9718cbdad4aa2d30b",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-transform has CPU limits",
					"actual_value": "spec.template.spec.containers.name=sqream-transform doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "9226e8c739958744e98d63b92717f0d93df826ca77489e4ae4e964b84ec37341",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{sqream-transform}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{sqream-transform}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "43a88f83e09f3d326f95f997a70bd7024a5da4d1f5a3d50c9ee1f4f3b46ca49b",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=sqream-transform is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=sqream-transform is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "828b20d24f85bfee77a967a70fe8404fa033d2ea460309dbb4bac7726c9b3420",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "91cec724630ab3a9d05313145b9638ad4edcd1360372ec275f70d9f9e25e692a",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sqream-transform}}",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sqream-transform}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "63cd8df32b37b378a3381fd91ab2914a51cc792385086bc23b5fcfc91a8f81c5",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.containers.name=sqream-transform",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.containers.name=sqream-transform.securityContext should be set",
					"actual_value": "metadata.name={{sqream-transform}}.spec.containers.name=sqream-transform.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "e7c1d503f1bd2d1ddc48532aa926ddbf3e3c1009bf3c88fc44d17d1ca9e4a5d6",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{sqream-transform}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "0aa1ba07977896adfb2c4f475274f1ebc5edda4830a614befff857cacf06812f",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{sqream-transform}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "f0a50f1d6aba91e7945384a74870e8cad4ff75c1a7fca8b551dfbf80211779e7",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name=sqream-transform",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-transform has a security context",
					"actual_value": "spec.template.spec.containers.name=sqream-transform does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "44dc83af2701f8c3007ad5c9a3c9d05f9faaaf0f2daa15e575ba21d941a16e6e",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "sqream-transform",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{sqream-transform}}.spec.template.spec.containers.name={{sqream-transform}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/sqream-transform_template.yaml",
					"similarity_id": "dfb6d60dcee23e7dce2b9a2ff8b715ac97745cfcadaa8ab926bed35d6a07ceeb",
					"line": 76,
					"resource_type": "Service",
					"resource_name": "sqream-transform",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-transform}}.spec.ports.port={{6543}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-transform}}.spec.ports.port={{6543}} has a Pod port",
					"actual_value": "metadata.name={{sqream-transform}}.spec.ports.port={{6543}} does not have a Pod port"
				}
			]
		}
	]
}
