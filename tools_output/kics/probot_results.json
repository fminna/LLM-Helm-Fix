{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 105,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:14:08.908423+02:00",
	"end": "2024-05-17T22:14:10.816749+02:00",
	"paths": [
		"templates/probot_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "2c03bfce6b9e24b455eeb1e88bc2d095b1c8071117e351c8029dc8ac16121233",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "286c6ef4639c3328e5d24e6fbe7d2c2884a75c7760fb9c241dc203f47c4a4a7c",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "653ce9489508ff30c25ecc341337c65e0a387aaeca5eb4a4970b6d38644ae6e5",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "24ee30b81660ecb607c541091628c7cadac695a54501bb5f94db49e53e57a7a6",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "4d9c90052eaa94ca95ee872153904a41a954f265dbb2dbeef0f4db1cac703602",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "c1357fc65dee6fb495553f729d7b5e4bc10ae7a784794ac5bc5eaca1784a7aea",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "300af509d1a5cef28a8bb89817b64781f0c64e5021b32d33d8757d6e06fbee44",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "2858837cc6c06d79e6e37e8e6d1596fe82509fc575282bd2de4658a1cc61ffbf",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "a828adcf9beabb4eac47cd856eaa0b793aea8e6f7cb7708d2717233a34b41323",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "74d1876bcc826de02c1aa8929905fc0ac4b8f270e0a6f4ca7a03ca5109e6fa98",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "d2486a7cae7caa7ecad12f81efc8ce092e7c6d1fb0eda39c9629c7524a38bf11",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "0e2d207d7f08aa8ab2e54aa6bc832164d8db84a06367a25593221dd30cf51442",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "1eccd43bd069565dbb0f2a8825cdf0468f6fb5dd48eb1efe3d4044fd8725196d",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "7d9579297bc9b4c329b17910ccc8b5a9dbc8a35ca708cb068b9b7f82f16e572c",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "d8901dad4ac44dbae712494aae1412ed353d3f455ccea867974c61fa241dffde",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "1686efbc569ad9d3dc8495da537d0d9644a1346bfed6fc950d0747167573acc6",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-probot-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-probot-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "c56feddec8a0b8954c0ef8d3517c4ed05bb88357aee461a618278d7d356a5755",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "8179f654aa2316d532157477081e55c966b1eb3de5e2302845cb2d9f0cf32b11",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "9f1c7b4a3da948dc42126b64f37fe90d9c2c8b37bc8eb56d6035df361f7d45f4",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-probot-test-connection}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-probot}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-probot}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "a9ff0c95c590e542d3a4ea901f1bbac1a9ce064e3bfbac46400650b14331b5a7",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "687ddcaf034a35453435f7e7e22db83db8ea74cf975515a18242776ef85ffea0",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=probot has limits defined",
					"actual_value": "spec.template.spec.containers.name=probot doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "83d44ab1327f3bdd2904b2a38a862b20ef9a26d4abec7a3bd053ab4ce4c926ce",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "a550341eabfaf03ebb0b7285ffd3760552c139832cc041a8437878f696ebbca5",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=probot.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=probot.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "668852541eddbac272167e9daef2d0c1ccfaef6aa182d957d05f6f96785670f0",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "c01f0e61f2e5f1a4519b167c7f36c784f9c56c7cd801ab86104a8a2b17196b3b",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "543e6cd624a0e4444068b496f9276cd47d2237f743d7754fbae081bc69a7678c",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "cbf03ab93862768466ecdb8cef9a1f0e303f9a8e9128457a426bb02c0d878a3e",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{probot}}",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{probot}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "8bcd7231786a2cdd34753882649b640f78e194e4604a45bed01d1569d8239abf",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.containers.name={{probot}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.containers.name={{probot}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-probot}}.spec.containers.name={{probot}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "2516208545e82c861f3495ab64e0c52b39d48811f2529ec9c53a30e628d4b079",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "a9633ab3bc4de0ed3dd4231fb0bcbd9f884602f1ddcd3a6fa321f336c521effa",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-probot-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "b601343ea1e1c080080ff29d348b0e2919a8bb95e1a8e8bea5d2623bea2ba4e8",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-probot}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "3f710c95f128768bf1ee5aa834d7585ca1a425925b21780ed69ff59e93b2c4d5",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-probot-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "d41304721f86430ca202825d9ef760bddbc6a9791d19edb613b8460f12177fd2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-probot}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "1a66dd5fb2bbab09978322a71687fca620aa3d23591e29268c1930bc4a47d8b5",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "e0d07ddb8d8b3e907df7e081c542de8fbb37a9f087a37483ca76ca965c0c0ab3",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "da4aa202a71578865a3a57ad118aa62ecc385ced5c4a430c70603ca3272b3490",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-probot}}.spec.template.spec.containers.name={{probot}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "a1adc5e65ef6b3888f93bda3c0da23a75a3d760723d3d2f215374cfb04743407",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-probot-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-probot-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/probot_template.yaml",
					"similarity_id": "451bf6956cd1314dfd1ec14cca946a80af7899327f69d4179a407a2424835253",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-probot",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-probot}}.spec.template.spec.containers.env.name={{MY_SECRET_ENV}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{probot}}.env.name={{MY_SECRET_ENV}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{probot}}.env.name={{MY_SECRET_ENV}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
