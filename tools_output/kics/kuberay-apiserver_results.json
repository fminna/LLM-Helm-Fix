{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 190,
	"files_parsed": 1,
	"lines_parsed": 185,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 28,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:33:07.709191+02:00",
	"end": "2024-06-26T01:33:09.794363+02:00",
	"paths": [
		"templates/kuberay-apiserver_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "1f6cdaa1510e24f63f0c65e700571b82d807062f1f6e4ba8c525bd0b63ed00f7",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "9ee384d21fdd3c6f7f1dad8b2c360b0cc8377e6dc76600b33db72a207f987b54",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "48b5834755942aec92c5d25538681f210b9dab21ddb50f2a67fd52812842403f",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "739e33c0714ba2bbe420ae9b850b07f1c4d9d0b1dd3f7b8ef9639ebd98d6e6d7",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "491f7a33949f11b1aba29e15def2e2e4eedb64ffdddad7f13b9d66c3fde1f9df",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "5ef623c0a609c30846d68ed690898a1dc295ba707f2724f24a5425d56c4eabc6",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "70f38a9dffafd11f90725710b13322d8f8c0a2ca520a4824a0565ef8311d7381",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "17d26c36ccbd8a276d24a455d48007e53d1a05a8f11a33ec1fd0334ebddba7b6",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "1f34f9ee052c8527b0fdb2d687fc2e697c8fb59c32ee221f59de062438e62772",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "46b88b2dc20c57a1228293a86e8e4f078877b1a742ba94de8b6132be413a35c5",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "12fd16e674c7e63811796e8dd84e9a7d23061e4d8a0107ba10d35417266aa691",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "204a9d3622aa17aff03c16b03e93a1ea1a423fd2aa0086def7f9be9c64273a52",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "92d5981d92050ebebaf274e7da83acd46ce218a0ae12e290b51e3fa5832dcfe9",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{kuberay-apiserver}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Service",
					"resource_name": "kuberay-apiserver-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{kuberay-apiserver-service}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "ServiceAccount",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{kuberay-apiserver}}",
					"search_line": 8,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "23fc39d9a2552573f63976b0c744ae8aaa08b687ed301b646b689ca9c8f1e0c2",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "4522cdeb733aa329550eabebb1e84c3d210b80d59a7d00931bed812f60cfb811",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "8a3b3a8c9e491ef4f1054bc713418bc44b5a06b89b4feb69d9725592599cda45",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kuberay-apiserver-container}}",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kuberay-apiserver-container}}"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "8a3b3a8c9e491ef4f1054bc713418bc44b5a06b89b4feb69d9725592599cda45",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{security-proxy-container}}",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{security-proxy-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "8b2ca1c354fd71fe15a940273f338bd9bb593f02eb4edb0e56e5a877b24050be",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.containers.name=security-proxy-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.containers.name=security-proxy-container.securityContext should be set",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.containers.name=security-proxy-container.securityContext is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "8c94c62e4e1e40984d802327f78d8097d818434f805f7578f86d4034776a819e",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.containers.name=kuberay-apiserver-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.containers.name=kuberay-apiserver-container.securityContext should be set",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.containers.name=kuberay-apiserver-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "5d83c664d90189c2715965a1353488fd2b66d63fe0166dd955d0646b00aa6030",
					"line": 8,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kuberay-apiserver}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "f432c0eff122d6032ca2cd3b245f8b8f420ac89de82406979987139d540b4153",
					"line": 8,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kuberay-apiserver}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "0c446c545e0e49b049f9fd23a3b163448da825693d31c2c4623a5782c2d0fae9",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name=kuberay-apiserver-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kuberay-apiserver-container has a security context",
					"actual_value": "spec.template.spec.containers.name=kuberay-apiserver-container does not have a security context"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "474f43365ae3e428a745e8a49774d6b33edac16da52fc11a78ec930a5c5d2e7c",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name=security-proxy-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=security-proxy-container has a security context",
					"actual_value": "spec.template.spec.containers.name=security-proxy-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "49085bc540f02de979ffef5d0866b8d0cae8ee95bbf94bad2696f9062c550b20",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{security-proxy-container}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "b3da3b84967deb21dd5000f3cd27fef5887f76f801b5633a02072dddf81bddce",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "kuberay-apiserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kuberay-apiserver}}.spec.template.spec.containers.name={{kuberay-apiserver-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/kuberay-apiserver_template.yaml",
					"similarity_id": "be2a322c881082f08f7d1a4c3d40da0658eb00a4cf7022d8c2bca5f56c0391c2",
					"line": 89,
					"resource_type": "Service",
					"resource_name": "kuberay-apiserver-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kuberay-apiserver-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
