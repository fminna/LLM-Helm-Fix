{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 76,
	"files_parsed": 1,
	"lines_parsed": 74,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 11,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:22:35.409541+02:00",
	"end": "2024-06-26T01:22:37.453601+02:00",
	"paths": [
		"templates/inspector-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "58059d0807020f18392db998566e8e8e31896914cadde6408157705bfc1fad27",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "68a7f6bc6bf6e414609118d062986055861657c2f7bee4dae9f63ea084b36055",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "05d99d15ddef06ac69959c2cafe7e8f11d1eefdd3c042bcc809d10a844c20d95",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "d588776e51f08a3eff0e095d1c04a57aa8bb8aec4555609c5cae8e1eb1ae3a51",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-inspector-exporter}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-inspector-exporter}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "967fe2936b512f6823e86636b3334009b5490bee6d4addd377294a5b9f1deca4",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=inspector-exporter has limits defined",
					"actual_value": "spec.template.spec.containers.name=inspector-exporter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "1cbf956e5d9941e266d57750943790ec6bcd1ba227c270ca132d9cdd91c2ecdb",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.spec.containers.name={{inspector-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=inspector-exporter.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=inspector-exporter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "6dcd1320d7c5b78c514ea168391d90d979b95261cb6eff2a8134aa2a887ca881",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}.spec.template.metadata",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{inspector-exporter}}",
					"actual_value": "metadata.name={{release-name-inspector-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{inspector-exporter}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "425e47976a17b07bead22dbdf9244f6f5ce4221e80741081b612101197870315",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-inspector-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/inspector-exporter_template.yaml",
					"similarity_id": "f69f757413e42b4bb736eb009b7a373d765b9927fbfaf87add42c8290193cd33",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-inspector-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-inspector-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-inspector-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-inspector-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
