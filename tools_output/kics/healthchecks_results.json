{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 369,
	"files_parsed": 1,
	"lines_parsed": 346,
	"lines_ignored": 23,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 31,
		"MEDIUM": 29,
		"TRACE": 0
	},
	"total_counter": 64,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:14:52.20281+02:00",
	"end": "2024-05-18T00:14:54.243167+02:00",
	"paths": [
		"templates/healthchecks_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "d39d75648e432900ad2bd5f086860ffdbfaa9aec6a00f991b25cf1f1c52102b8",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "0e3cf3493aedc5a5f1a1494260de6baebbaa1bf7ddd786d327a0d2282ec4ce6d",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "a7fba016f1de1e3e9f25a102aafa7405b484de8e7fe91da7e38c466c3aad90e1",
					"line": 256,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 256,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "2ccef189fff175cf9f71ea209db2cd50462ddf717e43162e4b78eea16fa36d2a",
					"line": 331,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "052c1afb334217805d47842d0ffe8fdfb59851764cda54884be6a1df819b3649",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "e476d7dc593f7ec8c9ad3d1ef46a2f1e780b89e2b27d1e0a12efe368a9de3761",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "f5ad5ae17c6679fa3f2c1acc491f74a9864cd0198dcc9a4cfda9d0ddc62ed696",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "e1a014768b597a0b292a6b555f7e988a3907f76059400fb4c5e87a5874a260b8",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "84e2aea859b61e05902e6b1bcf0bcf0be92ffbd089e3d9d859f9c5b9dc1a6c74",
					"line": 257,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "9c3c1e8ca2fbcf031f59a74c9b5721dd906b07573ab2f597faed9a57e14d0540",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "6813767401b9baf913049b961a60434de2c4faa56ded3c51d69340daaf5b7b2b",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "7b619f3797cc9ef2816c65d5c450eba995841a04ec9b59c2a666de41d808c411",
					"line": 326,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 326,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "99bfce2f2b57d50f1c61d85c6d77b51b144a25c41b1428258dc2801c34e75861",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "8b01b7d494c587868636a27ef43cddc188711a5e3c77c14e04f9172dcb879de4",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "e10a07e89b8f7c2d6a3d62242ebab1d7ac5041dabe1d3031beb44fa51b8de92f",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "d9694e44a856497aa793851ab330f6d938d9997e4306b0ac40fce1981e0ceeae",
					"line": 253,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "95d21dc9db13bb0c700e298e9cde22533a11e63765aa314df6150ee58b01be64",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "db630718003e360c920e570d82d7ff69888b3da5da2b13c23edae308796e3728",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "4ddf497365d719d8de2f521acf50e7c297f9cbf7edbb27eb23d0760d172d997f",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "c4e1baeeb9d2c1e92a0f2c0a1b82626773012dc486a83c8c905bcad04a3f81a9",
					"line": 256,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "0ea530819faf154a59b506aa9964d56602d0514194efecc5215acbf450e67f69",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "241807026597de6c99311dbc0d6050151eb46979ffcccf4e0d4dd0175edeb633",
					"line": 362,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-healthchecks-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-healthchecks-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "e144d70aa75cb590b1f7aa737ff46ba938af9cbd10c8e466c5bcbde676c7b39d",
					"line": 362,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "f206e32452f6d36b154e1b259667cb8deb7f9fb65c822e9c02ff541aec0c591b",
					"line": 144,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "f403aa3bbe45e3abee5a22b4e176bcb684c39b1c38c5d1817ab94ec3fee7c04c",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "31e5f0f9b7c283b596204b0e9b042f6e4c4c68e343eea491a01d50d21da0a2c6",
					"line": 200,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 200,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "84f0ec91532b033d09dab35cc45086ba2a1acb40ae68471221d0ca9608c9ad22",
					"line": 104,
					"resource_type": "Service",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-healthchecks}}",
					"search_line": 104,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "b5f051f2df85ecf5f311bf6c863ff9bbc869584819defe982d0a4ca4348cd5e9",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-healthchecks}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "b65c951c69e96431536c1d0d888733c693294718fc501385e6ae398535080ded",
					"line": 353,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-healthchecks-test-connection}}",
					"search_line": 353,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-healthchecks}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 79,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql-hl}}.namespace",
					"search_line": 46,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "c50b199100efa0ad24c91fe66c4ffbcf2467f700b50be0f6e2b70a7b351ef49d",
					"line": 326,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "389e69bc42e23f88cfa98953f4e9b6ed4a5c655d178338289d4234116a0cae18",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=healthchecks has limits defined",
					"actual_value": "spec.template.spec.containers.name=healthchecks doesn't have limits defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "ba3ccd84f91a71e6040ee0124942be372845136e4d7bfbd0c4ec3362fdf1e976",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "8019887045d3a01da1ab0ab5576eb1c3c7ab8680b253b186c013ae349f8eda58",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=healthchecks.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=healthchecks.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "01faf2d70ed4b5b5558c1e473624e78e8a374a044f64de7eab57aad1055d99ff",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "a9a448a72bbdf3e6c53f1d59bfe98004957001511095ff7b5b3b6eaa6b517aec",
					"line": 255,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "b35558912b17e281b553e0609a4452671a8edc3a23b3efd6ec535b3aaae47289",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "d0a1d564e17f53c350d3af0655d99e195af9625e788950d00f8b82b7a40dd78c",
					"line": 365,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "69f8c1dfb77647a120a9236070315a3e1e4a94c7058171c52d515283380181c0",
					"line": 353,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "70bd1b4e3f66cdaff270c7dc74245a8d47949f0b31ad9a81444a8a9846865e15",
					"line": 228,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.metadata",
					"search_line": 228,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "158401ab2ad5ea807584b5f0abc0598bb6b2d73bd2e9b0ef6f5415ea8ce54cd3",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{healthchecks}}",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{healthchecks}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "fde959cd065307b3e2cda614152bbaeffef165b4d6064922dfa9222731c3537f",
					"line": 256,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "f9b4da0bbb4d74351eb44eabec96fd8cfb0065cde43baf37c7552863986ae263",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.containers.name={{healthchecks}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.containers.name={{healthchecks}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.containers.name={{healthchecks}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "adf23192e5b0fe89f3f51d89859dd6647b4fc951048a18247f91bd813b66549d",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "96d55d5ff4a41188fa720a8a2d77dac52b3be2918b3f257c3917351e00053a8d",
					"line": 353,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "9c84e902953fb1ced3ac15572dea6c0e8c3eef7c2b347908e8963f296b01ac23",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-healthchecks}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "8354d1684173a9c7017f158ae77340f9137a5f33b8fb63a892cd111997067591",
					"line": 200,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "c50a8b20e7e0695148badf3fb5f94be2a752600e3eceebc92ea71da3c3660064",
					"line": 200,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "a9d2dd0f003868c1a386ad583a92abdf490cb434f06a16f307e36a63d827bb8a",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-healthchecks}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "5042d903c8fbc2336d9cea7822eaf6ce50ec445c744e0bde4a635562905ebac5",
					"line": 353,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "eaf2ffa40056e45b9b4b68d57ccc7fd563316bb0db0d2ffaf7bdce748518c3b0",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "b65619c502d932f585fb416d81d817f53ff4d40e8056f2d4e10423c8b3f6441d",
					"line": 362,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "50729a6780bc366d2c80d291ae3b05ae38d42cb8545c3e04961ab54f98e842bb",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.name={{healthchecks}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "7865172cef33d645c1ae03f4e3ef2a3935a7e768208da5783b446aef8a5594c8",
					"line": 364,
					"resource_type": "Pod",
					"resource_name": "release-name-healthchecks-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-healthchecks-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "a5eafe1f5f70c412f24dbfbf259e0aca22cd3111f4161d7a9d3f3aa9e9b4857c",
					"line": 256,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 256,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "7809e7ed8bf21d182510e9a2cbcdba96a1d0d5245cefc96478aa59d1a4e209cb",
					"line": 175,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.env.name={{SUPERUSER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{SUPERUSER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{SUPERUSER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "f9d0a47fba5e08085cb50e208a1d656fc9b5c8ed553f7de35956f7ee8360cb8d",
					"line": 170,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.env.name={{SUPERUSER_EMAIL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{SUPERUSER_EMAIL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{SUPERUSER_EMAIL}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "2c011e728f8c3449604efa17f726471f0f0c81523205d034f0b0ccb17c5d86a5",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "fea0e97954e32f3bae724384d2547f5db5c26327a596350975ac05cd3e0a5d18",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-healthchecks",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-healthchecks}}.spec.template.spec.containers.env.name={{EMAIL_HOST_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{EMAIL_HOST_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{healthchecks}}.env.name={{EMAIL_HOST_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "63d8be275e3e989a60bf672e24622e18a1f511e275088cb99dbf161b8b2c414e",
					"line": 270,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/healthchecks_template.yaml",
					"similarity_id": "738555fe8f3dd5911e4410b0079f41de00324f64d91eeb18b7965a41f00aa73b",
					"line": 347,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		}
	]
}
