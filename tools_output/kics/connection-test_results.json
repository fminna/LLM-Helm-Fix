{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 22,
	"files_parsed": 1,
	"lines_parsed": 21,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:55:30.061867+02:00",
	"end": "2024-05-17T20:55:32.003286+02:00",
	"paths": [
		"templates/connection-test_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "91a38372db99aa639b7d7a99632b299eb4ae9a11194836dc4dfe9b186fc03b4f",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "6e79a906232ab68647abd84d0d5567f6ab9c85c9e1a3d313cf5471bb333679a7",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "e23ea2fb3d49e2b21e18fedba7356b6bb6e050f4b5b48a16d1de95b9288a8082",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "2a0014af0d6a81a97c702260fb8e9dbcf3b6c7c0302e5a1db87b057be6a27574",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "decb41c44796555e7d067751da1bed04560d450f0a6b69aa9a811c899ffaf467",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "32691b72328f147c58907ea74607e77fddd3fd0e0a89561b0c0d93a4ee9242ca",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "cf21e4e99269fd70ba785a195f1098cc143c9d01a09c6b57eb5a3633f0734d6b",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "74d8aabe009dd800d3dfaf3c98996f5fb372e24e390a7886aa1c174d761ed8fb",
					"line": 12,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{connect-test}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "c6ecfe04fb3995fe170ab34c93583c2f6025540cd1f402e7f6e50228002e91b3",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name=connection-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "0baa0030c18588292ab8e1ea116b22ab32a85c5a5f294c8fb6a94e1bf290b432",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name=connection-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "1db6165c449344997d34f95a2bcd934e3c45b190464aca3e879d6990dfc9f359",
					"line": 7,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "f751758a8250bb6edc41db4716b089399012cf6f007425f4c9446ed36f81d975",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "051c10f17883e02048b913dd4b375e36e1d01c673caf16b7a55ececd9acf768e",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.annotations should specify an AppArmor profile for container {{connection-test}}",
					"actual_value": "metadata.name={{connect-test}}.annotations does not specify an AppArmor profile for container {{connection-test}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "bda9d6e915f24b79a834953a5a1ccf72e00288da64a507f2c5349ea4b038b4b3",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.containers.name=connection-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.containers.name=connection-test.securityContext should be set",
					"actual_value": "metadata.name={{connect-test}}.spec.containers.name=connection-test.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "d59944df20470df57220db1892a35e39c9db70eaa666f9a60907ce6bd432aba0",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{connect-test}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "b1278263924c13d4b813c9645c5d1f40852d34295e495507dce64dadfecb648d",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{connect-test}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "ee51c0dfc8b3f68ef5b2eb04c6251f178e85354bb62971b649d87019d41db230",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name=connection-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=connection-test does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/connection-test_template.yaml",
					"similarity_id": "018f990ae3bcde3ee5b6ce275f143dad8a22417d14e7616a34fb638a111f01e8",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "connect-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{connect-test}}.spec.jobTemplate.spec.template.spec.containers.name={{connection-test}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
