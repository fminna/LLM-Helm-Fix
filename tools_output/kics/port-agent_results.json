{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 88,
	"files_parsed": 1,
	"lines_parsed": 86,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:16:36.154929+02:00",
	"end": "2024-06-26T01:16:38.229662+02:00",
	"paths": [
		"templates/port-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "d4033b6bd7081552bbe1b8249550c09b37329154ae5b7863896117d8136a5b9c",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "384eab70c05813c316ee5e47f680a277da401bed7969e72c548222126d6f9028",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "cdc20b61425df6d59311ec16e0917d36956d98ee6ab99fb1d78bf0adeb199c6c",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "ad8e978cb2a233a90d210fbc91f79ca678cea6f27f10e396f4e57007b30f274c",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "7f6d02d75d026cb21b30d477939095d4deb6cecb5bbba1feca1738ba2571da75",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "e28776db8cc8fedfccf56955e40f0431e51a435489fb4ef529efc4910aef9ee6",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-port-agent}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-port-agent}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "86d96caa88255c7b896c2f69b287ba6a888223180a1256b12f33c9a471077afd",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "65bbc922059e2c7a121ebbe8dc5f12eacd767eb772fe241e6f727f13353b57cc",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{port-agent}}",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{port-agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "b68f1c8b082eb24a3eae0df35aeda6c4bc82e4791e9ea7df9d22cfacba49949d",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.containers.name=port-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.containers.name=port-agent.securityContext should be set",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.containers.name=port-agent.securityContext is undefined"
				},
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "96132f040dec6b052688b254da5e82d195a59c40dad90d23e2031fd9f842b08d",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.containers.name={{port-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.containers.name={{port-agent}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.containers.name={{port-agent}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "1698655ce8c748624fa7db658674c05a0d3bc4b08f0a63976d44ed0c70c134cb",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-port-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "3a0990810bd9b18ab2ee125dfca3c9cf1fc0b166de1987489b7a2635ffaecd1c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-port-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "7b58193d0d5b30b72a795d16bdd6d67cc66e3b8d555c1807d22917ddae27a535",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name=port-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=port-agent has a security context",
					"actual_value": "spec.template.spec.containers.name=port-agent does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "5c766c5cbe8adba0c803780dfbeb914e7fb7000079d750a1c8db83b568c79258",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.name={{port-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "e369b8f8ca1dc1e8a1c6acdd34c1b81fb979c6cc33498d12a8bc2f17f5dc4623",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.env.name={{PORT_CLIENT_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{port-agent}}.env.name={{PORT_CLIENT_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{port-agent}}.env.name={{PORT_CLIENT_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/port-agent_template.yaml",
					"similarity_id": "f690aa6bd19a671af0385575457d224eecb761e8559fa3db813141f657e42956",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "release-name-port-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-port-agent}}.spec.template.spec.containers.env.name={{PORT_CLIENT_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{port-agent}}.env.name={{PORT_CLIENT_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{port-agent}}.env.name={{PORT_CLIENT_SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
