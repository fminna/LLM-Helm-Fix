{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 174,
	"files_parsed": 1,
	"lines_parsed": 167,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:24:20.325497+02:00",
	"end": "2024-06-26T01:24:22.396654+02:00",
	"paths": [
		"templates/enterprise-steam_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "4e7b65320048ed071e30a37cf5024532a82116a09f5b5209d217eb58167c361d",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.securityContext.runAsUser=955",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "33d30ce7962725fee302d2da333d80d4c2835122507c4062f47a6485e7cdff95",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "7b1cd0f276f569edc42082c5625ac21108b8deff1de7b634afbeab9d987767f1",
					"line": 47,
					"resource_type": "Role",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.rules.verbs.create",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name=release-name-enterprise-steam.rules.verbs should not contain the value 'create' when metadata.name=release-name-enterprise-steam.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=release-name-enterprise-steam.rules.verbs contains the value 'create' and metadata.name=release-name-enterprise-steam.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Read Secrets Permissions",
			"query_id": "b7bca5c4-1dab-4c2c-8cbe-3050b9d59b14",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles and ClusterRoles with get/watch/list RBAC permissions on Kubernetes secrets are dangerous and should be avoided. In case of compromise, attackers could abuse these roles to access sensitive data, such as passwords, tokens and keys",
			"description_id": "ca97f029",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "58dbed61b67249232014d0630f3562b8f1989ed3a30f5fbecbf267855c505769",
					"line": 47,
					"resource_type": "Role",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.rules",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.rules[0] should not be granted read access to Secrets objects",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.rules[0] is granted read access (verbs: get, list, watch, create, update, patch, delete) to Secrets objects"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "5be200cc9074cd5e9749b2cb52d4c2a967f0bb09b2a1673c04b8cb8ea51e1861",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "dc9eb0da88b14e271c940f4b19bb52e7c5e9dd924b49fccd4ed6c32d8b2a6443",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "03c11608da28b18554724df0cabad4ccb124582d0ebc9949dfc1e136edde45f1",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "ServiceAccount Allows Access Secrets",
			"query_id": "056ac60e-fe07-4acc-9b34-8e1d51716ab9",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Roles and ClusterRoles when binded, should not use get, list or watch as verbs",
			"description_id": "79619280",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "f16f4e71ed93117714923157dfdb7d94dfe6554d18db12d3e28faaa3c3f7771d",
					"line": 47,
					"resource_type": "Role",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.rules",
					"search_line": 47,
					"search_value": "",
					"expected_value": "The metadata.name={{release-name-enterprise-steam}}.rules.verbs should not contain the following verbs: [[\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"]]",
					"actual_value": "The metadata.name={{release-name-enterprise-steam}}.rules.verbs contain the following verbs: [[\"get\", \"list\", \"watch\", \"create\", \"update\", \"patch\", \"delete\"]]"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "Service",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-enterprise-steam}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "fd3b7afd157d4532561cf995a7d723691e96f31f8acf53d702ec461bdc420a78",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-enterprise-steam}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-enterprise-steam}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Role",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.namespace",
					"search_line": 37,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.namespace",
					"search_line": 54,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "1e3c17e3cb97a7bae7a0ec45e13339417b678ed945721ca135505ce345cc6451",
					"line": 158,
					"resource_type": "Ingress",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-enterprise-steam}}",
					"search_line": 158,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "2642ebccd221517e6af43f78b8ee218181a7be29c525f1917e5581050a6dacf3",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{enterprise-steam}}",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{enterprise-steam}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "48e7c851d74c250b6ab5f65a982fc1d9f6a4c73c3574f52e3307da44919100dc",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.containers.name={{enterprise-steam}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.containers.name={{enterprise-steam}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.containers.name={{enterprise-steam}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Object Is Using A Deprecated API Version",
			"query_id": "94b76ea5-e074-4ca2-8a03-c5a606e30645",
			"query_url": "https://kubernetes.io/docs/reference/using-api/deprecation-guide/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Kubernetes APIs evolve over time and are sometimes removed with newer releases. To prevent incompatibilities when upgrading Kubernetes, deprecated APIs should be replaced with newer and more stable API versions.",
			"description_id": "d5c30c5b",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "18281060d58c16afadfde6d70cc084da36570ea10890830413c2a17226aa951f",
					"line": 155,
					"resource_type": "Ingress",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "IncorrectValue",
					"search_key": "apiVersion={{networking.k8s.io/v1beta1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.apiVersion of Ingress should be {{networking.k8s.io/v1}}",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.apiVersion of Ingress  is deprecated and is {{networking.k8s.io/v1beta1}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "0c3069aa6aee0272acca0c5498a5d6335ac38f6fb3319b39c51002cc0527fa99",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-enterprise-steam}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "d6cf5af2a084d3bd5bfb974b902ebc375031dbc69fe6aa98f72650f92863f010",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-enterprise-steam}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/enterprise-steam_template.yaml",
					"similarity_id": "0863dd465f3ae91503a71627698152320923de86b13603aa70408643c2ffd0de",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-enterprise-steam",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}",
					"search_line": 147,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-enterprise-steam}}.spec.template.spec.containers.name={{enterprise-steam}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
