{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 170,
	"files_parsed": 1,
	"lines_parsed": 152,
	"lines_ignored": 18,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 27,
		"MEDIUM": 29,
		"TRACE": 0
	},
	"total_counter": 60,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:51:32.334491+02:00",
	"end": "2024-05-17T21:51:34.250521+02:00",
	"paths": [
		"templates/cratedb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "a6f683f1dd3fb8479598d59d8775158240a0668c5fdf981bab53e98eb84aef08",
					"line": 108,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "6af2a253f3132c6dbdc7c5e835b100ba3750565aaf5cc2354d138cf864a43788",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "3571f1a52cadf88053e980a17a43aecda5f5f7e555c67676e3e6824208ee9c3e",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "c0ab5cde6364e025943a587b188dc4b120d85cbf2ef2a397b5894f0e31a5e56a",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "fdff81af4633fe6c8f9a33d11bb880a02cd7a3f3bab43794a8e0abe48d0665a0",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "cfb235632b8a1a7ef0c17484d17f6af0b4138cf85727b778167e71fb42f12e2e",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "4b4121807bd7df35a072d3b79420ca4585b41fc08a318d6deb9bdb2789a2e358",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "203db311edb49451f4b34b11c5b9efa25238830080d3bf5588307f51e3181d68",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "866bc401d915daf8c5da7305c5e05340b82ba224f31c42aa2f66f36c40970447",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "59c659d8b2c4cf309c2b51ba3ad748bf268bfc0b927d17cb017b33ed32c8468c",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "dbd64dd03f5d9ba85d4439085de80b905def492bb4c9c9e01618e4e7960b4b07",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "8b7d9babbd92590e1cc50110fb3efecb73102569197931d7dcee2ae3be860752",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "95376c1afbfe4888cede1221828cd7a184da9c95fa6f4fb1f46f153e3c887993",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "2262ab6358a401a18a903f1c67f0a4be88306bfb65975cb42d4c4333e4e90b6d",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "298bc82003fca753c16c95bd204c17f67a56f87e04ba37a4b7c64cdb47e01397",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "38884b57092fd4c0cdf5a072e77c86c98def82e3f7009b916761bb07d971287e",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "2fda390d4882e4a6e9fdba7a0ebea8d1b886fe7d6fab375e70316b61a66229d1",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0eb55d618fed02dfab1fa5b16bb20c056205800cae8541926fa8f07864987c62",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "f2d57e5ecdbe47fda3ca7589762d09b8a9d6796ac880d5ab9e8acad150620d18",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "250c071cf682dd641442aa19f3fad4e277ee2251abdc754479cff63e8f59e5dd",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "cb8e9129b633a06145df3ef58f8c29eef1d6619982bb1ab73de426f4238aec73",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0baf517ffb7dcb2da13992e2bafaeca8396bc972f8f76faf74fde46e66092659",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "cfa1af0569e08c431aea417fe4466365c1b6aa8b8aca374c0501fd6ec3caa3c1",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "5802b6a5ff1a97322388624d961ef922d8418231f6e59b85eeb8ee6be4144521",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0073b541dd85a80691eae07904f9d61bc6eee21996c9f1d682b22b7b46a9f3c9",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-cratedb-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-cratedb-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "eb4971618e68baa946c1d9cc1ce8281578190809c6801600f1cb183659007d10",
					"line": 94,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "29d0f20666b1572f3ea139fca53cf0bc5275721e45f4d5540961b30589f05530",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "ddccf8c1f18d097b973409b65e9f135136229e9ff1bcab94ace4d21995bb127b",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "crate-external-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate-external-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-cratedb}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Service",
					"resource_name": "crate-external-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{crate-external-service}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "cb9be538b90587ab2e7e9d2d41fe97d94e6d208354d0ca904c3e74e4d9dee506",
					"line": 50,
					"resource_type": "Service",
					"resource_name": "crate-internal-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{crate-internal-service}}.namespace",
					"search_line": 50,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "94d1e151e77bdd9b6002e991f0d6cbc6f33cb948fcdfe8b7bc582d3886a8abdd",
					"line": 73,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cratedb}}.namespace",
					"search_line": 73,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "377a85705ca8e7496445555e444160c61e0ede264ae86a764f878253ea579258",
					"line": 154,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-cratedb-test-connection}}",
					"search_line": 154,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "ad841314b3933a6282c00a448a07a479fcae1f4e748bedb2480b87a1e5255b5b",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name=init-sysctl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-sysctl has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-sysctl doesn't have resources defined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "9460db785c8e43ab06f35ec1e04f98e4553aeefc84c97a740efc12a27cee7fdb",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "90701a7107be256b4f8ec32bebdab23491c5da4fa833de61b96f6083d829c5db",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=crate has resources defined",
					"actual_value": "spec.template.spec.containers.name=crate doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "ad2c313ae5fc220e248c81527891ff2a7c403de8df6ccf82e25ef17c93c15bfa",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0c660472e7815dd68b23c8e7690e8c8b506b655d5d43fe71f22dcb65905a0176",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name=init-sysctl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-sysctl should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-sysctl doesn't have resources defined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "9a28373add7f69ce35b190851f754ec1a7d52016292bc71dafbb36fcc68f5bae",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=crate should have resources defined",
					"actual_value": "spec.template.spec.containers.name=crate doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0261ed9120f6a42c8692e221bbdbe68de99995641114d9d0833a1bf8ed168746",
					"line": 112,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "60ced1b8d16563e3783156ef08b7e6f83176628c1fce921d544d35dbe2a933db",
					"line": 104,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "791c98aa926b610608145311107af899932d3f75e4044b9bca94f8be053d7daa",
					"line": 166,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "30639162e37fae06080090d6a2344f5aebbab6faa7e4b2e6fe12984b33519115",
					"line": 154,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "afb8fa25d70086e58c0952c0bb0e70c6fd582c101cfe3895ec3a69123e2e8b97",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{crate}}",
					"actual_value": "metadata.name={{cratedb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{crate}}"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "afb8fa25d70086e58c0952c0bb0e70c6fd582c101cfe3895ec3a69123e2e8b97",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init-sysctl}}",
					"actual_value": "metadata.name={{cratedb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init-sysctl}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "c81329a2f503f2d5553e3a1df1e12245e1521ca13e4e95528850a9eaebaa4ffa",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.containers.name=crate.securityContext should be set",
					"actual_value": "metadata.name={{cratedb}}.spec.containers.name=crate.securityContext is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "4877bb82e107424db97c7370b3c7bc175a397f3cbef51b2ae1bf5828aa7f969d",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "7c7f9e9d9b185c411d22ffd5baae5403399cb7598bdc99aed8298613cae7ed75",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{cratedb}}.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "cb96f6519bd84524b860dfab01fce781afebd0089d95ad60292886179afb1d1f",
					"line": 154,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "daf6f9c2c300b54a76637597f8ed9a91014320706f549416da281f74fe5f850c",
					"line": 73,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{cratedb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "85258a33c9ecdad67471a98c5037bdc01ca2258455adf8d9ef44600856ee211d",
					"line": 73,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{cratedb}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "1ac5a02558a83e9aaf980ddbdd03d6ee79c45a6c569654ed49b5f965f195dc69",
					"line": 154,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "7fbbbc901d03dd59392bf1cdaf53ad6b1e18b2506ad5c7a05c437e9eff7050ec",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "56c879c66bef01da4618a3f5a567038d7c5045fe3cda91113839731b41fc25b3",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "54643c4dbd9d29340675b061bd990b3a27d36c8e5729cb5eb8c080af600f8c7b",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=crate has a security context",
					"actual_value": "spec.template.spec.containers.name=crate does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "4a5c175047f19bba99f159a8ef6a1e17e9212e99c28d179d7583082637de212f",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.containers.name={{crate}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "3b9d0d6a4933071c78d2cca6745e54d1f6151c665626d93dce0698e75050cf30",
					"line": 165,
					"resource_type": "Pod",
					"resource_name": "release-name-cratedb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cratedb-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "0790dc17465f8cf128efda4796d4a2980a88416484c0cf91ccd8517a052b9b59",
					"line": 107,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{cratedb}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Has No PodAntiAffinity",
			"query_id": "d740d048-8ed3-49d3-b77b-6f072f3b669e",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if StatefulSet resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "f0d30dd9",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "45c07cabfd1186748695a2df692f3a2d4e646265a69f2188fb8eef348e16e5a1",
					"line": 94,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/cratedb_template.yaml",
					"similarity_id": "feb9c4da30f8595fc8591c0e949e1c1c07246c0eb892e9747da06b64df77ae91",
					"line": 85,
					"resource_type": "StatefulSet",
					"resource_name": "cratedb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cratedb}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=cratedb is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=cratedb is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
