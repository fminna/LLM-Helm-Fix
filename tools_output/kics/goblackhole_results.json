{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 96,
	"files_parsed": 1,
	"lines_parsed": 94,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:03:31.073146+02:00",
	"end": "2024-05-17T22:03:32.982175+02:00",
	"paths": [
		"templates/goblackhole_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "fd9687b7f0095ed7bb167176a2441c5866a198adfb7b636ca6da0debf8be6ae1",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.volumeMounts.name={{goblackhole-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.volumeMounts.name={{goblackhole-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.volumeMounts.name={{goblackhole-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "fb2c4514a7556e72e5bb807336002e03a7073665a4395a117e05ca70d0c58694",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "32b9b902f125cf08768d71e19a3c2ea379ca5c7d09ad881020437ad9b04a18ab",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "c1d3d4cb23da17fe4db2695620204a3161b48ac950a501b3a3408242773d8477",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "78e81f09f1862998cbfde3b510e55e0aba8fe5e5786c516f1ea238b9d619a25c",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-goblackhole}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "goblackhole-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{goblackhole-config}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "24e02fa9b3559125b30f2c048ebdf239b230d0245405baa5b38a6e6b5b18f89c",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "c2de696adc2589c73ac6ed0d5343ba0b36f87221b92f693a86029e5a531fc733",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{goblackhole}}",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{goblackhole}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "d5ffa7b8c5dbc0ed26e7204a3f86416de8057bb6b52cca645acc47b3a6a1c96b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.containers.name={{goblackhole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.containers.name={{goblackhole}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.containers.name={{goblackhole}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "a6a96c5d3475257b7b6b2abb02c7976e1b25296029fb62377ba93e14c59004d3",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-goblackhole}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "82d6346ae19786702c55420303c233d3a008a317787cc6ee4629791daa68553f",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-goblackhole}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/goblackhole_template.yaml",
					"similarity_id": "5c0e82661e8ac71d788edb706989b4ec60840966d97467ea218480e990a29c2b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-goblackhole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-goblackhole}}.spec.template.spec.containers.name={{goblackhole}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
