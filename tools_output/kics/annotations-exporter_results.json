{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 447,
	"files_parsed": 1,
	"lines_parsed": 440,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:08:09.548707+02:00",
	"end": "2024-06-26T01:08:11.703509+02:00",
	"paths": [
		"templates/annotations-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "3fa1dfe36316e84d6dc60ffd1de5cbf43bc912b9f29bfc98c327e28c3e031bff",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": 416,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "32c4280637102c4778c28ee5eb832bfda033630531d30315518e76bd564a9ce7",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": 416,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "221ed842acd97ac41df46957c8382896fe3d8d11834aa14def98a0d5a03cf4e7",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "0b7762681744c7cc03c86dcb329ced584510cf834b85479a443f85b7abc046d7",
					"line": 415,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "6b0098e68074e0e3b08d26c3bc4986ebd19a234bf59ad1e750fcd5b8dc8a1242",
					"line": 415,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "f0fda22ba948c74dc99d371a8b93fe81bda74c78e1206194e1dcd5d2cc7f02bc",
					"line": 415,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "abb4954eb4e8476e0759a2dc3ba6d8235478fbfe6608ab19e2d080ce4b7ddd32",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "f84f1c5c24fa939cd581b2175a5c1a6cf7ec52ab710930c740e4c0ad1ffb7d33",
					"line": 410,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "17a18735fecad0a52125ab1faae81152e2beef4ccab8b272a48586f756690fdd",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=annotations-exporter has limits defined",
					"actual_value": "spec.template.spec.containers.name=annotations-exporter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "f2a1c1e8529521c16f8ebf8ac7870016d3acb256e850e7ce4655b80b2d6e168f",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=annotations-exporter.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=annotations-exporter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "935f9cd7a9135dbc83a5ce2cb053725ab9345fdd1c781cd0a52fe3063c159e26",
					"line": 419,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "761da486d15d57f188de4a254b0683c4c45523110bd802017524ecdc0dfcb0af",
					"line": 406,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.metadata",
					"search_line": 406,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{annotations-exporter}}",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{annotations-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "bacd83f711473916d3b125d71580b5547a3cf885c7038000342e6ed0aef87171",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.containers.name={{annotations-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.containers.name={{annotations-exporter}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.containers.name={{annotations-exporter}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "537431732f2804b9f53964ad9a5b4146a295be625bc790a906cac4527ff1e265",
					"line": 392,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}",
					"search_line": 392,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-annotations-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "07dc30ccb0bd615436c72034b1f88de079ce3cce29f97945adefd77dbeb50f66",
					"line": 392,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}",
					"search_line": 392,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-annotations-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/annotations-exporter_template.yaml",
					"similarity_id": "bb85e5ffd876334ef9e4c93b227888646e3e20e7a56e5896d03b7ade7ee05627",
					"line": 416,
					"resource_type": "Deployment",
					"resource_name": "release-name-annotations-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}",
					"search_line": 416,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-annotations-exporter}}.spec.template.spec.containers.name={{annotations-exporter}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
