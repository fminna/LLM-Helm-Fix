{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 414,
	"files_parsed": 1,
	"lines_parsed": 405,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 31,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:39:30.720075+02:00",
	"end": "2024-05-17T23:39:32.66786+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/geth_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "477a3dcfe884bf8aa7d3a9618916958d67260c2431c395123ac6f349bb422a63",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "4bf34d9a55e0731d6615eb942604a1b4b03b9343d13db10b8eb2b873566cbd82",
					"line": 384,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "7fae53066047e0d4231516e9d7690511bd6f838a2e92785c06da519a4cccb170",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "eb065dc420eed82e8be45a30dcffd749f7df3400a84bff3a1c4004a591c3f3e6",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "89dcc284b5927d178b1121fd592aa959c443a36004e447e94a7ac7f5eda256f8",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "4047d69eeb341e3d171743cbfce6c064fd6dd3eb17d56978a8cf64957af8389b",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "214c909d06fb7f152b1b6d340e514ffd638829b27a674b26537109f327b2a880",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "a6dc3c7ff6ff6582f0c2ac53aaaf0ab4a1665a35b5343aa0ace8b338052515b3",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "007127e55db1feb81fda3e9b4915d8ff4e1f49953cc3148b30612562b370aa74",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "ccd777b34ee51bfc35c30ec24bcde95948b3bcf25573628685eb4ee3e8260068",
					"line": 356,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-geth}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "8fe3d848c4492be82f083d39ad52872c53c2011cb98caa0864bbbf29631fdbcb",
					"line": 241,
					"resource_type": "Service",
					"resource_name": "release-name-geth-authrpc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-geth-authrpc}}",
					"search_line": 241,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "81d9ac7907106c52ea785aa20ec675872d26b992d2872bcafa9d97cfcc613634",
					"line": 334,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-geth}}",
					"search_line": 334,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "5d898c71144f61066a22b262b2ae7158d7edb1e2ad93df95ab61e3baa083fa76",
					"line": 264,
					"resource_type": "Service",
					"resource_name": "release-name-geth-p2p-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-geth-p2p-discovery}}",
					"search_line": 264,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-geth-scripts",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-geth-scripts}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "a729a7ab3529a24f1df54633159230b7736bac6c352725f2046158909bfe1ba5",
					"line": 288,
					"resource_type": "Service",
					"resource_name": "release-name-geth-p2p",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-geth-p2p}}",
					"search_line": 288,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-geth}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "7b6b7ba112f61309c24ab6174e2c5050d1c6517b3d32610f9925cbcdb07cd46d",
					"line": 312,
					"resource_type": "Service",
					"resource_name": "release-name-geth-rpc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-geth-rpc}}",
					"search_line": 312,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "6298be36872532621ed3bd858cca09b8c001aed46706a6d4149c4175797bc56d",
					"line": 137,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-geth-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-geth-config}}",
					"search_line": 137,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "34aed55fd1133fa0ac901bb10931c8eb1e0dedda5bf7b32cd02df408a86be81a",
					"line": 390,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=geth has limits defined",
					"actual_value": "spec.template.spec.containers.name=geth doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "22edd7ebd1a4ddd3d54a98e366d6c54ef90142ec9801436bd37a8a5b6c01f8ad",
					"line": 390,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=geth.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=geth.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "6bd0ad3884b4a62c94cc171a21329e46c1d2e3da3cc81386d92e099d3ee43ac1",
					"line": 364,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "0acec93e93e3b4a6e486c4160696152d03199fe06e65f46787a997f5b82a2895",
					"line": 351,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.metadata",
					"search_line": 351,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{geth}}",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{geth}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "58e13993a62dce63456f173cf6c855734afbbbb35581fc0312d1f1bff210320c",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.containers.name=geth",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.containers.name=geth.securityContext should be set",
					"actual_value": "metadata.name={{release-name-geth}}.spec.containers.name=geth.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "318801d5ada6e7b15140949324820d4753212f5e75f076ad4af5dceb9b7597c2",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-geth}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "f28ee3b2a7755ac6a732e65050991d4ff7a176a68ae9437c0a61b1aa144d9c01",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-geth}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "4471af2e66affb37f782b026e6992a1012f6923797d6f62eaaa76d6db16f759c",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name=geth",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=geth has a security context",
					"actual_value": "spec.template.spec.containers.name=geth does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "f6d0a4177faa0a57da259828e416237a298446d5d9db572bf2e67052e1598943",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-geth}}.spec.template.spec.containers.name={{geth}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "5e76b362b285c6a1091b4f462f4498f67d4949c848dd8295486696c3b2dac233",
					"line": 273,
					"resource_type": "Service",
					"resource_name": "release-name-geth-p2p-discovery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geth-p2p-discovery}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "10ca735d8399f9bbcdf74496912dd8a7cd2a50016b58a1f7e2b93407527881ed",
					"line": 297,
					"resource_type": "Service",
					"resource_name": "release-name-geth-p2p",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geth-p2p}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/geth_template.yaml",
					"similarity_id": "4975caf0e06d019192289642a43d44561d896094d0af952a8855a8b64e0466b1",
					"line": 413,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-geth",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geth}}.spec.volumeClaimTemplates.spec.resources.requests.storage=900Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geth}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-geth}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 900Gi"
				}
			]
		}
	]
}
