{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 27,
	"files_parsed": 1,
	"lines_parsed": 26,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:12:46.315378+02:00",
	"end": "2024-06-26T02:12:48.432092+02:00",
	"paths": [
		"templates/route53-cron_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "30230cd95cbc74899bc8583e3babb89ed773de501e3cabb3bf7fa5643f703566",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "2b0213790f25e704eb4762e353129bb77e5280aba63dc39293a9736153fae187",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "86e466a430d63728625eba395dd9f6f8758e50793d83dfaf0215535c52963911",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "c0d6c9fe0968043a887205e7b8434a03984e5b654fb24bcb59968bcd4c0028b0",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "7ca5612f14707fe7b1ff8cc36b144d6b26ceafdf8753149f765558cee31bc241",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "d906c76d30a57cc74069b5390f5ee4c30cf670c88b61c47858253e6e7bec4a4b",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "227e8cb6d203884b8c836a5a5f6cc5daeda4d5de42cccd8fcbbb56e82b089223",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "832df99ed5a69db4a341aeecbaedf803cfcdd118a5b58f1c288b2aa3479afc6f",
					"line": 12,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{route53-dns-updater}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "85b0787311bff971c871059d9d55dff1be7379450d52f7b4e64bdcac77ae5977",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name=hello",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=hello has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=hello doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "893c6de017dd3d29b46bbc798571cd943fe1226ffae8eef62c5b634ede041650",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name=hello",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=hello should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=hello doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "f15980d61a89cdd185e134110108b9bd2d224f2ff8d4d9df138fe36f54384bd9",
					"line": 7,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "daeb3bcaf1f2a80a7163641889560a3c5d80216379496c8cdbdfb0220834a7fd",
					"line": 15,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "66509e64ca1d1695d6bb5e8ec45d94b40b2725c87efc16fb045c573886845d0c",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.annotations should specify an AppArmor profile for container {{hello}}",
					"actual_value": "metadata.name={{route53-dns-updater}}.annotations does not specify an AppArmor profile for container {{hello}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "9ff4a133485b1cacb21fe39a6b0035f272b443d915c7301abc5954321c9e4e47",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.containers.name=hello",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.containers.name=hello.securityContext should be set",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.containers.name=hello.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "33575a9deaa7e11dd33064abbd490e1190204fa6d33d691bdfed1eb5d5372840",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{route53-dns-updater}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "aca904a3aac06cd9cca766af6fd0fca0f4fa65647e511db7a426a04682114a4f",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{route53-dns-updater}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "1e792f36890ee2273f14b99e685145c3c68251e9126fd24199cbe21de12e6d3f",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name=hello",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=hello has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=hello does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/route53-cron_template.yaml",
					"similarity_id": "c155ce106d52cc774f838b3968fecced6c84c9ef63fcfa3eabd2120545b45d84",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "route53-dns-updater",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{route53-dns-updater}}.spec.jobTemplate.spec.template.spec.containers.name={{hello}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
