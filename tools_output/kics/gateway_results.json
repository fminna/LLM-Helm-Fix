{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 123,
	"files_parsed": 1,
	"lines_parsed": 120,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:13:50.26038+02:00",
	"end": "2024-06-26T03:13:52.375164+02:00",
	"paths": [
		"templates/gateway_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "bd90872d282e88b944c7e49a72c6eeef94ba4d81444abc84d62f6d8d912c8e06",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "9f4e3aff34e0f5dbca44798331dc6630f0a36e969fb06553aaa43dd75c386cbb",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "6a52a0bf25abce34f159f081bbb8a99787675f4797e9e681a685c866a75f8b8a",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "5ab6d6ea96ac902b6568069bf70ab8e2fd58d273985711cc853ee7194602c531",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "e098eb23b5f186c2dbb9f6a8411f1d311f26b152e99426162b641c9f08edb5e8",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "ceefa9af3834cbca844af053569c108614f5be44dff10e040bd9b7848fccce40",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "6f562bcd9eaebee4ed1bf21ac35ca2189101624d4cf9d0e838e7649ea0073bda",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "0b2e31d7a07ad552f9b0cdba552c301f9c6d99f22d50ac1d8ad1920be642270c",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "b039a66bccd97daebd4dcbc22a96faa84d38597c9ee9c62b8f876a983f864cfe",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{api-gateway-service}}",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{api-gateway-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "8c2eaa9a53d22c5ec3bf7fc48df7cd7bbc218da5c4feccda81b9631320fa38e6",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.containers.name=api-gateway-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.containers.name=api-gateway-service.securityContext should be set",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.containers.name=api-gateway-service.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "49903cf999a81e7b9cdd6692a186727e6b8d1986c4a611e13255d04b4e6f5f3e",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{api-gateway-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "6af0c52ac6faa91146c581d8c0f09b37e7852440eec091d2475c1f661b68b292",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{api-gateway-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "ba90656186d1afd056013871dce8782e1d79dc58133eec2404ce367c0a360711",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name=api-gateway-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=api-gateway-service has a security context",
					"actual_value": "spec.template.spec.containers.name=api-gateway-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gateway_template.yaml",
					"similarity_id": "9e17fd6a682f9c0cb34765227804aa748020d1b00ba7589c7f09480b346cbd1c",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "api-gateway-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{api-gateway-service}}.spec.template.spec.containers.name={{api-gateway-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
