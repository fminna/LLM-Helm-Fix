{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 326,
	"files_parsed": 1,
	"lines_parsed": 318,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:59:12.372213+02:00",
	"end": "2024-05-17T22:59:14.341464+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/hetzner-dyndns_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "425f70563d5e1555ebb04e0aa44a5f2bc8f7e76d11e463cc21d490157e29f41b",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}",
					"search_line": 260,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "8ba189a6b211e6ee95d3fa2241555bc4a4a0f6740fab86a3c0a9a0091110f619",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}",
					"search_line": 260,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "95dfd86d4da92a68441a4100be5d4ac36c767fb0b96473b4bbc873bcd62e3b6f",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "9044806fb138adfc3be01fc7f9eaa55b0f7342e53686b3195a6bea63a1388111",
					"line": 259,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "a6d18edfb337acf17ec424cd08379b248425953e439adc1ceccb4f5109a3facf",
					"line": 259,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "8607ac0901c432f169e16c3509c53bcba9e447bf09cfd0716f2c2b833a00222a",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "b00f88e179b949ca3ed5d24ea493a6e9a7e273f00b095cd68dea85c3751d3c4e",
					"line": 254,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "c97f7de0d554ee8b3e35def0f86be0ee10562020c4329b9691a9e036240eeffd",
					"line": 237,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-hetzner-dyndns}}",
					"search_line": 237,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-hetzner-dyndns}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Secret",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-hetzner-dyndns}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-hetzner-dyndns-terraform-files",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-hetzner-dyndns-terraform-files}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "e89eddd392a8c2e694c56b2a1bb6963411e53f77a7ffdaf87b71693be216cd30",
					"line": 263,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "6fe9302f6db791a399341e3cd7fa0a2d62b70198aa571a345b3b1602099539c8",
					"line": 250,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{hetzner-dyndns}}",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{hetzner-dyndns}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "97d0bf042321557b37b1f2e5e7c9233d5e05cfd772c171a38c5f0faab7821f2a",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.containers.name={{hetzner-dyndns}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.containers.name={{hetzner-dyndns}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.containers.name={{hetzner-dyndns}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "5e53c5ea05be1dd4d506818ae7b467d0b5601c6388d78297aec63865f220326e",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "27ace362d1b191e4bd98214a9b1f0ed9937614e0bf38ac71def9fea2224cf64c",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "39c0f65fc1b5e4696ceb2dc1b3fca1fc4e42ef60ed4c9292b06657260298ae5c",
					"line": 260,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}",
					"search_line": 260,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.name={{hetzner-dyndns}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/hetzner-dyndns_template.yaml",
					"similarity_id": "76671f78c87d230020c675b045817be7378edb0fad18fa0ea2c85fa02f8d7aff",
					"line": 303,
					"resource_type": "Deployment",
					"resource_name": "release-name-hetzner-dyndns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hetzner-dyndns}}.spec.template.spec.containers.env.name={{TF_VAR_api_token}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{hetzner-dyndns}}.env.name={{TF_VAR_api_token}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{hetzner-dyndns}}.env.name={{TF_VAR_api_token}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
