{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 88,
	"files_parsed": 1,
	"lines_parsed": 85,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:34:11.183772+02:00",
	"end": "2024-06-26T02:34:13.314417+02:00",
	"paths": [
		"templates/cortex-gateway_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "494e65016bea1b7b598f76783bd3518b8adbbe3da33a147453e68c1244ccafbf",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "59c0d064468c13049adb1b9a3fb059131546a8dd36b4239347dbbd913c90d0ed",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "18f714afc2e842fb5ddf186f949178b4134abead466ce8280c6629422f41ec5e",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "c6d84102cd7d2516a86d7c63ebe588944da738e42d4c15bb5675af88e6b7ddf4",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "d430a60afef8fee0ee09ff565c877386d6b35e22c0085f617b9a1c321ec35b54",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "7d937557d42b06c5f1e3903a67b03ec48461b14c7e1280a1f1cb851aae41e148",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "cb7eb141959718ce48bba45d6af68943fb064c660aa16ec12b0384e528886243",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "759a6ead713a12a8813782cd5b2f3c0ae964c633d920e75d9a27f8809e7ec125",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "428a891cf72995216581bba562716711a12a54945b49f8e44af5958bd0022c0a",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{cortex-gateway}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-cortex-gateway}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-cortex-gateway}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "e0788dfebc1f40dcfc9e16bdb04a74ea4316707aa92022c0f01df67a81cc5544",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cortex-gateway has limits defined",
					"actual_value": "spec.template.spec.containers.name=cortex-gateway doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "61c1eda85a86bb411b7653195d249eb6b0f38b6b8754fd784db30f7788499192",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cortex-gateway.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=cortex-gateway.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "53871088837b79798c4e1e9196a5b4b1070c0653e03118da9fe7ae4481f3f080",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "cb83c5d581a004f0b44406fc4a019a82c3d56ce8d612e7fb71a883ed99ff09d3",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cortex-gateway}}",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cortex-gateway}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "0995ea1b25b4100ca9c03afd432052a2a3b6740209398d1bafc3c7c081e09117",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.containers.name={{cortex-gateway}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.containers.name={{cortex-gateway}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.containers.name={{cortex-gateway}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "2651a8ae7eef31a5b5ac2259a84416935f63222973a506cb39dae133c2eb5991",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cortex-gateway}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "c6c34f0f74e8be827e5bcd86076df8fc1ad603044d3bf99865b52f744d127ef8",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cortex-gateway}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cortex-gateway_template.yaml",
					"similarity_id": "4d281641f4f78dc63000bde4df972bf5ec30088a9d971d999eed5e114b4c53bf",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cortex-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cortex-gateway}}.spec.template.spec.containers.name={{cortex-gateway}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
