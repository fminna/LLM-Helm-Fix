{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 538,
	"files_parsed": 1,
	"lines_parsed": 525,
	"lines_ignored": 13,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 7,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 28,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:25:15.569392+02:00",
	"end": "2024-06-26T00:25:17.505821+02:00",
	"paths": [
		"templates/kiam_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "059eb6144cbcb862aea0d3cc06fe95dfd2a0687324b6cc4fd98020c8d492ab81",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.spec.volumes.name={{ssl-certs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kiam-server' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/etc/ssl/certs' mounted",
					"actual_value": "Resource name 'release-name-kiam-server' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/etc/ssl/certs' mounted"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "dbcd7a57f73f8b20efb9eaf640f360a407287164b88373005fe288671254b120",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.volumes.name={{ssl-certs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kiam-agent' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/etc/ssl/certs' mounted",
					"actual_value": "Resource name 'release-name-kiam-agent' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/etc/ssl/certs' mounted"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "9647b2cb208210d9b3197c7e53f2b71bfcb3b6183517afff729926bc842482ef",
					"line": 383,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.volumes.name={{xtables}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kiam-agent' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/run/xtables.lock' mounted",
					"actual_value": "Resource name 'release-name-kiam-agent' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/run/xtables.lock' mounted"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "ce888a17d028e75043b713a669a4a4a843fecd966b82b54acadc34cf4cf7b67c",
					"line": 371,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.volumeMounts.name={{xtables}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.volumeMounts.name={{xtables}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.volumeMounts.name={{xtables}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "65745aea597b342576ecb436af1f66224f286d6e8b86f722d49c46ccbddafbc8",
					"line": 537,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.spec.volumes.name={{ssl-certs}}.hostPath.path",
					"search_line": 537,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kiam-server' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/ssl/certs' with hostPath",
					"actual_value": "Workload name 'release-name-kiam-server' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/ssl/certs' with hostPath"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "a1111a688d329ca695d7fd8459536c59c90b9ad47c4b325819b8053b1a92c3ac",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.volumes.name={{ssl-certs}}.hostPath.path",
					"search_line": 380,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kiam-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/ssl/certs' with hostPath",
					"actual_value": "Workload name 'release-name-kiam-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/ssl/certs' with hostPath"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "2322ce088decedb49a85726e99a4b434554e3e932119a25b6dafd2654118b92c",
					"line": 383,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.volumes.name={{xtables}}.hostPath.path",
					"search_line": 383,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kiam-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/xtables.lock' with hostPath",
					"actual_value": "Workload name 'release-name-kiam-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/xtables.lock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "1c665bc3a912bf7f867e483148b10174e14d9bb688a68b3b54419a3569a9309a",
					"line": 309,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "67abe3336a1a81b53e1482f5afb6175cdcd81e2df3b5e05903e12cc24c5da287",
					"line": 455,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "6de6adbad35c2725b480c7eba364f3e1f5c2e5f35c5b0baf1f77599590d66822",
					"line": 309,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "2c8500e3b2a30e7a89dfadf3108aca35b04d42715f4f940215903a86e181453a",
					"line": 301,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "9dcaf9268f417dc6496bfa26c7b49c94a230baeb225ebcdb169850a7494eb63b",
					"line": 270,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "40756a560a5c3e9139772320f78228033f44643c0d1c358ad9b9805e9172689d",
					"line": 273,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "1d425b5e12d88492d047a76582ef26fba0bd8aa45cdb99f61a4cca447af6003e",
					"line": 98,
					"resource_type": "Secret",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.namespace",
					"search_line": 98,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "f0a638c8d25fc470083a7502f4e9fc0e06c371ddf41ac0435817abc6a93c7a68",
					"line": 222,
					"resource_type": "Service",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.namespace",
					"search_line": 222,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "f10455d8e77dd29cc2c80bc17c641c9f8a12fd90be212f3b8e9dd6e5f6413e0d",
					"line": 117,
					"resource_type": "Secret",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.namespace",
					"search_line": 117,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.namespace",
					"search_line": 61,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "b4db9dc450c43b0242727afbe95468505a25393ae610b72fc5d4b41fabce9275",
					"line": 398,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.namespace",
					"search_line": 398,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "07b58e1e179f92ef4d6eeb9162baf28a6949271366c8000692570767db74ab0b",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.namespace",
					"search_line": 250,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "07a23520c6c9a5fe6dac911140b60062bb98a2c39bc50d5c4f113fb164d59c80",
					"line": 76,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.namespace",
					"search_line": 76,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "5f07ea5e310f4b0d2b3d7d48a65811fee882fc8663a7fb9ccc10964f49e99fda",
					"line": 445,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kiam-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "625ca4fbb272b885f92604667dfca2632d75d634a8a1fb41c8708d9b11ce7205",
					"line": 297,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "6f4bcecd45d4970afd5c6eae6b194bb9767576458dd11d0deeedd931338528b0",
					"line": 260,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{server}}",
					"actual_value": "metadata.name={{release-name-kiam-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{server}}"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "c3d925b2224197819edad9a1826c41e420b317ff2a02d872ba1cb7273567a0c9",
					"line": 260,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{agent}}",
					"actual_value": "metadata.name={{release-name-kiam-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{agent}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "bd150284e152d644ccdfb8de3e389ada47758010bd3162c553796da63e6eb0f4",
					"line": 398,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-server}}",
					"search_line": 398,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kiam-server}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "92920aeb044277b8920a75a40135dc1ead45b75b8ff87cd89bf69854fabce719",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-agent}}",
					"search_line": 250,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kiam-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "4ae36676bb245bc41a9efe9f95383422911fdd0ac42bb4d85773530810eae640",
					"line": 250,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-agent}}",
					"search_line": 250,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kiam-agent}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kiam_template.yaml",
					"similarity_id": "13fd4cf4aa841d2876bda9dc8e5113d9059c1f0f67b37ca5282071e782402728",
					"line": 398,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kiam-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kiam-server}}",
					"search_line": 398,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kiam-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kiam-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
