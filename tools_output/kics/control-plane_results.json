{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 206,
	"files_parsed": 1,
	"lines_parsed": 199,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 29,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:15:18.554937+02:00",
	"end": "2024-06-26T03:15:20.680249+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/control-plane_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "1705963d47bf2881ee93193c6dc1feac37b8f0afc7fa3a755ef774c4cc404951",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "d6909a8383b6cb1c0de8ac925e2a0b15b5b445c1de63126038333f3b5961a843",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "ff158d5cb940c9967958e4955645cfbf459ddb4195cfb0e464a18c4896adf991",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "59e72f6aa8207f2922fade992860e3e6700ef9e30c14082531646b185b40df44",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "15d8480076f5e363535c2f8bf6e7f23d3dae7320f5c5b206b28a4059f0508a15",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "1c31ecce55f086b33613206ddc434544352dc3ecd0238b4ed3e0ca313a31d6b8",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "8b55ca5ccc88e0332174bd1fdf9aae8e72ffb490b229e8c02ca7f9bd5e93b11e",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "f431bd7a696fd29c5be9d3dd3a1f7218717c6fc7b1ba3a4457d64da5d41525d3",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "4a4830bf1d702b186b70f9265e01cf114a223c4a832d459d2543fcc797861921",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "fa6ec05fba2c4c5a14a07ef36e6876579a57ed44e767c487f790cc07a4324615",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "281e972b043f8898441189d887b4c8d836e96c9d2cbc6ec76da5f3e2f2708e73",
					"line": 13,
					"resource_type": "Secret",
					"resource_name": "release-name-control-plane-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-control-plane-config}}",
					"search_line": 13,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-control-plane}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Secret",
					"resource_name": "release-name-control-plane-regcred",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-control-plane-regcred}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Service",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-control-plane}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "15107f4b2780a0723ed2907f4863b3b508952afc72ca64eabd3384668d558993",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name=syn-cp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=syn-cp has resources defined",
					"actual_value": "spec.template.spec.containers.name=syn-cp doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "a89565db06c45feffa348445867179e7f909d096526c8f90300d62190954ca4d",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name=syn-cp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=syn-cp should have resources defined",
					"actual_value": "spec.template.spec.containers.name=syn-cp doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "fc7c6348b00a7598706db992d140cfa379c7bca10f29198b385fa601b955a801",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "7648675a1889086663c7e84c1b10b898cfe2d59c7ca49d828f20b06c1402ac7c",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.metadata",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{syn-cp}}",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{syn-cp}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "7dfe37b0a680e877c877fc51a7017d7c0306f3344e33e1f11a7cc2fd2b6bbcca",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.containers.name=syn-cp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.containers.name=syn-cp.securityContext should be set",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.containers.name=syn-cp.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "ad1e3447e2232229c022e798ff4094289eb7f1c7ff04004fcc1583019874b277",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-encryption",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-encryption}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-encryption}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-encryption}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "bbee50b80d3bf585325091a32dacf39b26573ae29381c545f52160603de89578",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "36dde27be34b6d0930879eb1cb39bd3cd472e6327767d0325a10eed4b9ca2b26",
					"line": 68,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-postgres}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-postgres}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "2fe4a649bbe475264cb23cd6dcd7a0700bab315bf0e93573353dbbf40e32a404",
					"line": 87,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-prometheus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-prometheus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-prometheus}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-prometheus}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "14309ba2bb071e64e0c4eda00b0adf7febbd0ae39617ba21a1e9f9595107df40",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-encryption",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-encryption}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-encryption}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-encryption}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "772175cde42cf11e5346ac2043ab0283d8a664c386dccd0f849c01d496fb9973",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "c14a72de33d56c8600a0b8cd52455a3954d9c9f021d9d368098afda912841782",
					"line": 87,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-prometheus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-prometheus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-prometheus}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-prometheus}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "12d765296935536bde3c23370e6dda9c08db07ea4fd6ffd36d9c2c068c041c50",
					"line": 68,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-control-plane-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane-postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane-postgres}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-control-plane-postgres}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "27a62250ead378ca0de287986dcd51b1ddf740688ba541f1e21163f5556b4a28",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name=syn-cp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=syn-cp has a security context",
					"actual_value": "spec.template.spec.containers.name=syn-cp does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/control-plane_template.yaml",
					"similarity_id": "37bf5eafb6df8feb3bf37d70193ddccccc2f708ea21ba9c5d6fe1d692c7c9b2a",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-control-plane",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-control-plane}}.spec.template.spec.containers.name={{syn-cp}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
