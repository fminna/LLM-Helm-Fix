{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 100,
	"files_parsed": 1,
	"lines_parsed": 98,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:44:55.624355+02:00",
	"end": "2024-06-26T02:44:57.66433+02:00",
	"paths": [
		"templates/iqdb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "1f3b595a5d7f3dadff6532d5217d11c62dd903bd9f14da023cad133d6360e75d",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "7516329e3fbc1530620b37764b18472564bc417c1490830e468c0fc86772de0e",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "c704488cd30ea536ba3c026d4cd30751c6f870869a19e61950a5069ee2757a9d",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "4db884c7639b265d221a10eb1d5b8dc0578ca13b8ed5f705bd7585971dd627bb",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "9d2470fa082f7ecfde1d9f01b37b5af1e2a47eb5f083c5571aa89fa8501f742c",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "70a4b5b5debadf307fc154c5b7631c3873b37b3e44fe2fef1803ffa13b18d2d3",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-iqdb}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-iqdb}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "33bb8a61cc975dbb9804c73979c0ab211b3f1dd2eb45dc694563e60584d65525",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name=release-name-iqdb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-iqdb has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-iqdb doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "f0409135e51f3f0e86443fc5dbbb254bef5ddea9bc85b2ecef1a3cbeb3613c10",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name=release-name-iqdb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-iqdb should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-iqdb doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "aa20f03898dc42527cbdd6306960fc64d28f649ddc8f910f2edb8409a440fcd6",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "e8496f32f549be1cead5c7175e8d78d834ec44d170d88166606bb7fd126a10f3",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-iqdb}}",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-iqdb}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "f545c6abdb3061900916fb7b1e71af9b0d2dd913ee5cd500ddf145d24d086f63",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.containers.name={{release-name-iqdb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.containers.name={{release-name-iqdb}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.containers.name={{release-name-iqdb}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "1054df898bfaeb5c84aff737ea16d020f37a0d462526ae41ac36019de45d8a8f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-iqdb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "0bbe19d7bc54861b0a436d3d45e84f68f6159dfaffc9603b8e880c3eba9d74b1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-iqdb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/iqdb_template.yaml",
					"similarity_id": "3ed5f4e5f4c2df79bfdebc5120f99ab60df71b2cab7144f75185f74c3b319c70",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-iqdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-iqdb}}.spec.template.spec.containers.name={{release-name-iqdb}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
