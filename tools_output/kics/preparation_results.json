{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 141,
	"files_parsed": 1,
	"lines_parsed": 135,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:58:54.370402+02:00",
	"end": "2024-05-17T23:58:56.300951+02:00",
	"paths": [
		"templates/preparation_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "4f030d74429b98947b18418996206960bd8b7b06225b2c197e75e4a47f3bf903",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "5c1e18a48003071487e29e3deeb607611c2d0baa40d80ce82d90415ce11576a0",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "26df78a0763c3789738593d37e1f7e65871a93b4e9fa81e7b1e7a18b865d961d",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "5e1dd8e29a0d63a5bd088cede4e17a60abcf41592d07feb6263697eff28e9f75",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "8aed92f859603fb4eaab92762f49568284afe1b08e247131130c5ade3d184361",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "fa60c225446506d712e235bf540c15b77482f8e35aa50dff64c3291c182905e3",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Role Binding To Default Service Account",
			"query_id": "1e749bc9-fde8-471c-af0c-8254efd2dee5",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "No role nor cluster role should bind to a default service account",
			"description_id": "9879e8c2",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "9f803a9e68a435f5bd22ba819bd26a2d7923d18ee4ae9a4122f05abf2d60e5fe",
					"line": 58,
					"resource_type": "RoleBinding",
					"resource_name": "default-pod-reader",
					"issue_type": "IncorrectValue",
					"search_key": "subjects.name=default",
					"search_line": -1,
					"search_value": "",
					"expected_value": "subjects.kind=ServiceAccount.name should not be default",
					"actual_value": "subjects.kind=ServiceAccount.name is default"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "e7b0f80cd21a177038526c5c455166edcf42bee01023fb878cc4e58cce2fa1fb",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "3598e26967a17ebb860d10377e56f81bbd6971d9534ae95dda171c7b8c736329",
					"line": 73,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "611cf28f72e46e78f6e36ff9563bad2d8e498316d884a66ac63a4f6e990749ff",
					"line": 16,
					"resource_type": "Role",
					"resource_name": "pod-reader",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{pod-reader}}",
					"search_line": 16,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "97efb17241cce4524c37507f1211e3da53728bba3f17b9e88ee898a6624b3cfc",
					"line": 66,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Job}}.metadata.name={{init-repo}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "gh-token",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{gh-token}}",
					"search_line": 8,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "RoleBinding",
					"resource_name": "default-pod-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{default-pod-reader}}.namespace",
					"search_line": 51,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "425376a642d1f237bbe1c25b6929ddf10a181a7526d6c64c88ebc2ef4de24dcd",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name=init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=init-repo has resources defined",
					"actual_value": "spec.template.spec.containers.name=init-repo doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "2c0b525ad0697b41d0ff03671613e6760953316240e19db9c5cb1dd31862dd4e",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name=init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=init-repo should have resources defined",
					"actual_value": "spec.template.spec.containers.name=init-repo doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "74d7590fe2ca416cac771ac8f323902ab2c5071e9b27c79dbc74fc58ab2e8cff",
					"line": 78,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "6b0afd62eea323b0b9892398361028da2b7398456f5042c2dfbcc45b4cc6c0dd",
					"line": 66,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.annotations should specify an AppArmor profile for container {{init-repo}}",
					"actual_value": "metadata.name={{init-repo}}.annotations does not specify an AppArmor profile for container {{init-repo}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "24a700450c9dff00e9214eb325a1d0ad7f29e945956a7bf290880b13087d94be",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.containers.name=init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.containers.name=init-repo.securityContext should be set",
					"actual_value": "metadata.name={{init-repo}}.spec.containers.name=init-repo.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "63295d1a969cf77794f2f8397d1aa124ad7a50f0ac9b399e815e722ad9125b77",
					"line": 66,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{init-repo}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "fcbbde31d29de7952a5269521b913b38ad54144effd4c16aaadb5696577eef50",
					"line": 66,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{init-repo}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "ccaafa06cb580c08b30f68296ba4396822084ea1f7c782ff2eb8ce30965a7006",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name=init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=init-repo has a security context",
					"actual_value": "spec.template.spec.containers.name=init-repo does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "b24038b13c0648b3c0d3f1ee3f98aaa612476b9efa6022bdb39f80513450ed9b",
					"line": 76,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{init-repo}}.spec.template.spec.containers.name={{init-repo}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/preparation_template.yaml",
					"similarity_id": "1a905fc11dfba48e594c82eaaa873450da7f8617ca47d255031c44d71d62578e",
					"line": 133,
					"resource_type": "Job",
					"resource_name": "init-repo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{init-repo}}.spec.template.spec.containers.env.name={{GH_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{init-repo}}.env.name={{GH_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{init-repo}}.env.name={{GH_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
