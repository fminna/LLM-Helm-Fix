{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 257,
	"files_parsed": 1,
	"lines_parsed": 241,
	"lines_ignored": 16,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 26,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 51,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:33:32.328854+02:00",
	"end": "2024-06-26T01:33:34.497609+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/access-service_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "3d0f5e863d6ec3e6244b0f2545665aa563ad158aaa614ac125650a4b3bebc467",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "eb51c53e4da60863cb5d30f71bb08d7aaf198b322336ac209cb353a29f8ae545",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "e9a594e7cb6f32bf815b9091558328b78a8fe52f1d556c040bf8bc9ee2bf2504",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "d6f0b4faf79cb85797e0898bb80ec6d07c1f2747187970c4860751af1cff68bb",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{environment-file}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{environment-file}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{environment-file}}.readOnly is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "4f1138da514c14280e54057cd1769a770a2d4e6c245f141da9b79e360d16445f",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{library-environment-file}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{library-environment-file}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.volumeMounts.name={{library-environment-file}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "2a5b722bd34163e140206c1a757cee0f270dc804142d60c916efd90f3e37da47",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "2eedc100cf529c1e0452b6899fc24857e0aa65f4fbf1b86c6fb91eb2380b7b94",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "4ef1743f3b06496bb0e81cf7d4fc0ffb6afcc1e7514b11851e56daefbf7625b8",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "13a7ec70da9866735bee9e518cf2e2ed76a3bb65aacf5123fa5e690adc0b6403",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "abc2158af12e3ea818ef1fe6e782b08139cf6bd8968acf8490944d85c32068e7",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "1402cb34ead7b3af6f3d47ea1bae72e657ee6135a0c117ff5c49e24103a284e2",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "17ecd51caf59f560cd683b69e1a6c10b0d1b7b28a379c3f775b6adeef23c4ccf",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "4ebeeb0df361babe73555ba87e849eef5f0fefdb0fc22fa3dfed64f3577adcfc",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "272b91855291b6870a1677d0ee4038d4253aa166eff8eb2c96537dec6c962cf8",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "aa35dec30a5e7f032cc2e2fded7d773f48019cdb81c3ca8bb8b3a2f928894b17",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "ddbeeda9986a5faf6bd131cec0b9924883832088d818dc2366537bbf6842fe37",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "059c915e4f54abd784b4a64145498e31fdc6c934e5242976a22751cc3577d33e",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "b9841a65a04358480d68cacd9c4e4d53b0e354d7e6e6ab907d1569f02e9b5531",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "1653a2e4639c00a05a40196f41d55657ccdc1b36f30131415b6e7d88c35d9267",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "020923696c20860a9f75af8e149450085cabc790acbcd3b9453fcef6501c4806",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "4df2a2c335ff3bc80ad76851b8eeb993ab2c5004fc5bd4c09ef8911a59b1ad60",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "b2102003e4bea214a95e3f14b31644fc8671a0261244a9bcf23d5920e9d92e2f",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "98b5180555d0d5b2a65df4411119bd231c3b2525a7d8ec6d9026c60078dc529c",
					"line": 246,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "9aae6bec5c9acbcbcfdd931dda024a37093868304ac1280e3e810b193c5cd91a",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "cc7317260728a8f8cd855be7f7663a0d36a1be6df8c8a9e49fb0221c35a272c1",
					"line": 247,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.jobTemplate.spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "3fe4c2c140c08e0c73175e563e97670a826e1bec753bd2740d8467ada6860b0a",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "f21fb9fddff51fe0850edc5cfdc5ded402c2c5bd5a14e36ec901599585fdbd5e",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "85d9683f81840776989bfb2d199f014bd677de6777d39bfba6186bc8c9f95dc1",
					"line": 238,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "9f63366f26ae696097c6215435b1daf27d1fa4bbeeb82d4e1d5cf4b730b04eba",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=access-service is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=access-service is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "126b93b83ba66b7f2b010fad338c52a9be718b89cd57728f880947acc6b5fb6f",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "254f6afdba81c7ebedaae08771a6b7072cf9828ce8cd5cf709c7f0ef1ce9b268",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "4b5b28e87737fa28cf19b43df7aa825928d40e83e36419449572e3f07cf3a381",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "c316c0bf425fe2518db3e2cfaa609114a078a617992d39f687744c7844cff5c4",
					"line": 236,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.annotations should specify an AppArmor profile for container {{kubectl}}",
					"actual_value": "metadata.name={{restart-access-service}}.annotations does not specify an AppArmor profile for container {{kubectl}}"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "01e9984a6668c09a99da3b3d0fcdde332b7ac4d9d541b2d2511daf15034f08cf",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{access-service}}",
					"actual_value": "metadata.name={{access-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{access-service}}"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "01e9984a6668c09a99da3b3d0fcdde332b7ac4d9d541b2d2511daf15034f08cf",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{access-service-gateway}}",
					"actual_value": "metadata.name={{access-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{access-service-gateway}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "095d2c32f9af3bfc57686a5ad20432b866541be70b712e8327abdcac99449bba",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.containers.name=access-service-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.containers.name=access-service-gateway.securityContext should be set",
					"actual_value": "metadata.name={{access-service}}.spec.containers.name=access-service-gateway.securityContext is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "00da9de18fc77c46e64c54368ac66ee1fdd5b851de20fee134cfdcbe3eb861fc",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.containers.name=access-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.containers.name=access-service.securityContext should be set",
					"actual_value": "metadata.name={{access-service}}.spec.containers.name=access-service.securityContext is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "d16487023f3a286aa5ad12e351a533007c47015063360e0646c99200a1361735",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.containers.name=kubectl.securityContext should be set",
					"actual_value": "metadata.name={{restart-access-service}}.spec.containers.name=kubectl.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "84990ed5090a3266edaa6b4cb9c60fc056bbf8dbc2793b2f1ed01ebef0dc66d6",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{access-service}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "8c96c9d2dae055e25ca7f74317edf5b3f401aede0414180188232cedf8ec8af5",
					"line": 237,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}",
					"search_line": 237,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{restart-access-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "1bfc1b7107f0ef5c162deb9c0c306733adcc80b56fd66b15c83560370c5c9ead",
					"line": 237,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}",
					"search_line": 237,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{restart-access-service}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "95041ee01a2975a17102a824e607bca746cd68fb62ee8622c997e6f7f9b1b6ec",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{access-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "97ae9470ad1a7cd68bb691207a5851654a0d97d6d3c48b2ae87d5bd72d34c1aa",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name=access-service-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=access-service-gateway has a security context",
					"actual_value": "spec.template.spec.containers.name=access-service-gateway does not have a security context"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "68d276ebae97def03cde4063b3556e26595b81a57d5fccc6f629e35834c98f54",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl does not have a security context"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "171ac834fe1dce83de74789348dcc463e68bd06a24a936972e41cab6d96afed1",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name=access-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=access-service has a security context",
					"actual_value": "spec.template.spec.containers.name=access-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "1f71e9a63a1e472b2629c821daf459276969a419970a4993b985aeb6e4efafcc",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "b2332c40abcf761893f369c8948cffaf48434af1125b072abc6cf44c7f8714a3",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{access-service}}.spec.template.spec.containers.name={{access-service-gateway}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "c5a0c975a5083173ec5a6e1c2d963767acd1553a7c8519e496b51a1f85876f4c",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-access-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{restart-access-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "01935973f1827c151e9ebd9849d84a3e02fc118426865fd979281cbc5cfb8d43",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "ab7f1ae66c5513aaaa607c87d33a1e6b26449f126751295367407d4f7f02d65c",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/access-service_template.yaml",
					"similarity_id": "1770c8aef897881d8c832847461164b4d8193aac74a7211c6c777590807a67d2",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "access-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{access-service}}.spec.template.spec.containers.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{access-service}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
