{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 138,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 37,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:02:41.60378+02:00",
	"end": "2024-06-26T03:02:43.675413+02:00",
	"paths": [
		"templates/falco-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "acaa0de7ace326e8ff311650e04829f6cd537a9c589cae6bee1cde46aaad40d5",
					"line": 115,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.volumes.name={{falco-socket-dir}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-falco-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/run/falco' mounted",
					"actual_value": "Resource name 'release-name-falco-exporter' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/run/falco' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "f247a96657ab6ccc49c56272b5e290a884912b5eabad3a61fba136d70d42c1f4",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "d26f0e607ec59ab9f5b3fa15e3a2e2b9d1a61cd94909ad94f8c8ae17708784df",
					"line": 115,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.volumes.name={{falco-socket-dir}}.hostPath.path",
					"search_line": 115,
					"search_value": "",
					"expected_value": "Workload name 'release-name-falco-exporter' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/falco' with hostPath",
					"actual_value": "Workload name 'release-name-falco-exporter' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/falco' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "1aee7d4dc8ce4d414540e766847680eb7f8835ab4d9f26c45bd92bdcd03976b8",
					"line": 72,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "645ae66da61624f90b7de222488dad278cf13376dab08e64d3a7cac75cbcad87",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "a6305c03293dea78df025a4bf7f9ccf7cc528604a754f85a0ca74ed8e2bd765e",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "8475f1ac78ae9cd61f8155a2fefa9f0a36325203118ce46796c4d84e2c4e8475",
					"line": 72,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "fdc9f95e69f0b386d7632299bcd47d5ab2078018e3351dc05838a4bfd4c482d9",
					"line": 71,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "1c458c62ceed458db682de6723040ef63e337440466ea0765b925dd400048346",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "f9832654f48fd3c17973fab1d59671628140aa68998906561192e0f4359edbc9",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "c87d2bf92362885e197c4ee58a25066b11785e2cb00638508204cdff769cd596",
					"line": 71,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "ce3f3cae120284a1fab260db0715050b37373cebb102d91c9a87f657a51b71b8",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "3f5553990bec61ef6078b5fed2ed0e6b77c2239a47d325cf86a2ab8ca6d6ca42",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "0cbbdabdfae3e1ae140a21a8d99636298e42dd2dc4790a050aa620bf5d26e4f9",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "80443d584c27f7c33ee8c4c4bfca12f5447e61340a779d22f10df2f463dbc104",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-falco-exporter-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-falco-exporter-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "26d78515277b12b0391503d1e8d2df717c13988eab8b9d546a0b292825adb971",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "fe2f96b227378398d3fd8080d05e92d956f3ade40049b5266fdd9eed84e3fea7",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "b5f051f2df85ecf5f311bf6c863ff9bbc869584819defe982d0a4ca4348cd5e9",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-falco-exporter-test-connection}}",
					"search_line": 126,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "281e972b043f8898441189d887b4c8d836e96c9d2cbc6ec76da5f3e2f2708e73",
					"line": 13,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.namespace",
					"search_line": 13,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "47a345a1fe181822df62406cd2efee35fd9b8adaf8e537591ffbdab74510915c",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "81ce2929bea2a3174afc5f01a0e4b9edd91bc25c71361a9369a0b44e42d1775d",
					"line": 106,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=falco-exporter has limits defined",
					"actual_value": "spec.template.spec.containers.name=falco-exporter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "91311ab6b17ca4779e0c88338a7cc1ce61707a90ceff3ab969738a728746dbc7",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "5ed5514034f03fd1dc850e22d204239329f840c2e9715108b647452678d35299",
					"line": 106,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=falco-exporter.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=falco-exporter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "8644dddf8e768cd57419b103522b9e7b8e49f197146f103c3e957b58efe51198",
					"line": 82,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.spec.containers.name={{falco-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "088c5797d944b0a5dd060105b9a7709a4ec3c9d85ca5f00d5c90f916b4ba874d",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "7dde8ca7027886a95195f8e2260d97da4b5b0810af2f2aa6f77b417f3bec5268",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "5b7e1e536570924419e17858223e722f736235ccf7831e87506d77694dd1cbab",
					"line": 62,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{falco-exporter}}",
					"actual_value": "metadata.name={{release-name-falco-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{falco-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "2fe85dec4f617adb4e43374997e72a3030762e2078eaf38cc37f6230369b76d2",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "4aa132a9daca61a6040b8af768e88dbbc5247d7a0dfda8cad726930a092083dc",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "da09f249b0ddda41193bd60b87e440fc15a65fb0db674f5daa6fb91e84d79bb2",
					"line": 53,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-falco-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "80553f4f50a71c1280871c6ff3ab1be6ca8e5cea4000e7c128374b40329854a0",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "2eddf2df9594486007f96bcffdebda9b3f9a1cda7e0fab3ae977137f66f033fe",
					"line": 53,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-falco-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-falco-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "ab0b11522bd1599303cd6b8012fc082dc4bc75e5acb71664715fbfd7d92d5a44",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "2c92e5f46a856749d843f336aadb084fcb0ef4f897afc2cf7e4ae7f97a860e22",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/falco-exporter_template.yaml",
					"similarity_id": "ced353f858803a1efcbe070929cb3faf42e92409d336d5796d73c8b126e8bfdb",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "release-name-falco-exporter-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-falco-exporter-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
