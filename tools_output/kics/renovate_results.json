{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 85,
	"files_parsed": 1,
	"lines_parsed": 81,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-08T12:12:56.313289+02:00",
	"end": "2024-05-08T12:12:58.49779+02:00",
	"paths": [
		"templates/renovate_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "33fcabdd1dacbf653f02f0b220c19f97753b08d1a9dd017952d465f386a49baa",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "33a5982ce5f377e0efb669e24491d2a076a2757561dd531cfe50f66ce1c5521a",
					"line": 74,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.volumeMounts.name={{app-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.volumeMounts.name={{app-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.volumeMounts.name={{app-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "31a5af45b5826fed19ed39d0cb3c02d49c5cf2ceaa846047a18179ed4b3c164f",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "d5465cd6fc33d38049e73495e15db6796b315fed103bedcf117a4852a2432802",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "ac4ffa5aa94c83484c13b8e211929a1ebb60d97c41a908d8b8e7b70aa3cf638a",
					"line": 66,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "1b33357a95b25ad85af627a55253d0debf83e97d8e89bf1b1fae2cb5e0101787",
					"line": 66,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "e75917c718fff69d51d4e1c5c04193849be6fc794d4165c1b13d45cc647e0313",
					"line": 66,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "8f58a1abd51cc57c70d239a0142c0b7f4a8a999f7fb79e9d5395433f9a8ed286",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "e27405868167990d3bb48d46bb01bc28bf278a88959e633dda688433ac7ef94c",
					"line": 64,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-renovate-app-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-renovate-app-config}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-renovate}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-renovate-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-renovate-env}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-renovate}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "5bb9ccf9be0b01ef75cd8122aa14ef41c489bdc83191e33fabbd10a69cbeb2d2",
					"line": 69,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=renovate has limits defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=renovate doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "15e9c079e4ef630fceb5e340ab8bb99c1d02927ed967f58c1e08fa1bf7d7476d",
					"line": 69,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=renovate.resources should have requests defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=renovate.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "01235c272b9ac0e33a9fd4607426f48b1d1f8d3c1bcdff530200c8cf018fb0fc",
					"line": 55,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "a90bc9983b3c09268bea89f632c3e204514ce6bd1b075bba601e8e9b90cf2621",
					"line": 68,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "2cc201885eb4cf092431b89765e6ccb595512d68614e40b3318395eae4d56416",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.containers.name={{renovate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.containers.name={{renovate}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.containers.name={{renovate}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "3220372af94e819e7e1ca6ff71cbcf2b335f338f0946fad4cd041dbabfa7696b",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-renovate}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "902e36fb41e929baa9ea69a739de313443f7e1075dc394ff6f0eb06b6b06b819",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-renovate}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/renovate_template.yaml",
					"similarity_id": "3ed5f4e5f4c2df79bfdebc5120f99ab60df71b2cab7144f75185f74c3b319c70",
					"line": 71,
					"resource_type": "CronJob",
					"resource_name": "release-name-renovate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-renovate}}.spec.jobTemplate.spec.template.spec.containers.name={{renovate}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
