{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 59,
	"files_parsed": 1,
	"lines_parsed": 56,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:57:39.169845+02:00",
	"end": "2024-05-17T22:57:41.084191+02:00",
	"paths": [
		"templates/testapp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "1c7f5908d4ad144b90673278411dce15f52c9e096ea5a3c7569f956b981c3f0b",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "c1252c9281edb6be0dae61b59475692d62d26a524c9f6c7063d26d9132bcca4c",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "db5c4cd2af745b82ca70eeaf5840e85ea969e30bcaca18ecc0a3cb38aca70dec",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "c3002b199b7cc0248da3d1fdee9a963d3cc3245373d24ba5a8270e9aab14086e",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "2559151fd532cd940efa9e295f2b2d9f9fb7c9841e3db1d7ef884f7124a44a4e",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "702b5804a45c8e40333429f907a529bec5d3a8954026e58476245c3b0e164918",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "692fd7f8926b03bb9391d4f8e68a84a04c46c96d02e788544a7d92839cad1a16",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "f3de823c4b3a8e35992ded91215649ebdcc02667515c3192d9f0e5005dac6f5f",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "b35d669aea88d391e27c939285e87c97149db8e22c4de51f39f63f5b547e4448",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{java-app}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "java-app-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{java-app-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "5a3e7e6caa2adc15ace5ca675f675dc3b52c5c2e9884c7f6a6e01584d2c1d39b",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sampleapp.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=sampleapp.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "11aca26fb7202b06fcb14f2544a787d9a952b6f29fddaeef5794d829da8a5da1",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "6919d9c94fddd8fd46b2b565325e27b7f2511655bb2ddad8fd613276cf362369",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=java-app is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=java-app is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "2209db2e6e2228e9808cdddd7d5598eba25756db469ee27f95f77f76632f1017",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "5893081bad6389a789c46b4cace1ee147ae151b96fd9ac70ec073b0246254407",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sampleapp}}",
					"actual_value": "metadata.name={{java-app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sampleapp}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "0e98d6397485c989de56b2428828d15b19b984d6f0cf21565b408cfaf9518da6",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.containers.name=sampleapp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.containers.name=sampleapp.securityContext should be set",
					"actual_value": "metadata.name={{java-app}}.spec.containers.name=sampleapp.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "c859bc93383dc2c43e36f13f37be347d9f2d51ae1fb0bf49e4cf6622371c8576",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{java-app}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "7e1e1711619ffec6756c68634620b47f488f9ff574a9b42219f681c19d4b0977",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{java-app}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "65fae82d3727e1b2061ddeef6b1f6c64b3a62b3cd7cd4eac62f1e5353bcef9b1",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name=sampleapp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sampleapp has a security context",
					"actual_value": "spec.template.spec.containers.name=sampleapp does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "753b747e7ea303f96b58580c809ce19c7d65c12e2eca0f5b99dd4438aea25791",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "java-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{java-app}}.spec.template.spec.containers.name={{sampleapp}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/testapp_template.yaml",
					"similarity_id": "6841afb5e77abf7802b415d5d777d34e2983b2a85689e9d65a5081d6f794262e",
					"line": 8,
					"resource_type": "Service",
					"resource_name": "java-app-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{java-app-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
