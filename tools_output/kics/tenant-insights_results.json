{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 6205,
	"files_parsed": 1,
	"lines_parsed": 6192,
	"lines_ignored": 13,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:39:08.100713+02:00",
	"end": "2024-06-26T02:39:10.800717+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/tenant-insights_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "2adacad8c347013950387b158ab48808b0e3cbfc08c7807976269d9a2ea9885c",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "17e8e6b94cc883641ce5ca89c1e78606cc28b5337e7b31045def3920a2682360",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.volumeMounts.name={{shell-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.volumeMounts.name={{shell-operator}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.volumeMounts.name={{shell-operator}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "f1b7941f996c6ab31ddd43ad2b8221f4c1cf9c7eec288803b904755bda07cf12",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "6b4e3bff334b316e8fb74a341bdd097cf14826e071986f3f7b23148133516ff0",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "d8bfed57aa29bd47cc82626f1e3ef2c9fa6c2e8257191ac9553f1b4a876be034",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "eef04ee28ba988c7f94bbb0ded2e17d1da1cbc98adb04feec7a67b85cb073e93",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "596ca364a1cf0eb96f161c0d8bd8330ddb00829dbcb7336b9806f0380b649f34",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "9716155fbe4a4b4a7bcd49774bd6c280237617f44b72f1e6952594d4272b7842",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "dcb3bf33d51c44d56beb342059a2c016976cb29db5b95340ca8d47f663f99ac8",
					"line": 65,
					"resource_type": "Service",
					"resource_name": "tenant-insights",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tenant-insights}}.namespace",
					"search_line": 65,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "tenant-insights",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tenant-insights}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "9f1c7b4a3da948dc42126b64f37fe90d9c2c8b37bc8eb56d6035df361f7d45f4",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tenant-insights}}.namespace",
					"search_line": 89,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "f73d645e1c016b54638a34c8eecf826e684c3fcace1aba5e7613e3131ac3addf",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tenant-insights.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=tenant-insights.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "5de75b916a61b618b1c9b85cf459fda830464bde2b182f728a62c1231dc0723d",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "ccaddb6d8808e3dd51684634b587730ff1d6ae7ba6a3608c79dabc697ef49035",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tenant-insights}}",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tenant-insights}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "9623ad19c3c2dfe066efc127d60c25f4ede926785559ef2363c72e42be8547eb",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.containers.name={{tenant-insights}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.containers.name={{tenant-insights}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{tenant-insights}}.spec.containers.name={{tenant-insights}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "e7c1d503f1bd2d1ddc48532aa926ddbf3e3c1009bf3c88fc44d17d1ca9e4a5d6",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{tenant-insights}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "0aa1ba07977896adfb2c4f475274f1ebc5edda4830a614befff857cacf06812f",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{tenant-insights}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tenant-insights_template.yaml",
					"similarity_id": "d37300bcd2d77222f75265689dcf839163ce874d36234cddb645116ca71e65e5",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "tenant-insights",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{tenant-insights}}.spec.template.spec.containers.name={{tenant-insights}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
