{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 248,
	"files_parsed": 1,
	"lines_parsed": 240,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 22,
		"MEDIUM": 24,
		"TRACE": 0
	},
	"total_counter": 50,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:03:18.179535+02:00",
	"end": "2024-05-18T00:03:20.082423+02:00",
	"paths": [
		"templates/pihole_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "5c40c0e8439c88a8215ab95e9eb37f18d8b861d30fc76011f066ee4127e9856d",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "60654b69b083a394b5d7c80f621ebcf04f772e64bef17848bda2d750fa76f8aa",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "5adfb936dd886a2a1f9fc7a6865feb024954f01e6baed83c5182723d9a8a8105",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{custom-dnsmasq}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{custom-dnsmasq}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{custom-dnsmasq}}.readOnly is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "bdab05bff9ea868942e7ecf99d7242d1167b85232397b91abcc2f2375a907a3d",
					"line": 216,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "c21d60e3b4f904f22a81344aba4d0f5214087a6cc3e3cb54964ee6f5b714ea22",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "f8dda853b32e3a784caddcdfc05155914863f2bccacacf82517b4eaee12dfe93",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "a509992893bae842adf08094e9d7399ce6c79ae29553351b7d570f5fedb5af9b",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "e5585f70a47138479f809378eebcf252cbe051322952fbd4151e7ad73e5db967",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "999c69095e0c2bc0ad2f725a1dfe599a2a8b12e1d9642fde44d8d2e00f924bd8",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "9fa45b5073c75a429b58a7c386babb91eed9331c70c33d3d24ad90c7d7ab24fc",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "bff2e32118347d4f3f02eb81aaec10bbf164cf17acfb8151acfe3c0121d4c6c3",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "ca30c65fe3979542c062d701e85757be5cd23e1378e12a6290def34ec11c5898",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "1ffe356faa19d643e3ea944eaa8e37c625e53b5792e7753b2dd7257944e3d881",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "7d472289b7f7d7aa80139a98de770dbd40dcfd866015dd05e896a3c09722f61b",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "d815cd6ab2d8f218a81a3cc29d2912c1a91bbb7738edc5762d12544ec73b7395",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "8facfea658c884ef028cb531b9aa6d3a6bfae8439e3efbd0e023c0dd8e71a005",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "db270de8f79868ad26aabf2308b19cb993cfd15c109a71ba4c0b099593ae0049",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "d6c15ad578476f928eb85b365cdc43979dcad0984b16f220c1181559799ceb56",
					"line": 240,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-smoke-test.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-smoke-test.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "178711d61891ca6fa090e2ff24623761c4a1e585115533e4778512dc25a3f968",
					"line": 240,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "e1dc9b4264fb272c852176047c87c3ca2723fae271ce304a858e2369fbe156a7",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dns-udp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pihole-dns-udp}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dhcp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pihole-dhcp}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "96ae0a2e02eeb7312809398cf571513369d723a69eeb385b026b0247469a83a2",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-pihole}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dns-tcp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pihole-dns-tcp}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-pihole-password",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-pihole-password}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-pihole-custom-dnsmasq",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-pihole-custom-dnsmasq}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "c97f7de0d554ee8b3e35def0f86be0ee10562020c4329b9691a9e036240eeffd",
					"line": 237,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-smoke-test}}",
					"search_line": 237,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "ac62723221996756aeb5a150a2027dc2f98f85d49d2e23c0af76d8bb6f46612e",
					"line": 102,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pihole-web}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "53c2af40bcbe4b6d18c266e6ea009dd7fa53709a109ba3be7f2a7dc7b80af2ab",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=hook1-container has resources defined",
					"actual_value": "spec.containers.name=hook1-container doesn't have resources defined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "03110aa00a63420af056d5cbe2d2021821f9b0de86c87f9c9b8bb59799269acf",
					"line": 223,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pihole has limits defined",
					"actual_value": "spec.template.spec.containers.name=pihole doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "30c796fb2aeee7ffceab3c40baabf03eb533817bb503ee7139c68cd93ed725c7",
					"line": 223,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pihole.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=pihole.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "4bc233f3f4f8bdd74763675718b1db1d49bc637333215a5cd49cf4efc7cbd739",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=hook1-container should have resources defined",
					"actual_value": "spec.containers.name=hook1-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "5a99192d5db1ce6ea016a4070fc92a3a31d43187f63a481bb278663ef2c219fe",
					"line": 179,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "37695f10f50671383cc235aa09e4e99dc0662e75ed580fafa51769d83be3cf56",
					"line": 243,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "d967a921353b39cca5b97ecad1ed32c118b3d5576de68a1238f626af07e36e41",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.metadata",
					"search_line": 146,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{pihole}}",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{pihole}}"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "36b068c98d45a194b93589a28b96273ffc54d5540e0be49d7adedd2738c97aa1",
					"line": 237,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.annotations should specify an AppArmor profile for container {{hook1-container}}",
					"actual_value": "metadata.name={{release-name-smoke-test}}.annotations does not specify an AppArmor profile for container {{hook1-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "7edb7302a8c74c3b87150e97ef51f1150722db43bec3fabaa9ed00e57759d801",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container.securityContext should be set",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container.securityContext is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "781991bb612469d98b86ff47eec8528fb9b825402a619da9189e564eed38dc45",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.containers.name={{pihole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.containers.name={{pihole}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.containers.name={{pihole}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "eb79ac91150e65fab2b18e2fef7ab0c5663ace5550d2e46d92c18a431b19f142",
					"line": 237,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-smoke-test}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "d614b9928d1e638d185963bedf8f07345d0044703a21829d5a73071362860515",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-pihole}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "0e7d4aa35f5c6c9350cbb6469b3873a98127bfd75da839989eb6928542db0f4e",
					"line": 237,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-smoke-test}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "4895b25202d0a72d642164ea2a833d827d07e0f08b1851893d5567c31cdb9bd1",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-pihole}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "801a15489082b8c49e439f6f362ae4d4a1e129897e75660f386688027cdea21e",
					"line": 240,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec does not have a security context"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "47d70a00175d8bca60ea9fee53b6aa779b1e8f9245e48ca1c338c14d01648a42",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name=hook1-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=hook1-container has a security context",
					"actual_value": "spec.containers.name=hook1-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "3856ccccedfad80e1680c1fbf086315bd5b67d293b1498d9f5a2dabeba84ead6",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.name={{pihole}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "efa3eb385d5a00a259a92a74f84b7f18824ebc1b930c7e32facb3af4b2a656ca",
					"line": 242,
					"resource_type": "Pod",
					"resource_name": "release-name-smoke-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-smoke-test}}.spec.containers.name={{hook1-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "469d1a0a0299b8c80207297606e622f90dbe80ba114636ed31fc8648611b3999",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-pihole",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pihole}}.spec.template.spec.containers.env.name={{WEBPASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{pihole}}.env.name={{WEBPASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{pihole}}.env.name={{WEBPASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "92980af24f820f13eaeb0cefc437ed66134ba01c6da94e97a2c797f55462c774",
					"line": 65,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dns-tcp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pihole-dns-tcp}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "3525bed8522e009faaa4f6aadf03743a4963ea501c98927b4623f51c91dcc184",
					"line": 87,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dns-udp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pihole-dns-udp}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/pihole_template.yaml",
					"similarity_id": "c7f0f99ce6aefb3ca56727d1161e9c68a5ad6b1d88b2855810a41c2da165ee0e",
					"line": 43,
					"resource_type": "Service",
					"resource_name": "release-name-pihole-dhcp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pihole-dhcp}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
