{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 69,
	"files_parsed": 1,
	"lines_parsed": 67,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:32:28.713007+02:00",
	"end": "2024-05-17T23:32:30.612432+02:00",
	"paths": [
		"templates/airports-consumer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "cd7a11928bf33387368f8331db7accb8cf80522780e28f1d247beee3c87b5487",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "bcfbbefe270c70a05b5d67f66df1e2c0cbeaf530344b3efcda50f445c25436bd",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "96cc7e2e6776d83d4cbbc39cb0ac76517b65aa0bfaf7228cd659f0a3e9753f57",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "5e4f0e5a269ab92e346d8b7aa6483957025f1dcf3873effd83c241ba325f3e9c",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "16b538a5a8973807b25e56e82cc264c05d77b54e1c47d008a59ceba7495b1410",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "fce0fe56f30c0fdee8586a0aec772bd345c69c353378956420e561abf2860e5c",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "2d4ddc5f51aa24eeeb832b6c6358958ac5ac5f2ff364a3a4f27c5fb3f7a09259",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "84cfc7b4160045f6f2a05fab8f7701b19df5b7ad3b51bbea5c4ed02d97fb0091",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{airports-consumer}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{airports-consumer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "852080499277e8a6e795420cb5f963de6b826b259e2b676e486a6899fa8599ff",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name=airports-consumer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-consumer has resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-consumer doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "e9015b3a063e2d9a2fda9120e3eb35c13f680af1763d35e304a6d323062854c3",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name=airports-consumer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-consumer should have resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-consumer doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "9a552a1ae5c83e02a2b8d13adabb319928991d868ac0799ce86f4cf74d52b941",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "07df047b757c8a95c557044fed0e57b4512e3aa45b8b83bce09e1e2d7de0806a",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{airports-consumer}}",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{airports-consumer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "4a17afb9e48728a4680220574f32bab33a011ee28d0c9e1b6927cea72783d536",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.containers.name=airports-consumer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.containers.name=airports-consumer.securityContext should be set",
					"actual_value": "metadata.name={{airports-consumer}}.spec.containers.name=airports-consumer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "64c65d227ab0ead3bd2685edff09b9de16491d9543fbceb7ee29b47d72126696",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{airports-consumer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "a9297ff04702c6849e5c8644a4b0a7860dbf365bdfb544d93842d35c3b6dc4e7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{airports-consumer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "6c027a1b837dc99b8320bb30288af775400796d525ccb94589d89d3b9cfb4ca7",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name=airports-consumer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-consumer has a security context",
					"actual_value": "spec.template.spec.containers.name=airports-consumer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "2dbe86241009b913d2edf5348078ca5e3c1578f44426a62bd69fbb79847e770c",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{airports-consumer}}.spec.template.spec.containers.name={{airports-consumer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "a89acf8cda2df56aea33c25c9b9cc5c45f690a0b130bcb3afc253afdd70a827b",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "d22aa55852532915587a9cb71600a58172353da36293b24fdaf2b023153e41a0",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-consumer_template.yaml",
					"similarity_id": "6f4932b698331c0f2ecef255fe2ab8a39d397c4a28d24ca10606d3992714eeba",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "airports-consumer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-consumer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-consumer}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
