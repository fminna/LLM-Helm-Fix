{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 47,
	"files_parsed": 1,
	"lines_parsed": 45,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:19:46.38998+02:00",
	"end": "2024-06-26T01:19:48.529047+02:00",
	"paths": [
		"templates/ed-deployment_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "75bfbacd565827a698f6aec31e350bcab1659b7936042164720afa95f2db276c",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "8ecbac88eb8f4dc8687eebd513246720b5ce98bc27d7784ddf61c2cc9e7398fe",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "b484e7b7317b5918f90dca12ac4d18fd011c2994685fad76fec97db007fa26c2",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "2f8558e70f72f2e5e62a517c7d49519ac94690bde969a5c673e9029244103024",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "07943e42a8f84c51e0201f14710a64a440c3041d6bdc34ef7e8aed68ac5cb209",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "e8b72672c23eb7eb990a75d098471c88484d19af2780f7cd6279605d8382d34e",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "74d71b0c6a665b66427353d8e1492ddf9709fad8e42851c2645b7ce55acc924e",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "92f442013a75d8e994e7c8416cd4aba2be0a6de495d13c0f4be08bf2af2216b8",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "34509bbbae129553e6b9f446e1fe9fb17f2c0353d994ac88599d9f947217d2d8",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ed-deployment}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-ed-deployment-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-ed-deployment-env}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "18e3287ee96b9277e91027b748ea453e3eb96dc2c8b49810db21bfcd123b1b98",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=app has resources defined",
					"actual_value": "spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "2c2bece3c405596aad3d89a484cf9ef9b915d126d4eae5140efe309bba2bccff",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=app should have resources defined",
					"actual_value": "spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "446c0d35997399daa5c21c55bf4ebb3a7d2b716a621ecd4a3e658a89910ad98f",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{app}}",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "3d6333cba8e653324da1454f7ea46cc2eba4a733df48cf238c9cf1b91e0a71fd",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.containers.name=app.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.containers.name=app.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "74de993e932c8db1f175044f31b2061c7db7c9da5491122b74e2d5ab8b1b86d1",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ed-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "d12a092b8530596d66371422dce3ddc2135911dff410ae3ed75a9d98050acf83",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ed-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "1ff7c4fa4196fb9e0e0aa6e798fe4c06fdecdf9aa903b410b36d73ebe29f660b",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=app has a security context",
					"actual_value": "spec.template.spec.containers.name=app does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "5369706b20d358661e5aefd127304afd4d8fc57766967a9602530a008c9ce804",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/ed-deployment_template.yaml",
					"similarity_id": "a628a799c56d2782524f8f16338ef6e56f5c2146f8c903106f8429bbc4014fd6",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-ed-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ed-deployment}}.spec.template.spec.containers.name={{app}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{app}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{app}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
