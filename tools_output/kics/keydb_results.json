{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 296,
	"files_parsed": 1,
	"lines_parsed": 286,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:39:15.17935+02:00",
	"end": "2024-06-26T00:39:17.304581+02:00",
	"paths": [
		"templates/keydb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "4ed535c785f5f48c08c2287202106f75c6eb762260655d1826f24fafaa0997f9",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": 259,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "df430f1067c269e24f71ec160a4af13785b29eceb32530e0857b43dd5eecc1a9",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": 259,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "b8ccc2eaa1ea768350bf5351afe09fa051851b519b36997ec7ddf88e615a623c",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "52d9c66388aae21865ddec4c15af27f7c9e5ee6a4831526ff4a74ad1dd98c00d",
					"line": 211,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "4ce66e0fdf2a261b640b7447b2a0e118b60c7b2094710148fc15fcc740cbafea",
					"line": 211,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "e4817a7dbc8af2e2f0015e97898c8945299c386e01f8e772edf10ba58a247a85",
					"line": 211,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "6718eaeb9807e039bbefa160c178d1b2e3ae5a177b09049eefa5e0775ee0620b",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "0875cf1700c1814313992f5d4e8921b3f29e3f3bcd3be8d302534bcb001b16ab",
					"line": 193,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "202e2d205100825905de37d23959f9f177bdf733180ffdd824e7cb3aba36666a",
					"line": 169,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-keydb}}",
					"search_line": 169,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-keydb-health",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-keydb-health}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "4e9aeb2c199e2ee054b61199ec2c628ab2303cd4dd67f0409aa7eabd6c234967",
					"line": 115,
					"resource_type": "Service",
					"resource_name": "release-name-keydb-headless",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-keydb-headless}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "Service",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-keydb}}",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "Secret",
					"resource_name": "release-name-keydb-utils",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-keydb-utils}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "49c44a9341be9e13d89bc3f640036582ec50e7823c90ef0f56c53a30aa83abda",
					"line": 257,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keydb has limits defined",
					"actual_value": "spec.template.spec.containers.name=keydb doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "3a70a9fc8f0df1a9faefd45f54d7265064a2859b629540305c3eb144bd7aceeb",
					"line": 257,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keydb.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=keydb.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "87379bfb8d40dd5fa6fa67b6cfe5f366f660fb2645135601f56bb734956a73f2",
					"line": 213,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "2efde1399269e6345d1bb5f4bebe3e3c98e76dbc542499117517d4e7a1f267ac",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.metadata",
					"search_line": 185,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{keydb}}",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{keydb}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "d2755c0e87da98beb944f9167d775052342857d46bbd6397bcfe23e87bc670cb",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.containers.name={{keydb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.containers.name={{keydb}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.containers.name={{keydb}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "7851495deadff2f418714ab2316f4ea34b590d12d019decd0d918cdc97b5200c",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-keydb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "722d03ac84c718961a29b52612f5ec208eb8196a987b00c18a063821ada4f3c6",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-keydb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "aa222d5964dd10bcd6185ffe001ded9f7ea6f892de01e92cd4529ff86cfc9f9b",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}",
					"search_line": 259,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.template.spec.containers.name={{keydb}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "1feaaf70b6ac53f75e51e32b49ce02026d1d893e05911fdfab14aac033e2b5d5",
					"line": 157,
					"resource_type": "Service",
					"resource_name": "release-name-keydb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keydb}}.spec.ports.port={{9121}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.ports.port={{9121}} has a Pod port",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.ports.port={{9121}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/keydb_template.yaml",
					"similarity_id": "551c3bfb52eab407102b7a9050f4b32ec32f3a7b438bffc31458a806b1176505",
					"line": 295,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keydb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keydb}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keydb}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-keydb}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
