{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 66,
	"files_parsed": 1,
	"lines_parsed": 64,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:19:41.786421+02:00",
	"end": "2024-05-17T22:19:43.68726+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/db-backup_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "66f9353d2b4bfc2105eefee245380e1076959e9e779e5110df189998d7fbe771",
					"line": 40,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "bd145908ce87739cb250261ad93eecb76e664dc891d77a9f6418bdbd16c13242",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "96fea353dbc718072156961efde431cd697a983b713a99a95262c31e629e952b",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "458d94001e65eabd9966384b737b63e81aa1bdc1b6cd143a5b1fd063f2772863",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "7cbd4291648d05844ce1822b82a60aa4c8691a39d07a34829e8df1f3889b375f",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "d6c0218f16a1ff54e2c6d6369cef3d17a595c5379de6c976e3fe119dfe8c506a",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "69635ebf71819202ce4d2c0de0b2f3c2dc2c3e409fca10d4fb8d9cfa3d5f976c",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "6e3c56b55bea152233a83d61a682cafa57764e0462ad766db32bd3aee0080686",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "00606fa628d0b3f3495ee6adf0150e306c02633385610f3f2d309723bdbc70d7",
					"line": 35,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-secrets",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-secrets}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-db-backup}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "42d8c529089957675735ba2c3fef6100546152cce09d91dcd08ced3464145e77",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=app has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "49916330d0c735705b9d75029754ed7a99f22f4cdd613f943bb5ae2f2efc311e",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=app should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "3158794b797ce28c42963f94791f82cf1168698e51a1d07ab84a56be79c2aa39",
					"line": 28,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "c1e8f6b731dbddd8b6495ac19e2387a7b1c0874e8eafdf49476fd7528e8a1dbe",
					"line": 21,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.annotations should specify an AppArmor profile for container {{app}}",
					"actual_value": "metadata.name={{release-name-db-backup}}.annotations does not specify an AppArmor profile for container {{app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "27484da97cdb59e2e9f0cbd4c19febafe1d4727ad931550911da0d848959d65d",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.containers.name={{app}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.containers.name={{app}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.containers.name={{app}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "229a76b07d4def8f2b34c9e8e2ef0b60af816d463e93511c15f64877cfad4947",
					"line": 21,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-db-backup}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "e53f4a1cff867ec4ffa78fdb9429af2796153d552f2a4f85c842bfd6a2a3fcc4",
					"line": 21,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-db-backup}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "131328630c2274b7506f0cfd588b65be18960bde48b04421f124b5a3296be056",
					"line": 39,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "b56d6b93494bd5ad0f032033e809c29bdcbc975224f38f60af409540bb70360c",
					"line": 57,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.env.name={{DB_USER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.env.name={{DB_USER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.env.name={{DB_USER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/db-backup_template.yaml",
					"similarity_id": "89b9534b6d63ba887ba116ffa8f4c726e897736b718caa07cdd35f46a3d0e3ec",
					"line": 52,
					"resource_type": "CronJob",
					"resource_name": "release-name-db-backup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db-backup}}.spec.jobTemplate.spec.template.spec.containers.env.name={{DB_USER}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.env.name={{DB_USER}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.env.name={{DB_USER}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
