{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:00:33.5428+02:00",
	"end": "2024-05-17T21:00:35.41815+02:00",
	"paths": [
		"templates/foo_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "b9fcd24da943c3bd601cf4b69fb1882e89c03d3c43347190343690a5b951bf06",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "75e338241e11f37dd37d6c95a0bae6c38b5aa99c736a6e0af85cd29996a9e07d",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "e9a791dca04e0f6bfbc0b9f93b04695772f480c44b0eefad8c16b05c67d8fd17",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "81dea6b820932a7f10e0fccd0bdedd4d9e1a35f3bc958fddacb58895bc7ddbff",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "5865969bd1a04e245c84a0766ad7edf7faaa7724a383a9c59d824b14954848ed",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "f7037bfb9c6725dd442083ca8fe0b7e2580df4904df1004b620cbfd03a6f53bb",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "c66b0adade0a8772c5c5e3fe0c5a939730c0eb9ab699e7c20b847e5f9d21a897",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "f2e9ca6f14969d85128398a8e992923c53b27a68a044c562d19a258394341aed",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "858d7088711c39dd6ef193167f3e9540cd842d3d7f0c9e2f7deb1917ca7c3cc4",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "32246e2341f24406e85bbf4b3df20bcfd4979926d322c894f040de2549aa36da",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "2a62fc82b2d4aada178d3befa24062370e3b90ccafcae836280cf916e7738bd8",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "a8e3380ce7c90e6002988d17d95ec32880cec07df65c51f6b46b99cf6570ff92",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "be7809e671525de66635623868433695658eca30c52a16b11cc7c3c17fc5f58f",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "964f5b664d6372c319eba64573b6b6d28ae68bc51213bec0a410a68b1720ee89",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-foo-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-foo-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "748eb0af657550206891d79519d5f13f82d2acc7199d8f82cc899d2c0b586fbd",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "dc1a9217c232b2305800bc01a6efda2022ed64bd904ae79a8964e2072f76ec44",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-foo}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-foo}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-foo-test-connection}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-foo}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "544e3a4ff35acbbaa10da884121dd89f0082b97df277ef0a3634512471297c88",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=foo has limits defined",
					"actual_value": "spec.template.spec.containers.name=foo doesn't have limits defined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "c6495e4b63a964000dea7f901c1065cd7639fb9f9ff035adeb7d3e9d19ac1fff",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "2ad58c6558aea656b3f32b2294456604c83c2f2bb415f72b482399d15777f110",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "242518863d01e5cc47c7ba98e086624d3cad35358760894a81d0e736324b40c7",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=foo.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=foo.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "c6e1aa75c8757e4b5d112d8c3036ff76d3a106a12e89aefbdc8c2c526868b818",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "c3ca773ca4b5c0d5867b1e6313228a990a6748f031a018e2293fd010c440195e",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "858ebaa6b818cc02988067b5163f7a5677f583fb44b1db46dda48e73040c5caa",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{foo}}",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{foo}}"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "43a0fbf1afff5963bf786e003b0f08d402815b01abb03a3b7007c09f8365021a",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "fcd08899ee340f4d038de17dd6d8c6d984365f5ad1f4a2fe89193f4bf5996f4c",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.containers.name={{foo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.containers.name={{foo}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-foo}}.spec.containers.name={{foo}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "b1baa8f4caee6c17746ef791e42b6c9ab491bd12a9d931a54895765f567d2cd5",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "2d25d037e582c0528f137d1d7c98738bbea3c3b07fe199e1f9330bcedabea852",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-foo}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "0bba348945549c303275176aeb73a6d462ce6b67ee020056529a3c1aedc686bf",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-foo-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "89093622da18053b4b2bebd2ec523b7a33c41816655312a35ef2b16706f1911a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-foo}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "b437baedf4f41cc6827fcfd887dbcd233a26f7d3005082c81e4564362cd0b9ae",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-foo-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "4797a353f1c0c23a0337d64edbaecba212bb3a9549e4e18d758179d74eba6ad1",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "b3b9907a8225c56daecbfd44b1de1c7e2f47dd7ddabe371eef05f1a66b45a8da",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "b011cef71b20d6c7f9fed52fcdb9b4a149ea19522bb46c1ab15030f6c2dd45fe",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-foo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-foo-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/foo_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-foo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-foo}}.spec.template.spec.containers.name={{foo}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
