{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 96,
	"files_parsed": 1,
	"lines_parsed": 93,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:10:00.154752+02:00",
	"end": "2024-05-18T00:10:02.089784+02:00",
	"paths": [
		"templates/kafka-ui_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "33fcabdd1dacbf653f02f0b220c19f97753b08d1a9dd017952d465f386a49baa",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "31a5af45b5826fed19ed39d0cb3c02d49c5cf2ceaa846047a18179ed4b3c164f",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "496d01d1d887b6c2d1753603d8db00983011ac37cae3968d88e92485ae42fb66",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "03dd11a2d9a926314ea338f7e1cc240d727e0560af3f1f8358cd4cef561eab2c",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "09406ba9363db6604296b28d4774e92da2a8cc687078a1a8afcde1b1d83a1f0e",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "b094837ac3def450da13513c90e33dd4e313013614fef5e6a78619a95114da03",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "6492073725e2ddae1ef7a80ea60245ee1608e13ad3fbef4b461ae749d273d3eb",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "f28483ef3b5e2dd391c22bfb7ef3527fd757d1d7ae3092418a2c6634e02aa73b",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-ui}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-ui}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-ui}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "e3f970ea88cfb9dcf491561fe6e090a2d73bd4248ac90b173ec87adaafe2ad70",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-ui has limits defined",
					"actual_value": "spec.template.spec.containers.name=kafka-ui doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "7af93a3ca789efc0b1a5aef1cf7356ab496517af8972021ace0535b4485d3191",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-ui.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kafka-ui.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "89ce1efeacbe5956b007a0e86512c0abf6e552e59f129a34a1e96fa52f8c94b9",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "31048ba18921b24ec8a03c16e141053f2373100e3e2dddc7afebcbe91b35717a",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.metadata",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka-ui}}",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka-ui}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "9cf69e878c3079803b9b4cd310ea530a04325ea4b114cb29570fbdbd23cf5207",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.containers.name={{kafka-ui}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.containers.name={{kafka-ui}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.containers.name={{kafka-ui}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "f1a7d4b2eae3b28c2e52ebbf9c9a640af0beb2ab75126f20fa287879bbd65bb7",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kafka-ui}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "4e24c2fe5773f11cd6a50a8d46812ddf618cf0a9091e85e552088f9757043dce",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kafka-ui}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kafka-ui_template.yaml",
					"similarity_id": "3ed5f4e5f4c2df79bfdebc5120f99ab60df71b2cab7144f75185f74c3b319c70",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafka-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kafka-ui}}.spec.template.spec.containers.name={{kafka-ui}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
