{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 61,
	"files_parsed": 1,
	"lines_parsed": 60,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:35:40.801233+02:00",
	"end": "2024-06-26T03:35:42.857704+02:00",
	"paths": [
		"templates/missing-container-metrics_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "f644674f0ae8b49959b3fd8c805e003bf95ae2d773eced0e0517c9c615ec7df7",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.volumes.name={{containerdsock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-missing-container-metrics' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/run/containerd/containerd.sock' mounted",
					"actual_value": "Resource name 'release-name-missing-container-metrics' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/run/containerd/containerd.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "80d2ab2e2896ca0701aefeb733a1c189f20534dfb25934596471840edf601597",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "576779ab4e6cfead2f3e72b90e1e9266466d4f3d3ac912fb03b124ac411db9ed",
					"line": 59,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.volumeMounts.name={{containerdsock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.volumeMounts.name={{containerdsock}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.volumeMounts.name={{containerdsock}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "2a8d58664749feb374325cbcee4b461e79ae5ab0e5299badbaa0cba3223d80d1",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.volumes.name={{containerdsock}}.hostPath.path",
					"search_line": 32,
					"search_value": "",
					"expected_value": "Workload name 'release-name-missing-container-metrics' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/containerd/containerd.sock' with hostPath",
					"actual_value": "Workload name 'release-name-missing-container-metrics' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/containerd/containerd.sock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "48d558de638bb7dc82fa1d898b828d30ff978d48489384ba972bd5854b4a3a90",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "a7c41ef0daa838fa023514744c8322745166e0f60841257cb8404b71d29b233f",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "f66073a29f83332ebf8bdb6436d76ee956bdc9f8bf256fbff44b5013dd07dfa0",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "5863cf5ed9a3b6e5f1fb11a9bafe39cc39a39e13c3051b5ed4b6ac89851e70b3",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "18f186628fd9451ff0f0d3c13a4521add9d0be3afaac34cb50a2f4239b1232fd",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "5c853b5d03ff8d76e1b1334631e0add0c2cda6fb8b097581c459f5dcd2f72003",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "241e26c93986abfd0478aa155f73ddb859d4f5cdb0d8687e7e2a54d2b56cd296",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-missing-container-metrics}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "c9542056556bda21263a9ee3c9dfacb7ea9d3dd52731074c2323cf293cbdc66a",
					"line": 56,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=missing-container-metrics has limits defined",
					"actual_value": "spec.template.spec.containers.name=missing-container-metrics doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "c7a3bde67083d9d9063b23baad859e172e3c5927278b707f772ce17071d5f88c",
					"line": 56,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=missing-container-metrics.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=missing-container-metrics.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "866e53b7ec9c24cf16c3a1f4cbdb676749b0ac35b7087d60c58225df8ccd31da",
					"line": 38,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "5337280a2097aecf1ed21a913bc843d97f1afc8c0cd54b55323cd32a1e409b4c",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.metadata",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{missing-container-metrics}}",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{missing-container-metrics}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "1c65c18f3375122c533a4e947de95e886ffe2c5e0ea400f78a452ece3c68f1ca",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.containers.name={{missing-container-metrics}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.containers.name={{missing-container-metrics}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.containers.name={{missing-container-metrics}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "4a11a2e8f98ccc19ff058d40d6bbf86e6c6544f3ed46cbd8234184489ef53bcc",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "4ebadc649172b8446b18aa6d98f15df179e13b281d6e79bab17991a8eab32132",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/missing-container-metrics_template.yaml",
					"similarity_id": "51747e717df763aa82d1f5be7e8a10cf129c65cf0e245a6694dee1b5fa154918",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-missing-container-metrics",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-missing-container-metrics}}.spec.template.spec.containers.name={{missing-container-metrics}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
