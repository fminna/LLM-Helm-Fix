{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 204,
	"files_parsed": 1,
	"lines_parsed": 200,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 35,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:36:41.034246+02:00",
	"end": "2024-06-26T00:36:43.158942+02:00",
	"paths": [
		"templates/its-query-rest_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "6f2527910d396cec65ed8692fd02a8f3a4a93aade85be18850a5ab211ee9ff1c",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "61d5815af2947fbe27d100d0461c761c0b3340d32a27a9e818c5a45d65e9c6d8",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "c65eb2d2e2c67ad0bfdbad79f1eed5868d528c42b1af88032476d6c0dbd41a44",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "f5ac2e2d9f703ba78f2e0935344f333efa5f857cf15fb4a6911302260b2ef5cb",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "4353d618aedec4dc0cdbede49faac4293b712861ab7f747c56655e356ae87a79",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "3afab122556024393e0c803cfa18095265c53afa5bb778b0b9d65599e31401ce",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "4a088c5b48bd086027bcac4b29cf7c92358d521242935a6012499a444dc6a5c7",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "d5d85503829a01071a58eed968ffd8b0a738df6735cd98ad96f8663e9c0bebcf",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "12e37b277ae4475f3dabd6babbd35021acbacbbee6da866072adcffe45efd1a3",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "74c05fdf861a2f37783d99b5a6828b2f509ccf7b8577cc3aa26e5fcfb84f47c1",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "6588829c2b15d9b3ca8bbc819ba513023d06c394b94eeee90519910eb3f37fe0",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "93514b3781369e3753f3aab04766c8347b8df850632e4a6ef5cb3376a3917c22",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "4261828ad74dbe12ef0314501e163ac50647f9317d06ae908ece3d226c566f82",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-its-query-rest-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-its-query-rest-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "bf057f65fbf43778e021fb2b791eecf09b6ca038e5084ba975b140546bc1763e",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "3d7788f5b18a07176996b58d7696438343ef3d4b4c421e1d0af0030e180ce5ab",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "d6f9e57544869f90893be7d6d9c756b4112e70993784a9e7a75879056770649c",
					"line": 188,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-its-query-rest-test-connection}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "3cf3ac47777ceab9c25c39c94ab277c849af38d7f1cb3c8647b2a09625f01fbf",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "4d5b66f1b8d5ed530a89a7ce8dc238762ebca1d6b19cd4c56207aae689665f8d",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "c741de28facf03703268b72de932622650bb33c130f14f3ae252e15caa04122c",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "a22446126ff3897bf8fb855195ec270411fa6b613fec6e885857e37110ad2008",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "fd8027bdc8728ead1ddaa8de3e2447e2ad0167122e6cb860d234b5ed4a85d597",
					"line": 188,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "0361875f04f074e8a70536816c4d808a7e352960e89a55921c594f8fe4af0179",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{its-query-rest}}",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{its-query-rest}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "0b2134a86abc391861741db31aba6ae7d309756595c3afe769793594e3080c9f",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "58f076a463ccece3206dd52d0d22f0882839221cd144de2c2b1e3a3370a6c11d",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.containers.name={{its-query-rest}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.containers.name={{its-query-rest}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{its-query-rest}}.spec.containers.name={{its-query-rest}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "a4d8464600cb9e2008e534d6ae0a3c5bfdf4908f806d48d5e55ab2c0241c177e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{its-query-rest}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "f78f41ce51c64e6d4a86028c5cc63053ce0eb90f924038f348b90a2555ef018d",
					"line": 188,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "f8dae1269652e6ecc85e101c80dc2d983c8c3d64521eaf1733c24f149d65013e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{its-query-rest}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "df6bca60d4be22ca23632084e925412a26a81324b7413feeee4198f129b60cf4",
					"line": 188,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "33a3358c4ec6111e486c2fe8fbac1cd46ab31d0f12ef613226dfec730291de03",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "18d30e2665dcbf06d740d3bb584c2c62a51b562757fdea90ae0b948f630172ff",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "f089c5ea90fce8e32c9b77cc014886c950432e1dac3f7d90a640532128a59fdd",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{its-query-rest}}.spec.template.spec.containers.name={{its-query-rest}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "fc849cae54de1e39afc24cbe7616802e9de5386f1484338969f90ac0c2174221",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-its-query-rest-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-its-query-rest-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "bce30a040236d4be3c78a776c5b0a8dd7f096b944d73831d2a3de18eae52a267",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.env.name={{SECRET_USRNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{its-query-rest}}.env.name={{SECRET_USRNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{its-query-rest}}.env.name={{SECRET_USRNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "c053ef74cedd2b85ca839cff4c2c9f6d028b259c2767c1b304903cba47417514",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "its-query-rest",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{its-query-rest}}.spec.template.spec.containers.env.name={{SECRET_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{its-query-rest}}.env.name={{SECRET_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{its-query-rest}}.env.name={{SECRET_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/its-query-rest_template.yaml",
					"similarity_id": "1f0fff96bbe3f405a7f42812a96bb7b9c420df85cacd0bbc359b188e32732618",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "release-name-its-query-rest",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-its-query-rest}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
