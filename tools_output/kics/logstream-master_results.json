{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 152,
	"files_parsed": 1,
	"lines_parsed": 145,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:07:14.722552+02:00",
	"end": "2024-05-17T20:07:16.615754+02:00",
	"paths": [
		"templates/logstream-master_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "aaebcb2143ff9a97efb26129f03acdd518f39044075c3e50725f8f92e955c5fd",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "16053ca39df1136b12e3dd6a3fd57b2afa69ddd83bbb3a520a4b548d8fde287a",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "4dffbecdfdb282d9529ce84cfd09eb4d18e2b2dba09241168c3d85e460f32304",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "8717439b5d6b0268703b0e72324b5031a49b0898d9683b0045d8241eda680cce",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "b1c7cb36a91e6af9a52e63493baec8a8dbb49f1fe3826f41a6d689d7cc5c0e8d",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "063c54c310f8bf165f363ca1450a582733b2671ab6fec5c3dfd068ae42fff3c3",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "5b1668fb8f741b7e291e5930e2ea33991ffcbd4d506b8c020448aa7b9048741c",
					"line": 65,
					"resource_type": "Service",
					"resource_name": "release-name-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-master}}.annotations",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}} using an external Load Balancer provider by cloud provider",
					"actual_value": "metadata.name={{release-name-master}} is exposing a workload, not using an external Load Balancer provider by cloud provider"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "9c0f01409f583f223c569b3f1579695f958c78932cd1be2987a9a027acb83574",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-master}}",
					"search_line": 84,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "Service",
					"resource_name": "release-name-master-internal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-master-internal}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "logstream-master-config-release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{logstream-master-config-release-name-master}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-master}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "f83bde881df6810b331770949ee8ad23a50804183951abb48b0095ecc5e52cf7",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{logstream-master}}",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{logstream-master}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "5b76215479397240b3bb2404d51dcdb5db0438438e44c3914214a4882c9aa02a",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.containers.name=logstream-master",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.containers.name=logstream-master.securityContext should be set",
					"actual_value": "metadata.name={{release-name-master}}.spec.containers.name=logstream-master.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "68c555384e410a6fda236a7813f1e95a61d59ac37e9818855e4bfe3f6ebfd007",
					"line": 14,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "config-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{config-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{config-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{config-claim}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "ae142acfbf2d709e3e69992b04215391a0dbee5fbb1f9bba3cf4d80f4897265a",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-master}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "73df7dbb475b69b631b2823068d8a883051f59ec1ecc592a1b9d4b1c74fd98a1",
					"line": 14,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "config-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{config-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{config-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{config-claim}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "03bfd606196533f170c80f267293d65bb376d93f595a7a432fa87bd3844b9ad2",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-master}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "c43a9497c9730156776718159d8d74d8d80966188ba6780019d844de01522f97",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name=logstream-master",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=logstream-master has a security context",
					"actual_value": "spec.template.spec.containers.name=logstream-master does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/logstream-master_template.yaml",
					"similarity_id": "23db746ed064d545beadc6482e29f9c893218c981f8a9c09dea637c16b53f28c",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-master}}.spec.template.spec.containers.name={{logstream-master}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
