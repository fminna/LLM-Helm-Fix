{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 375,
	"files_parsed": 1,
	"lines_parsed": 366,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 8,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:02:50.908957+02:00",
	"end": "2024-05-17T22:02:52.911176+02:00",
	"paths": [
		"templates/shoreline-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "431d2e3977f7b1852a02929685ec497681c5646162f57520d28b6022931e5ab1",
					"line": 366,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{host-ssh-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/home/shoreline/.ssh' mounted",
					"actual_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/home/shoreline/.ssh' mounted"
				},
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "4a838ea632e8f89018d433bea98ee57a00fab20b4f987419e623a98b5a9cacf8",
					"line": 366,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{varlibdockercontainers}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/lib/docker/containers' mounted",
					"actual_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/lib/docker/containers' mounted"
				},
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "876dae6459fbeab9a83d0cd8d1104284cc63e7588d4eea912bb038eb7012f1e3",
					"line": 359,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{varlog}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/log' mounted",
					"actual_value": "Resource name 'shoreline' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/log' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "3f8d7c519da72db74322b237010386135fb555f092d4b45ccbb5241c8b2fa608",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "4e3796fd514bb3c5f609abfd9a4f83ec3b9220f9e867b3eed69fe65a26be1723",
					"line": 338,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.volumeMounts.name={{varlog}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.volumeMounts.name={{varlog}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.volumeMounts.name={{varlog}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "352c05f4dfc096e609248b0299763398c72e31abedfb229ac193ff8570a634da",
					"line": 359,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{varlibdockercontainers}}.hostPath.path",
					"search_line": 359,
					"search_value": "",
					"expected_value": "Workload name 'shoreline' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/docker/containers' with hostPath",
					"actual_value": "Workload name 'shoreline' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/docker/containers' with hostPath"
				},
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "45a5a30e09cd8636c9df071f90474d92e0803b6a21e865a539e6faf871a4d0d1",
					"line": 366,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{host-ssh-volume}}.hostPath.path",
					"search_line": 366,
					"search_value": "",
					"expected_value": "Workload name 'shoreline' of kind 'DaemonSet' should not mount a host sensitive OS directory '/home/shoreline/.ssh' with hostPath",
					"actual_value": "Workload name 'shoreline' of kind 'DaemonSet' is mounting a host sensitive OS directory '/home/shoreline/.ssh' with hostPath"
				},
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "8954042201bc112391c9fbaa463f911700fcea0fd4130e26c817b560524043cf",
					"line": 356,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.volumes.name={{varlog}}.hostPath.path",
					"search_line": 356,
					"search_value": "",
					"expected_value": "Workload name 'shoreline' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/log' with hostPath",
					"actual_value": "Workload name 'shoreline' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/log' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "c61d120e57b53fecd1680a64677fc2aaee88f54b2628978d9ca4e5016e83e11f",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "ab6b2eee029f6ad6135a80212c60b896bbbdfe0239f87992bcc5d6105c18ba39",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "894d291fb25bb1eaf99e9c280f70d191860b6938baa33a3110f61ea8a70678e1",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Exec Permission",
			"query_id": "c589f42c-7924-4871-aee2-1cede9bc7cbc",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles or ClusterRoles with RBAC permissions to run commands in containers via 'kubectl exec' could be abused by attackers to execute malicious code in case of compromise. To prevent this, the 'pods/exec' verb should not be used in production environments",
			"description_id": "c589f42c",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "255953f0814224ec77567282f759aafd39812b0df24dc9793d40099cb88a5d4f",
					"line": 180,
					"resource_type": "ClusterRole",
					"resource_name": "shoreline-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline-agent}}.rules",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline-agent}}.rules[2].resources should not include the 'pods/exec' resource",
					"actual_value": "metadata.name={{shoreline-agent}}.rules[2].resources includes the 'pods/exec' resource"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "ff93f090b7e947ace77a62a21653597005d595518f9e820d93f85348a9d0daaf",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "abf7e24f9895f86c433472aa9b1aa323219e0890c1ee42201f4ef6f0b7c54494",
					"line": 261,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "f844dbd8ca575f3db8d8031bb020883108631e840bb0b8f78d384f4f1720160d",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "620cbd2a14b8d761f6849ed4d3f8218f6af31144c9b3ef1b1791ef25df183347",
					"line": 258,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{shoreline}}",
					"actual_value": "metadata.name={{shoreline}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{shoreline}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "303278307ce42eee642cfce2cf1a727bfafa1476346a985ff58d2ec95de289c9",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.containers.name=shoreline",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.containers.name=shoreline.securityContext should be set",
					"actual_value": "metadata.name={{shoreline}}.spec.containers.name=shoreline.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "b10d0488b7c49d8596899f916559d9aa45edfee1021f48fe3248da17e1f8ddfc",
					"line": 252,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}",
					"search_line": 252,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{shoreline}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "67d4e551459e86950635d0b8f560d1b3097c3195586de3f3a8f00581b5fb8552",
					"line": 252,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}",
					"search_line": 252,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{shoreline}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "064d86f342b5079d32efcfea24cc8686edc92189c8e4e4eefcb516774da14977",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name=shoreline",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=shoreline has a security context",
					"actual_value": "spec.template.spec.containers.name=shoreline does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "8f3ca03af092b49d4c53d5e94c4f3d71acfac2396a00ad8dad8c4989beb426e5",
					"line": 307,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{shoreline}}.spec.template.spec.containers.name={{shoreline}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/shoreline-agent_template.yaml",
					"similarity_id": "174c159f8275e593cb2e6642486d3245806d702a24e2675876abd3497b3e61ec",
					"line": 296,
					"resource_type": "DaemonSet",
					"resource_name": "shoreline",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{shoreline}}.spec.template.spec.containers.env.name={{SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{shoreline}}.env.name={{SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{shoreline}}.env.name={{SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
