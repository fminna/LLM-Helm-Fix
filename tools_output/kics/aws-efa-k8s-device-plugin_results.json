{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 168,
	"files_parsed": 1,
	"lines_parsed": 163,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:33:44.178215+02:00",
	"end": "2024-06-26T03:33:46.322193+02:00",
	"paths": [
		"templates/aws-efa-k8s-device-plugin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "8f57f17f6e33b67d61f865f6faeca97036370c334585845e693e249166fcb112",
					"line": 167,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.volumes.name={{device-plugin}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-aws-efa-k8s-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/kubelet/device-plugins' mounted",
					"actual_value": "Resource name 'release-name-aws-efa-k8s-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/kubelet/device-plugins' mounted"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "85457c18fe6a7b9d87302b1ef87a250bb0de23d6714fdd63dfda328e4ff94d70",
					"line": 162,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.volumeMounts.name={{device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.volumeMounts.name={{device-plugin}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.volumeMounts.name={{device-plugin}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "167154a00d06b26ab19b5813c5215ac77d79e432eb145424bd67c10834a0af10",
					"line": 167,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.volumes.name={{device-plugin}}.hostPath.path",
					"search_line": 167,
					"search_value": "",
					"expected_value": "Workload name 'release-name-aws-efa-k8s-device-plugin' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath",
					"actual_value": "Workload name 'release-name-aws-efa-k8s-device-plugin' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "bbc56be141213f44e3de44b36d848b415addae7e6f6929f29261438e3a506877",
					"line": 151,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "a81ca24966c30322ff44eca48e6904c9477d6df42a55c697f324c51b83f8050b",
					"line": 151,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "ff267e32e9a9fe3748ff89d0d7bf155b1de8d3d792b18163ef73fd0bc443843c",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "27df0fe6717095b3d70c5529f98a2a5798c9aa1c92821c0336c608e1bc7b3a37",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "2212a4a3df5a3453b810e82961dd456c3798c59dd59b9ac3c313a78a77eb215b",
					"line": 151,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "becb75a1a4963c9fb279aeb4fe2161ae1dbc6b5bd98defb7019cabc6dd135413",
					"line": 23,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "e4b278986d94d1890c806198f8a9eafb0cb508e996f7bd2fa0b78829f71842fb",
					"line": 147,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-aws-efa-k8s-device-plugin}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "7aba363f350013293919cb16f0ccabfb5559463aab2134196b17f4de2ed3d745",
					"line": 157,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=aws-efa-k8s-device-plugin has limits defined",
					"actual_value": "spec.template.spec.containers.name=aws-efa-k8s-device-plugin doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "31473d47e6dfff5c1b88c94a649e73e4ab0a72d7939ca53bdcacc8d7272a43c2",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "db1ca75db17035f5313c966e29e7cf5d7033c269188c44ae59e219c4488e7b63",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{aws-efa-k8s-device-plugin}}",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{aws-efa-k8s-device-plugin}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "458db87dd99ae29821eceb6df0e10e957d3c7cfa19088a2204b1726a966779ec",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "b22ffc4dd13fa30253ff0751dab25ce610d69991bee10646ef3a00de0d846ad5",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/aws-efa-k8s-device-plugin_template.yaml",
					"similarity_id": "30c214d1023b30a741244822aee5bc584ed0e1aca91a545e1c77f1287fb7d73e",
					"line": 151,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-efa-k8s-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-aws-efa-k8s-device-plugin}}.spec.template.spec.containers.name={{aws-efa-k8s-device-plugin}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
