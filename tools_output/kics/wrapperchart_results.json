{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 170,
	"files_parsed": 1,
	"lines_parsed": 161,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:30:29.66884+02:00",
	"end": "2024-06-26T03:30:31.810823+02:00",
	"paths": [
		"templates/wrapperchart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "a61602f84e63d71b06906f7dff04f1af9824b7acdb53bd0ac73b46ab4b5c8033",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "6daab81fd0de7a5513785f2a2ad20c67dc804b9cf433b88b3d08ffb6ebef4c74",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "790cc22a1faae844a4ecf1704512f2542162468e6075427f957bde6364a40d9e",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "8af346c854a8a2b01bf10b5fbe1cf06b9c7988a6194c51b8b6cd0f9f41055d49",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": 146,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "5a226ace7287b8191b98560c0d340ea03363c3602de1b16d4e342d3063fe2ec3",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": 147,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "78ad1a22c5fa734a773590980e7f400e093f46830afa6ca4d23f32c61ad99689",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "dec0fd6c63e4db7963b26236539f0468bbaaaef7ea2ac137773203437bff98e0",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "ca59854edbaa7d3d1d16930990b84b339aafe0d0cef0fb0d83d15e30efa39200",
					"line": 45,
					"resource_type": "Service",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "release-name-nginx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx}}.namespace",
					"search_line": 46,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "9c94ccb8c5171ba0e27fa3e7950cee4d3b0d07b9e68a83d5ff51d9c8e6bf10ae",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx has CPU limits",
					"actual_value": "spec.template.spec.containers.name=nginx doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "95184b9cab120a7c6c1a422308886d9837259f354635520d6ebc13ed064b9083",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{nginx}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{nginx}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "f1ff589dff0d31daac23cbd04389fb8b478e87d13882abe673fadc2b4677f212",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "c675b59643317894819196c535a1bd07c19b332340cc8729342cb37e8a8b2b2a",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.metadata",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginx}}",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginx}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "c8062509c660766fdc5debbf9acf81bd43af8f5035981cb3e12b3806af10b93b",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.containers.name=nginx.securityContext should be set",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.containers.name=nginx.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "faa86da708589c9bc83170fd3c3531856852e94605faaad13c667582c6d55213",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "008607919ecb73c3c9fb1b79705f09ab32f8ad8a970023f639cfc57df74f387d",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "afe957b5ee49c7663a4eba25bd78e66b48343460b174d2fc4b40dcd5c98972bc",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx has a security context",
					"actual_value": "spec.template.spec.containers.name=nginx does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/wrapperchart_template.yaml",
					"similarity_id": "11c5f7be868ce8e21f39194b33cca6975c027f1284a066cd67d58ebd3b281981",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
