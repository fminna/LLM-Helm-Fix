{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 49,
	"files_parsed": 1,
	"lines_parsed": 47,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:06:40.889753+02:00",
	"end": "2024-06-26T03:06:42.876626+02:00",
	"paths": [
		"templates/simple-redis_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "9ffa46a4b930c83c5cbff4f6387cbcb5dd3b5749c6dbf4732769edbb3b3440eb",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "6f2bd9c022487507661250ff69f20f6a466d6367c897273e8fd329aefd4fac4c",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "352a021202e5ace9d2980fac7180be66b5d5db88608edef73a3cf80161a14d99",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "9dff70c3d00dbe7a9641318e6f5800f0ac80c770fe4f8aae26c46a48b0192c31",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "e92b5905ca6f643628eaaa3b688f5e1bcfebcb3cfbcfd25c5ca931b6bb6c944e",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "2e7cc13cc1fa5da0a81573f15bba233fa27c26363c6db6f40b8cfb3c5651dbc3",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "cda2e884704c1bd4b1b13f6a83d582108b070458ecd774c3ca490ab79ec4403c",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{redis}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{redis}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "fd3a8a8910c7d01879228f98dac976fa37efb0f75cb3110851ea25f864a05ddb",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "895bc390bc11d172fc1124fd63f75c49e4228826e383a6161ab89ff2cfcc6685",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{simple-redis}}",
					"actual_value": "metadata.name={{redis}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{simple-redis}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "ece54db8635dd225531c0740c9753619b652d6133ca08e9af95a2a6f4b7b8131",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.containers.name=simple-redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.containers.name=simple-redis.securityContext should be set",
					"actual_value": "metadata.name={{redis}}.spec.containers.name=simple-redis.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "d891783238ae8e2e5c52570bd8497e186dfc66f87504598b4163addef42a6b57",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{redis}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "593c4fef535a6f87d09c44e0ae35e23ae59afb96fd3a9702bb736492222a6490",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{redis}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "0b1935fa141826c5a9a56a36001109688b67db5c677c173fad14d87b3f645ebd",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name=simple-redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=simple-redis has a security context",
					"actual_value": "spec.template.spec.containers.name=simple-redis does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/simple-redis_template.yaml",
					"similarity_id": "5b82a259bd2945def466a03f15db724e51e7264b20c5f10323e5f800737edb97",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{simple-redis}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
