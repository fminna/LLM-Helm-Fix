{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 104,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:50:49.767711+02:00",
	"end": "2024-05-17T22:50:51.681501+02:00",
	"paths": [
		"templates/strongswan_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "ba7a17a017a9dab75363c40ed0c7b4938ba7ff5eb33e97a90b002cb26fcabf9e",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": 65,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "63a59bce8d80400337dbad24d3894ca3fd3e36ae56ad6d7f681d694dda5c3e33",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": 65,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "b58cff6edc4e049e5a7150467fe4de1b3721cbfb3fee83ba390f6a745a037fdf",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "037e8fa78533ee0b1a3777cc3c87aafd7effcdc2355df51b920e31363de1b15d",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "c6da93c791790ea6e30cf2891509348ae7073b9e687cc2e0e562733c4fbe1f2e",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "5a274eb0f3c35eda1ef16348700f4667eb23a0dc4257091c22ee7ad499ae7be6",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "c18103757255714bd5b4ae0c742b2a0cf4aebef5718336314499381ff95905a3",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "5dbbfb1d028ada1008c916cbb25496a222e768a8704e00c810a1e9f24ddd484d",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "ce3ec90793148cd4399a432432d724df5bdcf635262cad06d51bd0bb395ab648",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "e727109f346867279090661848db7c3da407ffd66323f03b832cf97c633e3650",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-strongswan}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-strongswan}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "2fbc43cbf34fc05466a8d7370f956d580c871366bc22423fbf133a63a12fa17f",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name=release-name-strongswan",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-strongswan has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-strongswan doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "e68280da49ed2e1ab91a58bfed2e24b9f56e87d34a097617597f2b07156b0685",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name=release-name-strongswan",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-strongswan should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-strongswan doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "a98553fb64d95581d4e99151a9359728fed2cef4e5c8f9cf23f7dcbc6351e7d5",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "dc3e7765fef3fe45e67e7cfbaac796008f980ff22af49e1acfc1c3b24c7693ef",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-strongswan}}",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-strongswan}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "4c6084f908ca7b4c32b76e02f07c480baa31db04ef376e7cf4221218853ba2fb",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.containers.name={{release-name-strongswan}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[release-name-strongswan].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[release-name-strongswan].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "5d53fab5660ed171bf0b33ad00ccd2e1452ce18ed321808c6a9117c00fde901b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-strongswan}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "40b4cff12561ed87f8ebed60adcc3bdbca9e77a5fbd3413602faf04009a03d8f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-strongswan}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/strongswan_template.yaml",
					"similarity_id": "91bdd7bf79dedc9c9a7c39b3fc187d4b714a82853e0679702c277d3caa3c9578",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-strongswan",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}",
					"search_line": 65,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-strongswan}}.spec.template.spec.containers.name={{release-name-strongswan}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
