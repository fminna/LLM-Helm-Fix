{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 112,
	"files_parsed": 1,
	"lines_parsed": 109,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:05:52.65102+02:00",
	"end": "2024-05-17T23:05:54.631088+02:00",
	"paths": [
		"templates/owncast_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "c3838b7af48e2e7033df950573807821adf8dfefce9a090fedf697fc36181c31",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "98ef6cd885829c6b9777c07da68aef5e9d2abe9ed1d8b4687b74ec3c5f579748",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "b500f56cde5f3171d75cfbcc7280616c6bbcde851eace6557647fd36ab4054e4",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "67d14abaa8e3fee47cff9ac9c17754db797d9534ec463c2bb0deffe99dabf7ea",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "e19ef1ec69eff6dc897abefd3e73c9752aa84b6599febba3ea9a9f360ee7d199",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "43b691d435b8c8a660dda8d294d6ad814f5573f71956173a2b0df7f1bd47d05e",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "1d13481e8c50661bd464ac98161cc3cda02ce83c6b921e678ec2d13f0685b3b9",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "98c139ce078ca1d713af9a007b38ee55d8f81670280d73ba132c82b40f24ca86",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-owncast}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-owncast}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "release-name-owncast-rtmp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-owncast-rtmp}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "c5bf155d1be978669d3b7f3d396ff9d017718786b22dfea516ddb2138ccf00c2",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name=release-name-owncast",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-owncast has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-owncast doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "ac88ca56395c785cbf073e4d62775052cfff29b82636759846ec62f9171bf961",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name=release-name-owncast",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-owncast should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-owncast doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "b7fff2515ff7b4deb37dce2d001d30c04307c42ea278eb8d03ad0c4206c864c0",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "0417da9a44267b6135ef28da57d3102ee038ea413313bd83281f6aea359d8039",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-owncast}}",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-owncast}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "5b2f05934614d532a151ef29ad0d2025f44121db86ab04f2948bbad7454b7134",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.containers.name=release-name-owncast",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.containers.name=release-name-owncast.securityContext should be set",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.containers.name=release-name-owncast.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "d04e4095b2762e2fca7efb0b96a304c76c43d29e0e0f301b06725ae67995d3af",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-owncast}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "8011c4f4f4a54bbc836b5630b5351d7fe3ec6a8b6445c054e7d74da612825430",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-owncast}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "1621efc9dc6cf9ffa9785f84e3a761f2a5957237940b54528302647888a6e375",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name=release-name-owncast",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-owncast has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-owncast does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "819b23db41c977de2c4ee6763a9890556465e7e1e6465544a3d623ca3bd20a08",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-owncast",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-owncast}}.spec.template.spec.containers.name={{release-name-owncast}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/owncast_template.yaml",
					"similarity_id": "c70280caaf34d2f4017411b4dc7d23dc2823b4837e01ff746d64ad6b84112369",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "release-name-owncast-rtmp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-owncast-rtmp}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
