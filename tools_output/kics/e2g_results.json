{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 114,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:10:56.283393+02:00",
	"end": "2024-06-26T03:10:58.393197+02:00",
	"paths": [
		"templates/e2g_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "7c105c47c8639a5669dca8b0b5c13922f3a11883ecd1b5194bfccd3f41e0ba65",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "ba57622377b784cd598c098e63c6a34f847357afc15b8f4488aefd6f6431839c",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "52a8ac0055a64b5f954f5ca1dd23555ef4c94e9b0e27ffc4801dbd3c0cabdba8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "059d456d0c8dcb85aa5136b4812d68e4eabab9e2a37470938386855c23936c3a",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "b26b7fbc03dc8d3b4b13e504250f8a93238c0e2cdef33132405a135be2e6f0f9",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-e2g}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-e2g}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "41e63c5e85f684697e162448f872210dee906dd6204e25f504793ae02ae99c34",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name=e2g",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=e2g has resources defined",
					"actual_value": "spec.template.spec.containers.name=e2g doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "557919d209550ca11b5eadf67c56cba65ade519b77ec46a8875b4ae2fa06bdb9",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name=e2g",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=e2g should have resources defined",
					"actual_value": "spec.template.spec.containers.name=e2g doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "7a6a4ec3489601de2ad08407ae9c215af032f3c8b4970a39cfffa32bea0d6425",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "2edd5a887a075c2e765cd64c23f78035ed604f69116c855cc7c0be5dc1e3669a",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-e2g is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-e2g is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "73141f4c36cd91c377fb24117eef482e2836d9b854c2e0dc94eed4b292ebd9c7",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "90c3047cf54fd304487f422cb29fbc7ca0cd7185729c1119f385f59f9d429c8a",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{e2g}}",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{e2g}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "155b09ee8bcd736996397c35f312cfc0b9f6a4d5dec4f3aa173b70ebe6d64b9a",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.containers.name={{e2g}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.containers.name={{e2g}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.containers.name={{e2g}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "01992f90ff428c31c8dec3add42893ad7e574b67e19660a5cc2f37cbd7564cd7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-e2g}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "fd62488995a00d21262efb8865ba8a32d205446f5eb975a9fa955350ccc8ee25",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-e2g}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/e2g_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-e2g",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-e2g}}.spec.template.spec.containers.name={{e2g}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
