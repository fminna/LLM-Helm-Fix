{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 269,
	"files_parsed": 1,
	"lines_parsed": 253,
	"lines_ignored": 16,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 25,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 50,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:59:02.194426+02:00",
	"end": "2024-05-17T22:59:04.13516+02:00",
	"paths": [
		"templates/component-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "1871dd0c0f9050f5eb759d60054a13e944262f9a5c05c25ed006f9de5c8375d7",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "e14a2aea4839573e61376959b56c3b1ae0c889370ed972398b570233193b67d3",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "8c8bada2df61d7d23e5a5e26dc1785df5e838a5a373534a27e111c468b969fd5",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "26b1885736c3b7ec3facf9e9715c489dfe31abcc3f049061bc5273cbec8b7fca",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{environment-file}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{environment-file}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{environment-file}}.readOnly is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "d5795daa19e31cff275c24d1a0c952bfb5b4e5596fd86ab2ace2c165d7b49d77",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{library-environment-file}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{library-environment-file}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.volumeMounts.name={{library-environment-file}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "10e9e2bf29012f50a389dc9e3cce614e5eddc9bfd8a0326bcaf82f81aeb28228",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "e0593a6e3c9c0a411fbedb498d41bf3d01900240a69dae8b94b6d023c033d994",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "3b7beb97f6f2fbefde70cd678dd6ea8e31181b6d5c54a9c676e9389cb5cd203b",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "c96e9f138c2a03da1791528d170109aeccde5b3d5abaef591e0f87eda8c4a650",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "b2171926d22e98d6e932229d6b9e29a94694e4f33678923481037a60932dd646",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "63868acd8f300862853c892386d3098d0de573256cc35361305918812d16b243",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "39751bcdd793348400da3d5c51901cbb0388a162bd639c38f8e40c8665184c08",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "3d55d373f7bbc905751c132182036f5dcfb31551e701ef4ae0335b399679bcae",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "761160b357238190f4dac2f8fd6cd6ac2b6a90b3c427387bc564049abb90fda0",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "ed8d7cdd1266180af4a6f52576114cb826207885a4ef7b5a0734fbc4aac99030",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "cfc05354cd93e03ceb55f8d3baceaf55b7d797efc170f8be8d26319348f21589",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "ff3c76572dfd8d2dcae5bd333dd69a05a46438c4966a19b7bd20b1a67da68f8e",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "658b954b9310a1430605e7f809f3d23901fd8136b8e2553bdd1cb4970a20c45c",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "a02288027991fec9f0ce233a7ee348d5b1470f728e6c5cc2e88bf9a06618ebb8",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "53be3942dad28c87b3d8f33df1fe368ead1178e1c7e7a9de26beea56825ec2bc",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "cfe1246f32a811be1d65fca3c15f9e6ee2012e209c56e9e5fa13a7a8ad9ce276",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "9ef580c4b7832fba5537f706db0f320009b1ae9437bacca2e935caae9d881d89",
					"line": 258,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "28cc8070f4662d5569a5b168d6fb685e2ea83c4e6a6ee8bc5cd42d003608d850",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "67ab13477570095a8475656da5b2298a16a6d539d49f37c8de0b61af57bcf5b9",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "1c764dcbfb71d83c136b228986fd796b054edc060a14f4ed7a8e0f2011c39327",
					"line": 259,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.jobTemplate.spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "fc0da317c0a5897c941efa0ef91ab90c76edbfae0b57f0f718ff1d8287ffe190",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "7102a6bdd63c51d0816c80d63ee27cdfa3d0acd5ef368b02cb5a273a595b1940",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "8f8e7eda8eda8612c88a033de67c4278c463c53a74937ce4565f9a5e8e795f41",
					"line": 250,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "bcb775902604046f4a95943ed0beeb482abf3628580775afbaffa671b78e257c",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=component-service is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=component-service is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "3d0d291ca17fab7fac0c32849cb5963778e7a553641c02ebc1edd14c32c99fa3",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "fd377bae376b43d1a7356a717fe6b72cd265c013beeded345ae5083f011fc2af",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "f54f6892a7a07153dd37316404fe2be27912c30b4cb3171492d6916cbe375ce5",
					"line": 248,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.annotations should specify an AppArmor profile for container {{kubectl}}",
					"actual_value": "metadata.name={{restart-component-service}}.annotations does not specify an AppArmor profile for container {{kubectl}}"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "a5523affd3f923f1bc5a6b0ae5ac7e50265be20d119b742a9c46d3fbb69d80a6",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{component-service}}",
					"actual_value": "metadata.name={{component-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{component-service}}"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "a5523affd3f923f1bc5a6b0ae5ac7e50265be20d119b742a9c46d3fbb69d80a6",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{component-service-gateway}}",
					"actual_value": "metadata.name={{component-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{component-service-gateway}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "f621bec8f3533b5728a7ea4085d00097bc236c5f1338cc0bc7c02b1368e9f716",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.containers.name=component-service-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.containers.name=component-service-gateway.securityContext should be set",
					"actual_value": "metadata.name={{component-service}}.spec.containers.name=component-service-gateway.securityContext is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "86abd689e0cdc545f6ae9e9700118fd63a97d3eeedefa95b6bbcfa7d6dca1140",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.containers.name=component-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.containers.name=component-service.securityContext should be set",
					"actual_value": "metadata.name={{component-service}}.spec.containers.name=component-service.securityContext is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "fb60ba7151cc4e4d0bba5350bf85f9694ed6f9bff0b68426fee73c6b2b57c953",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.containers.name=kubectl.securityContext should be set",
					"actual_value": "metadata.name={{restart-component-service}}.spec.containers.name=kubectl.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "f1de674164da4074e1f3e2e6bfe36bfc69e7485c76b1018e09d4317e1f5cdd95",
					"line": 249,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}",
					"search_line": 249,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{restart-component-service}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "84990ed5090a3266edaa6b4cb9c60fc056bbf8dbc2793b2f1ed01ebef0dc66d6",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{component-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "95041ee01a2975a17102a824e607bca746cd68fb62ee8622c997e6f7f9b1b6ec",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{component-service}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "11ebf5fab4fd6a7204f1ff0f1df16a0dd679e1897cb36a47adbe0601a870cacd",
					"line": 249,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}",
					"search_line": 249,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{restart-component-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "33bdea353a2e2856313c7ad7d0505003d6aab3ace59960064eb43690b9deb445",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name=kubectl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kubectl does not have a security context"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "d76ffc18601d06726df66f6512a07d19afaa1c2a421e1d3b53b9ec26fdea0006",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name=component-service-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=component-service-gateway has a security context",
					"actual_value": "spec.template.spec.containers.name=component-service-gateway does not have a security context"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "5effae19d5e1c2a1be1ac17bfab06bdf0c5684de28d1cb03109f71e8b7c64653",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name=component-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=component-service has a security context",
					"actual_value": "spec.template.spec.containers.name=component-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "e5090d295976ad2bf829c45256f898258d282aa3b3e3b5ac34dbe324f8d9134c",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "65f82bb6d14e189eef934f9d7a7a187895ace8397d2619fa51921137ccee4c9b",
					"line": 262,
					"resource_type": "CronJob",
					"resource_name": "restart-component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{restart-component-service}}.spec.jobTemplate.spec.template.spec.containers.name={{kubectl}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "97637eebf60f9ea68823ecc75d1d58d36846ace6afe731fea35d4150a7d2cb72",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{component-service}}.spec.template.spec.containers.name={{component-service-gateway}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "724b3b1b3bceda38912b51ed40035cde87db218bf315e802ae59f299a33ce895",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "501bef80eb2c12ad8b29e7c0cebfdff55c5ff1e5d14e05651e1a281dffface57",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/component-service_template.yaml",
					"similarity_id": "889576a894c1bb2399f7a088f729b744d1b789aaf2f94cf436b027615c781259",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "component-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{component-service}}.spec.template.spec.containers.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{component-service}}.env.name={{AWS_DEFAULT_REGION}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
