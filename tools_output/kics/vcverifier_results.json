{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 144,
	"files_parsed": 1,
	"lines_parsed": 140,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:56:14.830804+02:00",
	"end": "2024-06-26T02:56:16.956464+02:00",
	"paths": [
		"templates/vcverifier_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "5e6a799b2b82bec6633727d7baf8016ab51aca1676a2e8d55ee6990323313421",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "fba9ed44f07f813eff2f16e4707196b88a30d212e7618e35750abf51004b4d88",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "c848da32c5da7fd0d3ef4e58fb6166ae39e2f4208f8e9b172816fd0f39fdebeb",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "d861aa630e5d7048c7d670ce12b5e4e00d76caecc309e3a7753bdef61d7e74ce",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "d166951ef553a2a25a6f386683e7eb87228d23c332bf7fcc0a4dfefea41dcd54",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "9ee77b7d8e8df6e51b88d8c065910029b7be2fb1b66b391e65b1052f3008cfa7",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-vcverifier",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vcverifier}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vcverifier}}.namespace",
					"search_line": 77,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Service",
					"resource_name": "release-name-vcverifier",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vcverifier}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "86a71b09e99786b30676ab7092cc40a177cc65de52f2b05d5b00e847b70b2026",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcverifier has limits defined",
					"actual_value": "spec.template.spec.containers.name=vcverifier doesn't have limits defined"
				},
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "5bcc50bec7c0e60ac68355f82e4533c4496991a9fcc345fd63d1a5738244d3a0",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name=vcverifier",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcverifier has resources defined",
					"actual_value": "spec.template.spec.containers.name=vcverifier doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "422d88a77109c8a720f2bcf8d5c8e800587717df40d59d3d7f24590da8696820",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name=vcverifier",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcverifier should have resources defined",
					"actual_value": "spec.template.spec.containers.name=vcverifier doesn't have resources defined"
				},
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "2a544bba5c82acb7e60b1592b643f919e40f59a9eb77e36e7f46b15ca88d3d5c",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcverifier.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=vcverifier.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "8f4647e8ce70032b3c9a55e53fb618bd14baa75e9b6da78ff9bc40508ed8d023",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "49ae2711724bbdaaa53e4afa506626829ed64f9d0053a3c7ff4c7b6d46c11458",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vcverifier}}",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vcverifier}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "ad68a097145bb806415502788b9f6d670968dbdbee3774df316547096e168b5f",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.containers.name=vcverifier",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.containers.name=vcverifier.securityContext should be set",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.containers.name=vcverifier.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "82839d545f33fc02ed935a1978d9036b4ee089afc94a509f99e6eccb98caaf93",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vcverifier}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "ce47ebb390eacb2fddb656a893e3d0e854b7988defeabbf4a23a9d09f2a9f75b",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vcverifier}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "b0e8cb9c9be315426441a3e65bd800804369ef70abded949089b04b4ca055480",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name=vcverifier",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vcverifier has a security context",
					"actual_value": "spec.template.spec.containers.name=vcverifier does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vcverifier_template.yaml",
					"similarity_id": "bde839881cee59e991da29d6e044f013f86c36a19c0612ef6a71ff23afb49b2a",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-vcverifier",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-vcverifier}}.spec.template.spec.containers.name={{vcverifier}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
