{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 215,
	"files_parsed": 1,
	"lines_parsed": 210,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:30:17.062023+02:00",
	"end": "2024-06-26T02:30:19.235608+02:00",
	"paths": [
		"templates/s3-proxy_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "01aba55e1b907aacf282b3ca4a234dab65f1e87bec5fa1a672b92f802b7e57a0",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "911f3b63e343ecbfad72e6e266580be797dde140a5c0d17036ffa7494c883c2d",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}",
					"search_line": 155,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "ae2c1941b56cedb6c21d6f0533561bc1f08bdc3ebe8ab510b5eaf411862e9795",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "eb4b07d83276bba42ea3336648b272a4333841ce22b40f795ba4d41b390fa2a7",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}",
					"search_line": 155,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "af62960fd864ef4675f277d00cd37d135a707b524ca296187487409681645133",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "fa3f3de553f477c29e09358ea571eb973703fadd7376e503959481330a74df81",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "13831892d28d44041ac5f5e679fa728d1788eef6aef3bb07e52506a415d1a9ef",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "ab59c9b5391a1148e451de02da5e4868067a7c59bdf1ee0ae8e0de77213554fa",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "b72176cce9d456a0e6d0af24ed9dd845dfe5ee631d720744a8916b7be423bb44",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "8fb0f5c87f4da9f9a728812817216a134512af73728c1956f5edc9de78fb6063",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "1c82eba1405a9ed7bd1e159c806dc7bcf5d30377b9f65b7008dbe864116dbeca",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "92035e99b35bf9a520d3e7c00f24329e5e0753b3377aea4d94acc3f16529fabc",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "651b4780dac2104029250b48126302fb673a328114689872eac74ad212438a32",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "c94789675fe8d2381c62c5bfbe51df916af6bf1a977fd444514eab69200e121a",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "475b0360ed4a6c4080cd1b1f3fe5f04abd64e6882a4c3d5c53df00a99185f574",
					"line": 208,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-s3-proxy-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-s3-proxy-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "110361dccaaef72366b9b906b7448faad3cd10b1ff2ab5f61cbe141d4ec4c6a9",
					"line": 208,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "6df163c0c8cb529400c6ea3be15220514dcb849794e1bab377bffbbc04e838bf",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "5cc30473f2dbd3540e656eda4b43e764e4306bff629e6829002b1ccc3b15dd55",
					"line": 94,
					"resource_type": "Service",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-s3-proxy}}",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "31e5f0f9b7c283b596204b0e9b042f6e4c4c68e343eea491a01d50d21da0a2c6",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-s3-proxy-test-connection}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-s3-proxy}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "a5ac0f727c1216d105b6a08455452170ca0009e014d434cea946b7e4acb8d60d",
					"line": 78,
					"resource_type": "Secret",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-s3-proxy}}",
					"search_line": 78,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "23c2f3ff75773ddfa70883f64c48deb4adf3a2ba72d006cac62a252aa4c6c859",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=nc has resources defined",
					"actual_value": "spec.containers.name=nc doesn't have resources defined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "e039c2b12f95a3ec1a55b9c16e6aa61b31432eeabee62ec8d80983d7d9f23c49",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=s3-proxy has limits defined",
					"actual_value": "spec.template.spec.containers.name=s3-proxy doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "73121c4c3cb561149d7de3df33088ff7dc747f939305ecb37984af13915cf231",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=nc should have resources defined",
					"actual_value": "spec.containers.name=nc doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "5f614f5efa3031d24bafda2d58b8b24e6577b93063a273087861bad30fc6eef8",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "f43e9389cf6733ef8da46959a38e556f41dd1df0c8cee59ee791fd3bf6a67398",
					"line": 211,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "9b0a849d31af3e2b6c7d566b55b8b32fa11258a36919a1037ea86a00ef8c4c50",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.annotations should specify an AppArmor profile for container {{nc}}",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.annotations does not specify an AppArmor profile for container {{nc}}"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "75ed1d343c0c7f6785b36fd1e451af88e8dc7079063d18fe40bf5b0df142a3c3",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{s3-proxy}}",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{s3-proxy}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "b366b64fc4a9f3e3f17d34680535d8dcd69cef3a1695bb490991110f89a16445",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.containers.name={{s3-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.containers.name={{s3-proxy}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.containers.name={{s3-proxy}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "1d09e948c14ee45d20fd5cc64557401b2dacaf736488b178a33e691e1bd6b789",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc.securityContext should be set",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "dad2d5c599863d404add3f055e5403fef3f3a6447b495823e67c0e0f2f32fb41",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-s3-proxy}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "a60fd86c93099a3c48612743a075003e070a7ff3f6d9d416a6e3f31a0e06c1c2",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "ea82dff59f3f53ddd19dc6302427177a3037fdab8f2d7a353152f1053343ddc7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-s3-proxy}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "66508565c2251c513d8ff80e6cf3494a90044f44f6e955c4ca44f0fff8384f9d",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "75b33afaa26fd208a4e3bedd8a532c78024462dfebac244930edd44ad220ff9e",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name=nc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=nc has a security context",
					"actual_value": "spec.containers.name=nc does not have a security context"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "624066a38b91437366169942392aa2b0313745666a880b54726b7dce98d551dd",
					"line": 208,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "9936b5f80ae185169f148e75ee5b93c83cef48fd351965fea454d27a18efaf79",
					"line": 210,
					"resource_type": "Pod",
					"resource_name": "release-name-s3-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-s3-proxy-test-connection}}.spec.containers.name={{nc}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "d943eb2dcfbd502b3c8ce5f5019b99400bcbfd259bd727a627253dba0d50d2b0",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}",
					"search_line": 155,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.name={{s3-proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/s3-proxy_template.yaml",
					"similarity_id": "b0bb6d4dac54da081dcc0caca61df1013538f1c108eb2319f0f5e8a6b8c683dd",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-s3-proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-s3-proxy}}.spec.template.spec.containers.env.name={{S3PROXY_CREDENTIAL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{s3-proxy}}.env.name={{S3PROXY_CREDENTIAL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{s3-proxy}}.env.name={{S3PROXY_CREDENTIAL}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
