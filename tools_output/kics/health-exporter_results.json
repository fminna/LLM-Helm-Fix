{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 103,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:32:15.322345+02:00",
	"end": "2024-05-17T21:32:17.209223+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/health-exporter_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "39f9a9d03a389992f17e075da2608c3e083a85f8818f7f458502830524e7c5f8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "885ab3d45d27f30d331f1f2b338e32a9c1c21baedd41ab6d312f9f600c8df563",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "235fc9709adbd9aa1886e2f781b4c208c58984a74dc2d6e19dc4b1c99a24fbfc",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "356a49798057d51fd01da70c869ec5f2bdc19eb66acf3dcaa8e74ce02e149f02",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "67ac0158e6d021d2496cceeffa89bb70147e4cba18eef3696575cc1967989b93",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "5ca18ca3cca3526dae4d1cb9b22e82ed730b900c2c15b6170649f48da42e48f1",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-health-exporter}}.namespace",
					"search_line": 35,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-health-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-health-exporter}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-health-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-health-exporter}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "ad7475c359d1a1b531a638fdea17b3492dd437900f2cc98537fcd9a3ff1e024e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{health-exporter}}",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{health-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "bb2c09752efbee596861ee04669f2f2ac0045c460ef46002f8296df14d2fcc1e",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.containers.name=health-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.containers.name=health-exporter.securityContext should be set",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.containers.name=health-exporter.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "d5cc2b67747ac0d6f1f8d23804d7f3033ff2a0a3d46f3d358c3d80bca830fef4",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-health-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "df0ea77496b8681143e1281b7380a4fada9c6967cae5f644370b3fbb774e261d",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-health-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "86d2fbe2bb0525ba9ba56e39619bd606c10bee96a1c58f7e981535c9e795d2d5",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name=health-exporter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=health-exporter has a security context",
					"actual_value": "spec.template.spec.containers.name=health-exporter does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "c0315b543f35da9aa6951eef52c02ff19652665e56dd63b6e690d4bafe04a1d7",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-health-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.template.spec.containers.name={{health-exporter}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/health-exporter_template.yaml",
					"similarity_id": "811eb7022984e1b8c5267c850a2e12578a373b610936023c40fcd9b87060b222",
					"line": 24,
					"resource_type": "Service",
					"resource_name": "release-name-health-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-health-exporter}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-health-exporter}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{release-name-health-exporter}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
