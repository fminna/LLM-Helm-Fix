{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 91,
	"files_parsed": 1,
	"lines_parsed": 87,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:27:54.673229+02:00",
	"end": "2024-05-17T23:27:56.558374+02:00",
	"paths": [
		"templates/airports-api_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "b7d2f03a1ba1dee9156cc83599e98488e79c73c0b7792b28b82cb49596f86e26",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "a47081ae6cf25e228351cb7d3addfed4344523e395f761bd2e3c2ffcbaa68481",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "0a825cb423bd93171b3caf9acd2876cca7b7c0c1d9535b67dd47b9321d0257d6",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "68b6abdb49c839307a4619ef44798ef43d4d924938a93f266af1919435694ec4",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "fd16db3f56de953d49a4007e2b4912e13490b8df3817a3abb2dfc88f76541ec7",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "ecd60a1c0db489d1515ed6c8f8bec715945314e307a65c1b2c2bae84c76a43e7",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "e10678c01fabc6815eeac436bb15a0b7c417b17d3c8c4aa9486aeedf64a917f4",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "48d021336c5220eba3e068af595e5f0f279dbd09452fbd1f6db5cc267c6dce36",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "1e2fecfabd03cc171a80882de84ca792c2a9dc5b7a6f0d167b5b466735a2e02c",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-api}}.namespace",
					"search_line": 45,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "sa-airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sa-airports-api}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-api}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Secret",
					"resource_name": "regsiemens",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{regsiemens}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "651aa353ddfb58487bcf65e74849c5521293eda669fe7b68be549c9ffd018d22",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name=airports-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-api has resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-api doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "e1b0bdcfa3092d902a9fb84d9b4766b9ad5913b9b202eb05eeeeca5492a29249",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name=airports-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-api should have resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-api doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "3495b6a2f311b7c7bfeceae96848c6017bf78cc975cc40cb2bfc6113a1696d9f",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "f4a94dc4b0eef558609f5155e8646ddfac809aa75aaadb81e46a2ff89fee5f80",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{airports-api}}",
					"actual_value": "metadata.name={{airports-api}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{airports-api}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "176a9b5e5df3904d6744792d49cc2634c54a3d03194e53309e9929db4026af39",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.containers.name=airports-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.containers.name=airports-api.securityContext should be set",
					"actual_value": "metadata.name={{airports-api}}.spec.containers.name=airports-api.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "2cf892416e87b9c897297ec3bf8347e427c4f290a8822a0b90ede79c44a82d8c",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{airports-api}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "a0b8e9d14072b512c2dff52652e8dcc13b920c26437becedbc5496edb727f5d3",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{airports-api}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "4db640997979455150a8fb6e9b0a0db43e6f062df333211a3480f412b80808e1",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name=airports-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-api has a security context",
					"actual_value": "spec.template.spec.containers.name=airports-api does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "9a179e17597e4fdfc4f729568c2538b74c5700694987876459fef42b6b56c6f8",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{airports-api}}.spec.template.spec.containers.name={{airports-api}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "33d1a96bfd384b46f684b60ec4b45125b382f13d56d8cc8a976ca77519c79b42",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "e1314cf2e8d5a913c31da81b2beb6db7c814586dbbd8675fb33e9916b89917f5",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-api_template.yaml",
					"similarity_id": "36473e1ccc8bae9490762f2cc59a9a0307329abea0cbe83c79996b3a0e55ff53",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "airports-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-api}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-api}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
