{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 185,
	"files_parsed": 1,
	"lines_parsed": 179,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:35:20.563235+02:00",
	"end": "2024-05-17T20:35:22.448839+02:00",
	"paths": [
		"templates/pws_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "350d1c01e34aff82b58517e8ed1876ae4fe2b09e059a910ebe4e2eb9aa053690",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}",
					"search_line": 119,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "ad1ebb05b61ba5033becff7c419618b3e45f115257266a6f50f6c940cf79bd0b",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "1899b44be1e94a1a65b595a56500756d81a5f0204ec910d58154e18b866eb680",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}",
					"search_line": 119,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "a192c6202bea42b54310af098f7df268833d5a4da3dca3baea82cde0f6eb7c8e",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "64db59fde0d62a17e5330ffe3989a0f0ba6ee500a24ee6854a41313d9614526f",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "47e2c2e5a6d48f440aad55f3ed6553c48880f98f98b8f1a6feb5fd73f7c96b77",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "0e7c5e1322b7e999663732e1d9d48d9f933390809c6d4048ec33f6f8ac902b47",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "592ce9ff94a7c63ee1f8868f00b226a8c5cd597d38a9a795710d3c39c5bce283",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "8e10a0d25ad504e2f5123d966dc6d7220caf9c4461870cb0ad8fe055d4e83a38",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "885ede2d05817870fceed54baf56014eb708d16de8e49e02235b42e570377101",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "5290694ff5025a263f5a0f4314df376574d9d38c8e183ab1b9a87e7704573a33",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "341748cb985da89e961f517552b5833cdf8c5a91fb1c24ed226eb4417137cb9b",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "32ff6988280bb92e0052b4a2887453bc6e2382396ce82c2035105b8e1448eea6",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "82377aa121da5cac6bf95080e788afd9e7a944491389b9edd1bed447cafed475",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "e8e83ec06807bdbf412444cbf676602a0bd9421962b378f0e319b971f15f5f73",
					"line": 178,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-pws-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-pws-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "88d533291687596003216144ec77ef8f54e97a8d72b305562f42558a8a3374b4",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "e1756541e0137fad4f96b5c366f21982bcec34d81f7f7cd8f9a7ea0c66bc2ec3",
					"line": 178,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "Service",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pws}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Role",
					"resource_name": "release-name-pws-watcher-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-pws-watcher-role}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-pws}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "202e2d205100825905de37d23959f9f177bdf733180ffdd824e7cb3aba36666a",
					"line": 169,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-pws-test-connection}}",
					"search_line": 169,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-pws-watcher",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-pws-watcher}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-pws}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "33f81a0543983b14a1aa74cc2f105a4a456fd813965e6e2500e72f65537cabb8",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "005b4f687dfe118a9583ada9e0573a393f679870ebfc45a26a995072b95b1477",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pws.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=pws.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "0c1ce1d8409f0895d4f2d595138254a4e91052cf1d17e5b00ed34200b208afb5",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "c12c619a83862125b6b20e18fb0e7e8d85fe9905b69c764fbaf32677f606bf64",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "6ffa5646baaca3a7e81fb8ba9e12b9a1a0c798c5437b086da7f9326991fa91de",
					"line": 181,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "790564b8ebda738f87085b648e9ed8c57c999ecf45bf2098c51a8d5602f4d92e",
					"line": 169,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "c4031e4128cb2b08167424fc8de251a22431f673b9c0fe6cd6dd9d20f19e2513",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{pws}}",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{pws}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "09593d539d1d12e89cae61573944e8794fe10f0d06c1d40b8a07310a22e7ec4f",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.containers.name={{pws}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.containers.name={{pws}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-pws}}.spec.containers.name={{pws}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "d77498e8b0e780f39154451019e5a83546ed206e0c5e164ead3d7c84558e3ad6",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "f161087f630bbac8ef67478f330ccb0881efca550f55326ce8909d84e65eeb7d",
					"line": 169,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-pws-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "67513f2ce3522096c6f37501e906476ddac5bd2e29ddb030b2e7abdd1e05285f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-pws}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "ab7b3e4d4db3d6e964efdd0d845ffa660a444b269dd7ca171472c72976624155",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-pws}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "2c42bf6e4671f2639e9af47c62928b7825ba884ce462098562f8413995b7502d",
					"line": 169,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-pws-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "caa7c7df5735df9996837f105354202ff08ef532dfdd7f6a5f8600758621e650",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "9edbca15493d803d433f3994e35546ee703a415057154e83cfd3aa93a4b93499",
					"line": 178,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "c37edc2ed9f70e16461957227783c76eba0159da8615d5f9693bd43f7942436a",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-pws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}",
					"search_line": 119,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-pws}}.spec.template.spec.containers.name={{pws}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/pws_template.yaml",
					"similarity_id": "464ab4bfa6343586374e63d1936ddef870a6f3a51e2f4800986c20c84de6b525",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-pws-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-pws-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
