{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 210,
	"files_parsed": 1,
	"lines_parsed": 202,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:38:02.242786+02:00",
	"end": "2024-06-26T00:38:04.310344+02:00",
	"paths": [
		"templates/dbgate_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "955c5e7ce7d2c61624cc59a4ffe28e9fa82def857986b23df8bdb88179cd15bd",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "ae220a0d3a46ecad32fbde25ca87585cdc64b633a23378739e1679878667d5e6",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "fa6c6176c19291c5c232871be56d187ce87f3eca603122d2832c9a6d8c56fcb4",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "f28881096f5772a4a26d72be227d515515bb2a1f74f715fa471c6e1770794efd",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "6503de544b01ed6ccd9d5d27178ffa15eade92afe0509c0411fe7aa43f158a4f",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "59b98a8b4deb956a29c53e20115c4314b28651b6c8fc6a39503899c93790bddc",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "f5cab6ca980ce1b7852bef512a655cda0b99d3c0fd13c2adc9701129fc9f7a29",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-dbgate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dbgate}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-dbgate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dbgate}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dbgate}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "64e28a250a8a782db2703acc656b100395ba37303d300ed663756d01e3754fc8",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dbgate has limits defined",
					"actual_value": "spec.template.spec.containers.name=dbgate doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "2e7ce1d4dbb2e7324432141d4bfce5f0f40d6924eba1f05ec1f1069b9a2358d9",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dbgate.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=dbgate.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "cd90d0ca4a8553471c963c3e86df64e65eecfc397af0e410af2b0d219364298d",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{dbgate}}",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{dbgate}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "348b7f232f7dabdf10aa949581be65044c116f80390c54c3c5f7c2be5985a648",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.containers.name=dbgate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.containers.name=dbgate.securityContext should be set",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.containers.name=dbgate.securityContext is undefined"
				},
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "79d79584cbc0276e652912141f18604cf1c419f89fec247c22e1c9fae35a14a4",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.containers.name={{dbgate}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.containers.name={{dbgate}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.containers.name={{dbgate}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "f1a7d4b2eae3b28c2e52ebbf9c9a640af0beb2ab75126f20fa287879bbd65bb7",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-dbgate}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "4e24c2fe5773f11cd6a50a8d46812ddf618cf0a9091e85e552088f9757043dce",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-dbgate}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "a56aef39a6a819b01b496fb7c4da4f1c1adf03bfa8a32848bdb54bb083045894",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name=dbgate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dbgate has a security context",
					"actual_value": "spec.template.spec.containers.name=dbgate does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.name={{dbgate}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "13df868b2eafc4b938d2767556193705af850271f8716a8b03f0deb2c24d53a0",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.env.name={{USER_PRIMARY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{dbgate}}.env.name={{USER_PRIMARY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{dbgate}}.env.name={{USER_PRIMARY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/dbgate_template.yaml",
					"similarity_id": "f47907e191032bbcd7b45e573fe393375ba3c8eb46732eed8ebc76abce2710b1",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-dbgate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dbgate}}.spec.template.spec.containers.env.name={{PASSWORD_PRIMARY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{dbgate}}.env.name={{PASSWORD_PRIMARY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{dbgate}}.env.name={{PASSWORD_PRIMARY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
