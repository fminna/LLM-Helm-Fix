{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 112,
	"files_parsed": 1,
	"lines_parsed": 108,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:05:44.288431+02:00",
	"end": "2024-06-26T03:05:46.409436+02:00",
	"paths": [
		"templates/rollout-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "68695c18df888f1be208ce6d5556607e263ec4704a3fe5742d456dd60a1caee1",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "ed35fea3c7be81afcab0ba87ff11128012a54842573bc7dec4de7f3d3c9ee01f",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "37ca64ce2ee3f7edde31316f37729ec699c3a4bc1071f2b08516c0720a19b3ed",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "85c013639d48c1a6abc6766cced4e86944abec970223436416cc8ef21851f2b7",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "df953c4a350cb235d2925f0de89ba85c7c307b3f3b6389443ac82a33b4489f08",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "066a18e45418131e1eda9493bb10001e92ebd018cd49856bd3cc324df9768c16",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-rollout-operator}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-rollout-operator}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-rollout-operator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Role",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-rollout-operator}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "f50dca9de524ba4d250338661842dc690907f734dcceb9eea93c133c5b290931",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=rollout-operator has CPU limits",
					"actual_value": "spec.template.spec.containers.name=rollout-operator doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "2945ef0d037a8a8f6ab6761ec45f4ec4d372572ac346704ad61f5005ef234ac4",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "94ddcc7a9c760854b50e4dec1d07f156e2371b4d06138be7cf8b642fd941d863",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{rollout-operator}}",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{rollout-operator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "a14ed87cf02c0068220fe4987358f2251429235e3ac9afcff2208a3acf770af4",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.containers.name={{rollout-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.containers.name={{rollout-operator}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.containers.name={{rollout-operator}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "373376e0d9c6466d24b8b7056ad44463ad2e185a5b19e6f74e19bf090a8a81cf",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-rollout-operator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "cb65b6f2b93fb8bf5833db814e8bbb79b200c4bb8a2ab313ec1fc67594f3c713",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-rollout-operator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/rollout-operator_template.yaml",
					"similarity_id": "8e8a665e2ee23bf436ecd40e043606bc69fd7534df80283f6757704c42744bac",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-rollout-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-rollout-operator}}.spec.template.spec.containers.name={{rollout-operator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
