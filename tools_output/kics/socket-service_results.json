{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 119,
	"files_parsed": 1,
	"lines_parsed": 116,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:14:21.825237+02:00",
	"end": "2024-06-26T02:14:23.951101+02:00",
	"paths": [
		"templates/socket-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "13dafcde84f103ed5a2ec40355778362f024aae82d9987f782c510400f6491a0",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "5772e0bdf7576150ff67ec3b1b06700af1aafaa5a8e68bfb375a6622f5cd41a3",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "b7aa25df6617e2a7d308e3bfa08176fbf6fe278cbae8ec7fbbc839e64d9ad375",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "8045cd59b83ea5a8516dd2b274632d9b98a38b07e6838f4cd8fc3dc5a90638dc",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "aabd7f5d84ba684065a0421a9fd867663a8b950e728c52bf003f13b987c2c270",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "3a36ee435f96b414ca67536984ef71aed108542786bb259fe55250e1b9a83f2e",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "ab900b2917f269d9d188cf7f124353408b85d933858de010bd587ddfb28b3954",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{socket-service}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "1d425b5e12d88492d047a76582ef26fba0bd8aa45cdb99f61a4cca447af6003e",
					"line": 98,
					"resource_type": "Ingress",
					"resource_name": "release-name-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-ingress}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "c9c1d0444ba8f3cff8ad7b2ee1700ed00b0259cb138d6f217c259cfd94103432",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "48b228d32d78be1d497efb3c28ac60fa158849460bb490042434392384c09516",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{socket-service}}",
					"actual_value": "metadata.name={{socket-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{socket-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "0030823b03fb61bfe9153b3789110f905f6539f8645a5f5393fd9f84511a0c4e",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.containers.name={{socket-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.containers.name={{socket-service}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{socket-service}}.spec.containers.name={{socket-service}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{socket-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{socket-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "b58023f6fd8f3bc5835abd075185680fac9e302552587d1f57634a474eb6aabd",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{socket-service}}.spec.template.spec.containers.name={{socket-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "5e5e364ed02f2baaa3f52fcfdd0f402350e239a6fe830135edebca3092c17e62",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.env.name={{COOKIE_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{socket-service}}.env.name={{COOKIE_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{socket-service}}.env.name={{COOKIE_SECRET}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/socket-service_template.yaml",
					"similarity_id": "ed27623fc3d9b019e9ccb98d776fb32fb4df85520ce6dd39f1202f8f3a01dbf0",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "socket-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{socket-service}}.spec.template.spec.containers.env.name={{MONGODB_URI}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{socket-service}}.env.name={{MONGODB_URI}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{socket-service}}.env.name={{MONGODB_URI}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
