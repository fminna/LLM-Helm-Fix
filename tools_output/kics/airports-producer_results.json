{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 69,
	"files_parsed": 1,
	"lines_parsed": 67,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:00:15.435606+02:00",
	"end": "2024-06-26T02:00:17.566219+02:00",
	"paths": [
		"templates/airports-producer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "134b286a8fa438c63685e4e315e57915630f5b76e0e322d720ede2d919f70a82",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "f0282efae5aed6dcc3c1706f91c0746be9b804221bd79ef5bc878cb9b501dccf",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "34efb1c4d76ce442f190774bb641d4ddda2823e0363f95f48252d7c518655b7f",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "256940ec32d83ecceef5c97497aaa83080f28bc5fa812205f9e5deb56900ab56",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "047195a4c5d1ceb0a734d8d822ba8b0fcf662e590ca65bb0ffb26ed9b283a951",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "d0faa673fb8c3ee5b265480976fb5a94142ceca110eedf27d7e03b1566bbc0a5",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "bb45b3c2c4f23b24b8977015be8aae65ba9fe3d9058a6ee402a7a0e8a08a21e2",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "847ba4888a443bf8c845937387eb55592e104b39b45e7a8af8db6cfec45ea6e2",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{airports-producer}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{airports-producer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "cfe460a0dd5257d871b70d32028694271e0bddd339d4b8c3ebeb3752086b26ce",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name=airports-producer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-producer has resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-producer doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "926b28ab02ca5304cc759f8c45fe22fd18856239f4c6fc0e7f490e06c17ef748",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name=airports-producer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-producer should have resources defined",
					"actual_value": "spec.template.spec.containers.name=airports-producer doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "9cf94894b3ad489b0cb8a244623330092063202e2bcab9a5514c26f2748e8423",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "bb0337833cdf813035deb8f5e50a9940b23cc488fcd723850d77c9539b821bda",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{airports-producer}}",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{airports-producer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "877392dcf7cf1a14cdc34cb146e32cf4889fff1949fed851d6b0d37fd38fb0fc",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.containers.name=airports-producer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.containers.name=airports-producer.securityContext should be set",
					"actual_value": "metadata.name={{airports-producer}}.spec.containers.name=airports-producer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "baedc876e3d6bebf3122407a1b63728ef57fde0480efbe516c1e37e353cf1ced",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{airports-producer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "3ffe7eb18cdc2004a728525d140850b294ab8fae5de3a8655f94b376d27c21f4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{airports-producer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "986262a5bf364f02f773360c4c4ebf191dc2fcacbfff7be38cbd4b492f458e2b",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name=airports-producer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=airports-producer has a security context",
					"actual_value": "spec.template.spec.containers.name=airports-producer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "e9c41762163e1afe688f250db45e3721c18e681e59d22971b36defbec75dbaae",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{airports-producer}}.spec.template.spec.containers.name={{airports-producer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "93206a2104f5b47f7c577e255a4f21fc1c7f8f8ac62ea6dfdcaed7e2552300c3",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_URL}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "46585e1a55071f96199fc751cd6762e111dd7eedfced9b599a9792d96f6f0b9e",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/airports-producer_template.yaml",
					"similarity_id": "62d23b4bfbd8f4479855726ddc3206d2e0d0cd47235fd91b00a3fffcbdf00040",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "airports-producer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{airports-producer}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{airports-producer}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
