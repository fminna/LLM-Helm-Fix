{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 94,
	"files_parsed": 1,
	"lines_parsed": 91,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:14:18.975016+02:00",
	"end": "2024-05-17T22:14:20.857245+02:00",
	"paths": [
		"templates/docker-registry-proxy_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "537709f7a22e7149a512488ccbee71a48a2a8deecc17e0ebad746e46d109b3d5",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "8763a601e14f91b6de5403698566368ca7d20eaa0937666751241b77509a25a4",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "76cf8c62b47449f531af2b5a3bd6921cf8d2062b6686d849097039114eef9200",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "f2e7f7e2bf5c28ecab306f003f2b4278fd813ce75e27351d3b540596ad0aef80",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "8c169dc7a87bb3d86b6fd8abda3a6f9f16f1ef0600801bd2d49cbd1d7e116278",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "dc0881ef17562656ea1da704b638fe69797beccc4f7f6c39e2d6d57db4d9e553",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "08cee1db3d626800492955c16d93769c04561c8ff23d59576922883d0dd668b0",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "66fa7d759fc03d8aa0bbfa0dd3c38ed85325dc8bf4a089c2f0480582a41c7fcc",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "85baa84df33385340486d286c82f48ec66ac39ffdfa9209ea7c5677d709a7858",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "9b81c8b0b337d0b1d6aca09a810b0bf87b3ed188672d7850541c83f531bd34d1",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "7bb8c61ca5533068dd27b198c1e419932be4446c4e4437c7e22adbbc9685841d",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "2de9f4ed4051092e98ec9fbf5d151f495689ef3ccddeb4771638d525483cdbd2",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "5322cc463b956f66449f1ff2ab5ada187a53269b355fca228c220ce83b4fd3d3",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "a0f60aece44695d41d7a36e6b2e8e47d9e6ed3d1df2d0126d24eff9bf1b23349",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "4eff539b6da10992b6dd1b29e4f99cb7c0b1448e64ecaecd9d22c6b31f9e0f89",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "3028fdd0969a34f682a602fcb9e86ea61409930c1e23e61e258bc6d3cdf57eab",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-docker-registry-proxy-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-docker-registry-proxy-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "f8c5693c9312c22f71a36989de8574ab6fb2c590d39e448ea56fb18f113ec9f4",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "b4807ad2139e94def347dabea11c82c8e7c3751ea3f4bec54eaf36488cf619d4",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.namespace",
					"search_line": 30,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "a5ac0f727c1216d105b6a08455452170ca0009e014d434cea946b7e4acb8d60d",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.namespace",
					"search_line": 78,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "70bbe22615d9eaf04ecffb02584ac75b16c6ee67a481ebc21ebeebc701a9f896",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "72730b24b34bab7ba765556594218d7e0b680e388efa9c7dd429c4681289b2a3",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=docker-registry-proxy has limits defined",
					"actual_value": "spec.template.spec.containers.name=docker-registry-proxy doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "cad19794c09c0c95b53ee0cad337d339f8a78e129d1e69ca545bdeb2a48af7cd",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=docker-registry-proxy.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=docker-registry-proxy.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "97ad9a7dd6129063652ca72d325ff2c27a83b7bd094e08366a3e4039eed3dbdd",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "2681cc6be036b83d0c75cad93669e38b4fe1ce64fa09a3d4cc36f6c3d0ffaf62",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "bab911d5fbbf0bc20ad659f373217b064a9e1663f515bc468af9bd4c0d08b0f7",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "eeeb835d3b296b74f43231cd6ae5d8f71b5cd04be44f9ae8b574e5214ae1f349",
					"line": 77,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "b884d4d94d4ea113d2e633a0c71981b7527b25f59885c05ca24880c21b3307b9",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{docker-registry-proxy}}",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{docker-registry-proxy}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "2feac24ce860b90ab2612e253a278194de74fa221b613ca63fe51753d892bffd",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "002908ce47244b0bbe284c84d63b507a2df5b0c091f7b933f0172a090df458cf",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.containers.name={{docker-registry-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.containers.name={{docker-registry-proxy}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.containers.name={{docker-registry-proxy}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "69ada1c080667015ab7813e34d25397d2e0e9ecdd47d768b74f71ecb22bd24d5",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}",
					"search_line": 78,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "7ee0c1789a59f0ab60a559a0c8f78e28531eefe2d8ece2dda7d8ca57b6c408f6",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}",
					"search_line": 78,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "3b3d010ba3d54a2d914192c7ab31a4b03d3aa9f48616513db6b49688da233b27",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "6fffe11eda523abaf5a83b095750538b7a91af72bdc6a35d509c8fc1300b349b",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "57a31866abae7ef5ca39396e34f07f24ca40a9287ceb2368fd054f3e95e03b03",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/docker-registry-proxy_template.yaml",
					"similarity_id": "91ced64cfad0396209d9277992a263f6a8056d16370f6b2cfcf4a14bab242c68",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-proxy}}.spec.template.spec.containers.name={{docker-registry-proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
