{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 107,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:06:43.390112+02:00",
	"end": "2024-06-26T01:06:45.464776+02:00",
	"paths": [
		"templates/ingress-annotator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "2c68c118df8b6bd7a75b8eba2fc51afbfdfabde5aec3706c672e926d4e2bed1f",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "429603af65cae0a5e0938d5e881668bb7745e50c808ae1a7d22cf1eb420313d2",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "9f64d2d411d208060de13368728a13a6a2d0229ae7bd4aea7df2f43b5968bb80",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "e56f9690cb2155b22eed2c93669d702d77c7636d854cacecabf17d6eddf324ca",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "863bdbb447e3e761dd4f8f055d83f7b6fe320f4a5e575dca7b5b87ac80c8a058",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "4c5654954d2bb51da33693a1e747c83d568ce4d910af27e9142e90e698f7fd3f",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "7a2f9d490f60215b7854cb0d99c19fb8bcdb52467b918e73e2dfa5e6a292178d",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "7eefb93176e5a5ad208773d935caa05545c2d1f367d33ded0f9d532c6738a979",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "535aeb799d971caa827e395a7b9c4958cd0618e017af0f98b6cbebe3fa6dcc70",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "105dc51902a411447808e7608418c3e4c8fd387ae3e3b086e21c9e96508e349e",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-ingress-annotator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "13dd733df14a877fee100030648ead2c23c77e3c24fa47da75b6752efddbe960",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ingress-annotator}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-ingress-annotator}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "df0391c613e2865c920befe2598a78adf0eca7e26ffb076e6d0aa63668032fdb",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ingress-annotator has limits defined",
					"actual_value": "spec.template.spec.containers.name=ingress-annotator doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "9e9aae7ed85602c80ac6e74d67125e8fc1507a5d2995422207f05db62e298acb",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ingress-annotator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=ingress-annotator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "8363cf74415e8ceb3d6f0c9ad33594b0ff4b56976958760f95357479d86e543f",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "74c1c1e5fa2ac66a11ccdbbc35af17ef6c214b3ff917c357db30300ed91b9034",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ingress-annotator}}",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ingress-annotator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "eb957d8546f316d059991750434ab841013234230a89328763f9e41a36165244",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.containers.name=ingress-annotator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.containers.name=ingress-annotator.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.containers.name=ingress-annotator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "ccf8269ac1410499dbb73effc7b8ac1d45385390e92b39b0d6c2162d29f9b84b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ingress-annotator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "c304502b5e27f79220f696a55b41f2f2c7c98ff7f8049760a48f9e070545b84b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ingress-annotator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "a9bdc3134f97c9da9d20482267a59aa2766f64626b41849b02d0a262229bbc8d",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name=ingress-annotator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ingress-annotator has a security context",
					"actual_value": "spec.template.spec.containers.name=ingress-annotator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ingress-annotator_template.yaml",
					"similarity_id": "6f3c1a7c38b8d528be41001a8b378556cb28712f92a5614aa24f37e7ee10f954",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingress-annotator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ingress-annotator}}.spec.template.spec.containers.name={{ingress-annotator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
