{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 135,
	"files_parsed": 1,
	"lines_parsed": 130,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:06:43.344809+02:00",
	"end": "2024-05-18T00:06:45.246577+02:00",
	"paths": [
		"templates/vault-token-injector_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "720a72d877012e21dd2a1c8829e4c6573ac2e79f30d91079b95725a74ec59749",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "243096410d0f353eb3f7af1818eeacc423e5e3e89a1142e03195e6e6ab7d31d5",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "0a4e8797428a876db832a0a8d898e33d00bf711736f8c5856e688118711affc6",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "5686e2e30a0f4148df3a645be6e094a920644e812a0f508cf954a8aec7bd26f7",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "3ec9e9507de8e1a276ef545174a3bbab20b5593fedc5b64069a93205d1c175b6",
					"line": 52,
					"resource_type": "Service",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-vault-token-injector}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "13dd733df14a877fee100030648ead2c23c77e3c24fa47da75b6752efddbe960",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-vault-token-injector}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-vault-token-injector}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-vault-token-injector}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-vault-token-injector}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "ddc70e8ffd722bd63a12ab3934ded887a01e8abc5f7754e4fee5c6b13bf6c4d8",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.metadata",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vault-token-injector}}",
					"actual_value": "metadata.name={{release-name-vault-token-injector}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vault-token-injector}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "6c637abb424996bdab081e274774dcfbbc65768f8a7ddf3331b1626b4c3a72ca",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-vault-token-injector}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "62afce6fb1f467af71fd9d7d08d8d90f638dfc753023c626ff662eb2d8f5f50c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-vault-token-injector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-vault-token-injector}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-vault-token-injector}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/vault-token-injector_template.yaml",
					"similarity_id": "8541e59dd21b5290bcf7e4ca95e0c52dd2b1b1ec3abb87850af16e907fa0b698",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-vault-token-injector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-vault-token-injector}}.spec.template.spec.containers.name={{vault-token-injector}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{vault-token-injector}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{vault-token-injector}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
