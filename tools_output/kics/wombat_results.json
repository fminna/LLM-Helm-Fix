{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 74,
	"files_parsed": 1,
	"lines_parsed": 71,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:27:08.943897+02:00",
	"end": "2024-05-17T22:27:10.757909+02:00",
	"paths": [
		"templates/wombat_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "2e562a18ac77b20163e7691c8462da001be9f7e573ad9c5531753458095d568c",
					"line": 68,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wombat}}.spec.volumes.name={{wombat-logs}}.hostPath.path",
					"search_line": 68,
					"search_value": "",
					"expected_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' should not have hostPath '/logs' mounted",
					"actual_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' has a hostPath '/logs' mounted"
				},
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "c70a7a520cc702d9492eb82daa97e085feeb229dbff290e9af138aa3f4bd7466",
					"line": 64,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wombat}}.spec.volumes.name={{wombat-data}}.hostPath.path",
					"search_line": 64,
					"search_value": "",
					"expected_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' should not have hostPath '/data' mounted",
					"actual_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' has a hostPath '/data' mounted"
				},
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "af164b66387fa90d79e227eb9b76dbccdd5db0717fdb3b7b754ad8643f933109",
					"line": 72,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wombat}}.spec.volumes.name={{wombat-license}}.hostPath.path",
					"search_line": 72,
					"search_value": "",
					"expected_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' should not have hostPath '/license.lic_key' mounted",
					"actual_value": "Resource name 'wombat' of kind 'Pod' in non kube-system namespace 'monitoring' has a hostPath '/license.lic_key' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "167755f44e401274f0daa871e5fa98d91514d1fdac4088a886a8b3a439379576",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "6df67c9ede60c609b64cdfaeb8ff1982cf185bbfd297a05005f2c99b42c35ca1",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "49bcbc62a1fcfe1582f782c84774f50dd2309fdf7e6fd87f24380aba9add0d9c",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "3270ae8b92d1736b34e94ef9de729b8af943c5121a9bc0b4be010554658c2789",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "b200cd561e0530f53e6a76daa94bf07c3e31e0c96345d65ff2fb0cbda99b556f",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "e837452e4a8faf4fba7373d5ac88e7b3735e6b52b60c554989154a6b82201f9b",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "f7c3dee87e7b067065b5c8143f4db949ccb0b48f1d9d58043ad8088e5dc170ee",
					"line": 14,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=wombat.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=wombat.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "8afbe9bacef0608198a805b9e3dd9db1711fbdf8c01889e3884407165aa1066f",
					"line": 14,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{wombat}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "3e2e12a1853b32ec8ffb593569d9cdf39ac19d5365f6af456f2d314d2fd5a8a9",
					"line": 12,
					"resource_type": "Service",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "c531a958571662349a160ec63fe05501864dcb4d7e51c6c1398da6944507ae85",
					"line": 40,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "60554b5052174c8a01c6744a6a0f88ed87071a35ab85bc040badeb7f69899d13",
					"line": 12,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.annotations should specify an AppArmor profile for container {{wombat}}",
					"actual_value": "metadata.name={{wombat}}.annotations does not specify an AppArmor profile for container {{wombat}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "56eca6a78b3fb58aad875e39bb63f89c98c3e7b39db54d4dae04b802215b8991",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name=wombat",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name=wombat.securityContext should be set",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name=wombat.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "0df304323f497c9fa8a72472a0958c874a0b8d84365286294a8d01498afc41ed",
					"line": 27,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wombat}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "a8fdabe60aa9c63e11811fe40502a6733fa5f759917c3a69c7ed070bfce019c5",
					"line": 27,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wombat}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "ea81ada6cdf5344323c41967b90e77a6b98130c7e4bbabcaa57a843ab5b9e89a",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name=wombat",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wombat has a security context",
					"actual_value": "spec.containers.name=wombat does not have a security context"
				},
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "cf075204ba63532e9b429ac0e2deafd34c20463cf84d6fe589422296635cb969",
					"line": 14,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec has a security context",
					"actual_value": "metadata.name={{wombat}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/wombat_template.yaml",
					"similarity_id": "d21797a918e4d921c1c0c95327c8e47f98f30898fc5c24a3d0378f74780e87e9",
					"line": 32,
					"resource_type": "Pod",
					"resource_name": "wombat",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wombat}}.spec.containers.name={{wombat}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{wombat}}.spec.containers.name={{wombat}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
