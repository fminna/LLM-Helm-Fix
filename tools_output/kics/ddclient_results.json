{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 76,
	"files_parsed": 1,
	"lines_parsed": 73,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:37:24.090831+02:00",
	"end": "2024-06-26T03:37:26.138326+02:00",
	"paths": [
		"templates/ddclient_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "955c5e7ce7d2c61624cc59a4ffe28e9fa82def857986b23df8bdb88179cd15bd",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "ae220a0d3a46ecad32fbde25ca87585cdc64b633a23378739e1679878667d5e6",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "22f8e52a07a37d7c85af1ef54512daf36f7e0b919ee78d6e56124ae53b6d648d",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "fba0a727bb79d93f557e9065ae269c286f74f4eda70bad0cb2fc1404cee7ebb5",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "260ef40db7c72a84e3fc68af2c23858d341927b859476b6576cd72d33a2e7772",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "0e6d548bb2fa877e67aeaa1cea45e47f1173c759046c17e5c9178d52393a1a00",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "afdf3ab6329c0d5647388a79a7667e21cfb04933bad86bfd172bf259a1400b32",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "7e997865a82ca5b5bcb4604d733539c43dfb7218395adf173578d443f0223755",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "d2f9aec419e34ab5eb6937053a3e0a7d8921aa95d2c3b999f5d90a72396fee65",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-ddclient}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ddclient}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-ddclient}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "8f29f174c3ac8532192988e5a70cbb2678d5acc44ea3ccd4f788530a0f68a682",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ddclient has limits defined",
					"actual_value": "spec.template.spec.containers.name=ddclient doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "dc8f08efabbfda3ba94cfdbe6ac694f139efdffbf7d117b6b7a62c34e7dd254a",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ddclient.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=ddclient.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "550c4a83428063ab6a8945b7e2b79479bae5d4579f7c60836ee4ff20df97842b",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ddclient}}",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ddclient}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "7a8a36da4380663918941e03c2dafd97e65362d11b9ef51e7f9e034b10ec5330",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.containers.name={{ddclient}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.containers.name={{ddclient}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.containers.name={{ddclient}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "f9efbdcf79104b9a3033539051077217581c7764e5db74f37795be23a60a2794",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ddclient}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "7d166b7ba1a870c4d04b18463a423dd2803144d8c3e0c914829b2354e0591b2e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ddclient}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ddclient_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddclient",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ddclient}}.spec.template.spec.containers.name={{ddclient}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
