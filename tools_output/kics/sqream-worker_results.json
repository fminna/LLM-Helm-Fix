{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 328,
	"files_parsed": 1,
	"lines_parsed": 318,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 26,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:21:47.519753+02:00",
	"end": "2024-05-17T20:21:49.54975+02:00",
	"paths": [
		"templates/sqream-worker_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "79440c91554c8c528228e01d90956c6ee2273ef294718fb337b61e6c6175ec1d",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}",
					"search_line": 218,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "e0abce3d3ce69921ff55c22eb3a83237ac8d7cd979222ea9b004b8d867ac2f5f",
					"line": 214,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "eca2a3f6ea020348421866edcfe75399c641fefd7af22d8d6a80b791f69da1a0",
					"line": 230,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{config}}.readOnly is undefined"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "ba74fa81258ad5979247ef52385dba0b54f823df2c7376167a9e29da1ca2f9fd",
					"line": 234,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{license}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{license}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{license}}.readOnly is undefined"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "581aedfe851d66e557ab53a2af62e08cf9f4ecd37f88cdc332a8339d0ce02dd5",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{sqream-worker-sqreamd-log-properties}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{sqream-worker-sqreamd-log-properties}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.volumeMounts.name={{sqream-worker-sqreamd-log-properties}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "f4e96fbba284f400477f4cc454fe4f8bf3f9096c9ca89f563396c8c47de2fac1",
					"line": 213,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "5f3575f4568aeb49cbecf59a4a18c994bfa1d120915d712cae9f20ca99453422",
					"line": 220,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "20821bf8d0b7a352fa95eeb3d2f02027fd03f0dc5867ea3ed7881fbdfafd7e1c",
					"line": 219,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}",
					"search_line": 219,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "69f63a5e07829853a4d3d24db9e685f845c203e19be5aeab450a1cf0d6e0aa69",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "d753bbb94d30b891a1979e07e7b4f014f4ce8be21045307fd7cfdb539fbabe54",
					"line": 207,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "sqream-worker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{sqream-worker}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "license",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{license}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "fede5338b60e38c673338c81d93410a780714db21385d86c311dfc374e2e71ea",
					"line": 159,
					"resource_type": "Service",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{sqream-worker-0}}",
					"search_line": 159,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "sqream-worker-sqreamd-log-properties",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{sqream-worker-sqreamd-log-properties}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "c3330c9faeae5f614c8d127bd0aa6a9c7d4bbc89dd6afa73a8556dc119294541",
					"line": 225,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-worker has CPU limits",
					"actual_value": "spec.template.spec.containers.name=sqream-worker doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "308f0e63a16e2a3d556d49cf388c58f4189d9df569e6c8edaf7a5fa7bd02dc17",
					"line": 223,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{sqream-worker}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{sqream-worker}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "2142f4ba1c8ec15b38324073490e4e41d6c4bd51c31afc5ec3d606c8c726fdb2",
					"line": 152,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "sqream-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'sqream-worker' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'sqream-worker' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "f368eba3318db75f57d10840dec95999bc501e534162b8a018b8be7659f16261",
					"line": 216,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "4a1d69997c6a71f99cf4fbed258b291497c9dfe027f068152eb8198d0ab6d448",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sqream-worker}}",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sqream-worker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "dfbdcd7882b0df8dbee6d10ecf35cf91872afecf41c37250dfc16bb59fe55a57",
					"line": 219,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.containers.name={{sqream-worker}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[sqream-worker].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[sqream-worker].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "c2d6d35401c90d80dfe519bca000104cc98b539aa1764aab7493ff7ad32e341e",
					"line": 130,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "nfs-temp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-temp}}",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-temp}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nfs-temp}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "5733b7b0f351405e87deccbaa4250a692f27f7df0a4f4263cca44f88e31c6f07",
					"line": 188,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{sqream-worker-0}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "d8cf3d0938f9d964c4ae8c62089f5439111e4f2fdebaa6e2148f082fe483ebb8",
					"line": 188,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{sqream-worker-0}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "4b28358c7caadebc8132a26e6e29411fba4a3afacbf012a9bd7ff832e5ec8ac0",
					"line": 130,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "nfs-temp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-temp}}",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-temp}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nfs-temp}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "1f08aef8583802f503d980cddb1c2a58a4d1d491dff87402480f91ec8ab5b409",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}",
					"search_line": 218,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-worker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/sqream-worker_template.yaml",
					"similarity_id": "8685862d957f17f0a868e4e1d64aea574aec9568103eac525f566ee951bd85fb",
					"line": 169,
					"resource_type": "Service",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}} has a Pod port",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}} does not have a Pod port"
				}
			]
		}
	]
}
