{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 121,
	"files_parsed": 1,
	"lines_parsed": 117,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:14:58.369268+02:00",
	"end": "2024-05-18T00:15:00.281926+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/killgrave_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "7429dd1bbf185c0a876a53a418c18ed313da0ec17bae79ef79c90f3bcf4b9649",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "ad98c56cde165385133e019302f6a80b2b07710f7cc54183a7c7f9ea84057a4e",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "6fb7c0262fe8c8e7a3faaacb9b2dd0be2d7d89a3b5f5737397503fa735f75975",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "ae21299729b15b685bee14355a15de571aaf58acb5c0a79b045df52f71462bff",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "ee6668638e6e47ee16d57aa42d52c17cc2c28356f0a7cb42329d299a51742376",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "b9006d23af1650776073586881417a2c5504b578128b467cf06e581da655f7bb",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "98d0980e260e541ceb9a5a47aa432cce3547e764176e5fd2950bb7408bb01c8b",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "c7c6c935de9be90d95a46302977e1f5fefaec8beee6a1d112d96b39d1b953a4a",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "d8bdcbf0d1380d71aacc6c94c5edf628053f807d49aaec4cf3cbed860a56b80c",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "13dd733df14a877fee100030648ead2c23c77e3c24fa47da75b6752efddbe960",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{killgrave}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "cb9be538b90587ab2e7e9d2d41fe97d94e6d208354d0ca904c3e74e4d9dee506",
					"line": 50,
					"resource_type": "Service",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{killgrave}}",
					"search_line": 50,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "ConfigMap",
					"resource_name": "example-schemas",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{example-schemas}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "example-imposters",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{example-imposters}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "e326cac25795f9b0a37fd55cc1e3d32368fb0b585d9b590d5c977415cb30a389",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=killgrave has limits defined",
					"actual_value": "spec.template.spec.containers.name=killgrave doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "91ec02f4b42abc9decef339db8afc8ac3fe073e0614f3fe5673939010de79ddd",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=killgrave.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=killgrave.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "5306f8ece3f36723b60d4f0b6be26a74f5d04d23fbb67b1d56157c766b9a73a3",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "84b2e3a759ed635348f4a61d64fec03529738467cc066c5c83e6aae1f6ed0831",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{killgrave}}",
					"actual_value": "metadata.name={{killgrave}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{killgrave}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "5d5cbaaca8c5bfdeaee1b7d57f9ddfcfce92bcaa9604a2374db96ba4fed67743",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.containers.name=killgrave",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.containers.name=killgrave.securityContext should be set",
					"actual_value": "metadata.name={{killgrave}}.spec.containers.name=killgrave.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "b002d9aa1077190e471624430abdf128d69a1a3bbe395c074bb62b948ea10c5d",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{killgrave}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "673b0029d4cc47299e7bf8daa66efb9ce371559b1740faf217d677816bd01439",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{killgrave}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "d684cc7d2e63a9dcc2739e2b365d257b202a963f5561ab1f82a9e4a2e104d9da",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name=killgrave",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=killgrave has a security context",
					"actual_value": "spec.template.spec.containers.name=killgrave does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "a0e1ada3e0c40381831ab4394080463d6ed2953f68d1c9d376e790438e1766b4",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "killgrave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{killgrave}}.spec.template.spec.containers.name={{killgrave}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "5da566943438745fb61e79464cfc4627d3ed0c4c73b668b61ee33e11e24150e5",
					"line": 60,
					"resource_type": "Service",
					"resource_name": "killgrave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{killgrave}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{killgrave}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{killgrave}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/killgrave_template.yaml",
					"similarity_id": "cb7477a0bca43ceb34817942abbf7f315e1232eed9218c464b523148e9cbf6c9",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "killgrave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{killgrave}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
