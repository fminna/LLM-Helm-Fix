{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 386,
	"files_parsed": 1,
	"lines_parsed": 376,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 29,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:10:40.875173+02:00",
	"end": "2024-06-26T01:10:43.020063+02:00",
	"paths": [
		"templates/emqx_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "37dbaed7fb26806c51de6c5185ab08bd9b68e9e90b668f271c710bdcdcaea316",
					"line": 327,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": 327,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "27ce17d64ca23f6835d062916759815dc825133578b7733ac078611608c03168",
					"line": 329,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "9801476989fc029bb52ca79b97056747eb8845c030345d5ba45725fa15ba3297",
					"line": 324,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "0ded354b6903b9760b0256385274abd7c3038cf08e17d88f05ddbc192759932c",
					"line": 324,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "b0768ad4f5fd87d4e25c8c00702d8c1af8362ca5f2cc61d76d924512e29a9fa2",
					"line": 324,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "be6ef0085855eb5d1c0d9599064472920600476b22c795e73a1255d8a372aa47",
					"line": 327,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "8dbb45685bc71625197cd640939ed62b7e7c7bf2f2695a590aaa07fa761b8f51",
					"line": 288,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-env",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-env}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-acl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-acl}}.namespace",
					"search_line": 14,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "9e5050f2a67d6268088c52133f106e9eabe030125fcae21fb3af575e8ffc7488",
					"line": 112,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-prometheus",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-prometheus}}.namespace",
					"search_line": 112,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "567ff5b31cbe0eb49b7dc4578cd9f6606c2f4cc70945588253928581bc1dda8f",
					"line": 138,
					"resource_type": "Role",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.namespace",
					"search_line": 138,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "377a85705ca8e7496445555e444160c61e0ede264ae86a764f878253ea579258",
					"line": 154,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.namespace",
					"search_line": 154,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-loaded-plugins",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-loaded-plugins}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "4e6a8a107c1aac4d0bc7439a816e8c5696559fbea9150ccb9fac7a0540313397",
					"line": 170,
					"resource_type": "Service",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.namespace",
					"search_line": 170,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "7e101258196f262ba759e727dd451ef7e4a5fc25a426d6bebd975f050ac33d47",
					"line": 265,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.namespace",
					"search_line": 265,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "313af835be08585130f52f66af3d5a53dc2c2d904cad218121e6942009bee2f4",
					"line": 212,
					"resource_type": "Service",
					"resource_name": "release-name-emqx-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-headless}}.namespace",
					"search_line": 212,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-emqx-mnesia",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx-mnesia}}.namespace",
					"search_line": 68,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "2377abebc583e9aec553101a5d3b7d9d9755da2f06c89e746507271abbd8a075",
					"line": 348,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=emqx has limits defined",
					"actual_value": "spec.template.spec.containers.name=emqx doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "abfd0f74fdf9b447a4c0fa108b3eccaef2981cd7e4613e2654181f16ad215d38",
					"line": 348,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=emqx.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=emqx.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "e2b9527504d814ecde5b2ceac6d1cf7eb914d06579bc079a13cdd848fd380a20",
					"line": 326,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "7080f5b83498b2d55522f3e00c4e01520c67c485ec1f6a3c9d885bfd49c87f21",
					"line": 282,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{emqx}}",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{emqx}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "b5b9e8bd5358c097b898aead6cebc0a1bd53eaa7fdffa66de3db024d52b6788f",
					"line": 327,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.containers.name={{emqx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.containers.name={{emqx}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.containers.name={{emqx}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "36b3579d58bf179bf2f6a1488655464cd389cb5752a5e5098bbff12ae0f4c42a",
					"line": 265,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}",
					"search_line": 265,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-emqx}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "d0703ca687b4eebad2606199c63c9dca304101d0d6347088cdedb4f396308ffd",
					"line": 265,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}",
					"search_line": 265,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-emqx}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "354dc279e7602d3f343a81edadc8c923f027d5f7ba1cbed24b70722ff82fd61a",
					"line": 327,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}",
					"search_line": 327,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-emqx}}.spec.template.spec.containers.name={{emqx}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "c0de1abb67c2e16eff5d5092b968af9662e95fd5ed035811ec64a16a4bcd92cb",
					"line": 177,
					"resource_type": "Service",
					"resource_name": "release-name-emqx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-emqx}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "StatefulSet Has No PodAntiAffinity",
			"query_id": "d740d048-8ed3-49d3-b77b-6f072f3b669e",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if StatefulSet resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "f0d30dd9",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "587c95abb3fe1b342f2a9a492f6e8916377944562633ee5b446f246f022faa39",
					"line": 288,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/emqx_template.yaml",
					"similarity_id": "98cc66928ef146cf15c8782e2f7262e4c4c29caef2d7d14899df9942825e8d25",
					"line": 278,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-emqx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-emqx}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-emqx is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-emqx is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
