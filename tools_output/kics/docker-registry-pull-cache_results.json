{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 122,
	"files_parsed": 1,
	"lines_parsed": 119,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:39:47.27776+02:00",
	"end": "2024-06-26T00:39:49.396853+02:00",
	"paths": [
		"templates/docker-registry-pull-cache_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "bae27b2dfaae9d88fe1481ea261042512495bf3a7541862c7c8579201e1bdb02",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "0e19c7b488c04da8da48972645eb673b33c5a13b1f3b1e28f29a548d97a1831c",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.volumeMounts.name={{registry}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.volumeMounts.name={{registry}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.volumeMounts.name={{registry}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "5e593acc96f6ed1af74b3279c55bcb59aaa70edd86f420c0df6508392f60ef97",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "b48b95df82409903d5f872a691b08bf91102a79400e03d402da1b2085e8c975c",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "4abc53dac8e6aaec8357167a852c270c5e8dc41011dd881994c722dca14db746",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "a23519d03efd15ba32d7bce7fc6f66e76f40dea852b02476f4b71dcecf39a474",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "760b9663acd9c8c7e68e405616c806a8a44324b385928e281426ca9e4b887f37",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "c6b44b80e2ff0e06747d470854f979a2ac5cfdc2e4293f5c127c14223fbe76e4",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "f2e1ad5934ba3891200eb388201a1fcc2b6cf815929e265238f3a337e022c6a9",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "Service",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-docker-registry-pull-cache}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "6feb64159adfaa35819a55c3918f57b6da70382d77117cb187b05d3cbe3125a5",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-docker-registry-pull-cache}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "e11ac2ad7154e8c9038f81cbabadd0b6070cad7f4eb3d50b61eadbfa6fbf9564",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name=release-name-docker-registry-pull-cache",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "cb05c196890df32aae4225546bf408c208b5659fa6f3f7a1cd958f0a572d96ac",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name=release-name-docker-registry-pull-cache",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "5989ca4dce1b699ccd0526068bcf17bd0120a890362c6564d984ba3ab329f796",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "76b5ea89f726c74de132a24e014be39aff2f76fa6966c3a3a032c57c02590d90",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-docker-registry-pull-cache}}",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-docker-registry-pull-cache}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "b6e0a342034a662ed3394f83596a2475ef9c88d57af9f6f93585debe514ff6ac",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.containers.name=release-name-docker-registry-pull-cache",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.containers.name=release-name-docker-registry-pull-cache.securityContext should be set",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.containers.name=release-name-docker-registry-pull-cache.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "3271e18098d65ae3b36ca6204677700bc75a66bc55e0d5202805acb9ea143bf2",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "ec461d57adc0ff2b8f202311ae566a3f75782f2168d29a74882a5153ac8f06b8",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-docker-registry-pull-cache-registry",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache-registry}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache-registry}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache-registry}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "2981ed21857d0d5e48b460d3dc3d29eac476138c56adae60ed7f900ea66e15a3",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-docker-registry-pull-cache-registry",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache-registry}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache-registry}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache-registry}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "1272cb971f94c0cada0c84fd2d6c9432a15654c7a7d17da14baad5e30b48341c",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "f4717026b2358581cd410947d1b5ceaa4579e84fb888445a39cbb7507efcc332",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name=release-name-docker-registry-pull-cache",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-docker-registry-pull-cache does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/docker-registry-pull-cache_template.yaml",
					"similarity_id": "3312a3553b2e060ca143bd20473f67a04a10300f12c79b85773cae406da8bf59",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-pull-cache",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-pull-cache}}.spec.template.spec.containers.name={{release-name-docker-registry-pull-cache}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
