{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 126,
	"files_parsed": 1,
	"lines_parsed": 121,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:30:11.893031+02:00",
	"end": "2024-05-17T23:30:13.800655+02:00",
	"paths": [
		"templates/mosquitto_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "0f338382aabfb17a237e325f4e16df97a929d3f1868f5aa80ab795811b98f0bf",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "0dfe21a79865978a148a86a358d6b0999eb9fdd47bfdbeffa21edc36e4b2d692",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "8b56a158920bfac9c6fb5315371a9c774541106124212df80b4af8a6ba07ec2c",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "cfd098607594b94229f222a006e318186f57c5cfacd319375612270e468342c6",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "6817ca99ce2a0bcf62012a32a198274f4d243656d3e3ca56f773a123ac8bae5f",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "0add0702d9b575ff2ca493ca666808e7109accc9cb86322f2ba342afb21b076b",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "ae7dc26eb13172561d856640615d2e6dbe35cfe97a5a56f001e6fd6e4bd1da83",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "4fa36a423a725482707f5898a84e83d557b56dc5e5f328c1a717f6a670b8ab6d",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "5a7d082b93db1b8de9d905a5a7a1dff4aa472d6f1ea3709f259e0fcd607af9a4",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "4aca712bef406aef3ed2dd90509b776a49e0edf7f0d129b9abf27005d844a28d",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "7f7beb2e7d8299bf52781b7f5545a5f23ae8cd9e9b445961dcec72c2b37043d4",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "bc24206ae6345c140067b7fcca60a9fc7677c880f90d3c4046f7ec38a6cf2924",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "3a9ba25233903ed543da8608b6f7b576984e33f641c45c345b88d87e2874de36",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "f3b07dd71519b4d5d5d4046ae593510d40cabae827f851469be6e6f9e341ca17",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "abb25d2e48e7cf207571175b7df6c349d13660f09406908f5658665c4b144f16",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "c37d2190e42b9aa664c05c5f1f1d745a5c4b1a162a35a9586e930a67d6706ea3",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "3ccd28f46a3a25e808c0dd768332ae1d0d9df111e3637ca7b1b91fb269c4c5cf",
					"line": 119,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mosquitto-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mosquitto-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "c4dc2757ecc523bfbfdef53fa4eda03411d8109d25f6e8789fcb327441b5f761",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "d5413f98d6e865b180f00eae294df19df9e0209ac9c8d39c64fbff6d7541af3f",
					"line": 119,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-mosquitto}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mosquitto}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "5e7a32a6628929093d428e7afb06026083c408bcd8ec038ffdeb30998b3682d4",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mosquitto-test-connection}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-mosquitto}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "313f1871bcf3576105548d8eda5adb2aa0d70acdf758bafd84fa5d5d9d68fcdb",
					"line": 84,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mosquitto has limits defined",
					"actual_value": "spec.template.spec.containers.name=mosquitto doesn't have limits defined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "990c5a44cc5d5c2888701ad1211674ab7ca47448fc3883b5ed304d3caeaa22dc",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "407eef6ed0b2b8a0bcb94da362c1864b0a3181714fc89cdb6846b669acbe5974",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "8f3a40b996fc1dc360d24a1f3c5f74047dc90e51b6bb196144654e0cf5613e01",
					"line": 84,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mosquitto.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mosquitto.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "31855ca477a88c1a84a36ecd3fc3a8a705c683fa80fc43797726697c4523084d",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "172f9ce0f921dc7ef673634de6f59e17cef8f7490f2089a55590f2fc2b50c7bb",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "3a54161ea074e7e510a1c7ac9d1d2473359e9b95e4900766ad3e4eac0b1f771d",
					"line": 66,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mosquitto}}",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mosquitto}}"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "44829c55a74b2fc5fc0796d53f2aa907bba5416095df689a80cdd7577e96a591",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "53658cb4b4e3086a154de8fe54c87d05efe0679addb4f4f3b63810b19bf33ebd",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.containers.name={{mosquitto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.containers.name={{mosquitto}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.containers.name={{mosquitto}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "39cdab056a5be878fef20728c6a4bea7baaab2a5ea63343da36134cbe3e08a7a",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "dcd40eb6499420456b0bd0af7a8bbe9487bbd247c09dc0bdb640bc4b831c9f57",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "f9f22e52143474a41653663923b427b29f23b1b0ce3f928061b77407cd9809fb",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mosquitto}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "f80ecfa67292bcab989b700235b7aa11f7cff31f6e2b56a886e7e0b9c8d71dca",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mosquitto}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "b3dac9b22f304b81bec6eca9d892e623c4b458860696fc80db155d1c09a28c4b",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "57f994f3b12bbb2eadd4f7a0b8816fcd2e0dbaab72d0a257754b1c07e416ffdf",
					"line": 119,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "9e876c3e63564e4c1dd8b60e77a13a6e0b6b721e11b0533b9a7a84587105f587",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "8351f62a1c37bc60cb96427976423a3765dee338ba041fd2dab79950439a38e4",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.template.spec.containers.name={{mosquitto}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "ed457fab058a9e98436cfece7bc767e14ae9842a404cd5bb92f51f1afa073760",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-mosquitto-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mosquitto-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/mosquitto_template.yaml",
					"similarity_id": "6826175fbbfc959b844f0c30a3ac076763d8a8ba2642dab7bbc3965820703610",
					"line": 104,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mosquitto",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mosquitto}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mosquitto}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-mosquitto}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
