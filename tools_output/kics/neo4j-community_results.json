{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 151,
	"files_parsed": 1,
	"lines_parsed": 146,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:58:04.040017+02:00",
	"end": "2024-06-26T01:58:06.071204+02:00",
	"paths": [
		"templates/neo4j-community_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "533c601626cccce7af9128d76bf04155487f3ee6129e3691eea81cd4393c9a09",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "d10b91cbd219b868348890a4acac14d9c9384bdaec2e61df9dbee125f0c84597",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "dd50bedf0df0b4b23f530f6b352cf1a8dfc7770dc2ffbd0ee7b2c16a1b47ca70",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "cc307b71c62a7146720ff9e30d76a52dd5727e3bea12b327725a0ddc01067e2a",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "102471d2d4f2b3437e23fc06eb6a1e3a660122e85727450ec6a80cc0bc19874a",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "7a3b8412c53b10b4640d3e81235bc64a3c0f26a6158f716667cf21b21436cb3b",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "e285e46588793d6932c19a9d9d0e6171c68cecd565b33604ecfdd596fd3d5ae9",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "32937c8291d0fffeedd7c85f558c77434c06c5de6e8fe439b0edc25903f0942f",
					"line": 74,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-neo4j-community}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-neo4j-community-sa",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-neo4j-community-sa}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "3ec9e9507de8e1a276ef545174a3bbab20b5593fedc5b64069a93205d1c175b6",
					"line": 52,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-neo4j-community}}",
					"search_line": 52,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "Secret",
					"resource_name": "release-name-neo4j-community-secrets",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-neo4j-community-secrets}}",
					"search_line": 12,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "5351185a55d15d859f8f13d633adbfe968e6ccae062c601e66eecd1744114a2b",
					"line": 134,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-neo4j-community has limits defined",
					"actual_value": "spec.template.spec.containers.name=release-name-neo4j-community doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "1cc740f5b0baa1ba97e2a4e6660244f05e8bbcf30bdd5bb205504231e720e139",
					"line": 134,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-neo4j-community.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=release-name-neo4j-community.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "d6906f2786317fa4c55f13897da83f4338a68f90c6e24546ed0eaa27de210484",
					"line": 81,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "e829759b0cbbf654628031a61d403a3423a90410676df39720ff458e9a351f7c",
					"line": 68,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-neo4j-community}}",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-neo4j-community}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "ae7d62b8300070e5d263264582f36e3b469b035dfe4fa7f40d01aa267b12d4b7",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.containers.name=release-name-neo4j-community",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.containers.name=release-name-neo4j-community.securityContext should be set",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.containers.name=release-name-neo4j-community.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "bf2ebfa40dac9da5821a78ab8644ab414c7b97f14ec4e1d1a0f646e2a430aed0",
					"line": 26,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-neo4j-community}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "3df27423654850284664ab874dba617542d916775e52d83e8a9576ef8621bb83",
					"line": 26,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-neo4j-community}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "1043b02840f2fbacbe5558fe8063eac5b032c6f1233dfd014e732c72adfba36c",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name=release-name-neo4j-community",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-neo4j-community has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-neo4j-community does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "4278a512bfc87416db5bd1cc6b128c141d0efa162aa7fc3ceb83947a3c9f7288",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.name={{release-name-neo4j-community}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "be3a5e223e18fbbd0fd8ac46a9cd6fe567f036135eea6f71e32c43a17c40ab42",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.template.spec.containers.env.name={{NEO4J_SECRETS_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-neo4j-community}}.env.name={{NEO4J_SECRETS_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-neo4j-community}}.env.name={{NEO4J_SECRETS_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/neo4j-community_template.yaml",
					"similarity_id": "2334fd7aa7b082d4c8b4faeb61b87320594448ef02b28f1e18ecd6dca302af48",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-neo4j-community",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-neo4j-community}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-neo4j-community}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-neo4j-community}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		}
	]
}
