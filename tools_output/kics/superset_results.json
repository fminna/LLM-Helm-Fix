{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 105,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:42:38.609895+02:00",
	"end": "2024-06-26T02:42:40.703054+02:00",
	"paths": [
		"templates/superset_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "0c8a1d76507dbf1b18ad397e5578e4c2043646262e82af8322a333ae9479ea0a",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "e20fa6a4d03efe651541aa099cceb9ee383e0f6d89714acadf7072c005ed744a",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{superset-configs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{superset-configs}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{superset-configs}}.readOnly is undefined"
				},
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "5d5bea267cbe1e6ccf4298259fed4c4e960626bd5b2183f58d7036db7f2bcafa",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{storage-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{storage-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.volumeMounts.name={{storage-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "f401a95fcd1453a9624794fdcd3d2c882a8766d3d4a1d4a61e0dec4a74ac1125",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "89e5988d3953eca171a77a2b4ba70940e61de85c1542f823a3dc98c850ddd535",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "baa3c8cbf46c802f8c8aa3c0e4ae83e7224960d566e20b38ab1724d0b66a720a",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "53944a1f0eb688b2f958293cd4d477d7f3f350861912177f50a48b90e4c8fe82",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "8b5aca0044d6fc23f29c76fd9328b86184d43b0264f34bcee9dc125229997f41",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "55314ed43663ef98e81230b14eb9b33d052ab713e0ba55025adc4c1f31039ab3",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-superset}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "cd056504dcccdf788dd9dea8fb840520ae19d1c9cd7b93c84491d36fa0a7bb02",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-superset}}",
					"search_line": 42,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-superset}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "d075c4a8818c61b5dcd2198b14f428c4e700f670d928348de85b3b8b522819bb",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name=superset",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=superset has resources defined",
					"actual_value": "spec.template.spec.containers.name=superset doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "b572de606b47a526b24e55e472e7d9132ec31a393654f66fbf7fee710429b5b9",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name=superset",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=superset should have resources defined",
					"actual_value": "spec.template.spec.containers.name=superset doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "cf12100bac2a89e257a5331687e2651d5490cc3902310278931a64c12e7c4e98",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "4f3bce1c4994c35d2f80ff175d0c8ce4639bfe802b81cb3107a0e68a55135910",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.metadata",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{superset}}",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{superset}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "5307a921b8eada97b1d581b11742ac36130cddc8ba6093689c7eeeb31bc11006",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.containers.name=superset",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.containers.name=superset.securityContext should be set",
					"actual_value": "metadata.name={{release-name-superset}}.spec.containers.name=superset.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "943cb38b2ae4e70b0fae4a29b011e31658b36271aa84157d6cb264d223128ec8",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-superset}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "af3532841701124aa2c5f7d151ca4e71bdd04d18e86bb5d50e432af656162c67",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-superset}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "a628cc91f71f8d7108cdfc9e2cbcff711e6245c53006ef8d630767361e282bca",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name=superset",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=superset has a security context",
					"actual_value": "spec.template.spec.containers.name=superset does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/superset_template.yaml",
					"similarity_id": "c2cebd096602ab4ff4c64c4e5d77d49cc460b7bb966124770ed1514f9a2e8090",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-superset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-superset}}.spec.template.spec.containers.name={{superset}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
