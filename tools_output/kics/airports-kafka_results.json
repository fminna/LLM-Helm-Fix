{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 123,
	"files_parsed": 1,
	"lines_parsed": 119,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 21,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:00:10.803716+02:00",
	"end": "2024-06-26T01:00:12.94409+02:00",
	"paths": [
		"templates/airports-kafka_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "ea98e7727fd547bbc92d39a2bb318770177cf26bb500a5166212ec27cd0bb777",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "078dc3d8a0e8c3ed44fbf211bb15e279b28978e9aa1114f8797a6ef278f06867",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "85e5563bc3dfc1e07cf26e5572922463dee86851638b9d5a364d969cf705a252",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "71e33c4c782202ac155979ba27244594bb45c92ef632f866a69a230bb3ca403d",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "dfcee775d67aa4bdd3a664bbaf8c596ae528726836c3aec0dec0fce95db86f9d",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "8267b1a7e3738deff059bc8ae7bc943d2a43b46cb5f428c3bb6b1e4873981c33",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "ec13f1d17e44042614501baf2dd8a73a5ff6d5ce1a2b7ce230994484fb1381bb",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "9bb720dbdda4f28d705e7b309cf39b9f735f14044d000c2bf19d2a968567a179",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "801e0a8be53a72fe4f8965539bed65ea6fc3ed4e3f87c71c2244f57eb6821a09",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "21ca63f83166c78a971d9e28e291cdd12082636b70979bc2b5fd59867af3c320",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "a7ae6ab32f8f71135e73ac11fe9b877cd8b84433704c37cb14e75fe1a429e60f",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "dbc6eb653506d6917a8831923f1be425020e9fde361fdec486985fe116e2a984",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "330bc004936af5eb5eda31ef1bbb6462aa5b99ffd9ab559c6131fe4bee8347b7",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "e43d41c98b4f1a6dd77c3dd2dc1887aac0ad87d0ac05ddb4378b118f79726792",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "734d5d67cf19a6e6d073e0a5347a2838cc4a925d758938a777c7b0cd2350a25b",
					"line": 58,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "aec948473aa05ab9461998a8be23e996f65aa75e128ff958e7128224501bf3d1",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{zookeeper}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Service",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{kafka}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "6feb64159adfaa35819a55c3918f57b6da70382d77117cb187b05d3cbe3125a5",
					"line": 49,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ReplicationController}}.metadata.name={{kafka}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{zookeeper}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "2b21b16adc74008aca73f3edc050f7e679c73187bacd12082383969431f39b87",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name=zookeeper",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zookeeper has resources defined",
					"actual_value": "spec.template.spec.containers.name=zookeeper doesn't have resources defined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "8863c45645a35d66ade44a42a5cdf2e419142d162cceb8a3f631bc5b552512da",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name=kafka",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka has resources defined",
					"actual_value": "spec.template.spec.containers.name=kafka doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "e6240b471fe794a2ece90c4b97568cfd7b0ce295291de857c8624cd0747daa39",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name=kafka",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka should have resources defined",
					"actual_value": "spec.template.spec.containers.name=kafka doesn't have resources defined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "85c55a94afe00605b0bf2ece8590a3bce573f78a1ac23e893f656ef913a68d05",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name=zookeeper",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zookeeper should have resources defined",
					"actual_value": "spec.template.spec.containers.name=zookeeper doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "64446409d5cfb47d9ea4bad598f6ab5f52a5c75b30f1493d1e6d7aeecd99c07b",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "6dffd2f03b79fcdd4dd7458249e27229e945166ec9f078d3f5c06a584a366259",
					"line": 61,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "03109ef706fbd9dfc99dead5aef7302167cd51c01d49f5d32ac23f1ff4ebde11",
					"line": 55,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka}}",
					"actual_value": "metadata.name={{kafka}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka}}"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "fd932c298237488331e38872800c3f14b01a09fc4db7d56677c8ab6df869cb6f",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{zookeeper}}",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{zookeeper}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "d6df832c96f94118cbb2be5ebb23224a83f4f9f13a4f933669f824493e2ea784",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.containers.name=zookeeper",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.containers.name=zookeeper.securityContext should be set",
					"actual_value": "metadata.name={{zookeeper}}.spec.containers.name=zookeeper.securityContext is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "cedd3b048529a0e0f809f2eb25abc96ed1ff3333fea9b4ff30df70dcbd62b252",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.containers.name=kafka",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.containers.name=kafka.securityContext should be set",
					"actual_value": "metadata.name={{kafka}}.spec.containers.name=kafka.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "0231bd086c5e62787ee3eb75c5fe0ef0e055f320dddbdd53af9a1eb50e7701f1",
					"line": 29,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kafka}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "28d0634cb5e11a5944882e2559b8b0ba89efc1edf582b50f859c1fccec5ff401",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{zookeeper}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "e62493b1f2078c6af96c74d6718e0e52872be9e4799232188df42fa090bafcfc",
					"line": 29,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kafka}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "20df7c7819ef772d759f27ec68a9443920bb4aa831b6cf1216551fb0da816517",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{zookeeper}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "3b34dc01785c9fac44f21dfcd07c1f81934eff6ecf54c192defbcf2f7815d71e",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name=zookeeper",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zookeeper has a security context",
					"actual_value": "spec.template.spec.containers.name=zookeeper does not have a security context"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "590bdd2269d46d627e5643948b145901a4b2b4d2fd4328488fe99485ff872da4",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name=kafka",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka has a security context",
					"actual_value": "spec.template.spec.containers.name=kafka does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "1b2f65a3c6e397b7b5682dfcaed1e4c1d1dae8a79defcbcd02bea2bc7ba93702",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "zookeeper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{zookeeper}}.spec.template.spec.containers.name={{zookeeper}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "e1bfa232e4e9684965f1a03532d8ae6019a7ae281e2122c713b1aba48a13830b",
					"line": 60,
					"resource_type": "ReplicationController",
					"resource_name": "kafka",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kafka}}.spec.template.spec.containers.name={{kafka}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "ccba3010738ccc83dc677e17bc803aa5b8bea515018ba14350c1cea2dfca522f",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "kafka",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kafka}}.spec.ports.port={{2181}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kafka}}.spec.ports.port={{2181}} has a Pod port",
					"actual_value": "metadata.name={{kafka}}.spec.ports.port={{2181}} does not have a Pod port"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "9e4d843fc230b03fce8e628466568936c1049d8180e0c96f4321922c4adf07e0",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "zookeeper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{zookeeper}}.spec.ports.port={{3888}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.ports.port={{3888}} has a Pod port",
					"actual_value": "metadata.name={{zookeeper}}.spec.ports.port={{3888}} does not have a Pod port"
				},
				{
					"file_name": "templates/airports-kafka_template.yaml",
					"similarity_id": "1918a400734b612fca977f03068db0cd2f9326eb40482c7d1830f22bf16917d7",
					"line": 15,
					"resource_type": "Service",
					"resource_name": "zookeeper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{zookeeper}}.spec.ports.port={{2888}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{zookeeper}}.spec.ports.port={{2888}} has a Pod port",
					"actual_value": "metadata.name={{zookeeper}}.spec.ports.port={{2888}} does not have a Pod port"
				}
			]
		}
	]
}
