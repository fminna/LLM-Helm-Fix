{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 212,
	"files_parsed": 1,
	"lines_parsed": 201,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:36:10.549592+02:00",
	"end": "2024-05-17T22:36:12.408907+02:00",
	"paths": [
		"templates/eventstreams_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "203beaef19cda9043eafc279ea2a34af9d06d3978821b21de9545c966331813d",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "11342f3e39d473ab25fc795d5065b2b3b58e2c125cd4b987292012c8df3291a6",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "75bcd178b82cb864e5c4f0f67827e8d243debbddd5312acf82482981c5d02204",
					"line": 189,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.volumeMounts.name={{eventstreams-config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.volumeMounts.name={{eventstreams-config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.volumeMounts.name={{eventstreams-config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "1d6a6aceccedd46c380f0541adbd55e837423b8d68217cb03c0f782063cb182f",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "ea6e7dd4b69de849d985a52950bea77b9b2e7e42245b3d49b4f466e28652624a",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "5bcf36f5511a814aea42721ca22e493278640561a3d2b95344cd05b348fce9b5",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "55cbcce18d2de0bc4a4b9f375481b071e053e9874be76ea49416eab0461f40b6",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "20c187bac19538c551199fd0d006277bfa10adc0adee0645c6f4b31bed530ec6",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "a369f51b4422ff2f4053f9caebe9543a7f706795303b16ade1730f80e3c5a00a",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "4d350828ff72107b4686b229bf29ad4ac5c46b89f7d93c9e1894429eda3a1368",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "a8e61db2ba1522daf700860ecb5d4ad954ed4452720a23e584559fd40411747a",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "22d3f27290708419ddf21fe740cc2bc201020f58e96cd3bd402d0ccb2335cc00",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "cd0cbca655b7de3cfcce23adf5dba98b3b8be10e6f24841e67c34a202fae46b3",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "b92115b985e02159a5e95b41191bef8ff96ac8b68d25a992205a24b861ebfbb8",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "d194326a2bdffcbe4f3a0a41ede00d7976f5b21f3450379daa09086eed383d68",
					"line": 204,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=eventstreams-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=eventstreams-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "71d1c47f5df3c63466732baf173976177a9d6e9cd252a0bb7a93d3c7c5750a77",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "5b7e4546f36151e84619009552619c2473c70f6c4d9dcbee921798dc0db9f0b6",
					"line": 204,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "236112b224809a61e7fa1000ddd2b1f5c5950186315f003cab3ffa470a5779f1",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{eventstreams-release-name}}",
					"search_line": 132,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "ConfigMap",
					"resource_name": "eventstreams-release-name-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{eventstreams-release-name-config}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "31e5f0f9b7c283b596204b0e9b042f6e4c4c68e343eea491a01d50d21da0a2c6",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{eventstreams-service-checker}}",
					"search_line": 200,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Service",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{eventstreams-release-name}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Secret",
					"resource_name": "eventstreams-release-name-secret-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{eventstreams-release-name-secret-config}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "23389d8de27f6cbd50df166f63836c33e1c3b65a8d214aedf56427b0a0e4b66d",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=eventstreams-service-checker has resources defined",
					"actual_value": "spec.containers.name=eventstreams-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "7bd7eecb83933136f4bb9e59c91988d430c700b984dae535aea624b238f68889",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=eventstreams-service-checker should have resources defined",
					"actual_value": "spec.containers.name=eventstreams-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "1d040b9e9b1ed0e56a587f3bde8bda8b1d6d9c58d784a1f93f522a8073a670ab",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "cca1d87405927b9670db978a9e8ddb0aa2394cbf45178d9c09fb1c81703a0a3f",
					"line": 207,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "d4d730f58af0ec2224a8a3ff554404974276e4f6beb9db7e72d5a6cbd39e3d67",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.metadata",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{eventstreams}}",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{eventstreams}}"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "7b332fc92c8d91966e8533e4364ab0ebbd8ae684243674c2b6def5a35ad61108",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.annotations should specify an AppArmor profile for container {{eventstreams-service-checker}}",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.annotations does not specify an AppArmor profile for container {{eventstreams-service-checker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "a7018e170a77271cb1c428f81942edc9a9c3f78904474dcd257f9170ec0e2957",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker.securityContext is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "c451c64ab33f91c97b172faf35d966a080adeffbae93da63f5e73263561ca096",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.containers.name=eventstreams",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.containers.name=eventstreams.securityContext should be set",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.containers.name=eventstreams.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "1f935ade6afc7264250743d03f2263366c6735fb927fa6bba874e5ba1e96800b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{eventstreams-release-name}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "c9d1b5f397748c4c0a5ee76259c29bb44ab4ab6d57198041028e53d2d77ac4df",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{eventstreams-service-checker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "ebe8ee61d96fa69cf907df69bb7d9f677f8dacce7939dd3743e469435a9eceae",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{eventstreams-release-name}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "df115f823268be2767709d62921bd527d9aae091c30b9efd5de4a1c458217514",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{eventstreams-service-checker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "573c2f3842979a6ad66e775467acad432b87d6643d4a89388cf086ff03682130",
					"line": 204,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec does not have a security context"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "d5e929887628ae2bbc958428d15306527bf47d516647ec120c2ca0c21eaad309",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name=eventstreams-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=eventstreams-service-checker has a security context",
					"actual_value": "spec.containers.name=eventstreams-service-checker does not have a security context"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "2f7075ffa68db3e0a0cec45f7f4468f0d4b1018771e12814354510c3cb69c29c",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name=eventstreams",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=eventstreams has a security context",
					"actual_value": "spec.template.spec.containers.name=eventstreams does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "a64545bc289fd216f49eac6e0314b4256f622a181a31027ece55db611c7f087a",
					"line": 159,
					"resource_type": "Deployment",
					"resource_name": "eventstreams-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.template.spec.containers.name={{eventstreams}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "93f552930d4745130c8ab241a8580e28566448b5175e0a9531ab7321e5f697be",
					"line": 206,
					"resource_type": "Pod",
					"resource_name": "eventstreams-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{eventstreams-service-checker}}.spec.containers.name={{eventstreams-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "a053f41bc2ac158130cc9b5012de91033942d4b8dd775eb7594ff9282d5d5870",
					"line": 113,
					"resource_type": "Service",
					"resource_name": "eventstreams-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{eventstreams-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{eventstreams-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/eventstreams_template.yaml",
					"similarity_id": "0582d3938e8bbc78a5c59ec627b914f06d8a834df1dd63565a3faea73501b7d0",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "eventstreams-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{eventstreams-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
