{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 240,
	"files_parsed": 1,
	"lines_parsed": 234,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:14:14.892999+02:00",
	"end": "2024-05-18T00:14:16.863359+02:00",
	"paths": [
		"templates/hedgedoc_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "0a5638fdf8200507277d17a3b3faa6b855b43323a464c20e1f95b7ba4d091b92",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "5ece5f41128d8290518961f797598a2893f07f3ef1a34d3e221697014683702e",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.securityContext.runAsUser=1500",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "6629ce0cc77a88d3d83118522d75d0665832f9fd39ce9ff3988806e4629d535f",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "4d6ff8d620353e3e7b87e4e8081dcaa2ead2d57313c88cc6388b68c260821cbf",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "7d9527ea626a6cf2ea41d535189fcf82998c192d48763b1ae9aa32e01490c167",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "35940ab63a34587e50c80fafc27c2fd2a701965a7fe894254f645a80abe2b02b",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "f1fb49add2ebeb904b71c5156c4726c79f27fb8336288ab38b248f36957127ef",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "d3104bee69b1dced3fefe4afb70cdb891179f51e94827502615a01cfa92dd323",
					"line": 40,
					"resource_type": "Service",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "Secret",
					"resource_name": "release-name-hedgedoc-session",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-hedgedoc-session}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-hedgedoc-auth-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-hedgedoc-auth-env}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-hedgedoc}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "8e1990abd57522304df4a851d0f9f0e0a2b0824b2e0a5def642be0e1dea35442",
					"line": 15,
					"resource_type": "Secret",
					"resource_name": "release-name-hedgedoc-db-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-hedgedoc-db-secret}}",
					"search_line": 15,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-hedgedoc}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "dc96917e6b4ac6a4da6f977996be6b55e5b2ab6c85bb23aaa67368fa0ddaf1ba",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name=codimd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=codimd has resources defined",
					"actual_value": "spec.template.spec.containers.name=codimd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "82d859f373a1b8d58605fb3e7e2e43d61a8b6735ae7cce2c38415ef94d63118b",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name=codimd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=codimd should have resources defined",
					"actual_value": "spec.template.spec.containers.name=codimd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "9835ecb0b980347e653045a1c50a0b5a2ffc2fd7ecec50df260790b92147e244",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "4756f400396c25f8857ea8e576e6f1de9abe200d986ffd97e4f82706f5ae14da",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.metadata",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{codimd}}",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{codimd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "3f6eb4f2b4a3f51eccd1200059ba08f36478b56ed803abcdebe54d2841c03f30",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.containers.name=codimd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.containers.name=codimd.securityContext should be set",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.containers.name=codimd.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "ca5d9a000513d5ad42bb1b9eeb51a6dfbac5aa9beaa110acc37dc1f6e1fc8233",
					"line": 40,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-hedgedoc}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "75f9c3dd59a67accc764759af51e86ced01f92d8f441a71db86738dfa1710d63",
					"line": 40,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-hedgedoc}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "c20dcb4ce467bb9bd43704c105b2a7c0ce52153d21b679b498bf998eb225cd6f",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name=codimd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=codimd has a security context",
					"actual_value": "spec.template.spec.containers.name=codimd does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "a48e426d86c255aa1fa2919198b6a813c10d636694abd2171eb08ae74891f914",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "4939f43faabdfc094d2b2d94098cfb0113ddc195690f5aabca5e87f214a92492",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.env.name={{CMD_DB_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{codimd}}.env.name={{CMD_DB_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{codimd}}.env.name={{CMD_DB_URL}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "55e586f2f3465b8499412d717a55fb1b123bcece1ab3b7e1264fdfe14f92625c",
					"line": 199,
					"resource_type": "Deployment",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.template.spec.containers.name={{codimd}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{codimd}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{codimd}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/hedgedoc_template.yaml",
					"similarity_id": "a98f19b990ada52603ce827ddf6c6a82de1c0a3adaa9c3632d7356d4f214b824",
					"line": 77,
					"resource_type": "Service",
					"resource_name": "release-name-hedgedoc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hedgedoc}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hedgedoc}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{release-name-hedgedoc}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
