{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 611,
	"files_parsed": 1,
	"lines_parsed": 576,
	"lines_ignored": 35,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 32,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:45:46.265515+02:00",
	"end": "2024-05-17T23:45:48.226245+02:00",
	"paths": [
		"templates/provider_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "99f0383a90969407ccdd306efdb0e896f34ef72eb6b1098e4fd81ce8ffc2d786",
					"line": 607,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.volumes.name={{provider-config-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-provider' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/root/.akash/k8s-config' mounted",
					"actual_value": "Resource name 'release-name-provider' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/root/.akash/k8s-config' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "c99bb7092d4699e4f444c002bbf99d3f75104af3837c5b2b79e2dd7e886a75d2",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}",
					"search_line": 442,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "7487dd216f0fd9ecc7b2997a1601f4600fcefda682531096c447346aec75654a",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 375,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "8b1221228ad65b81a957decc529471ed21d5b0e1c242750d516b88a985fd3d66",
					"line": 595,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.volumeMounts.name={{home}}.readOnly is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "4739564d56888239a25c33d6119fca5f85eaaa5fde99829712def16504d2c942",
					"line": 438,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "cbc752ba19d78701a16b74c3bdd612338895069d758c7fc9172be80aac9f95b7",
					"line": 607,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.volumes.name={{provider-config-volume}}.hostPath.path",
					"search_line": 607,
					"search_value": "",
					"expected_value": "Workload name 'release-name-provider' of kind 'StatefulSet' should not mount a host sensitive OS directory '/root/.akash/k8s-config' with hostPath",
					"actual_value": "Workload name 'release-name-provider' of kind 'StatefulSet' is mounting a host sensitive OS directory '/root/.akash/k8s-config' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "4c11d622fe91a0a03374a5e1e67dcc307b544168e8de16723098d5927dde898a",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 375,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "56565d441b561d26652190cd9668f37907d0fd99cc5bf14da5013edc45a96075",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}",
					"search_line": 442,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "d23061e39959b05d35296f9df1e817632c02f18dc9d6c05aa908029d5ca1248a",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "3a62ac9eab349e7b2edca16958f1f0f3cbe51a202e56e9d5ccd4a56946daa74a",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "b041ba3aebbf038fdfcdca83176877c155ee62880ef65f0991b8e6173513735b",
					"line": 374,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "247b379301918a6e22a4d5cb40d14eb2e8243814eb4c697d9264a8002e9a842c",
					"line": 441,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "fce4ced08be60ce95a05386ada8c64b636e2b3984020d2c677433daa397a0f19",
					"line": 441,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "5b57a70af320f1e120836e1b82f5756850be3f3fc4405af80f9325bac6c1c29d",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "92323b96807fb001d185e6684de3ae02624b7cb7a62cd7b09403934aaa9a351e",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "30efe2278aedd9450ce310919da698ec26672df0446d0108135b8af8247fc44d",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-provider}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-provider-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider-scripts}}.namespace",
					"search_line": 32,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "5d01d193f888d9c3eb325d6c2fbbe30d1b118ac44ac0e74119830375d49cc789",
					"line": 343,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.namespace",
					"search_line": 343,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "16e80b6fe28c2a007a8b24d4e41ff94bf874fe4707ad4dc4830499163bc9c7f3",
					"line": 311,
					"resource_type": "Service",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.namespace",
					"search_line": 311,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Secret",
					"resource_name": "release-name-provider-keys",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider-keys}}.namespace",
					"search_line": 21,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "213dedd0b3461a4581c822110126b3ad148d76c04d4720a29b41cee7bfd95e21",
					"line": 303,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "release-name-provider-admin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider-admin}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-provider-admin' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'release-name-provider-admin' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "5349d0e629d5ae0dfda43096b36aef156d56aa839df35791373710baa8336283",
					"line": 446,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "9466f004ad429e2583b03240758bb667187745612e6a85e3209394358874a7a9",
					"line": 379,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "c75aae6b0050789b91c79b01457acf50d491c0071b48ca3fa4a1fc69958fe937",
					"line": 363,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.metadata",
					"search_line": 363,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{provider}}",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{provider}}"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "c75aae6b0050789b91c79b01457acf50d491c0071b48ca3fa4a1fc69958fe937",
					"line": 363,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.metadata",
					"search_line": 363,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init}}",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "9f0dc8a5a2035a761512d184f2fd0f550ada0c88646321670fe7f3a3ef48d8f1",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.containers.name={{provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.containers.name={{provider}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-provider}}.spec.containers.name={{provider}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "54ae9182ef3a26fd071ae493c6ee224ca0338c67d371f1449df50959ce6fec14",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.initContainers.name={{init}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-provider}}.spec.initContainers.name={{init}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "e206a41f6064348b86f3204a515f7997145c5ec9fa49b9c99b9210178390ac60",
					"line": 343,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}",
					"search_line": 343,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-provider}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "2ff4f9b25bff8964040d72d9e33939ac73395d60dd87cd9d5678e8239e0b4ff1",
					"line": 343,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}",
					"search_line": 343,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-provider}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "6faa3f322c6ac81636739c40611f879a8ccec758d7500b3f14a35338e40e0f61",
					"line": 375,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 375,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/provider_template.yaml",
					"similarity_id": "85d41413e1bef3b4504c3851648c58aa918545ac850c8d67d7140d171862dd90",
					"line": 442,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}",
					"search_line": 442,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-provider}}.spec.template.spec.containers.name={{provider}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
