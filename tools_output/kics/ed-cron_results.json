{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 38,
	"files_parsed": 1,
	"lines_parsed": 36,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:49:42.077148+02:00",
	"end": "2024-06-26T00:49:44.060845+02:00",
	"paths": [
		"templates/ed-cron_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "09d96e9a64f715b798711f2f15b2a323d5c9bc843edac790a3e26fb467b36b88",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "4607aafb3dac8a4d690c7af0f5b1980d7968741356c9569ed61c6477c258f127",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "af2236f72ce61161ab414887fb1a2d5fae3e3adcb72132cde0e3484f8d003f2e",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "17413917fcfa7d92f9c74f46dea8f313e14c29468bd5518409479d8250133057",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "6d4a360bc3a5e7721debadd45e6db1fb205a266fe3b456f6850830ff29a1a814",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "0577317f600f1aa50204067485bb477e34fcbf113549962160a9b01c3955f577",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "a5adb32be52f4d33a5624a345834972547398603f93e88786a7c288b16d2e87b",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "d7757aa8a1c56fdc393e6cac925e486acf1dbfbeece50227b4e5f4003288352d",
					"line": 29,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-ed-cron}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-ed-cron-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-ed-cron-env}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "55c93d6f50225277c3a0bbac5718d4cce5a42440a7445bc894adc92b93b49dca",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=app has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "436ac2446b90ca1928800edd94fe289c0fb95d5cc432f650217c21f588aa9338",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=app should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "e1f6dada609fa9acc4cd61816fe17477e5df38221f3d67653747d20806738320",
					"line": 24,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "9e93f329a7a26c0ec09d722ab90fd2ac5866237e19054933df1aaaa6cf971e98",
					"line": 34,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "f7b888a672772911dec2b62f11f896380b994d462fd4839cd30515ccbec39dd7",
					"line": 18,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.annotations should specify an AppArmor profile for container {{app}}",
					"actual_value": "metadata.name={{release-name-ed-cron}}.annotations does not specify an AppArmor profile for container {{app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "2a80d9c0debde313084db82cdc9d643759af7dfbdccf13aa6b247a40110eff93",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.containers.name=app.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.containers.name=app.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "cf34d302e29cfe17967a4b42a286c9d9d4dd65cb11a62b9f6ad31f97457f0cb7",
					"line": 18,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ed-cron}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "70d85d08672a2beef3ca20a51312cca721784710b1db3adee0f2d1ff37cc4843",
					"line": 18,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ed-cron}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "adc7449347e2e979e358ef9d59f7a26c137cedceee8073e28008f53352ac5b61",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=app has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=app does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "81852025889d8e62e3740631c6d237772d6ca03ee01ac10e5e0f7f77d44261cb",
					"line": 32,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/ed-cron_template.yaml",
					"similarity_id": "a69bbfc28b9b02ab7899749fbd9451eda9ed4384fb60f9ac29b1e238d16f5a8e",
					"line": 35,
					"resource_type": "CronJob",
					"resource_name": "release-name-ed-cron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ed-cron}}.spec.jobTemplate.spec.template.spec.containers.name={{app}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.jobTemplate.spec.template.spec.containers.name={{app}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
