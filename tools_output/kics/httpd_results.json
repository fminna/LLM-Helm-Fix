{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:35:56.698794+02:00",
	"end": "2024-06-26T03:35:58.833979+02:00",
	"paths": [
		"templates/httpd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "b1ce028783ee9d838a1d36d1f1a89c8c906ee084d338e685c02166315949a43e",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "f85e37fa3af8d3ec3a64fcd29907ebb5c290eb034d4219275bd64a45b6c4f54f",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "81ac2ee4b10aabd3eb94ab52b4ae66c9ff4c50378ad3b4f7795fcbb12b49d868",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "8d199e79c01b38fb2a159b8d692d731f7b1f829b61272abe9dbe230466a3d2ec",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "97c3b544bbd2647f949cfdb3b8705d2fca83e896ee4dd2933bcfb2bca8c7663e",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "099f18fcba94b855a6e94bcde36efd529b2ec56d57014c2ae53d658d4e042fb6",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "095842679eb2fb596fe079c6a2a400904d8657422eebd18a31105100076f19fa",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "701f95a167b92fe3f16294aec2376f67d9deb1df0789c3649fd1b4f6819ba906",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "d574cb4a61ae9172ede13338dadfdde316049d355244275b5c79daa4d5187cb2",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "30d63f1418fadfd478670c0179c6886bf599328057e0c3dadd55a049e13e06ce",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "1497758012b7829da0321318f1317b958d1f8cbbe363f3c202e6f6ed73d457e1",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "8dbc76fc59378b948b36ce802a916ba4a4466c0489cad7e86920122412f78c39",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "7a3a6de9d0d6d874bf9fb733b794baf142b59f4ede22a76296922aaf40288ac9",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "a179dfc2a87a9bca9d389fbf0813e0ddec25cad1d4affe126252577646d30957",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-httpd-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-httpd-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "251dd687a47cc49b1bc2105c423f11ebcf7a73273cc6c735e374ed8fffc56194",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "b8a6a834981a2abc34e93637924518ef5e505a9215cd1dd2eee06fa283374a62",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-httpd}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-httpd}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-httpd}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-httpd-test-connection}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "4bb25586e2ad193a80f45a1b34d1e72d67b418a477907da564ceffcf1b83969a",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=httpd has limits defined",
					"actual_value": "spec.template.spec.containers.name=httpd doesn't have limits defined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "754cbc697fda86f91c11007a6a1eafdaa96bc32584ae312e7f6897e4ba478bf7",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "d89d1b2c7928f8884ffcf53a5ee1aea972d3e9ebc052ec496e54018331156b2b",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=httpd.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=httpd.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "cc476a5c5bb832662f504a5aab412af2d06cfc17331475150328bfd104183704",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "1a982c8dc9821ea657b11fd340370094e001c4a0d1a09c8bdcc26ddb312c2f1c",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "760fa0ac8c91e124ffd0fd8d9f26b31a77eb7e328fae5f2e10360c152ec916c2",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "43753b99a578a4c1f1b6ad7cff813750f82cf30281043050175074d8832fce28",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "ba5b23bb8198427dc2b2a1cf349d23ff60ce116a9e3e9c9a3fa432efb8e4f500",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{httpd}}",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{httpd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "d7f9672755202a163502547f70e7df5c1b60341c9fb236a2e04d2bb5ca27761a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "42776f54f7df8fc426ac01ad1d7b3ca2b514d0dcc4afea1bbe12bd072d2d7823",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.containers.name={{httpd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.containers.name={{httpd}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.containers.name={{httpd}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "8f26934ab44291700d3b705044f1873c5361a2996c8a9f5440b84e722f9cb974",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-httpd}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "c2e17c58ced75281d4c8f7c276c0a00937ba007a122002e6aa2a6d3128ffd052",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "59901cc50857c585a6cb7bb5d8d260dabb42c215587ae8d780b17fedee6ee44f",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "7f53c1f4a97cc31606faefa471e7fc5e32c37d52094d7e68fa6552ec6f879c04",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-httpd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "7f2aeff56e160842c8cd8293b0f35afd4da5439d805457cf18709d0b595048c5",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "ebfbc8f1622c7d1f1b92432ca5292bbc1433d5e459d6a1737fdb692684e17d87",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "325231f4135d68fd0104dd3ae9b6b51f9c3ceb8fe517ecb6398869a4b0251f99",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-httpd-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-httpd-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-httpd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-httpd}}.spec.template.spec.containers.name={{httpd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/httpd_template.yaml",
					"similarity_id": "78036980dc37c89e4cc335ef2c069e472f5b9d751c5ecb919c1bdf17aa64bedf",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-httpd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-httpd}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
