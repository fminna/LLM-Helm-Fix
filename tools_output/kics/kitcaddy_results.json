{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 194,
	"files_parsed": 1,
	"lines_parsed": 189,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:03:29.059231+02:00",
	"end": "2024-06-26T02:03:31.211269+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/kitcaddy_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "112bccbd21217269a42cd9e44c43accebd13513e53d6b55ad243aff0e401955e",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "e6e8e723e017c3320bb74719d8d96f8176d17948879d7432e9e0b9e44f7a9db6",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "bd33de11a7a0cc087e645f2e64b9d0f8dbe611e96bf5b767df50607045d5c95d",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "1d7e481820063bc68ff4e867a1d49a1cb0de4d6439b8273f242755cbf6b21811",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "d066ae3ac0809134ae13c2283a680a46362b7fdea592b29d5523c1565f9a94b8",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "96426ae76b6b666a9cde7b60d0ba0ed46bf6793e9e2b58e4bb7a5465799046fa",
					"line": 181,
					"resource_type": "Ingress",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy}}.namespace",
					"search_line": 181,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "Service",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy}}.namespace",
					"search_line": 55,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kitcaddy-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy-config}}.namespace",
					"search_line": 25,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy}}.namespace",
					"search_line": 79,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "0719d9e4687829cd1b63a8288b8b028289e96ee32bca7f9d9c69e0515eaab878",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-kitcaddy has limits defined",
					"actual_value": "spec.template.spec.containers.name=release-name-kitcaddy doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "717f5e1764477ebb2b8bec4a060389c965619429bef7023e548cb98c99d7f3c3",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-kitcaddy.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=release-name-kitcaddy.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "04506044a855af06d4de912cdbb09706bf370bb4e27d08b12924ff9916a512af",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-kitcaddy is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-kitcaddy is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "03464ce9af525d0362bc9a8634a8599dcdbba0498a059a1d094add64b2ad3ee0",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{kitcaddy}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "b69d7d652406d4bea579afe413aa34d4c11bbd830401f7e22b8d68f29e38bd50",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.spec.containers.name={{release-name-kitcaddy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "27f52233c6f6f0798b66a7ad27dc105918efd4d10745a46a2a73a9c24a6df79c",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-kitcaddy}}",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-kitcaddy}}"
				},
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "27f52233c6f6f0798b66a7ad27dc105918efd4d10745a46a2a73a9c24a6df79c",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kitcaddy}}",
					"actual_value": "metadata.name={{release-name-kitcaddy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kitcaddy}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "b01dbf839f17e3fc129f07d92ee202d6eceb260e531e29c05d82b2a764d8aa76",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kitcaddy}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kitcaddy_template.yaml",
					"similarity_id": "d56b3f0b7879340dd9ad762463c4c46a98b7650171d2d59b8ece626ab1f63c76",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-kitcaddy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kitcaddy}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kitcaddy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kitcaddy}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
