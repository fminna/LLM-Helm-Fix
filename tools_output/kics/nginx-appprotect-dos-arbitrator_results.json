{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 60,
	"files_parsed": 1,
	"lines_parsed": 58,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:33:52.906029+02:00",
	"end": "2024-06-26T02:33:54.792983+02:00",
	"paths": [
		"templates/nginx-appprotect-dos-arbitrator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "9f5535a22fd326c499590da41c69673b5dbc3b05ba817bb77a7230b07872d119",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "8005c3a4924a081266ea12cbc449c49034200be15bc1d6ddeff3a783f6c7dd19",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "701335afe9dda8338de97eae9c4bfdd35da819a93dc870adfbb982d79a9772af",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "5d7cf2c828d94aadc1d8ce5c00ded94c98549ef5705d2a9e448c4f863e164e27",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "c6a0ab387a2d7387ac39b7630a0a3e4494e204c2bf6973109f32f4f3077437cd",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "svc-appprotect-dos-arb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{svc-appprotect-dos-arb}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "adddf079b8d3728aaa21ddceb0f238c7403734148e11ac871fb5f1e11c2a2db8",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-nginx-appprotect-dos-arbitrator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=release-name-nginx-appprotect-dos-arbitrator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "05aa7c4fe7dbd0d70104ef5410598148b3b7c061a752fbd905aa3acd5525b460",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "50486932019b842d3be13c9a0505681438f6fadf5b6b9ebb43cc86283c617906",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-nginx-appprotect-dos-arbitrator}}",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-nginx-appprotect-dos-arbitrator}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nginx-appprotect-dos-arbitrator_template.yaml",
					"similarity_id": "91ced64cfad0396209d9277992a263f6a8056d16370f6b2cfcf4a14bab242c68",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-appprotect-dos-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx-appprotect-dos-arbitrator}}.spec.template.spec.containers.name={{release-name-nginx-appprotect-dos-arbitrator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
