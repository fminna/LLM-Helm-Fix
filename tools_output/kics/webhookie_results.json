{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 145,
	"files_parsed": 1,
	"lines_parsed": 141,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:17:31.864834+02:00",
	"end": "2024-05-17T20:17:33.765917+02:00",
	"paths": [
		"templates/webhookie_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "974a5a68797e6dbffea38c41e4977983366866e225357449291d9d4022e2ddd9",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "1b83c1ac25eb113735ae6149b911c38a69e8bb3ac2481f6ebeb9345a502a4551",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "527dec9d28469faeb210d066deed85294024e8348115c464dc1db4aa6ac8b0a3",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "153af9d20a8521badacb755aacfcb4a3ad9161568f58e953d51336b8ffa741b8",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "c918650a9a4e9b2bc5e4cb46ed00e49dcd72c647af6d6aebfa37b0d2ed130d1f",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "2cea9a351007e5d10d909d05adceaa12b9da431007869bf84fe7d128b1b3ef3d",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "0c4200f52107be91131b541f8fee2cd8461acec5addc27ae422b7e1a675f65ec",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{webhookie}}.namespace",
					"search_line": 31,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "18bd6d5b1eb240c27528b15e6a79fbde6d5dbed88a41f781c9a219b06448cff8",
					"line": 120,
					"resource_type": "Ingress",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{webhookie}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "ab84076330460b372b2682b7bba6bc848eba65c25d5a0e29291c858cd5c64ada",
					"line": 11,
					"resource_type": "Service",
					"resource_name": "webhookie",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{webhookie}}.namespace",
					"search_line": 11,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "41feae10c583ad7c0e4e920a3ee7af4010cf88d16916919170443ff6f63d8ed6",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "e9cf9123ea7b5817eabc92a056238a4126bc6263704f850f7dedf66d63db8700",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.metadata",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{webhookie}}",
					"actual_value": "metadata.name={{webhookie}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{webhookie}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "44ff74e07fbb2889349709444fb355f0e5a5a349ccc5e171ebe3d4a24b9d8f21",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.containers.name=webhookie",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.containers.name=webhookie.securityContext should be set",
					"actual_value": "metadata.name={{webhookie}}.spec.containers.name=webhookie.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "726f5ac321cebc20981d485d206634afe41e81383e41097408a4964f77b31e75",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{webhookie}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "7715a3d1cf9a1bc55a25e3c90502e4b2d642a913c5f424f04f5dc819686c0eb6",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{webhookie}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "9d5ba8f87ff4beaaf9591f567f35ac3ea0dd7f93a7348ff83acc7e2b264897a8",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name=webhookie",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webhookie has a security context",
					"actual_value": "spec.template.spec.containers.name=webhookie does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "555096d8b527f1376f20afe8ec4fbb74455a4607d0206db3e7b68e26f9fde556",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "webhookie",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{webhookie}}.spec.template.spec.containers.name={{webhookie}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/webhookie_template.yaml",
					"similarity_id": "4a98f5ab604431d473741bb9e916bfe2cfaac25f19353fa90b5ba5b04acdfaad",
					"line": 15,
					"resource_type": "Service",
					"resource_name": "webhookie",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{webhookie}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
