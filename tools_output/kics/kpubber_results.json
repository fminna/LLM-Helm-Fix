{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 110,
	"files_parsed": 1,
	"lines_parsed": 106,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:19:38.920567+02:00",
	"end": "2024-06-26T03:19:41.047409+02:00",
	"paths": [
		"templates/kpubber_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "661390e2cab9d420498b510a7b25138ed0d92f411e027e3470e7061f86ae8163",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "9391013871cd7177f31728ce9c58bbacc85ba39751b9452a7c81b06b1921a6ac",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "1cd3fc5cd31e33251a57ee1ed3b2b0e79761fa99955199392a9e6e58386011f2",
					"line": 81,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "159cba68d249324f42d52c38153490f75d682af5ec744eb12b78891d947e85fe",
					"line": 81,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "c12fb082ad207b0c0c50ac3604d66952b7590880c79b9af6b2659e7f140a061e",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "734eceda6d5027f1676a07427f933761600e319d212c13c234ce7ec8c0a4f615",
					"line": 71,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-kpubber}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kpubber}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "878278d130d44aa44216583f868853b8b55949f079f745fdc78190a232252919",
					"line": 102,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kpubber has limits defined",
					"actual_value": "spec.template.spec.containers.name=kpubber doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "cb5af8e464de484a7e59944d596c3736a5a150b4b8156c2c20113d2317116d32",
					"line": 101,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.spec.containers.name={{kpubber}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "85f46925def837dede249b55ad5db5255801e25e872f9b4bfd91a23f28594960",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kpubber}}",
					"actual_value": "metadata.name={{release-name-kpubber}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kpubber}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "68c316c6ff29ea873a7a913b0313c71307b709e22dcfbe77b0c505f5e48aa60a",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kpubber}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kpubber_template.yaml",
					"similarity_id": "192e475142953d179796e661f7e03add443e8be332c751cdc260687ce9bc30c5",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kpubber",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kpubber}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kpubber}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kpubber}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
