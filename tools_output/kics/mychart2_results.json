{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 85,
	"files_parsed": 1,
	"lines_parsed": 82,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:52:17.797151+02:00",
	"end": "2024-05-17T20:52:19.727186+02:00",
	"paths": [
		"templates/mychart2_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "8cd86156629039817493f3c13365b451d8e8119861286fc74291d6d4115103c7",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "04fc920aabde8634e28480125befeb7b252c6785fa9a6bb21006f94344109b94",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "d33fbf2867300f4cf8a681c23c49c06778e8eb34469c668a6a6a391c3b24dfc7",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "e5aaa7928c83bef651339598ddcb4de5b78a19599005faf6786bd51db37636ac",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "201222d75653abb21ae91c3f4a62649edfb515fcc3be3dcd92e3cabf54434183",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "6dce06ca70dcde92295b52d9948648eb3213d034ceaf739ab73af3e4f6ea8d20",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "2e7db3f181b84b5bac4487ee7e08db324fd6cb4514971cb1bd132b799facb0cf",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "0351710f0b9a3670fe7ee87effbab4357b2bb9ebc90d34d75bcdd6d62404059d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "f3e18816a8da92332a5f76f0ab7ea995c277737e369699c8b834cad2b7306806",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "e604a56dd6cc6cbd4de77ec1bd3e40af741974af828d112a38e5b015bfa2c974",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "d698f4c8cb22ea77c47dc29fd09af332c24f95f92e7a84a6eeffd82c9375b228",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "735e7ff56936884e4cf5d86ff67a4ab023a23cc8e75a6bc702c6f8259337b57f",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "ee20f5388c6cd2de28a87c517f989bf4e65ac8be68550b01fd1ab50318333746",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "cb9194844b591e162c60dd3126caf6a1ca637fd272fdc2d0790fd70a6c790a8d",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "abe7c3b3ff87fa7af4fa833dd86ebb9c88ee320bb3e31122cb6bbe7cac08d179",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "888ab2082f38d7e5beacf006e14623a72fd1cf67220ba86a9eab813a01fe87aa",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mychart2-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mychart2-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "abb0183c34dc6206108012e035d14f08ac68c6067957c73ad55fe33d38457841",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "b31180d8fdbe5a31c2934ae7455f7ba9687f9109b34cc30784a3c950457aa862",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mychart2-test-connection}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mychart2}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mychart2}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "9dbd30c7fc8b8426fe6a7bd30175b1e583b4da5011323c1929398973f04f1c48",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "88e291f90dc15a3fd77fd9496899532f5b11aefd8fbc97628347fa2ff3fd5da4",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name=mychart2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart2 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart2 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "4344116c905b08faa44e2ed64ec44c8de8593a1073dba90a65ebdee0cb690489",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "5c130db358c72e36dbaf513bd734fabb59272662b78d806da1228375c8a95948",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name=mychart2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart2 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart2 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "88829227f6ce82e6673dc91be34fc3e4d4cbf6b0ba7e02e198ea3bcac150bb49",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "204746c5f87f6f363f845aee57ca5483a002b9ecb0f2e369fa23a83926db2be3",
					"line": 81,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "1c05ad66c1a5f299fc8f02df99c76ace01652b507a566d991fa6de0bfdeb9cce",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "34d4cd041826bd85f6d964ccba20e88c93a4447426182b31adb8199363cc0917",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mychart2}}",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mychart2}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "ad776b5fa7ee55636b03210e7e46b3e3e437242ce0ab676644fc0fef6bf99a67",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "ced750303caa0482c419fc64f246d41985edf44a5f25840a13c0bc2f051f165b",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.containers.name=mychart2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.containers.name=mychart2.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.containers.name=mychart2.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "bc92fbfa168e727c46fb87da029b99131e897edd7c23f0c3186486237c7e81cc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart2}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "03d16ac9f650e26ce1dd9b7d9b0a7b7c017c78b3dc10dbc5fec804422ff16cfc",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "00bbfc6a1614920cacd6ec1b4c5d62f912ad20778f0407cfaac1ec5acbb3e3a5",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "0aa11adc05fb2f807712e72a006bfa3c657dff9ed6ee758d2ea1c0f140647ed0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart2}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "512ab8e7d5b5c400e5d187033090e9389f46c9de8d97ac889a45eca99a4fd59f",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "16e7e88ebfa11760da6901e18645cabf04e22789dd304682635036a9e01900ec",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name=mychart2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart2 has a security context",
					"actual_value": "spec.template.spec.containers.name=mychart2 does not have a security context"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "ffb3bfc768cd347092807755d9856400c3101f423cc535671f32e60bb6b00f7f",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "54a7c1d7eb7bcd3bd2dd25a817d425d78725239e4e58ff6339b88fe3f6c2f538",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart2}}.spec.template.spec.containers.name={{mychart2}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "085f469a3b080adc962027d0b8e9815e6902f4a9747ba37d786b125c5613cff8",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart2-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart2-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mychart2_template.yaml",
					"similarity_id": "e419f49cb96a9d02e4e529a7828e14264884a6ff16ba875fe31dfb15595ae5fd",
					"line": 14,
					"resource_type": "Service",
					"resource_name": "release-name-mychart2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart2}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
