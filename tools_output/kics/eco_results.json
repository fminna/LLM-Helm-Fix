{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 361,
	"files_parsed": 1,
	"lines_parsed": 355,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:48:16.706454+02:00",
	"end": "2024-05-17T23:48:18.693494+02:00",
	"paths": [
		"templates/eco_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "9b5ff0487a2a66cb6e8ee0f9bec23ce54f122a15c70ad9887b9d8c4645c8dcc8",
					"line": 246,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "2faba6c9cf941c4da753149bad5fcf6af1c0015621693cb0d5c57c5512861de1",
					"line": 249,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "90a987a322e4ca9eda12371ffb86efd6534c49410cfa832af08e8a8cd5e0e932",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.volumeMounts.name={{devshm}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "c5cf80906a37b1cf656a3bf35b90d2bf59e2bc8edb3b4466e74dab4171dcc82c",
					"line": 283,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "c0e82a865930cf8de7c222232fea12cb88dab0a189ea56719beaa64187ffa512",
					"line": 283,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "ae41d5e3f22cd6ce347875d40144a1539860840a924519070d60d74de1957262",
					"line": 291,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.namespace",
					"search_line": 128,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Service",
					"resource_name": "release-name-eco-game",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco-game}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-eco-eco-network",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco-eco-network}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "d7d43356ede8b82924bd47e626921c1594c852944e24bb1b2346e689dec45e93",
					"line": 99,
					"resource_type": "Service",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.namespace",
					"search_line": 99,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "7be010b9ff52e93c341c85d188346b2fd5b67dba93f46f8442f6a09526370172",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.metadata",
					"search_line": 161,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-eco}}",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-eco}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "2b59bd4db412dcace59688a91561460d1e22175b66ce1abe95571165cf99c36d",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-eco-serverfiles",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco-serverfiles}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco-serverfiles}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-eco-serverfiles}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "37f16770682060739c239d1e686fd6b66efdea467108cc5e2f67327c2c68895d",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-eco}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "4fdd13069dd9726c60d0e94c951e74bc2dae80b2d8932ff7df3fc80d4147ef10",
					"line": 48,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-eco-steamcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco-steamcmd}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco-steamcmd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-eco-steamcmd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "ea9b7ccec396e515be2b56849fa9d9975332860489a9d134545a26fa355c70d2",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-eco-serverfiles",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco-serverfiles}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco-serverfiles}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-eco-serverfiles}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "7f29b8d4a1c524a6e071910073d3dfc3e1c13ad994dd416ffffe4a1b9d1addd1",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-eco}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "f72cd54fe1e8c475d34521ddce31cda45d5c5e7d3fa480040b25216af9907379",
					"line": 48,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-eco-steamcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-eco-steamcmd}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco-steamcmd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-eco-steamcmd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/eco_template.yaml",
					"similarity_id": "47d87428422db0f6fc93a92d85fba58d18c151fabb3aa2e89a544b4ff75650eb",
					"line": 285,
					"resource_type": "Deployment",
					"resource_name": "release-name-eco",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-eco}}.spec.template.spec.containers.name={{release-name-eco}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
