{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 272,
	"files_parsed": 1,
	"lines_parsed": 256,
	"lines_ignored": 16,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 24,
		"TRACE": 0
	},
	"total_counter": 44,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:21:53.859716+02:00",
	"end": "2024-05-17T23:21:55.896535+02:00",
	"paths": [
		"templates/pure-k8s-plugin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "1b080b564c8b3e0b9f6d045b25acb5d53f19d36b5d26b95e2c508e0079babb93",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "fb021a63c7abbc98a9a4f9777c8d6ddcd80563ff0191e7c71ba401132ae83f4c",
					"line": 220,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.volumes.name={{kubelet-plugins}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'pure-flex' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/usr/libexec/kubernetes/kubelet-plugins/volume/exec' mounted",
					"actual_value": "Resource name 'pure-flex' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/usr/libexec/kubernetes/kubelet-plugins/volume/exec' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "ea0cb280112203bf0244c68c01aabc46e68385f88bd3466a2759d7b44ddbb1bb",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "002d24b5a06938af6ae74cb80d772efd6a4645729fae6c5312e97bc5d13ec0e9",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "354186e83308d5045f5572e45c27f2bea38da35a63c8cd2abac651ec0e70e17c",
					"line": 220,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.volumes.name={{kubelet-plugins}}.hostPath.path",
					"search_line": 220,
					"search_value": "",
					"expected_value": "Workload name 'pure-flex' of kind 'DaemonSet' should not mount a host sensitive OS directory '/usr/libexec/kubernetes/kubelet-plugins/volume/exec' with hostPath",
					"actual_value": "Workload name 'pure-flex' of kind 'DaemonSet' is mounting a host sensitive OS directory '/usr/libexec/kubernetes/kubelet-plugins/volume/exec' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "0f28081caad2dedb8e08debe6811f9eead9db371b4b224346e407d20e6888ec3",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "b99240ee1ee06f1830d326f27ceb061d910dc8cadf0e6e5446e677ec689bab79",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "9e23df1b1a41e235d02ac453df80452cc1c79fd6d4a62e04c1dcef634c9489ac",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "d346415a529f21f93fef3e05ca20c54c7e112295ef7af4db3308d35e7d3dfb06",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "c7012b5b5e2b126470a246954a9054248196edb1fb11724bb2cd0239f435019b",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "f0f466a88740d5162d341a7d80c6f0da52c1b86946d3c0b13a54987ec9d893d2",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "55c7f5656813f02c0152811f78e34665e38ad88cf01a07ac840f30deecfbe3de",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "fc1cbd99747a076a22b6bdc86649db75394a98febc39087c78287b605f0c4eea",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "729ce398f8c6f707dda74614d222e49b8c9eaf7f982086c4879d04398dfb0b7b",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "64489d8f0de1c717fee464de57663637804e1d927e9aba3ed17eadf2310ca142",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "25a716d9643ba46c8fd834df6692d10eee3372d3c0aa87c77477e63769d78556",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "00987b5e3475b11d194bf3a598b3c745091ff87bc7a607fe4b472a77f80ad5a4",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "a09908b0836984e3d10e2e35d096ace48eedc8971eec2acae1dcb461260141d4",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "e95df678caacc55a4cf137520783566db818878318ffe622c914b92a45fe2f0b",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "cf11c28c4d9ce3b04e9f1fdb95524bc16b49281bdb9e02b72c6d001a7059a1a4",
					"line": 244,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "5eece6261b1a1a72199518087344e05120c026d014a392208f49f74d1ebb2d4a",
					"line": 171,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "d68d784c5f29e600265c1174015ced22cdd9eca5caa818176a3e6aa85f0cd4c1",
					"line": 172,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "5fe6c38d013bb500df10c9805705f8922e67709a58b88e2fd84b7970bed1e918",
					"line": 245,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "dc8a6841dd1a9469724892d11c2d7df26e3d3e0875bdb86df99004242b83caeb",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-provisioner}}.namespace",
					"search_line": 227,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "8e1990abd57522304df4a851d0f9f0e0a2b0824b2e0a5def642be0e1dea35442",
					"line": 15,
					"resource_type": "Secret",
					"resource_name": "pure-provisioner-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-provisioner-secret}}.namespace",
					"search_line": 15,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "a3ee2873017c4307c1b274e5a11cc1455ada2379930e0220aedfbf80de1bc599",
					"line": 130,
					"resource_type": "RoleBinding",
					"resource_name": "pure-provisioner-rights-ns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-provisioner-rights-ns}}.namespace",
					"search_line": 130,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "88a1943e5d9fef661231d3f9373fd37bb57d19505dcda706718c8f305e1ccb22",
					"line": 114,
					"resource_type": "Role",
					"resource_name": "pure-provisioner-role",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-provisioner-role}}.namespace",
					"search_line": 114,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "ServiceAccount",
					"resource_name": "pure",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "b8a32b6e305f7b7ee739ac5b6742de8f6c3062a9c53c9f01ae934a1f5d627520",
					"line": 149,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pure-flex}}.namespace",
					"search_line": 149,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "2ffc69ceb849a78a4bd5380fb00a0e9aebafe3fa77ce44f5098fd0b988611f67",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name=pure-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pure-provisioner has resources defined",
					"actual_value": "spec.template.spec.containers.name=pure-provisioner doesn't have resources defined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "ef48422639a514c2115ec5f9fd86671b3bfeb5ff951b09acdb0edc1f77827af7",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name=pure-flex",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pure-flex has resources defined",
					"actual_value": "spec.template.spec.containers.name=pure-flex doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "1a153d7f467fb02d99c502561f337069ca8ba68c3560c0999418e48517ce8ca3",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name=pure-flex",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pure-flex should have resources defined",
					"actual_value": "spec.template.spec.containers.name=pure-flex doesn't have resources defined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "7dc90c1ab051b1e7fe3919c1cef98d53a293780aef7caf329761e5b05594f1fd",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name=pure-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pure-provisioner should have resources defined",
					"actual_value": "spec.template.spec.containers.name=pure-provisioner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "ffc2ca8ae5626c73e8539ae82217bddb748f86f2ed4c1e4d98d006495e62691b",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{pure-flex}}",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{pure-flex}}"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "3d1e0f2b0c6b6cda7b7221ac05fc6d8ea8bab0d74ae3b7be5386b7da1a17cde8",
					"line": 238,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{pure-provisioner}}",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{pure-provisioner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "fb2b0dfe68d4f686d1a203e91bb50e0e4afd4dd2d6fda6b452048706bb193a49",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.containers.name={{pure-flex}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.containers.name={{pure-flex}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{pure-flex}}.spec.containers.name={{pure-flex}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "64e333a17520bd7f488f2731c08c7e482d22da83baa344454e2fae3ca5b99193",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.containers.name=pure-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.containers.name=pure-provisioner.securityContext should be set",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.containers.name=pure-provisioner.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "54580ded1efa3548b96eb04f0b7debdf6b877ef6eb5e40b6c652fd7e5d65c277",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}",
					"search_line": 227,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{pure-provisioner}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "aa12d4fbea5c8b37dd67518d20c78de880c3a6c7f231bf98c5b429b4be31c7bf",
					"line": 149,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{pure-flex}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "e3d4c2df3ebeadc6b7d55260c7ca5ed85908ff5205e7b517708ae16df0fe8f48",
					"line": 149,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{pure-flex}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "930cdd65493819400fb5eb1cbee32307a3911d22e17acfea172f2480982f67b4",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}",
					"search_line": 227,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{pure-provisioner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "80108c021ae7b726cbaad8b7674d0845ad1b14791bcfb568a90a85f8eb33b74c",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name=pure-provisioner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pure-provisioner has a security context",
					"actual_value": "spec.template.spec.containers.name=pure-provisioner does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "a8da3c6258d4a5183fa52efb77fbf0f4b2007b0bafa18137a6a64a67c629f89c",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "pure-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{pure-provisioner}}.spec.template.spec.containers.name={{pure-provisioner}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/pure-k8s-plugin_template.yaml",
					"similarity_id": "9ed3213faec2c16d38e25ae83e1ae16c7ef37c6328afaaec9ca634e97b24aae1",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "pure-flex",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{pure-flex}}.spec.template.spec.containers.name={{pure-flex}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
