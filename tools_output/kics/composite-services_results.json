{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 200,
	"files_parsed": 1,
	"lines_parsed": 196,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 16,
		"TRACE": 0
	},
	"total_counter": 31,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:34:24.172735+02:00",
	"end": "2024-06-26T00:34:26.17388+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/composite-services_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "07b01f2cb8c5c8e313b91199a5a0c2acbe731935172f7aae63b52bb62ede0656",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "ea0cb280112203bf0244c68c01aabc46e68385f88bd3466a2759d7b44ddbb1bb",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "b99240ee1ee06f1830d326f27ceb061d910dc8cadf0e6e5446e677ec689bab79",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "377934ae016c40823345006c3655e4429db3395a09c61ac36a6759da3723863d",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "492979a70eca984dc1ab734431ea0992fec5c375885d16f3264c2d92dab53691",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "15be930827ed57013450aba7b1e9abd00f960f4db568d71557516d52d93a2988",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "a6b1d745cc36dbe858c9402fe62ad5267435dae0d50cbf7a4653bee9cf03074a",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "d198052d3c9ad05fd50aed7fc99991274ee7f8db8709d06cfd03198ecfd77167",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "036ed921145f958f0311eae30871306737d8ad503c59c665f8d3a581b15cdf22",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "8108ec4f536147917974ce15650a2cf44ba0a5e215b9b66fd5576bc1d4d2ea85",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "503e042395690459b42994087d69e3fcd5a3a49cc6be8efd8cf0fffc2a5e1525",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "42730a725f0bc0d1587b73b71958caa0f218e79beec6e1c9c72ca15e0b120eee",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "4c1232b79cf293d9605ee05cef8ac8b7d7d8adf7e661ebef47890276545c0611",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "384ba752058f3a53ff3bcdef3278d0f9a71492d72d5b0fe23e0648ab90984f50",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-core}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-core}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9e39bddcb99942570e02c2130aa13a7edf772230471fa5fde71db4d79bca9e43",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.namespace",
					"search_line": 144,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "Service",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.namespace",
					"search_line": 39,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "f83919da277c87be646ead063886474f17d5d7c7511231f790a0b5109c702914",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "8a4915d351691946ad659681408a8ae0f0b96a58438a05b0a0c215531566a08d",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "ca66b319f132f121e6ecb65e7ec7946074e5d3e9c2b2506f568b3a1a5d08f2f2",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nodered}}",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nodered}}"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9e71c340766adcc2cc580d298ea88ba2a6a67ab9f9fb63194fc6bc4344fbe54b",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{core}}",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{core}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9d99b691f0710ef5e73c51141d920b6d94a08c07d38187f7c696ee4064c67093",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.containers.name={{core}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.containers.name={{core}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.containers.name={{core}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "57c8ddb4cb3612d1706937a8b09e8831cbaa4340d736f743df062efe6627daf6",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.containers.name={{nodered}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.containers.name={{nodered}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.containers.name={{nodered}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "faa86da708589c9bc83170fd3c3531856852e94605faaad13c667582c6d55213",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-composite-services-core}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9cbae0092ff351041364c99d72cc78a9e6579e42e26d6530e28ca7e7318f37a0",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "008607919ecb73c3c9fb1b79705f09ab32f8ad8a970023f639cfc57df74f387d",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-composite-services-core}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "716bf8aeba8c152cd29ef2151303839c7b82462358eddc08f7d9604787a5270a",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9ed3213faec2c16d38e25ae83e1ae16c7ef37c6328afaaec9ca634e97b24aae1",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}",
					"search_line": 182,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-composite-services-nodered}}.spec.template.spec.containers.name={{nodered}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "55be93f35ddc988de3785d9cdd6038310f1f1c9362db86d2f9e11da5aa6ffd9a",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-composite-services-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-composite-services-core}}.spec.template.spec.containers.name={{core}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/composite-services_template.yaml",
					"similarity_id": "9a9be38658d66b0456565930284ead389b6ff1b932b9b1819129e8e3d70926d4",
					"line": 51,
					"resource_type": "Service",
					"resource_name": "release-name-composite-services-nodered",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-composite-services-nodered}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
