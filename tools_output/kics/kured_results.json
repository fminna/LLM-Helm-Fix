{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 148,
	"files_parsed": 1,
	"lines_parsed": 133,
	"lines_ignored": 15,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:06:39.644925+02:00",
	"end": "2024-05-17T21:06:41.672273+02:00",
	"paths": [
		"templates/kured_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "bddad4433f8bb11da37de64459bf7af27d94410d6871375d795fcfe8fd5ee321",
					"line": 129,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "a8b782323aa730ddf90ac3494be277024a27cf578b37461e3548cff3da5158f9",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "0654da878f311792e5cd625d4544bb5dc9d7a43371356aebd45545082ddd2ecb",
					"line": 122,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "bf0ac048287709c34580cf997bbda46b0f4587ed54a587576a24ee77f4f5967a",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "9506443c097fb78ef2f62ec3fda6ef02fd179c20c4842698fc0094566225459c",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "5266b4db40bcf9368454bed26b0431500997bc67a59e54180fa8f3c6918111d4",
					"line": 125,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "68699824b7bad81d8dd027d5bdd4db8a4faf0e4ca1ee96669ade0e0c6c8ae274",
					"line": 125,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "71927be20c295fd34ea017898aab51145a7f840607c88273e0f36d21af49a95d",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "a668283030d9ccbff0f53eab9455893df9de7e0c58d1d997858d93fe458cef52",
					"line": 120,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.namespace",
					"search_line": 80,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "9b85d122c5c8f4b877a9185274e7f47797b50d2ce07cc848f8b53694cc3a3b77",
					"line": 62,
					"resource_type": "Role",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.namespace",
					"search_line": 62,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "5f38186f7c3697a57a2413e097d1a55a1dce9e4d34146d4fe02a7ff99a3a054f",
					"line": 101,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.namespace",
					"search_line": 101,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "5003f5ee404b20c681de590a9c7267066f04437d2daa8af9dc2110d4795dcded",
					"line": 125,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name=kured",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kured has resources defined",
					"actual_value": "spec.template.spec.containers.name=kured doesn't have resources defined"
				},
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "5e094d15186f5b45e98f53e4ccb97e1e87db250d9f0a78e5b0e838c333cdee49",
					"line": 130,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kured has limits defined",
					"actual_value": "spec.template.spec.containers.name=kured doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "c2abf052ae8c078ac597dc875bb217d5ec3765f92611ec90f08d49caf2f1d7ea",
					"line": 130,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kured.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kured.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "a61fd35c1df1c81460c0c2a997b7e9758186db25bfd8c8c48ddc055a73f48e08",
					"line": 125,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name=kured",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kured should have resources defined",
					"actual_value": "spec.template.spec.containers.name=kured doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "1ef593e78ec0ae4e4858d9728427bfd4538459d0f26afe0bae4f2bbe86043c4e",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "e1d5636e40277953251af1ec59805238e97374ac8f3ffc44824c3795458b7e10",
					"line": 116,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kured}}",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kured}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "e16aa1d108c682f9f5f6b288ca182e8f0ffb096017d7dacb37bd4f260cea019e",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.containers.name={{kured}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.containers.name={{kured}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kured}}.spec.containers.name={{kured}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "66056f0aedf6a1b9e14e262190d3429339301b3cc6544080499f60d4403922c9",
					"line": 101,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kured}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "7064d5ce6d557db64a93c7f75c798eb7e340ca29e1a138e619defc840c463572",
					"line": 101,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kured}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kured_template.yaml",
					"similarity_id": "060540a535bb852cabe5a6702aff20c7b6f409ecfc6a74c8679dc92527787157",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kured",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kured}}.spec.template.spec.containers.name={{kured}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
