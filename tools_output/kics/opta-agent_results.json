{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 205,
	"files_parsed": 1,
	"lines_parsed": 196,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:49:29.752938+02:00",
	"end": "2024-05-17T21:49:31.712095+02:00",
	"paths": [
		"templates/opta-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "70532cfb4bfcecf1215c643cc05a6d31a3029a91b6faa3d380a8fc862a316eed",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "3517ebfd301c99bd3788a1522da1de2ca8cc336a2cf952370afd325e4959c1e6",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "e1f55ebee33262bcbbb357f6414f9d2f11ebe42c6083af8370721da10b2b1bfe",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "1f7c9dcb772afe83b28e7a8de76b809116f01cbe3fae9678f331e4d922f4add5",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "00f0d9f1852cd996c6021ca22eeb6d94e115737cfdf0d78b91d69a7294d473f9",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "70ed45c24f0c2250901db0368cf08e7270d8746d75428b1ef65d3575cd5d9505",
					"line": 170,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "a5c0ed222212bd13e2de4130ee3364e8f5cc83c8d4a87d96c30b335b1766b4b5",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "1c9a9ecd0e2a0511ee019abad0ae8ea6c262899d4400b40590ccd42a8a3235ea",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{opta-agent}}",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{opta-agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "dc4291dc616a82e08768421f7e53e72da06d0c7cf89ba14702136aa9b8273917",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.containers.name=opta-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.containers.name=opta-agent.securityContext should be set",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.containers.name=opta-agent.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "5e873ab69bded002189d62b0a8df0d643ad846ed3915eedacd38df8748ca8821",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}",
					"search_line": 156,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-opta-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "0970a5c4d36915a3f126a4e6db777e9c4caf2f9aa64c67db5bb1f64f7e9406fa",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}",
					"search_line": 156,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-opta-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "bc8d7127d4158ba2c827d25f7641b1272748518903d759ab736bb483ae15add5",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name=opta-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=opta-agent has a security context",
					"actual_value": "spec.template.spec.containers.name=opta-agent does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "f39f981454445778efd419c9ae4381a5a445027b029ade613f9f5383337799a5",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.name={{opta-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/opta-agent_template.yaml",
					"similarity_id": "8eb2626bbcc004351c0275340cd8c5a07b79a81aed4d574231ff29e04059d423",
					"line": 183,
					"resource_type": "Deployment",
					"resource_name": "release-name-opta-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-opta-agent}}.spec.template.spec.containers.env.name={{OPTA_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{opta-agent}}.env.name={{OPTA_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{opta-agent}}.env.name={{OPTA_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
