{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 379,
	"files_parsed": 1,
	"lines_parsed": 354,
	"lines_ignored": 25,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 33,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:20:33.807059+02:00",
	"end": "2024-06-26T00:20:36.052755+02:00",
	"paths": [
		"templates/kube-wordpress-mysql_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "d69f48148a4b28e0a5a9d2ef965824be7f87e905bd02cc1f6f330c6090658932",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "b51f69f6fe5a56a33107b9ffd41b92bf988adb8e4bf1c92b5119e6b31d9858ea",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "8992fef387bd0fb2455a502aef48276f9bd692ef6f3ab722e9e68b532a20adbc",
					"line": 302,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-volume-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-volume-claim}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-volume-claim}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "7331092e6a9df473064befe47365bd441a197b237e988acb6b8610e3249b5151",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "fe2127a6e1a41b25026a8aeada9b7ce79fe7608b26e15e47b68b17baa7397d9d",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "b8f19d7d482bd608ccb50051c659cef8a3932060d74732a12a62581792f7b9cf",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "c3296ef7805abdf8f497f2c0b674346cd638a38bc5f0c1e00ad0ee08507a4d08",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "d3c34277ba8d10881e5320772fbb2561efcfeba9e43a14a3d9837aa88084192c",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "72cf946067c68f5733087997690be8ebcdd82d1373bcec14c9748ad9f83f05a2",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "bce54bf147f6870249f55603bead9390f0e8ee5dd03d8c228491d33323a97009",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "6b1e5af362942877e3101e27cdfa94262c5204110ae8567a016ce1e0c1ddaa37",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "b25526de70ef52c898b10f9ff85f4a18d38f8543ad28ce184f6e564d50b8d1a6",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "4d831e3181ae7a534f3a01084069650baf33087ace14017b6a4e436bea0f0bfc",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "7b2e2809cc2b306fae5ef37e9d002296ff15816456e03eda4231b54360ad6ae2",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "79a6ca985e184c96979f99a917a84db9e0f2087425d3e8d0fc876f0cd0c458e6",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "f312bca81992689375540fc6cc805b3f59b4dfa6ec84f1d6ac4e63af06169e77",
					"line": 136,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mysql}}",
					"actual_value": "metadata.name={{mysql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mysql}}"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "289a128bde771382f0afaa3a96b1ba2938f2f17b148382d8ec90c59f39f44a9c",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wordpress}}",
					"actual_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wordpress}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "c47b6426a05043cbcb9965df422ddf6c81bf0ece8a2db2a41a66f2a6c8d41a4a",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext should be set",
					"actual_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "29fc3e1e49bb2bfae546185025f39ae06e1c5144be9b0f6fb598103548c787e4",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.containers.name=mysql.securityContext should be set",
					"actual_value": "metadata.name={{mysql}}.spec.containers.name=mysql.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "d6a4ad1f35bbc4db45cc3c8bd53aecaea3c4bb4ea3af1c7371ab31c7af488e8e",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": 112,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "81667bb41120c17350658d2e60996829024012fbc908b7a9c97199a54f2a9b00",
					"line": 69,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "google-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{google-pvc}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{google-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{google-pvc}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "cb36a7bf9018f05000ff16533bcd5ca0f9228e873e6428ecbd8bd067d1a706d1",
					"line": 255,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}",
					"search_line": 255,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mysql}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "a19296baa258c27eebde9783ff06e109b47d53c8209ec7723fc96324e58a2ac7",
					"line": 255,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}",
					"search_line": 255,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mysql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "6671ff947c0138fa811345b6a28c7ab29b63b5fa11401c7730cbd94116940704",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": 112,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "51c93cd65042f95e0035bc3939ad6dfc27e21e998835ef90d8697724fca8317a",
					"line": 69,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "google-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{google-pvc}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{google-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{google-pvc}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "565f547850a783963eb2401324d5508e1a7b1cd930cbd94abb7fe32f0e8c8f49",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql has a security context",
					"actual_value": "spec.template.spec.containers.name=mysql does not have a security context"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "f5edf6c964bebd48a2e8a984e42ec84f31a498ba93d619a51ea35a058bf1d632",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has a security context",
					"actual_value": "spec.template.spec.containers.name=wordpress does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "da37d8cbfe885dd5d43a0bc6b904511e2a0f87f4bccaeead0393b1a7a3b0c11e",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "35d37428e64017903aeb6c8144ac2d8e6fd8d9300681747a699d7c71c83e01d9",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "599540a1f1396d6f77d87c2e84b0571e78305f5f301d412dd8215c08c5d058fe",
					"line": 295,
					"resource_type": "StatefulSet",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.template.spec.containers.name={{mysql}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "4219f1742da109ea14a9a6e63386d45f8229c415db22e7a38916ef4300c9d6a1",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{wordpress}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{wordpress}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "b472f3bf56f5605eb9cbabe9ed2c98597f401238115bc7a154a0c7b9fca78136",
					"line": 86,
					"resource_type": "Service",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{wordpress}}.spec.selector label does not match with any Pod label"
				},
				{
					"file_name": "templates/kube-wordpress-mysql_template.yaml",
					"similarity_id": "a9fbf2c99d3ed51c779d4ba4ad8783995b0f67ea806c7a65bc5adec6d59679a4",
					"line": 89,
					"resource_type": "Service",
					"resource_name": "mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysql}}.spec.ports.port={{3306}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql}}.spec.ports.port={{3306}} has a Pod port",
					"actual_value": "metadata.name={{mysql}}.spec.ports.port={{3306}} does not have a Pod port"
				}
			]
		}
	]
}
