{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 70,
	"files_parsed": 1,
	"lines_parsed": 66,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:25:45.715865+02:00",
	"end": "2024-06-26T02:25:47.774105+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/jx-app-gloo_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "cd7f2a65c29af9abe371647564180c5f19eb2c009a6013417056dac945064467",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "674383357bfe648b1dd9e7ce25cc07d2ebe7615e7db7c2835ddefde3fd6e436c",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "ada5a6b40ba184aee0c9a17a6cf07fdb78f5ee564a8461892acc75bdf18d6b5f",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "901fa9629b408ad420806eeb99a76db788104cf6e2574a9e8ff42399b85ccc1f",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "9cd6b987d93615b413a78a3ffc8afd561192416fef9980dd090bf3a56937dab5",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "278e4548a496d1abf7eed7b4f1e236f479e6cc37e565c7e4747d5dd6d55a0c44",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "2b45065d8c06eb3db60111d4d201c44e5e59e205b6d352a3610fa2d6ae13ee12",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "fd36e923efa6cfb26c0e26dd7cb99f83bf2dde59fdf0180ce29b163b41d6aa2a",
					"line": 58,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{gloo-boot}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "1e2fecfabd03cc171a80882de84ca792c2a9dc5b7a6f0d167b5b466735a2e02c",
					"line": 45,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Job}}.metadata.name={{gloo-boot}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "9b4787a3272fa4b0280762bae6523c018011f40db2981cef3f5247112b4807dc",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name=job",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=job has resources defined",
					"actual_value": "spec.template.spec.containers.name=job doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "9aaa7f70e119c44657aca542cb614ff8120bc3d299df8ef4c2e64f9ce17a7908",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name=job",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=job should have resources defined",
					"actual_value": "spec.template.spec.containers.name=job doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "f9038f962294e6a1a334651b6e17661649aebae5d1d731fb754bfce4c55801b8",
					"line": 22,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "gloo-boot-default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gloo-boot-default}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'gloo-boot-default' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'gloo-boot-default' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "4af5a585a7adca29a2fdacb0a9f558491ac6f5c4cb747e8bc5c6de3fd0812955",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "8278cbb9b807a5f13540f927c24e32001f980a38fc38be840232dfd71011baa1",
					"line": 55,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{job}}",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{job}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "cab2bcd21b3f9b256722a1d5194b845a809228a3a3c4dfadf2d91eb016c11863",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.containers.name=job",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.containers.name=job.securityContext should be set",
					"actual_value": "metadata.name={{gloo-boot}}.spec.containers.name=job.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "3afa3f5e726918ef92e1fdd6103ca98ddf5b835b8c129d0b096af89713b8ab9d",
					"line": 6,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{gloo-boot}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "ce2462b6f4e2fb05f0a71fec6f69140e7e002ab2df1338e71f9cc174d2aa1322",
					"line": 6,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{gloo-boot}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "9cd5270ccd50a39b628c48da5ea58699faa4bd3d9d49cbde945384e83c7d5d27",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name=job",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=job has a security context",
					"actual_value": "spec.template.spec.containers.name=job does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/jx-app-gloo_template.yaml",
					"similarity_id": "c35263bed2a048b6f135fbec6fb7af4d43af3e98e11fbc59ee20ca247a755c4c",
					"line": 67,
					"resource_type": "Job",
					"resource_name": "gloo-boot",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{gloo-boot}}.spec.template.spec.containers.name={{job}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
