{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 173,
	"files_parsed": 1,
	"lines_parsed": 159,
	"lines_ignored": 14,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:59:32.406261+02:00",
	"end": "2024-05-17T23:59:34.319266+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/rundeck-option-provider_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "979111ce1d647ae823b44a6a45ee356fc0a29d02cc73ba76b9a4ad92b651597c",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "2b8ee457ab75c4a46938ba00e25cff2b775d08b447585292d7f921c49d9e83b4",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "10d1cf660207c6a86e29bcb2ab6fdcee212607c7d2252e6051343d196019c91f",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "1b0ee8c2adfdbeba5dcb67efa5235b515b595f01ec25c7eff0769e34e2cfb3be",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "2cf8030e222dd5d781d7491b9c03726b391abe6b95d6d5a7319a66107fc6afb1",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "ddb44142462caa43f9cd8ee3d56e2c8748d010fcb616df70b1d3486c96a8f321",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "cdc28e68f799471f0645bb27f10f17fdb28c2a398b456ddb02fd85e848f5d67e",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "7917413bc05713e575dbdb4f0e3e225de44944ea90f9adf4727b4016056f1e44",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "b12983195979ff3cf293411b2640816e27e84397659845ca2286b5181db954b4",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "b41035f81fc314a8af9c343e7cf2c62b319d03fd55c099da292774464b7ce6f8",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "6ba9340232565fcfc7c82bd011f69ff3a8d8d3871834504fe4dc4ff5ef23d11b",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "6caea796e7aa53c2a697ab9704d803dc68d60f2c64397bb06f3b81f3b02d1ed4",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "597800e1f6f41f1e4d0ccf82849fe81c84f70a27d9a4dd12eb80a931e9672f86",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "895f8b7361cdb374a802f718e4201b8dbb07b9f638752d8da03effcfbc2427cc",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "586f42a7fafc7c73d5172a141c567e66d058f71409de593eb26f041e590ef0bd",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "ce0f2229e10208c65d1692cf37d24a17611fdd5c9e7420fe0160bc135b86a7ba",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-rundeck-option-provider-datasources",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-rundeck-option-provider-datasources}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Service",
					"resource_name": "rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{rundeck-option-provider}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "a5ac0f727c1216d105b6a08455452170ca0009e014d434cea946b7e4acb8d60d",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-rundeck-option-provider}}",
					"search_line": 78,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "d13a6caba0295c4c9d9f8b5d323956de13b709fdbb91b2d4699cb9d572d42aa3",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name=wait-for-init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=wait-for-init-repo has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=wait-for-init-repo doesn't have resources defined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "138f7b0af2755ce09aa957d9547a2b3d1d4be1993a7da7d79f5f076d68defe94",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name=rundeck-option-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=rundeck-option-provider has resources defined",
					"actual_value": "spec.template.spec.containers.name=rundeck-option-provider doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "88683d4fc53b280b0f6b8d65c1299de596d6032262b9d35408ab6ca9f396caaf",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name=wait-for-init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=wait-for-init-repo should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=wait-for-init-repo doesn't have resources defined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "a1c39edff5e08fc24b10b3f4373b34eafb8704df2e5d0224aacce6aaed6561a7",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name=rundeck-option-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=rundeck-option-provider should have resources defined",
					"actual_value": "spec.template.spec.containers.name=rundeck-option-provider doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "5d8304c4ae439f5f8de750e24781d401381843533528f313741866cb3b2af7fd",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-rundeck-option-provider is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-rundeck-option-provider is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "5e3202a61f6e936b16e9038991f655674c63ce2dbbba0db8cd4a8bf83712c9cc",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "1f18c89deaae6950e1857ff21d2c76587e2addf9c6c191ee55f9b7c032345ef1",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "8ae0afa4d5c1412bc5cdd5349f1adb9f04bb8fc743126ad5d0da08486446d6ce",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{rundeck-option-provider}}",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{rundeck-option-provider}}"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "8ae0afa4d5c1412bc5cdd5349f1adb9f04bb8fc743126ad5d0da08486446d6ce",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wait-for-init-repo}}",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wait-for-init-repo}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "f852597169925845e6efb03a39c5286149bf756ac1f28b8dd02e1129d9512587",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.initContainers.name=wait-for-init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.initContainers.name=wait-for-init-repo.securityContext should be set",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.initContainers.name=wait-for-init-repo.securityContext is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "64ca1fee40aa3129ad657f9f12ac4b10a28024b1e8a2e66460b7cc563f706ac2",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.containers.name=rundeck-option-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.containers.name=rundeck-option-provider.securityContext should be set",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.containers.name=rundeck-option-provider.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "c97dadbdeb95459d88c9417ebc6bc515222c2b8ce9bbfed24b582f2091150a73",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "225b4e29cde435c233c6c38c554e15566c0b1d89115a7088ed656c5887fbd4ee",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "0aed3558ab64485a0e94ada1af25398b8cc580175bd858b350374adf6ae48ac9",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name=wait-for-init-repo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=wait-for-init-repo has a security context",
					"actual_value": "spec.template.spec.initContainers.name=wait-for-init-repo does not have a security context"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "9811b3c8ed4415f2ae99d619889e472e8a9f667e49c34a489bebe7ddd3a76ed6",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name=rundeck-option-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=rundeck-option-provider has a security context",
					"actual_value": "spec.template.spec.containers.name=rundeck-option-provider does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "605548c7af1cbc7009792dbba085ca88ba28383cb31899b4b0109a676a127782",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.initContainers.name={{wait-for-init-repo}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/rundeck-option-provider_template.yaml",
					"similarity_id": "c872bf85679ae11bfdb2859e00402b718fe25afe9974cc795e068882cfb6b809",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-rundeck-option-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-rundeck-option-provider}}.spec.template.spec.containers.name={{rundeck-option-provider}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
