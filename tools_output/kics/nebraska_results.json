{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 355,
	"files_parsed": 1,
	"lines_parsed": 332,
	"lines_ignored": 23,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 16,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:35:44.75168+02:00",
	"end": "2024-05-17T20:35:46.698178+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/nebraska_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "df20406fabacd0bf1122a215d50357278cdf6fbca8b390f1461da68fe62696b8",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}",
					"search_line": 147,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "a6bf68b5131db8ec3bef1f650aa700a21f72336266f2db39882ee02672a57cbb",
					"line": 246,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 246,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "2ccef189fff175cf9f71ea209db2cd50462ddf717e43162e4b78eea16fa36d2a",
					"line": 323,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "84e2aea859b61e05902e6b1bcf0bcf0be92ffbd089e3d9d859f9c5b9dc1a6c74",
					"line": 247,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "b494fa80f86fb5710174688a51bc42553dfd4ef687d16b87c8a9393bd3fa30f8",
					"line": 318,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 318,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "2547ddd5cace599e9c95581967854196112ddbdab3c8bdbbbeb1e3b4f71c9811",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "e3b7b0168f14200d3e00132405557a4033484c0f12be4484bc555505a84011e0",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "13bef16c01c628ec4436b348a3260e285f5a0ce22e7b4f283298b167a95484f8",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "d9694e44a856497aa793851ab330f6d938d9997e4306b0ac40fce1981e0ceeae",
					"line": 243,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "c4e1baeeb9d2c1e92a0f2c0a1b82626773012dc486a83c8c905bcad04a3f81a9",
					"line": 246,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "f2eff6a36cf00380619fcb3369fbb037f8ee1a28743f42e47fb68374682c0e53",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "fd3b7afd157d4532561cf995a7d723691e96f31f8acf53d702ec461bdc420a78",
					"line": 96,
					"resource_type": "Service",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-nebraska}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 21,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "d6f9e57544869f90893be7d6d9c756b4112e70993784a9e7a75879056770649c",
					"line": 188,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 188,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "c60cc3aff40f4972fbfd7a093e1cf2d86ae004d86bb755e4d03cbb86834d79cc",
					"line": 71,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 71,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "3cd3b578821e9dc0c73a58af98e9ab06a6ae2585fe151e94e3971fe22c877b3c",
					"line": 336,
					"resource_type": "Ingress",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-nebraska}}",
					"search_line": 336,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql-hl}}.namespace",
					"search_line": 38,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "164224c207f73fcf68501ad40220aa1a1b152d19a2b5d2319af9d33f12c2ecde",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nebraska}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "f1eebe8babc534f864fe3f0769a5a75a23f4a1e7678ecbe1167f480f9c6ad020",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nebraska has limits defined",
					"actual_value": "spec.template.spec.containers.name=nebraska doesn't have limits defined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "c50b199100efa0ad24c91fe66c4ffbcf2467f700b50be0f6e2b70a7b351ef49d",
					"line": 318,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "24d0841b8a324a6bcc768d408ac03ed9d0176ec76b07ae58b3d35f98c03f6093",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nebraska.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=nebraska.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "95f06826383c7cf354712f7142ade0ef10337cd252993fa9239972340b2c87c7",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "a9a448a72bbdf3e6c53f1d59bfe98004957001511095ff7b5b3b6eaa6b517aec",
					"line": 245,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "b7c13b7ae683151a81872100767d3fe3fcb47458eee51374423adac791b9dd26",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.metadata",
					"search_line": 216,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "f57a43778fb7956827cc272b8db32378d5c4c493f5692dd547cb6c8b3ab341e2",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nebraska}}",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nebraska}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "6a50894cb779db6777fea1bf6b91790d97638eff921c31a42c06f13f6c6fe7a9",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.containers.name={{nebraska}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.containers.name={{nebraska}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.containers.name={{nebraska}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "fde959cd065307b3e2cda614152bbaeffef165b4d6064922dfa9222731c3537f",
					"line": 246,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "ae993926d8e5514c357fe09a347785abfe6b858aed5260afb9786158d8c32882",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nebraska}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "5733b7b0f351405e87deccbaa4250a692f27f7df0a4f4263cca44f88e31c6f07",
					"line": 188,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "d8cf3d0938f9d964c4ae8c62089f5439111e4f2fdebaa6e2148f082fe483ebb8",
					"line": 188,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "5761beea9bbe0acdfc3380a5a8908e1e419acb174ccfd1df7e23ee46fab9a374",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nebraska}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "2974f40433a3f00d7554aaf5863743a052a2a33757efd7bda08bb27e4a665602",
					"line": 246,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 246,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "0863dd465f3ae91503a71627698152320923de86b13603aa70408643c2ffd0de",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}",
					"search_line": 147,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.name={{nebraska}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "c7d5dc4b2cee8699799f62b2b279a7da71203a8b552eb057b334a0a2c4784506",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-nebraska",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nebraska}}.spec.template.spec.containers.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{nebraska}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{nebraska}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/nebraska_template.yaml",
					"similarity_id": "63d8be275e3e989a60bf672e24622e18a1f511e275088cb99dbf161b8b2c414e",
					"line": 260,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
