{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 53,
	"files_parsed": 1,
	"lines_parsed": 50,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:27:00.591755+02:00",
	"end": "2024-06-26T03:27:02.715117+02:00",
	"paths": [
		"templates/sn-chart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "5ba9826b6c6347f39f278415042c8e7b41727b2102b6e76a6bad0739472172bc",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "b110269636cb6b32510658deb7552d225ea32e28454d2784742507306be54bb7",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "a5aec740d72d1de8166ff98f8af42be4fbc31dd516d1b675b6ff51167eede4d0",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "15a54749e7bdb583a9b627330d9f635e8dd02290b9f8357011b5325d891fa9bc",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "8e682f4b473d372df73314a45640a10e7d6fdadb102ada3aadb475b116c2e5e9",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "fbc201682a6f1d9923bb4acf32c7e48604c8f3c0408f7ddee832ffcbfb0b0b63",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "b576af9e58272bfafe508a4646d284a9fc71a259471749cc6c754eef4c10c3ad",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "d8af4cbf6bc27cdc5bca1da4a99a3703b8317881e952448c27ae54be854c3438",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "caae0b77fdc8f045df5a414933a4c9177e1aab98182e0a8eb066546eead78de2",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-sn-chart-deployment}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-sn-chart-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-sn-chart-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Ingress",
					"resource_name": "release-name-sn-chart-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-sn-chart-ingress}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "ffe56293f16135afde0b34722f5f523ea843e0b47854d1a635baed0e974ba1ca",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name=simplenode",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=simplenode has resources defined",
					"actual_value": "spec.template.spec.containers.name=simplenode doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "327a09a85673cc9fad9bfe4457e1f6496d5a1b24d4a91887fe878ad1115a05a6",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name=simplenode",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=simplenode should have resources defined",
					"actual_value": "spec.template.spec.containers.name=simplenode doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "38195a598d30f94ed3320597c38de3f133fe79e8cab8eadbc60968992de1e0f7",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "58aa840b586d4991db191a8eb81549362881414580a21cecc544838b08fb4e0e",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{simplenode}}",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{simplenode}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "ef7b1c29f5d34359da54de8ac69eaae09f632127830f061e913b1bb82ee50ee9",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.containers.name=simplenode",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.containers.name=simplenode.securityContext should be set",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.containers.name=simplenode.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "48851a4dd1b7447ee82839809a40ab460f41086de4bffebe2e21125262014b94",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "94fdb3114244c96552aa7cf8120bac973c9b522231e790c3bb9046a7f95e8652",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "37fffbeb24b45ff6690addb558121cb1306be65f2a298977263413e120a51f27",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name=simplenode",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=simplenode has a security context",
					"actual_value": "spec.template.spec.containers.name=simplenode does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sn-chart_template.yaml",
					"similarity_id": "80e5f0ef07bd4d1ee388e934db84e9d8a064e9d68465fde74c798653732c02f5",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-sn-chart-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-sn-chart-deployment}}.spec.template.spec.containers.name={{simplenode}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
