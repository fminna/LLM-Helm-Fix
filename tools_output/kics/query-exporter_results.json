{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 127,
	"files_parsed": 1,
	"lines_parsed": 123,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:51:14.668911+02:00",
	"end": "2024-06-26T01:51:16.719165+02:00",
	"paths": [
		"templates/query-exporter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "709532e8c897cdfeba60ab71419c13b5bb870849ed1ed260c64b034d3b61e3c7",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "7fc2c6ff0167acd516ffebcdc9e31e80c1e495fce2b4570d911b070e6fd1c3f0",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "0cc837a1b8a577344a484b16c4ab0cb4717d61eba900dc637e8d01b1dd3cbd5d",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "f9b2c3a9cde66e90cbc96082ed35957567207478029a71356043d77b680bf495",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "20ab63ed30285799afbca90a0d773f1bb1ec5b43df9c724ddce7b1d95c7a7a65",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-query-exporter}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-query-exporter}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-query-exporter}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "0978a92aeb6180c1637c68b7990d46368966238424e4541ef6f7f75e4e2ed975",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.spec.containers.name={{query-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "e9cc55d877090bd994b1f30b9823acbab2b3fa4c43ed4b7b13680e3b2a0a143d",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{query-exporter}}",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{query-exporter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "56eb1d04569b99e0cc11e32de1f88c54a58d9a62c1b38c86542d9db4db57914e",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}.spec.containers.name={{query-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}}.spec.containers.name={{query-exporter}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-query-exporter}}.spec.containers.name={{query-exporter}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "f8f6f31bfa5c20ffb3f89fccb835021eb60aea74d19386e4a735fa7d2d5d0e9e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-query-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/query-exporter_template.yaml",
					"similarity_id": "1ee9a84fed803942accdcbc360d5916ee5c66df978aa901f9ade1e7aa204aae4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-query-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-query-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-query-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-query-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
