{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 127,
	"files_parsed": 1,
	"lines_parsed": 122,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:18:17.001895+02:00",
	"end": "2024-05-17T23:18:18.926803+02:00",
	"paths": [
		"templates/postgres-controller_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "cc1cab45bb13fb4ca9afa6a49e05e086dfbbaf12a460b29c6c7ba62f943eecc6",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "4ec56041eb577831a853b9df93cc04042b1fe61b59f0ef49ddbe64d3e0bf3788",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "92b574407ed9ca726f59f557ed658bbed305a76d4bd17d7a3a380edc8ae8b2d7",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "10c29ff02784aee1483146946657ece2d20511055b89d26e33438235b0124860",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "a44d7ab6f47d1858e8a57bf2871071b050cabf7a8f139f1d39d159af6327651e",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "57bf350bf81e70cbd22df0fc8c7e8291bff7932ee73ff95c7b8e3a36b3548a8f",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "777ce6ad051077ff2395a3b2adf48ab5cc6f656d12365631f29888501cb4995c",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "cd69ab0481abb619be06f62a422d1f40fb159bde2ddeae72c41cebc59fbe1c69",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "8fc75716f298835a2666c035ec66eedc1512c26cfd30b764cd0e354e87fff42a",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-postgres-controller}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "8e1990abd57522304df4a851d0f9f0e0a2b0824b2e0a5def642be0e1dea35442",
					"line": 15,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-postgres-controller}}",
					"search_line": 15,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Secret",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-postgres-controller}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "cedfe3ea5c3a5365c6719363bfc93ce92acd8b5af643b7b5c67293fc0c64666c",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres-controller has limits defined",
					"actual_value": "spec.template.spec.containers.name=postgres-controller doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "d0ef3bfdbebb4c23936674152ae04fe3e1cec2359ec3f905ed4e48febce1e45d",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres-controller.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=postgres-controller.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "ab8432d021102f3cc3214ed2ecdcce3ea34daf8c36dcaf019dd40e5d2e453d14",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "adb2ab6b5c4c75d9cdc3f3d588c98237032fafe80950811f08decea8a0fb3c3a",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.metadata",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgres-controller}}",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgres-controller}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "894d9466c1f7cfcc834e6bb90cdfc10bfa64aecc6320d723e99f74b57cf5fb3e",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.containers.name=postgres-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.containers.name=postgres-controller.securityContext should be set",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.containers.name=postgres-controller.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "d223ab139da28f699fe0046094f068960cc1c396cb3ca8260902eb0d2643567d",
					"line": 15,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "7f41b78ef76ef1199c9e5438bcf20f5447ba9ce376d3ba6f5c6d9eb51eb2cea7",
					"line": 15,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "e12b13c2fd928426986425a10e6b60664b0f8c7c6730edb0d7dbd86f16d48a02",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name=postgres-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres-controller has a security context",
					"actual_value": "spec.template.spec.containers.name=postgres-controller does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgres-controller_template.yaml",
					"similarity_id": "cb02e8c483ef085f23807bc43bfb92cc84c3861e64516e3f2e2463c3c92ac087",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgres-controller}}.spec.template.spec.containers.name={{postgres-controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
