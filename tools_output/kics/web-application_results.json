{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 51,
	"files_parsed": 1,
	"lines_parsed": 49,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:00:08.23566+02:00",
	"end": "2024-05-17T21:00:10.133219+02:00",
	"paths": [
		"templates/web-application_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "8c343d5a55522e28014834b29fe0e0f577260deb0034ef4e17e4aac948d47c56",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "eb1ceeb818b861a916e5fc8c0184cc0892c120fac6e3edee0e5f51f426c28aa4",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "a34a22e9c0117ea68b44fc3515f01b77d86a780d6f5128a4e5788a85e387cd88",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "8ce4dad98b6ff22d83e1bc471945e2736aa9423e8ee0540649df39a5260df0de",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "5e4e32da4f0d81b6fec81042fea3c74231e1124d0daaa6963a3b5bf1346e3be2",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "d22bda3363f2ffb651aed536aabcb3dcbc2a8e6cc7446f9c40d4ab63d19d99e5",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "31e7f478d3405ff822b68ccc00d400a1820024ff41bab4504e500f5ec2efaa44",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "7e936cb36f7a0787f1999744147dcebe7d9b2b235f13fd4727f84e2ecb28ad74",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "d142f18b8b5aee856e662b87729bd0d95de223431cf5fb6f978c7236ed7dd084",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "webapp-nodeport-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{webapp-nodeport-svc}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{web-application}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "11cceb7ace0e503e26705a5e278a840f6f9e06a4c5709cf326aef13e6c4c184f",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name=diplom-netology",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diplom-netology has resources defined",
					"actual_value": "spec.template.spec.containers.name=diplom-netology doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "c6d3c07b74883442ed4b78b55f4fe3b694df14f039968524b7856e7f35fe1b73",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name=diplom-netology",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diplom-netology should have resources defined",
					"actual_value": "spec.template.spec.containers.name=diplom-netology doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "b52b7e60e633129217013fd900cb4271c1f825fb4189a7004da35781e9d39af6",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=web-application is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=web-application is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "431a644d2fba961f7107282a2d262057eb7c9b3ffc024ce350a52792d4b660c4",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "5c3cc5fad927e9d7e5ee35b93e58308759253b3605063a43ec8260cd17f328ef",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{diplom-netology}}",
					"actual_value": "metadata.name={{web-application}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{diplom-netology}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "28e940aeb06f7484d05a90dea6a96e5ec4c3b7cc7ffb8c1537af16fe816dc00a",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.containers.name=diplom-netology",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.containers.name=diplom-netology.securityContext should be set",
					"actual_value": "metadata.name={{web-application}}.spec.containers.name=diplom-netology.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{web-application}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{web-application}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "d8507f81ba6a764841e0aa2741b927a860d647c7a506da2ab2dd8b49ffee19ba",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name=diplom-netology",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diplom-netology has a security context",
					"actual_value": "spec.template.spec.containers.name=diplom-netology does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "05fe0aaff2cc039109e03dbd265583d6befe4aba429c3ac04e8a9e037e61c857",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "web-application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{web-application}}.spec.template.spec.containers.name={{diplom-netology}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/web-application_template.yaml",
					"similarity_id": "60b95d7f2581450f12197e9993972b8c6773a0b34bbd376bb70f757f3a625019",
					"line": 12,
					"resource_type": "Service",
					"resource_name": "webapp-nodeport-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{webapp-nodeport-svc}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
