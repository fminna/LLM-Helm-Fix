{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:13:46.034136+02:00",
	"end": "2024-05-17T23:13:47.916962+02:00",
	"paths": [
		"templates/cloudflare-ddns_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "71bb9ef66ebff3fb80cfd60a2c289df6befe0519129e8218af1791d7ed99a7a6",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "84d087b2d270445415e505e242a132caac448d1dcbeb3a9a241ece5ac8698da6",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "fc2c7bbe26e929070cc25f2038d51bc89050bf13e3e1e49596b4e4948e132a3d",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "2003d693a4aad21ab925a5a345aadf65a65f75a1ae7a7f667ee323cad51ade31",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "bf0a6411b9c4a2ef3976bfe970c879ba6e0a123975c746a2997cc467d55688cf",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "d6bba92944fb414ba621a578d1a14f63b7d535fc6c06ffee65ec9a836fd7e96f",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "e992f1918d1807e18e937aca261995b22a8912503276515a54642d0c67645c79",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "10062d511bad37950b6e1a7184a3ec8731fdde075cc9acc0bd83907d4fe5fc33",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-config}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "6feb64159adfaa35819a55c3918f57b6da70382d77117cb187b05d3cbe3125a5",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "108fad1dbede19335b567c467889fa631cc5525c584fb90fd4a6aa1668cd1cc9",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=main.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "f4379ffb2bd188735afa96b63afa5f18b82141ce404faff857809818c0366633",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "fe75e80ac049e94ff248e516ee1ad571b8514c38fdde7727b9ca63feca36e664",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.metadata",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "608ad59da4f53ff81f091ca62085c3b14a5acef7c71d94b97bb54f931106e0b2",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.containers.name=main.securityContext should be set",
					"actual_value": "metadata.name={{release-name}}.spec.containers.name=main.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "af316d2d7e6271d7455500c7d51fef86d3e990a162b7233c2662f07a09650c7e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "36a400f137b6477075b42b574e2231e1e8564db628640caddf5b84d1f3fff838",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "761a72579e14788d8d4c2a05be722f3e0cbc1b36cd9d42d497d3455dd6d5a372",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main has a security context",
					"actual_value": "spec.template.spec.containers.name=main does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cloudflare-ddns_template.yaml",
					"similarity_id": "3ad98b4be92d9e292ef57026baf67bad95e258ead13f2f1774c044044dfb9dfb",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
