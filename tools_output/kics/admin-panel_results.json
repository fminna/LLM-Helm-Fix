{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 98,
	"files_parsed": 1,
	"lines_parsed": 95,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:55:23.629542+02:00",
	"end": "2024-05-17T20:55:25.533291+02:00",
	"paths": [
		"templates/admin-panel_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "6cba0d977458dc37c391e9776d3e160339a540aea7a5250fb692fc43a942f305",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "98fb2c9622f7a6cfbfe2b1f6038b139c516f1e49f0f8f17f894e419f5d6ab53a",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "5a4954bdc162b36fcdcc276f939ba3f8c85ed0e631c3501e8d978ea76ce605d5",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "ddda8167b09759a4744a3b1e2553e44f54069a46f9523e9bb58c4116efa088db",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "ddfa91376d5aae52fc11484dac200c9a1214b8ec691772660239cee9cfb18061",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "eb79dce423360385d28f613c6d0a49277cc0cc74f7f5cc49f19a10eda11b2828",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "6d453cb7e3f2d3a6f5bbd1878b94657ed38bf2b8a63650841305e94c6002d6ea",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "0584325c4c1bb0109bf0c32a6ce7bba55108b61605352295f6a6270db99e6ea8",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "97d06faed89214ef5c0ba1b05ce2bba404f3ce00050c2d7ff32ed4eb67c244fd",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-admin-panel}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-admin-panel}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-admin-panel}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "13cd59f5304a251b7f82d3a9267f4e0d771445c122d12fd9a2b78d3fd5cd11c6",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=admin-panel has limits defined",
					"actual_value": "spec.template.spec.containers.name=admin-panel doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "dd66d8babebe929ee6c8bfc7257b28f44c21731cce42ac5acd35eac0e7ed446e",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=admin-panel.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=admin-panel.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "d7ba84272cc95360c6714f360316d7c44351d9e7adf99b2d62ddd155ccf9aad1",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{admin-panel}}",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{admin-panel}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "86f351539bc24929e281477182e08848a755c189a7958fff2f20098181f79634",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.containers.name=admin-panel",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.containers.name=admin-panel.securityContext should be set",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.containers.name=admin-panel.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "4cd602285337c1677a32920193f99fc4cba2438488bbc5d28cf8e090c9cc5f5a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-admin-panel}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "ec37079212143dd8bce759494a737f5e99ffb2d61263c939a4d168767cae7c96",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-admin-panel}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "67ce8b1694f5dbaea7183879a7da997e4c8afb5b8387728657435ad14f0a6eb4",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name=admin-panel",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=admin-panel has a security context",
					"actual_value": "spec.template.spec.containers.name=admin-panel does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "b4f716913189cc1ef1a5a1d27a9eed242357b515b85bba0a55212493c7067f6c",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.name={{admin-panel}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "b88466a1a4329bda7577778aa0d1185ac7d3692fa0009938600518e21b4c28cf",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.env.name={{GOOGLE_CLIENT_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{GOOGLE_CLIENT_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{GOOGLE_CLIENT_SECRET}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "1bf99a4c388261d9db19742df7cefe94c8e59f0ac6fda820793eb2c52f09cf41",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.env.name={{GOOGLE_CLIENT_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{GOOGLE_CLIENT_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{GOOGLE_CLIENT_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/admin-panel_template.yaml",
					"similarity_id": "f1a6dcece018cfbfe88d81d8bb8a526b14592d86e7b1a555bf9c8f7c47522f3a",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-admin-panel",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-admin-panel}}.spec.template.spec.containers.env.name={{NEXTAUTH_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{NEXTAUTH_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{admin-panel}}.env.name={{NEXTAUTH_SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
