{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 313,
	"files_parsed": 1,
	"lines_parsed": 301,
	"lines_ignored": 12,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 24,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:08:32.677935+02:00",
	"end": "2024-06-26T01:08:34.759829+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/metallb_template.yaml"
	],
	"queries": [
		{
			"query_name": "Containers With Sys Admin Capabilities",
			"query_id": "235236ee-ad78-4065-bd29-61b061f28ce0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have CAP_SYS_ADMIN Linux capability",
			"description_id": "029aeb1d",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "b68b38a10ab77b2698e4f15b04002083d91fc4163645a2eb9de39b170751e1b1",
					"line": 246,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=speaker should not use CAP_SYS_ADMIN Linux capability",
					"actual_value": "spec.template.spec.containers.name=speaker uses CAP_SYS_ADMIN Linux capability"
				}
			]
		},
		{
			"query_name": "PSP Allows Containers To Share The Host Network Namespace",
			"query_id": "a33e9173-b674-4dfb-9d82-cf3754816e4b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Check if Pod Security Policies allow containers to share the host network namespace.",
			"description_id": "4b468f08",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "fbd7b96a9245f37af3e324648a551042d374d0ca702e508c87f42e298ba7c8e3",
					"line": 18,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "PSP Set To Privileged",
			"query_id": "c48e57d3-d642-4e0b-90db-37f807b41b91",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#privileged",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Do not allow pod to request execution as privileged.",
			"description_id": "11a8da07",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "1994be339c85a04221f349c02d3ed0c0e6c3f9b274044d578b720cb49cb87a60",
					"line": 22,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.privileged should be set to false",
					"actual_value": "metadata.name={{speaker}}.spec.privileged is true"
				}
			]
		},
		{
			"query_name": "PSP With Added Capabilities",
			"query_id": "7307579a-3abb-46ad-9ce5-2a915634d5c8",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "PodSecurityPolicy should not have added capabilities",
			"description_id": "2889da19",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "c918811e90f2d19c49a63de5a327d60d0af17bb827cbd174841c6a1f5366bd7d",
					"line": 12,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.allowedCapabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PodSecurityPolicy should not have allowed capabilities",
					"actual_value": "PodSecurityPolicy has allowed capabilities"
				}
			]
		},
		{
			"query_name": "PSP With Unrestricted Access to Host Path",
			"query_id": "de4421f1-4e35-43b4-9783-737dd4e4a47e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "PodSecurityPolicy should set 'readOnly' to true in every host path allowed",
			"description_id": "fc4b7215",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "3f64084ab9a1801bda2feeba826d9319475ad5e83c3fd8e719f77cd4a7152cfd",
					"line": 10,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.allowedHostPaths' should be defined and not null",
					"actual_value": "'spec.allowedHostPaths' is undefined or null"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "798f78feaffc5abfdf4046b7856d9c24f0b107d88fe5d1d59ebdaf8c879b3cab",
					"line": 243,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}",
					"search_line": 243,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "874a62af489c0181792153512c273dd174491dc9b574f99123d5413adcc969f5",
					"line": 243,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "2b50ed607a7944c09f90be477d3142781e91ebd1351a385d12e97df19654ea29",
					"line": 246,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "549680049b22e2456f4f37e928adef8dbde3ef0b8e58868008d6069d862b932f",
					"line": 269,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "78e82ee402c0e6cc813cad83a64ec6d1b62cae9b39072a4960bd838ef16eced4",
					"line": 235,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "03fec5824cdddc22c470fd700030959073193bb72ba90f5b7c2d57db40ddcb99",
					"line": 235,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "da30c7de6a39abc5769670d9bac2e18ad52c2b92d497e22d18a41a74c4d1ddc5",
					"line": 269,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Root Containers Admitted",
			"query_id": "e3aa0612-4351-4a0d-983f-aefea25cf203",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers must not be allowed to run with root privileges, which means the attributes 'privileged','allowPrivilegeEscalation' and 'readOnlyRootFilesystem' must be set to false, 'runAsUser.rule' must be set to 'MustRunAsNonRoot', and adding the root group must be forbidden",
			"description_id": "2fe54446",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "a3d00d4d78df31218047f8240b62238ebb92f74c47cc469f789459ab9dd06d8b",
					"line": 24,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.runAsUser.rule",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.runAsUser.rule is equal to 'MustRunAsNonRoot'",
					"actual_value": "metadata.name={{speaker}}.spec.runAsUser.rule is not equal to 'MustRunAsNonRoot'"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "3b8e61de65cc3df994b530202741049c162f05b13ebab7879445ca7b3b2ecd77",
					"line": 28,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.supplementalGroups.rule",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.supplementalGroups limits its ranges",
					"actual_value": "metadata.name={{speaker}}.spec.supplementalGroups does not limit its ranges"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "b650862ac4e4ba770ee746eb58daf2aa04ba3b6d7335fc150de1242aab028e1f",
					"line": 17,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.fsGroup.rule",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.fsGroup limits its ranges",
					"actual_value": "metadata.name={{speaker}}.spec.fsGroup does not limit its ranges"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "b27427916fa51e4068d7d487177de6794071f41e29d110aac59354ffd0ffb81b",
					"line": 22,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.privileged should be set to 'false'",
					"actual_value": "metadata.name={{speaker}}.spec.privileged is set to 'true'"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "c24be541a8f780bc2464579ed3f45c6a46da1e2aa10f4e50a810da898dd18b70",
					"line": 243,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "9d01211739e4f9c3ea5dc99c4946608584c53922c1e6fcbf1812d6ae5dac0e19",
					"line": 300,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "4c5813ad83aed11d4832e10c9eea58f9f7f55ef051df8e096fa2d85d0a3c99fc",
					"line": 219,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "e34497835a80d3776669762ebc559ff3769ab97bd245691c8ed0179b024a0dbd",
					"line": 219,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "c1bc3397111094d801532606872745caa807fc3bf81ce6f1044e19bf3de5fd51",
					"line": 18,
					"resource_type": "PodSecurityPolicy",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.hostNetwork' is true"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "7b9be58e67d3fe6a0b4c63e4b8dc30a7772ea787b7d7c099e8bae95ede59308f",
					"line": 253,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "Role",
					"resource_name": "config-watcher",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{config-watcher}}.namespace",
					"search_line": 168,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "4f4507f85e0660af32a75e0c559cc3a6517bc9de86ab1c1e2d13b7f725d804c1",
					"line": 205,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.namespace",
					"search_line": 205,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "ServiceAccount",
					"resource_name": "controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{controller}}.namespace",
					"search_line": 39,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "06cbc3361586b141b116bb23d1a89e433c47b6169c43d72859089cd51533f2ba",
					"line": 270,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{controller}}.namespace",
					"search_line": 270,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "ServiceAccount",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.namespace",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "ConfigMap",
					"resource_name": "config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{config}}.namespace",
					"search_line": 54,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "62070a33e6212636d2c0ca9818cb37c939a201fe471a578e0c0eb35c5ed0edac",
					"line": 186,
					"resource_type": "RoleBinding",
					"resource_name": "config-watcher",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{config-watcher}}.namespace",
					"search_line": 186,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "323ca6ad31e6953b84b5ce6b14e17ca0b4a6ecf64d062f33a17fed80d9c1d5f6",
					"line": 239,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=speaker.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=speaker.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "b1500077a92a9dfbfe9a7022572790ed04fba31be1d1a933349aaf9f098d672a",
					"line": 296,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=controller.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=controller.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "2605a5a6945c3070beb41faafc66a8b13591c89487d16c93f86b534fd2295a6d",
					"line": 291,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "e0fb5c8874ad6f68530319efb365f3f2bc2a6284abfeac80359130f473e356ed",
					"line": 291,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{speaker}}.spec.template.spec.containers.name={{speaker}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "4bcaaff039eb5adc9bb096ee3a820b3cea88597ee40ac509d81bd5aedd4a6eb6",
					"line": 279,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}.spec.template.metadata",
					"search_line": 279,
					"search_value": "",
					"expected_value": "metadata.name={{controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{controller}}",
					"actual_value": "metadata.name={{controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{controller}}"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "27bef88c89af8e6f98f0bd7927b1ff6510231f9a0781126efacee66460acb21c",
					"line": 213,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}.spec.template.metadata",
					"search_line": 213,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{speaker}}",
					"actual_value": "metadata.name={{speaker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{speaker}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "8a5e218af1e49fed69b70e3e4f954c810a13b7ddf0c45684313e723aeddf3852",
					"line": 270,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}",
					"search_line": 270,
					"search_value": "",
					"expected_value": "metadata.name={{controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{controller}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "534d1ff6526094c248145db5ecd0fb9f760b6ec8a3b8823d441d53ed3c4b6609",
					"line": 205,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{speaker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "1b035eb40fc1896938d4687da337d4148c874b6b14e85012b8017c29e3449512",
					"line": 205,
					"resource_type": "DaemonSet",
					"resource_name": "speaker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{speaker}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{speaker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{speaker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/metallb_template.yaml",
					"similarity_id": "fb9873fe2856702cfbac5163089121484e07f00527126e584d0f868d82c4acd3",
					"line": 270,
					"resource_type": "Deployment",
					"resource_name": "controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{controller}}",
					"search_line": 270,
					"search_value": "",
					"expected_value": "metadata.name={{controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
