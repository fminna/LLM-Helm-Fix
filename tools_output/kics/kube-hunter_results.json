{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 43,
	"files_parsed": 1,
	"lines_parsed": 42,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:27:44.415784+02:00",
	"end": "2024-05-17T21:27:46.3691+02:00",
	"paths": [
		"templates/kube-hunter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "149453be9f1d94f011ea2830fd40d181dd760116d7c24246303060eb1ca0fdea",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "a819398b933de425fad2c3f2f70dc457f4cf0c901736cb3206f9f6c13a9ecab5",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "8fb6e944c68cc5a09927c4cca4ba16c0a095ffceb46aae759a11033e95d10e58",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "4b36edc35bf4fead9327c35871e68048dd0acae0d2e986b86f0bce6836ae4b89",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "709581ec3b271067a99aaa54e7df6df7b10a9fa0a5eab6aa73a0111f50b22014",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "a24afc6c82e1e52245ddf1b094207b7c6e171039b87d10504737d9d974a658cf",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "91e573368cfdf1ac798d88ecb4018ff621c170b9e38b61c158acf1635aab1867",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-kube-hunter}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "b08ae1bc8e92d83fa93b0548ef8aef172381273fc7d269755a8fd39da321b20a",
					"line": 41,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter has limits defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "c4c792bb645d5e798aab85518ae179ac31988ea1528651dff8d0c377ad4e8502",
					"line": 41,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter.resources should have requests defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "cf567f62cd5f17fbaf42bba48bf5b6d4c1f79961d9d4e265f061d471a0b4e906",
					"line": 14,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "ad5d30e507074d2f0aee059c69b16123d7b01f482a0386531e75e6fc999fb864",
					"line": 38,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "12bbf73574dca983d2bbc4553516bbb6d645e8037f96bb1a9418c4e40416432b",
					"line": 30,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.metadata",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-hunter}}",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-hunter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "f683e1e012e5f567c08e6c5684a654ae97d8a4f79c6c0c216d351b9344e49848",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.containers.name=kube-hunter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.containers.name=kube-hunter.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.containers.name=kube-hunter.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "378472fca7026d39212025dffc7075ce3d480249dfa03753f46b6916b9629073",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kube-hunter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "e299c87363d6d64e96c237be933e6356815de329f007a4c1dd6b465ecf2ad7fb",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kube-hunter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "7ed1244ba4b1bb9709e5a65b6dbe1d625bc341790a74db06fbdeb8b3a153dc91",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name=kube-hunter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=kube-hunter does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kube-hunter_template.yaml",
					"similarity_id": "2efc2fc47c90041b17c9b184f023c902b7ab54807fa05309bbff9a8aa8ecd7e6",
					"line": 36,
					"resource_type": "CronJob",
					"resource_name": "release-name-kube-hunter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kube-hunter}}.spec.jobTemplate.spec.template.spec.containers.name={{kube-hunter}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
