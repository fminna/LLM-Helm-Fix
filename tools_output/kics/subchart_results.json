{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 113,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 3,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 11,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:39:32.029593+02:00",
	"end": "2024-06-26T01:39:34.072024+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/subchart_template.yaml"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "5a77081f6812d003e37ea3bc4e950e4d785d2aff0589040b019cfbe6dba89f86",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{shm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{shm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{shm}}.readOnly is undefined"
				},
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "b85ec84791fbbb55cfd72994cdfc593a6efa56e73d9bcdabc3c7d21e8990fb53",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{varlogs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{varlogs}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.volumeMounts.name={{varlogs}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "abe580d1c55218062a1353cfb20ac669c6089cce834c213c45747a962e3fa912",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "3cf8719105a4352cc62b3c45126ab50e8eb9b762aadd299a5cc9c10be4c7f2ce",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext.capabilities.drop",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext.capabilities.drop includes ALL or NET_RAW",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext.capabilities.drop does not include ALL or NET_RAW"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "0b7e3df94b5468345de09304deb6ed255f6265697f528859ffa939bb8852bb2b",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "bf2288f22c373a78e9f319ed37f0599213c08c121ad56daab483eb21ca53ef1b",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.containers.name={{release-name-subchart}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "00ef32f8d729dbc0edd2e0fe7b1b43faae3ea9f90b92bb4e01090cca4394b377",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-subchart}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "7777964ae7002633ac20d3371a702714d5d5647ae1b19d247e3394876e98520d",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}.spec.template.metadata",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-subchart}}",
					"actual_value": "metadata.name={{release-name-subchart}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-subchart}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "033af81ab889f18b43ba614c6ed229145b3622eab612e4a0dbe2cd1f2161cbe6",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-subchart}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/subchart_template.yaml",
					"similarity_id": "7c68247a3e4276b0284230b66c16f7f148bb4dda8131441160a72785122d9ed4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-subchart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-subchart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-subchart}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-subchart}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
