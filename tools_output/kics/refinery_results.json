{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 259,
	"files_parsed": 1,
	"lines_parsed": 252,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:57:15.755658+02:00",
	"end": "2024-06-26T01:57:17.848549+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/refinery_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "5f0358fa73cb73ebf3ce16301718a8f900061e26b7fd5f96b8939111324db54e",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}",
					"search_line": 198,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "0f076e7d8ea8071aec33a8126b3c484bc36ebfdd889809d14e6bc72168d19842",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "a2ad50081734f2b976f8b604b9aeda70746174631cd05a1d8a90ed6169fbf49f",
					"line": 222,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.volumeMounts.name={{refinery-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.volumeMounts.name={{refinery-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.volumeMounts.name={{refinery-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "b7c4b136bc57b10182d6d0f2297cd1d2b5d1aa9c8c178a92522cf2c389d37942",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "e2a912c5090109eeb25e2344ab523c70e9a6267e75ba662c451e0785bda0ac06",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}",
					"search_line": 198,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "c8a32f6f0d5bafeca115300cffe7fd60bb71f31e25ef54214bc681d7848f11db",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "75f263c763376c140da23e52a30c5e1f709a1f211bdca113eedfaced99495223",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "4f74a8a689efa82a8ad0679da052fa0dc8779078e6537cc6f0e6f6153a0fd700",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "eb8671c9fc651141b399c48bbffb8b7669ff88966233c4704dd933f62ac92238",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "656a28da1b064f241f8b4310d3384c9aa3bde262f2eb7f77fdfb9e351e5d486c",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "ba0ed87b2975df644d95071a6533391387b536ecbad1585bb851041d9da3e0c1",
					"line": 197,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "8e0ba465b0d0bec9f8b7a992054a23f30c8ceac3d60327611ffc77b4ee6c78f1",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "6372929d72bdc4ab1c5c46ab3aed82c52542cbce919ae0d26b51decd188dd8ac",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "1de052faa510c8cb71485e2e429021bc7e6db6efaccf44e6356d4d2385573168",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "8270ec218783c5331acb3a2911b06da1766ce4cf0cbea0c78911c23fbe851d46",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "b7d1c39cb9270a2ba810637f0c0c338781820281412f6c2850fb1e8358222688",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "2069e9cd4818fee21a4b40df1090cbe48fef6ff3a72d9403768a83d8d2d6553f",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "18b848ff39164a3c13d2162f69b123be21faaac7521d313eaeb98cefe9f9090d",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery}}.namespace",
					"search_line": 168,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "0c98c17de0216d9d06cd49849d55474aad0aec3f6da76c5ec070cdd5282ac7ff",
					"line": 100,
					"resource_type": "Service",
					"resource_name": "release-name-refinery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery}}.namespace",
					"search_line": 100,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-refinery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-refinery-rules",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-rules}}.namespace",
					"search_line": 57,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "Service",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-redis}}.namespace",
					"search_line": 77,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "236112b224809a61e7fa1000ddd2b1f5c5950186315f003cab3ffa470a5779f1",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-redis}}.namespace",
					"search_line": 132,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-refinery-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-config}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "479a9c10e38914a625061537a34c2e8737fe750d7f63c10a3c21cace5895f45a",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis has resources defined",
					"actual_value": "spec.template.spec.containers.name=redis doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "da9dac8cf8f4f9b51d3b1580be9a71c5f97d335c1c506841b618b30506c933e0",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis should have resources defined",
					"actual_value": "spec.template.spec.containers.name=redis doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "1e8550f8a92ae14e7e5dbd3319967afb894f08f6933810078917174c34745dc9",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "ace1b47b03229215937fb4ccb8def2808023e1813697bf63d36a63e0e70b1a07",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-refinery is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-refinery is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "7b539f4377d6e3e7acd7e39b2b3eebcaf18e85902eaad85e7977ee01a6d88045",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "95d3039d9d36a0ab6ed11089bbbfacf99f692ecd82af6e642babd82308730407",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "eed593a92ca450da3d2d2d6b9c1576cfd57bd31cf52cd5cea571ccf756f0ae55",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{redis}}",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{redis}}"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "2efde1399269e6345d1bb5f4bebe3e3c98e76dbc542499117517d4e7a1f267ac",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.metadata",
					"search_line": 185,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{refinery}}",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{refinery}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "73c71956b626291a05bf2f970a71132f11c35dfd2ae8f1eddb5eac47e7d843b6",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.containers.name={{refinery}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.containers.name={{refinery}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.containers.name={{refinery}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "56bb969f59ad5a4452aeb5e2ba3aa66eb7bbdc814b31730220b76d64491c1d6d",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.containers.name=redis.securityContext should be set",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.containers.name=redis.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "a730360485d6440a8af6da3e785d9bfb93b44596aa684f8b866fc55e70f4cad0",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}",
					"search_line": 132,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-refinery-redis}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "e159c15a744ee416ed1d8163b643ff79ea17250394b081d7c4a790ff29d48abd",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-refinery}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "ca5baf4425b08379df0e636670f31a081ee07f1231adc3e3e390f0fe2f565144",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-refinery}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "c3006600ae23110f6a2a908809cf835a6e2608238d62fed8a405c91a4a2f97e8",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}",
					"search_line": 132,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-refinery-redis}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "aeefc51dd50e7e524c9980d3ab155cdb0ff533358bde2a50b03e8b0c550ed5dd",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis has a security context",
					"actual_value": "spec.template.spec.containers.name=redis does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "f2ffc40173a56d10d0673fa7c7b22d12b21a827b22e75e62299a97db00fff28c",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}",
					"search_line": 198,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-refinery}}.spec.template.spec.containers.name={{refinery}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/refinery_template.yaml",
					"similarity_id": "7112b4ebef748657133e33554bbb21927d7443155258ed4600c82ac260c1e0b5",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-refinery-redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-refinery-redis}}.spec.template.spec.containers.name={{redis}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
