{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 58,
	"files_parsed": 1,
	"lines_parsed": 56,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:16:11.457095+02:00",
	"end": "2024-05-17T23:16:13.386633+02:00",
	"paths": [
		"templates/myip_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "87d0fc2a75ce960311c5a639c580179cd8653ab9d9f316d242559bdda58790ac",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "f2f0f561b402808624356eacf0b06fddd0f318058e0f3cff80112d22a72c174f",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "c54d93afc4a2dc0a981af8c38c8fb95d004d18a6bf9550616cfba48ff0f9edb5",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "183e92f59a1eec753eee49ff13cf14f0886df03fa0ebfbf7c6775b99061eafed",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "09b80128c41e38d954b81e8e85c83727099fee3cb84e3a6d107f855905a42fd8",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "819dcf341c1460e047433760c07c32355f687f82b61550ba299db6be8e280c4f",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "d92587a4bc0c960e76510b11f7913be477f016a799a963d9e1a33b30562bd3ad",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "979fb9338f8fec3e53c119900ecf16bbfdf9213ef3002a6d261418f281518dc2",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "281e972b043f8898441189d887b4c8d836e96c9d2cbc6ec76da5f3e2f2708e73",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "release-name-myip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-myip}}.namespace",
					"search_line": 13,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-myip}}.namespace",
					"search_line": 36,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "698e4f28304463ed92eedcb77ad799e8574e78106a70ea45c7b6e085ae199202",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=myip.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=myip.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "c9f5fd89bf24a67339c280a31c8dbe2795150b974b476f9b36f2f135032e739e",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "7d14427fc8dd7b391fb42eab19184ea82cb017eaa88ff313ae412da5e1ee93b5",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{myip}}",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{myip}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "753af1448d193740bfacb2791fcf1a0b5ca5dc988fcef61a1da3d91cd62d9527",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.containers.name=myip",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.containers.name=myip.securityContext should be set",
					"actual_value": "metadata.name={{release-name-myip}}.spec.containers.name=myip.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "989e9f8e05f3abd7351c20b4b34867ec31a0f972583e8f6be80e4fbbd3f74d52",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-myip}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "ad878a918fe85fb76f7ad68aa6360b0a6565f90cd5e1f7b180548f92872c7bc1",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-myip}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "cf4ad0a0201f2d43a2e1211947bf7b863d1e2d67fea981997e973766c7ca741f",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name=myip",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=myip has a security context",
					"actual_value": "spec.template.spec.containers.name=myip does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/myip_template.yaml",
					"similarity_id": "a56fc098118383d34fb84b68c1b3c6928973fa254f8ee49da93e732c9f00f85a",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-myip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-myip}}.spec.template.spec.containers.name={{myip}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
