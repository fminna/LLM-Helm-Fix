{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 112,
	"files_parsed": 1,
	"lines_parsed": 109,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:08:33.441613+02:00",
	"end": "2024-06-26T03:08:35.555539+02:00",
	"paths": [
		"templates/mod-patron_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "371f3fd28dc422f1086f67ccabb2503c581cf35cf89fe0f13abc3f5813251584",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "537db1f0a953467dca933f330844b65594692096868dbabddb2ab4753e2c2dcf",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "cd5873d6fc27ffe294ed5f609068029cb1b245c293549bd6b1cc2ed595f08e22",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "448bd14a6f07c4250f7132fc1b34091bcac73251ad40b1d55bd28c753a4c74d2",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "ce6564c00967aac2cc8816bf61e11e8802ab9534928b359d4ba0886703de7864",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-mod-patron}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mod-patron}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mod-patron}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "bbf353b9f2a6ff1250fb95a8ce959ebbd56919a2b643d34f8e98e0f122827a50",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mod-patron has CPU limits",
					"actual_value": "spec.template.spec.containers.name=mod-patron doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "e4569a8248752a8335a0a17ad99312583932671ee29325972aa0a4fc28580775",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{mod-patron}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{mod-patron}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "470f1170029c0006b983f776da554429ae748141a23edb95318004cf0970c8be",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "606e3337d20600eba3fe5a1fdd456d51ac3215e812952d31bc9614cf255a44d3",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mod-patron}}",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mod-patron}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "f78b9d8b41f033b6dcd0e3b500cc5408ddd35a0413cb49e54efcd65ed0697f4d",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.containers.name={{mod-patron}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.containers.name={{mod-patron}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.containers.name={{mod-patron}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "1e279e742a8c89c96bc308d558b4c54c167fd4d0215e8f799d371dcf29043b15",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mod-patron}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "1c3a04c36d75d2cc7c4af963453975c7142e47a032e4dbed701499a37a9971b7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mod-patron}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.name={{mod-patron}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "69af7a0711e9224e164253b74664cd0f46497d6fddf9ec0e7d0d612f8897ff14",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "efaa03aabd41a49c611322c801bd5fbf5b7579706ef9bce01c0798005f1a29e1",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{DB_HOST}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_HOST}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_HOST}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "24c43319d8c9f1b04d2635eeaa567ae49a7409ad868aaa3246294da4694d6889",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{DB_PORT}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_PORT}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_PORT}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "6a5cd6d4935921cb2f250c416f9ccf0be2f2003b6351fbff3a0983d09d1bfb53",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{ENV}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{ENV}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{ENV}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "edfe889f034a332bdc33b0667af428713622ca0876848af2326e43d120971528",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{DB_DATABASE}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_DATABASE}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_DATABASE}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/mod-patron_template.yaml",
					"similarity_id": "59cf6e4ffa3c380bdb56d2e4c0fc8e254d765b52a76768e68140e4908959028b",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-mod-patron",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mod-patron}}.spec.template.spec.containers.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mod-patron}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
