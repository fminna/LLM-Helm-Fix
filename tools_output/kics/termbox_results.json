{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 209,
	"files_parsed": 1,
	"lines_parsed": 203,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:33:56.403786+02:00",
	"end": "2024-05-17T21:33:58.382134+02:00",
	"paths": [
		"templates/termbox_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "f9ed8e41dcd1781c5f2d4508720178967552d54c01d73e451928b5eb5419d87c",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "36af6d3b81de0bb2b6a6d885f56d7c89a443a5d101d27a4ecb25ca87f48ed17b",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "c1e5a3a5ddae5386cd9d65e6f5dcbb22b400495738a930fee19f3fd214513294",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "ae221ab4a3b66834d6f835c829aba57d6a67fd8748e245eca830d2d31d73b32d",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "59a1fd439d3982de0ece8f76ab17bc8f81b1fce2658e0c25802cf7346b7807f1",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "597a39fa656ac265e6d43e8cc28e50b3879678eb50277576d2bc50dba482877d",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "77343237945e2f8d8e5169c22143ab59be53992d52427c3393b11aedf0c85357",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "4f04fb3bdf3fcc5375f6aa54dc3000ddc86a56d6924c1bb1fc04a361f38b812f",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "80d186e00a8ab0e0ff733d31de1bb50b494a0e1767974408ecce509f076eaf41",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "eb68e37cb50b30fc1bedc0e4a3e6c95b7d3ca743b11254e7f7e9126e015a566a",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "e74f2416108b77fdefa5b3d179adf02837461279abb44302b53b085c6b8d9c15",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "ec944990b699519f4d7621ebca2b211bbe02e5c16c3fd2c72aeb4264df927449",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "f99ef1ff6eeb5336781d0ed8c825e2c36965c8c400de0b6cf9187ac2c0b8b9d0",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "3fde6e8d99cb53163f7ef51ffad7dbfb717b271b1e6ec6caea82eb0bc140ac43",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "2ef04a2aa458e40c52ee6273c54f9440e28eb0df2c13454ac58d2fca6bfab9d3",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=termbox-release-name-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=termbox-release-name-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "66c371703519d637207790cebb2ec2c6e8e6cd4ca0414795a1f5ae42d43583f4",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "3981ce17cece15abe96be4a85f6e291757dfbb243f17766058afd9c0f2125f10",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "e6f05c80c3d453e18537988260b9f1494864e5b50aa58be887f519548e0e345c",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{termbox-release-name-service-checker}}",
					"search_line": 197,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "ac62723221996756aeb5a150a2027dc2f98f85d49d2e23c0af76d8bb6f46612e",
					"line": 102,
					"resource_type": "Service",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{termbox-release-name}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{termbox-release-name}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{config-release-name}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "f7b094a7ca29113025193759e6600dd600c2617fb6d6e80d824743d4e6935966",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=termbox-release-name-service-checker has resources defined",
					"actual_value": "spec.containers.name=termbox-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "c11e69cddff348af64dc1a9e0619acdb5fcf334f2e19f177117a0ce58fa92850",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=termbox-release-name-service-checker should have resources defined",
					"actual_value": "spec.containers.name=termbox-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "d382c1d92204168ce0c9ee5f1d703079ce54aeffb28dbc46e9fd57062abd1211",
					"line": 204,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "8e9da23b8326a7da0e28d272d9badc67b97fb31e3fcdea2d85c3805d5d9a0fe6",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "19a3c6b128ae3240912378a134c4a09aa52e90ba701beca01bb4d9b178015794",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.annotations should specify an AppArmor profile for container {{termbox-release-name-service-checker}}",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.annotations does not specify an AppArmor profile for container {{termbox-release-name-service-checker}}"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "212fc3c6a0179a9e42f4c78263bdb483493d6e0433dec040e28aabbda7af8d4d",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.metadata",
					"search_line": 141,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{termbox-release-name}}",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{termbox-release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "38f98fe80241dd9a21aae297cbfb1fc65749f31b17c5d96cf32c7afb3a5fe5d4",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker.securityContext is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "67075e36a8e76682b135ca23c0176a4b3f9ffc630ba2d0e1575aefb9a43fbfa0",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.containers.name=termbox-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.containers.name=termbox-release-name.securityContext should be set",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.containers.name=termbox-release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "ccfd29d47c15361dfdd07539726095c241522637867ff1e15c427fbf8f986bfe",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "1bcb49bfee2a359a0efeb8b1b052576993e8e8b1e8a7425dc720c87b19b97290",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{termbox-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "f49b620fcfbfe32ecb144b6d2edb95c4e67033def047b53548801dec92a2cd44",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "decf3759fa49898e0ad71fefa00442dd59b3bd5ae47b03df1d13d1ed60733df7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{termbox-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "90f11ce2b199eefaacb6dc79ff03ae3250058d2abb64a52ab6204fb430e9352f",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec does not have a security context"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "fbf603b4b5988cb728db4aa9c0dee818c5660095d39aee978a03e4dc768fe524",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name=termbox-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=termbox-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=termbox-release-name does not have a security context"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "891fdf6a6c6e159d367476268dcd62071ccada25f90b17505de623527804af12",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name=termbox-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=termbox-release-name-service-checker has a security context",
					"actual_value": "spec.containers.name=termbox-release-name-service-checker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "cc61bad36a1dec4ed2a670dfb15d7bd825d5d41c939782461f870c17cd8a8deb",
					"line": 203,
					"resource_type": "Pod",
					"resource_name": "termbox-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{termbox-release-name-service-checker}}.spec.containers.name={{termbox-release-name-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "c560c8aae70d3871101a87a545bbc641612a76258f1c07e1236f44d3dff0437f",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "termbox-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.template.spec.containers.name={{termbox-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "fa1329cbeccab69a9c2aafc0036ef962407ac6ac5fdaee9ffd2f5e665ec3ac65",
					"line": 110,
					"resource_type": "Service",
					"resource_name": "termbox-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{termbox-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{termbox-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{termbox-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/termbox_template.yaml",
					"similarity_id": "0d453058bc4791e34fa35d1d576165b06775ed0879f1a97873ebf18bb588bbf7",
					"line": 64,
					"resource_type": "Service",
					"resource_name": "termbox-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{termbox-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
