{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 443,
	"files_parsed": 1,
	"lines_parsed": 434,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:53:49.46056+02:00",
	"end": "2024-06-26T00:53:51.800224+02:00",
	"paths": [
		"templates/splunk_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "b6856f53892fa7c3862f9f60b383672d6fc26f1902e2a5a92c5d72a535b28033",
					"line": 332,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "632e26525cde53ac54b61d54fe191272bddae5e47c3cb45e934306e8d71b4676",
					"line": 323,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "92a79c67a855763fb534959452a0ecc79367299b3565099dbbb2313422091ffe",
					"line": 335,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "f6a9dad5af39bb191fea9de3ebc686c8a38caaec1e3748f3410c21267940cf79",
					"line": 375,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "de8cbe9ee2ca8812e7e139f15fb00ed08d89dd06cf6b1c59ed870d93405934b1",
					"line": 375,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "1aeba27ddccb05cf055551d2ba6f487a33ba1e7ba2781dee2b222a4e1d6d3957",
					"line": 383,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "4d2a64feb3aa95bbd7708f5e4991ef9d4b0284dbe81cd8bcc7f96892f28420d3",
					"line": 93,
					"resource_type": "Service",
					"resource_name": "release-name-splunk-dataingest",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk-dataingest}}.namespace",
					"search_line": 93,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "82455c716ed795c3d35d0d867061c1f7cfa23014664ef4e0ab5d5a5fa5cf49e5",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.namespace",
					"search_line": 209,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "16e39e083c692a38163ae6c34e96f40d3bf29bed3fbaa50b4e5bc86e826af947",
					"line": 180,
					"resource_type": "Service",
					"resource_name": "release-name-splunk-management",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk-management}}.namespace",
					"search_line": 180,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "a762c30bcf108857d0006871a31eb39da3f96bda188ede559396067c8c3cf5c1",
					"line": 122,
					"resource_type": "Service",
					"resource_name": "release-name-splunk-hec",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk-hec}}.namespace",
					"search_line": 122,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "Service",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.namespace",
					"search_line": 151,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-splunk-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "86199ddf8e68f0ecf0628e1efd5fbce62aa476808896fa45f886e331779c7393",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.metadata",
					"search_line": 242,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-splunk}}",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-splunk}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "8696d3fc90ef2d2193fdcf8731a807b5fe3328179cf7c70e0d9e9c22dfd88ded",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk}}",
					"search_line": 209,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-splunk}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "a4d8464600cb9e2008e534d6ae0a3c5bfdf4908f806d48d5e55ab2c0241c177e",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-config}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "f80714becf3c5dee1546673385e6895d1fdbc6916d7f42f260fd8186688f1e05",
					"line": 71,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-data}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "0df304323f497c9fa8a72472a0958c874a0b8d84365286294a8d01498afc41ed",
					"line": 27,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-appcreds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-appcreds}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-appcreds}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-appcreds}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "2efb6ee1f950029511bbdb0ee18f2f1b9642faa8df68de40449217815e9c5d8c",
					"line": 71,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-data}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "82b8d236bf64fc11388f3f1b93844ddca0fbe3e63d4bb9c43ed75604b1a7485c",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk}}",
					"search_line": 209,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-splunk}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "f8dae1269652e6ecc85e101c80dc2d983c8c3d64521eaf1733c24f149d65013e",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-config}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "a8fdabe60aa9c63e11811fe40502a6733fa5f759917c3a69c7ed070bfce019c5",
					"line": 27,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-splunk-appcreds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-splunk-appcreds}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk-appcreds}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-splunk-appcreds}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "95564eec5f183c7f083ad95fe8ce209185f76adc4fc59b7547524122abea8c8a",
					"line": 377,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/splunk_template.yaml",
					"similarity_id": "d85c10f6c5a024bc7b643cf1fa63f89f3e48d731ceda5966720c1925ed444831",
					"line": 391,
					"resource_type": "Deployment",
					"resource_name": "release-name-splunk",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-splunk}}.spec.template.spec.containers.name={{release-name-splunk}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-splunk}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-splunk}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
