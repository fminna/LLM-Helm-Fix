{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 247,
	"files_parsed": 1,
	"lines_parsed": 237,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 28,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 54,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:00:26.915929+02:00",
	"end": "2024-05-18T00:00:28.86642+02:00",
	"paths": [
		"templates/resource-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "c2e0e53f905555e87d81c6d42b6528b62510e3d38619fdc4e6968ce9daaae71d",
					"line": 70,
					"resource_type": "PersistentVolume",
					"resource_name": "release-name-postgres-pv",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-pv}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PersistentVolume name 'release-name-postgres-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' should not mount a host sensitive OS directory '/mnt/data' with hostPath",
					"actual_value": "PersistentVolume name 'release-name-postgres-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' is mounting a host sensitive OS directory '/mnt/data' with hostPath"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "cba393968481a60254944a34f15f75387a5e156d053e8e9ccaa35291742ec37d",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8483738ea13a48386c2c6528382a65cf5f2ff6f00db53fdfde423101361ccf62",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "ee734af72ef93f097e619355d489d2b1c611a01fc6561983f499ceb9c4f50a89",
					"line": 241,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgres-volume-mount}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgres-volume-mount}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgres-volume-mount}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8da52e0fc3d923be903aeb4c9f72392767951af06900d0d6598b9d0cee1b5dd4",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8cfd4bf8481a317d7e8e3e4a5403f0e6f0a13c3538b3c6dd0e215f879e84f35d",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "1b348cf9713a7ec0debd5c904af86f667cd38929c836993fb862d3fde3551d27",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "d3b081a3c52b142ee46e821c6124cacb02485827c11c60a587d2d976eb05b034",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "365ca615761650533da9b70d0ce330dc60f06eeafadb1618948e0912381408a6",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "c4aa1c70250af0c780021d917f12fb1e687687a52bdc099a028897b04645a4b5",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "34928bd52df6bcdde62715e5d66ae1660fe104303ec41b7ab1df7aa93c5cd536",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "78fc1607a9932b8972213a779ac2e31a53602d67492412677320dbdea2a55381",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8d4fd22de37602f148741a2df62be08efe2e94d69b4d658f2add33c49b49f4ba",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "9590725c158ac7bfd5dd0ffdf188b0e4481cd38f1f4b9c4f345f799d4e03e636",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8cd9a0dc4d9ae0f6fa48ed3a94c7a76948873fcc6af56147e0db18873df84ef2",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "10597938241f0090247063206dc222358b09ffd9e50d515bdf4ac529c42ea090",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "ef3a2bc2543879fe0c32eb4cc189b3b7e8c3d3fa1261a079d4ff172339da8235",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "22e1bc90994b95bf1c63a8bc08792eaec01e1a88ca613aa22b29a88fb5b6b976",
					"line": 138,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "release-name-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres}}.namespace",
					"search_line": 92,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-postgres-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-secret}}.namespace",
					"search_line": 18,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "2597e03f07088c5ce42a7f3458eec8934bc42dddf4c4ca9d46d509f9d10803cf",
					"line": 203,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres}}.namespace",
					"search_line": 203,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Secret",
					"resource_name": "release-name-rabbitmq-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rabbitmq-secret}}.namespace",
					"search_line": 33,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-aws-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-secret}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Service",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.namespace",
					"search_line": 106,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "7db2ca57d8d39ec6c0f97339eb9c24cb9d4d957b862672706c40d69878de263e",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.namespace",
					"search_line": 121,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-configmap",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-configmap}}.namespace",
					"search_line": 44,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "d6df9f8218e2541470969989c847e93635347c4e973f5a3f006d40fd83729fcc",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name=release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name doesn't have resources defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "3d96e9a8918328c55ec4e3782ec120f874bd64d8edd9af17fa4d557a0d620691",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "9d627f065266a1b90d6b2948493f9e0bd5bb5d968b284acfa833688ea1322351",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name=release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name doesn't have resources defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "408c05576019758246a2da5ff4127f87c551c94b33dad19c973803c0ecb85134",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "57517453000060ef79911fa4ac63f488b5670ce28c5bf18a315f0cb5c135ed9b",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "5327c31e52c81264cd97e2e4cab2c03a6bf42efb85ec73991fbc8f9c93f30fb1",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "3459f26fc17defeff2bf449c05d3eb439129ad9f2e0ccdcaed50e3563312f251",
					"line": 217,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "5886d9bc492e4bff0db4345f768771c545bad8dac5f2a0302c11e1d8c846fc25",
					"line": 135,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgres}}",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgres}}"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "05f5250a5c279f67a89918fe224071e86f73cce87d49bfcd78b5ba50461ff929",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name}}",
					"actual_value": "metadata.name={{release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "88c88b7ba495779b3cde1f099c63ef1a716970fa2fd3c84d83697582c0457478",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.containers.name=postgres.securityContext should be set",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.containers.name=postgres.securityContext is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "a46638443b3a6b0873a74f8e78413e725b9772ad1c0df18f6c29a8a05b57130f",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.containers.name=release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.containers.name=release-name.securityContext should be set",
					"actual_value": "metadata.name={{release-name}}.spec.containers.name=release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "82839d545f33fc02ed935a1978d9036b4ee089afc94a509f99e6eccb98caaf93",
					"line": 77,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-postgres-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-pvc}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-pvc}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "573606f8f425cb4274563667c34558ba6042cdf7f0f8611d1bd51763297fcf79",
					"line": 203,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}",
					"search_line": 203,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgres}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "b31fed287a454b097e9fd553aa74d0967d1e736f2995df5b231d867d34639e83",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "ce47ebb390eacb2fddb656a893e3d0e854b7988defeabbf4a23a9d09f2a9f75b",
					"line": 77,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-postgres-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-pvc}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-pvc}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "3b43ee32ca5be2f7055b8cbb7189e30040622285d5b0a57d27373dd021f1b417",
					"line": 203,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}",
					"search_line": 203,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgres}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "ea78a2cea3c7c3601823147b6bce8c63e53b3bed6f3128c9ad66cddeb93c7404",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": 121,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "13e0aed0dfc26682c21e3e7b4c53958cc24fe6da8f2589b48bdb92f1c3fa448c",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name=release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name does not have a security context"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "8348e83e34b1d4e0e5070e8a105944b7a599aaa758f38530ba7f756f179048bc",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has a security context",
					"actual_value": "spec.template.spec.containers.name=postgres does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "fbf36c19c7282b3887e5af4db41906308463d4127888527871f861ac65472aab",
					"line": 216,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "169cd330d37b5e9dde1e1e90a6e392adddf23c25d45dd51b24694cddbf3366ac",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "9984c63d37adfc8c1b0cb368beb375f8b402572cbef804cab48a233dc7ca92c1",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{AWS_AUTH_SECRETACCESSKEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{AWS_AUTH_SECRETACCESSKEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{AWS_AUTH_SECRETACCESSKEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "da9afa0a1e5cc8ac9490e2dfdb2e6724bcf5cdc12b51aeb4cf81f6709da381d6",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_DATASOURCE_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "362ca80c35bc49e46ab719b8973b31d92bf312eab1dfe3a2fe95a853887a96e2",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{SPRING_RABBITMQ_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_RABBITMQ_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_RABBITMQ_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "0517358cb59ef06ac374cc6a02997766414d0febeb8b7870fae82431abe7bb02",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{SPRING_RABBITMQ_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_RABBITMQ_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_RABBITMQ_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "4ec4c1e18a90146bdfd9c058bfa4bdfeee0c8fbff5a6f51815aeaa20d22eb063",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{AWS_AUTH_ACCESSKEYID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{AWS_AUTH_ACCESSKEYID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{AWS_AUTH_ACCESSKEYID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "69530257e9b459a01bf9e4c871dfa607dd1f9f9c1de98fef48f8ab951ab166cb",
					"line": 221,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres}}.spec.template.spec.containers.name={{postgres}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgres}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgres}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/resource-service_template.yaml",
					"similarity_id": "07eea52bdc6819f2d8e26d151deb77ca7e91a089eb70d7dbeb21ef4730b5840c",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name}}.env.name={{SPRING_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
