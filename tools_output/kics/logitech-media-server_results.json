{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 139,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 30,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:04:31.193292+02:00",
	"end": "2024-05-18T00:04:33.111186+02:00",
	"paths": [
		"templates/logitech-media-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "43317909eef3644fd1fc8885888540bd0b1281f4011222ee7c84ffd528fb7438",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "03e555ebd5c98b1101ccf38f86d79be2d447297ab494088fbba5a9a54468e32e",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "b49d8d93b4bc0878d8343d47170efda44e1ae126032c97f21c30ef6d21b00534",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "a9d598aa6eca7034d9dc525c8c701c93faf07f4c85126a093cfb1d4ced5ef809",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "2e3667211670de0a71baa381b2ba39a5c920ee4ddf7e97734b0400d4be40f95b",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "d912140b23cabf43dc15bd2d72f257124a96193bc80725948f407705df85b58f",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "96b5caacefdcab3be807b5757583ed36099347b37ee6c4afd001ec0d629f3029",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "29f66f7e33dceee8fd9e7861608cc6e4b4c9f1c5f8b8e37cd951983ed47fcebe",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "59756074c47ba0ed79376e26b120824723cdafeadda1e51b8d2d96d1004f1799",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "7fff4ac64b1e4e5bda15865d82cead03d81fccfecfe7558ab7d3075665bd5317",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "a1ff8dccafae6a87b19b8c088b5c59fa16b3cf5058ff2453cc00f5b21892a5d4",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "e48748ce372ac6a79c391f25695df9a094890d21c5fb14e082c4398ebada77ff",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "f52fb1502e8b7682f03c88df2c73f436a8db786e7b666928c3eef5d420352479",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "afaa939526f0f3416a86168d60917feaa08e990abb7663aee184d8482967df41",
					"line": 77,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Service",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-logitech-media-server}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-logitech-media-server}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "a9392aaba7c796714ab7984a49d6b72d5388145ccf5f227fdc011094ac5120d0",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name=init-config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-config has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-config doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "a53d2c7a3d646b2cc4e3935be4f16ed18b8ca7cd83a9c3560a5694eef1f9405a",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name=init-config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-config should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-config doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "56d1ddd40cc4448d38df59eb6e531eaab00df3ca8465f403977f4a655554c4cd",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "5b92dfa1a6760c4608e30bceaebc0dff809e3a0012265c1a8514faf0465ca0b3",
					"line": 81,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "8aead383b77b8dff55c687b1ebdeea7f5e71b51c09d5c5a8c513e18663e62b66",
					"line": 71,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init-config}}",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init-config}}"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "8aead383b77b8dff55c687b1ebdeea7f5e71b51c09d5c5a8c513e18663e62b66",
					"line": 71,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{logitech-media-server}}",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{logitech-media-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "83f5fa2804d292ee0d32ecef4f7468b6786f4b31face567265584b4aaa6bda72",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.containers.name=logitech-media-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.containers.name=logitech-media-server.securityContext should be set",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.containers.name=logitech-media-server.securityContext is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "d3ef36316ceb043043d241644b269099c3b8547c37982db6cb30e8965df24e62",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.initContainers.name=init-config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.initContainers.name=init-config.securityContext should be set",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.initContainers.name=init-config.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "6b13adff04c411362a829fbe0fe4c9c624ef3c40da5287835ae9337a5dcfb04c",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-logitech-media-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "176e50871a87ad08745157ee78b3ef770a148426f53a4626d90a40a3c0a5b61c",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-logitech-media-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "ebf87861fa12783ae2a1e90a496efd9b665ee13002b71841182cc55b88fcc955",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name=init-config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-config has a security context",
					"actual_value": "spec.template.spec.initContainers.name=init-config does not have a security context"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "e0b7a0fcd7987a3c5b39d6683ecb273d9798e786a90831055988884be1d557ff",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name=logitech-media-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=logitech-media-server has a security context",
					"actual_value": "spec.template.spec.containers.name=logitech-media-server does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "0bd6da738d707325c081c82a9ebd245ec65054d55100e1656e2528e3ea77faa4",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.initContainers.name={{init-config}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/logitech-media-server_template.yaml",
					"similarity_id": "55db2ca5fa99d1c167b23469bfc3c6382105a25dad059f3a6d845abfe842a92c",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-logitech-media-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-logitech-media-server}}.spec.template.spec.containers.name={{logitech-media-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
