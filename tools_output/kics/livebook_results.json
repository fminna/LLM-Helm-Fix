{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 349,
	"files_parsed": 1,
	"lines_parsed": 344,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:56:49.570901+02:00",
	"end": "2024-05-17T23:56:51.512515+02:00",
	"paths": [
		"templates/livebook_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "28595e47720df515699472059b08299a018d942edb533666017c74c376e977dc",
					"line": 222,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "fca6859403c0321fb4fa307d8c22cb6fe6f19a39d61543f7ec826de7a2236909",
					"line": 213,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "76d031f3eed4efc42dbcef60b659e0e0b66750618da91a7d1b1d82b4e7eb68f3",
					"line": 225,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "4dd5f25f0d9521cf65994a4b496ac499b50f9a5014d2ae2b40984e32f029ba69",
					"line": 263,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Service",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.namespace",
					"search_line": 82,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "5978480e43b9f1bd495826403f7aa7ae0f8df5d49dc12c72d69308b353caa3e5",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.namespace",
					"search_line": 111,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-livebook-secrets",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook-secrets}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Service",
					"resource_name": "release-name-livebook-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook-headless}}.namespace",
					"search_line": 51,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "71d986da6a94b426ff082e8f9ffa24bbbb6968b81b6a2b9a778daad41ba059da",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.metadata",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-livebook}}",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-livebook}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "6bc155da6a05e8c6952fbbd6cc82763fd972cfe4b936d4a9fec171c468c662b9",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-livebook}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-livebook}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "a4305b96d70af5ffaa6e7daffed7e70af5b0c66690e31ad5b1137ee964ba4cec",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-livebook-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-livebook-data}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-livebook-data}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "613d091d1f6caaadfa1e389b9645940437a381b2a5e2d7d0ee659bf99b469322",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-livebook-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-livebook-data}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-livebook-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "019ecf708086b34732c6f944767ba3442c29b6e70094af8e3002a25d2f91c49b",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-livebook}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-livebook}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "ab6920b7aaab1bf23bc54888447322dc8e6073328e0ba700be00dc4a462ca889",
					"line": 265,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.name={{release-name-livebook}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "ac8b6b08bfe6f9f4a5a7ba80b91043fd0e827473aa4f370a1a5a4a4746697083",
					"line": 287,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "43d4de66d50bf01107f4ffe12891de05ab854d722f7d9e49aaedfb701de102ef",
					"line": 315,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.env.name={{LIVEBOOK_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "668ecef7854ffd5c0939fdf88277fd2402fa4e8182f5199d97087f09891f55c6",
					"line": 322,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.env.name={{LIVEBOOK_SECRET_KEY_BASE}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_SECRET_KEY_BASE}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_SECRET_KEY_BASE}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/livebook_template.yaml",
					"similarity_id": "2d15a46b63dfe80a4edbb86154ef77c1b8d20beda4050a579136aea4235913bd",
					"line": 300,
					"resource_type": "Deployment",
					"resource_name": "release-name-livebook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-livebook}}.spec.template.spec.containers.env.name={{LIVEBOOK_COOKIE}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_COOKIE}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-livebook}}.env.name={{LIVEBOOK_COOKIE}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
