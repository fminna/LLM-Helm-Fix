{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 76,
	"files_parsed": 1,
	"lines_parsed": 74,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:26:09.511354+02:00",
	"end": "2024-06-26T00:26:11.353523+02:00",
	"paths": [
		"templates/echo-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "9390a8eeab521dc40d8bad98b84bc91ab9c1aa43418d87a2d1711a3f05b6aed1",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "43869907f86772c451c23075fa4375dadf675c1a6ebca72c7b810b42b0a57fcb",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "14a494383d369bab9b751907745febd5308eef752ef5c3824b98365d228094bd",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "5a081ab823be5e2b04db7635fe2c89bf11b8a40725c1b77dd463ee0e23e2b6c8",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "44d6df848be90abfe2c76d2e9360f1545c8484c7f761154835510d98efe68116",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "c98260c0da28ffd9d1f0c7311ab87b7584ae98e3df019706c31888734e6c0df3",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "b21ca3ba40191e97688858f951c62fe087f0dcf75e35156dc50cdaf848240cd4",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "4dad9747ca0cf1d0e0090611ae7cf1dfe8c8165b4694fbe2103dc6ae6194600a",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "611cf28f72e46e78f6e36ff9563bad2d8e498316d884a66ac63a4f6e990749ff",
					"line": 16,
					"resource_type": "Service",
					"resource_name": "echo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{echo}}.namespace",
					"search_line": 16,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{echo}}.namespace",
					"search_line": 31,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "b6b87053953879b1778d1deab6d6fd8b1b33ee28774c6f0ad2b3032017a13cb9",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=echo is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=echo is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "98cb435b8b6f02aad1c782ff51b9520f3f6789d4d9cbf94b86ca6f7b67fca0c4",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{echo}}",
					"actual_value": "metadata.name={{echo}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{echo}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "37f43a47b3087fabf8245c39c79c1889d049eeeebc8b9c7cb1161d449ce10496",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.containers.name=echo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.containers.name=echo.securityContext should be set",
					"actual_value": "metadata.name={{echo}}.spec.containers.name=echo.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "726f5ac321cebc20981d485d206634afe41e81383e41097408a4964f77b31e75",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{echo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{echo}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "7715a3d1cf9a1bc55a25e3c90502e4b2d642a913c5f424f04f5dc819686c0eb6",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{echo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{echo}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "d6a32be7831e0619ed6fa97734b68062e274c64c91b1d4eeb7ebe0f61e993cee",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name=echo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=echo has a security context",
					"actual_value": "spec.template.spec.containers.name=echo does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/echo-server_template.yaml",
					"similarity_id": "b9fb992e370fa54627d0177c0af7753129cbebbb7c97fe7ff08ea859f4e570f9",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "echo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{echo}}.spec.template.spec.containers.name={{echo}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
