{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 136,
	"files_parsed": 1,
	"lines_parsed": 131,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:16:18.581842+02:00",
	"end": "2024-05-17T20:16:20.474627+02:00",
	"paths": [
		"templates/snowplow-iglu-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "c75074952ca7e96e47bf820c06dc43b065b04c3bcc5edacf6297ee92d48415ff",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "2c233a5540199f88591edf30d282e513c5605297ca4095663bee326fbd9aefb8",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "6d8d9d50e35858b0d25e87ece15ff41d938a1ebe9e378f10ce2215d2cfa0b39d",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "947e692a655b201112db992a492f5b2a770e040583b777d214f2768cc3148602",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "2b86e2a9e225b2d1147d03e000d624e927b4a84933204078c88f71ecccd6407d",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "98c6d90eafe1844a88837c6460215fd4fab5b6330369b7a001f58fa4742e4fe6",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Service",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-app}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "611cf28f72e46e78f6e36ff9563bad2d8e498316d884a66ac63a4f6e990749ff",
					"line": 16,
					"resource_type": "Secret",
					"resource_name": "release-name-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-secret}}.namespace",
					"search_line": 16,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "snowplow-iglu-server-dockerhub",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{snowplow-iglu-server-dockerhub}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-app}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "e89013453407154c08ca0932dd545a93867f6caaa0a31deb170a03979ef6c0c8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "1054921f8a94cbd97bdbd57ffc12d99140fe7f8b609a0902bcbea23816b8113b",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.metadata",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-app}}",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "5a4b478912011444efac65078bb7b274471dea242e0f61ef5c1f76d0550896d7",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.containers.name=release-name-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.containers.name=release-name-app.securityContext should be set",
					"actual_value": "metadata.name={{release-name-app}}.spec.containers.name=release-name-app.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "b67ef1824bc927c3899f1fe6fe2de2dd615a9c4fa43f43f0927f2400c4dcd2de",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-app}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "225cc85f301e6ecf9777b8fe19e660c4e7144d5a781676e87df2c701577c7c42",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-app}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "da849de58de220a8f36e7c3bc6094159ac57930024df45bcf902abc4dadb95a5",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name=release-name-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-app has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-app does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "51974edd052d368bc20b90cfada2941219701d78b655e62cd69f86f60bdaa200",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "da99c09099c40e2bab0eaa88051dfd84c58f7f96db7515b3b02aeb0f8cca8950",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app}}.spec.template.spec.containers.name={{release-name-app}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-app}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-app}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/snowplow-iglu-server_template.yaml",
					"similarity_id": "1ab6b4f9be28358baa33aa9bb406d4404d40dd5099cf5bcc642cab5420de631a",
					"line": 31,
					"resource_type": "Service",
					"resource_name": "release-name-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-app}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
