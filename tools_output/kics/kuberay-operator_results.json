{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 554,
	"files_parsed": 1,
	"lines_parsed": 543,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:28:42.465968+02:00",
	"end": "2024-05-17T21:28:44.392323+02:00",
	"paths": [
		"templates/kuberay-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "3d6d449a2fa528bb55cdbcaf72523068c59fb88fa73a1fdb43e7f6bacb4e28e4",
					"line": 507,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "86837e5c1b268e698d38a8d7d4e53b5aee8e53b361cdcae894fde8a91b4d0690",
					"line": 506,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "b147586d365f575a6b7aed9933131dfec40d8632bc31a2109c7762f036eba2f9",
					"line": 176,
					"resource_type": "ClusterRole",
					"resource_name": "kuberay-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kuberay-operator}}.rules.verbs.create",
					"search_line": 176,
					"search_value": "",
					"expected_value": "metadata.name=kuberay-operator.rules.verbs should not contain the value 'create' when metadata.name=kuberay-operator.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=kuberay-operator.rules.verbs contains the value 'create' and metadata.name=kuberay-operator.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "e888061bc81309bdc03f74f66b8b32c45ef7211537691a400152753fa5e030c4",
					"line": 501,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kuberay-operator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "1fa2453768a6df9883a06f1fd3722afe6ae496f79caa0d6af560547eb7e83ab4",
					"line": 399,
					"resource_type": "Role",
					"resource_name": "kuberay-operator-leader-election",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{kuberay-operator-leader-election}}",
					"search_line": 399,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{kuberay-operator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "426a8256301565d6feee85c2917163d9ef7825eb49b911d7cc2ec7634e9cfe74",
					"line": 481,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{kuberay-operator}}",
					"search_line": 481,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "b9b20077fa617e2ce5474ce441f2eca12203602ca57c1be1de22058ab344593e",
					"line": 460,
					"resource_type": "Service",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{kuberay-operator}}",
					"search_line": 460,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "2382775dbf8a0cd1a8f66eb23685f3f43b493e517bd3cac6529488981dcacae8",
					"line": 446,
					"resource_type": "RoleBinding",
					"resource_name": "kuberay-operator-leader-election",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{kuberay-operator-leader-election}}",
					"search_line": 446,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "07fc626644c8c8783b10d414b71757674f7d3946b9865f33a67fdfa4996e9254",
					"line": 542,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kuberay-operator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kuberay-operator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "fd4b117422383c60cfd028fc2a900f4b278f09f8bb83455ee7d36770d7332f3d",
					"line": 517,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{kuberay-operator}}.spec.template.spec.containers.name={{kuberay-operator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "607f5c429cea703eeab6be1372e1868ebec64ca955323b2580589483f7ec27ef",
					"line": 496,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kuberay-operator}}",
					"actual_value": "metadata.name={{kuberay-operator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kuberay-operator}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "a65f87f3c3d71ad383d63f5602aefec71e31ed3bf393a4e3254958c5630d71cc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kuberay-operator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kuberay-operator_template.yaml",
					"similarity_id": "f781246530c79a3e5c0c710c7a49b1fcb2b987c93d4a2011df9216accf4d4444",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "kuberay-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kuberay-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kuberay-operator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kuberay-operator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
