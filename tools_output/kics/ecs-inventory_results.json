{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 137,
	"files_parsed": 1,
	"lines_parsed": 133,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:07:50.172573+02:00",
	"end": "2024-05-17T23:07:52.030502+02:00",
	"paths": [
		"templates/ecs-inventory_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "d3c96cb72a37c77c9870d80d6cf7b88b30631f6f77790c4c276b0327213caf0b",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "7323d368cea67e08962ec07fa7b30105e5f4a93840c0c070419970487e07d227",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "ce5a47bd6ab366b4f564b609c332e0ff2a608ecac6202bc67d94ab4829ebb865",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "c7b4706a2dddef4eb13a1f38ea10ffd777255ae6c7a465fa2a54c22631bd63b3",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "1afcb09603f0baebb6ab084aaafccc663d07296bb6250bba57642c2da5a42e63",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "083b9cc862d73051c09210b2e7e550c6b76896ec24fa547b0e7b0a996f4f16d2",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "f19a4794dc0ec75274e549a9e2c7f482ccc577b647f2e64a8f2e2e64ac1be16c",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "bbc5c4fe1878595e176b6919bce85945ceca5aa7624629d1810ad28a98f838c4",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-ecs-inventory}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "9b85d122c5c8f4b877a9185274e7f47797b50d2ce07cc848f8b53694cc3a3b77",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ecs-inventory}}",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-ecs-inventory}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "22eced7d14adcca40271b0b47fa216159b8156327380ade10686aca3137ee461",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name=ecs-inventory",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ecs-inventory has resources defined",
					"actual_value": "spec.template.spec.containers.name=ecs-inventory doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "932900ea410e9e1e1305c3452c0e16ece408d2b21ca4936e70b3850dfd6d3b0c",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name=ecs-inventory",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ecs-inventory should have resources defined",
					"actual_value": "spec.template.spec.containers.name=ecs-inventory doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "438fd94076474cd8040c5ef069d47280464b644fd7b29dd844e65b9a1bf78478",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "168dffbb0538153991137e58f5c5123b21f79c984db19b67726b9ab2a8c6ad1e",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.metadata",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ecs-inventory}}",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ecs-inventory}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "6c8f4b54e380726066d54a448a4e5d1451191d0d87a6506cc81b7fcddcb959ed",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.containers.name=ecs-inventory",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.containers.name=ecs-inventory.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.containers.name=ecs-inventory.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "a4621aa25416895e277d95c39040403d5c320014a087663c0e58931d81c59828",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecs-inventory}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "4d7c91532598a7db5e6a8cc5674c1c57ca4a7fa90f17ebc64c761dc35e3353fa",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecs-inventory}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "384cf4bddda742d6e02a8c5a7d6d102a7abc2e735b69facb40f4f541dbfa8993",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name=ecs-inventory",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ecs-inventory has a security context",
					"actual_value": "spec.template.spec.containers.name=ecs-inventory does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "4e3325d8e9cb1f11eccc488811f8164784524364c616912a810f3964080883a0",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/ecs-inventory_template.yaml",
					"similarity_id": "660516d3ef992bbce8ee1b0aaeabedc69c2b2cb07e847a3664ca0479db4e9281",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecs-inventory",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecs-inventory}}.spec.template.spec.containers.name={{ecs-inventory}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{ecs-inventory}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{ecs-inventory}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
