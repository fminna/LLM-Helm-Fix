{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 130,
	"files_parsed": 1,
	"lines_parsed": 125,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:46:01.492636+02:00",
	"end": "2024-05-17T22:46:03.353682+02:00",
	"paths": [
		"templates/infra-static-site-helm-chart_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "11c3ce28a5056fcb8444e49d7d495a41098d0c4e706bbac5493772be47bcc552",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "fb5c085cb567647389e07c44c779be75521d5bb89535267c1b4b459b14942395",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "89261f77090ab14dc930ea667d9b1a2cf593f3c40a1e6d06eefeca4c5538db4d",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "3daf52e562de76420396cf04e063f6aab5d63f55e53af4557a6e65f5c7f52135",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "ff7a59d6760c38e3e01c86379f7ca89013fbbd43a98ce8c9abf02b3a47be5df5",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "aba79fd0e4eb110e8b47be2107be518f5e531733ff2ad32c24aa9f68f43f3c2c",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "02fdfa740539e7bc7bd3f4f57d5b02cb8697ce05feffac8d6ec2739b9c2fc11d",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "264bb9c9e3cdb2a58a8ef9aafb51b49c654532f1cd9e8d38ca444900b1f194c6",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{null}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{null}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "-service-account",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{-service-account}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{null}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "dfffd0263576b87baf736f57e6d0c8692b03d2dff56c3943a5f491c8d86e0ba2",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name=null",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=null has resources defined",
					"actual_value": "spec.template.spec.containers.name=null doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "cc044a00cfcdea91b6ee5c6818575c97525a5e2975137b8e7fe185f3eac90765",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name=null",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=null should have resources defined",
					"actual_value": "spec.template.spec.containers.name=null doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "d98c054e31f1ef594d9d0a3be3984888abe50bfafbb7874f95728667e58c25d7",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "f536d8fc46769a560ac65c30cd3ebefa7ba8bde27a64217a7b60dc0caf753066",
					"line": 55,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.metadata",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{null}}",
					"actual_value": "metadata.name={{null}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{null}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "8add7968d9f60e6dfd7f2fa7992ad68cbf109e4ce357d709dab974e799a67785",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.containers.name=null",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.containers.name=null.securityContext should be set",
					"actual_value": "metadata.name={{null}}.spec.containers.name=null.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "6583f70a255f8da3680b4a98a65028ad69543725e778eccbee0631654d6ca4b0",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "67c8e64390610e970a9875a972ec763be8c6d63c090a2caae1864e87ac813cd9",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "6ccfdc076a0799ad52c314ce38acc177e2286c824ffc1776381838b22ec9bceb",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name=null",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=null has a security context",
					"actual_value": "spec.template.spec.containers.name=null does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/infra-static-site-helm-chart_template.yaml",
					"similarity_id": "1b4799a95dc83a829bcb2fcf4a388133b6dd86036c9266e0448cf0c7064c7a55",
					"line": 5,
					"resource_type": "Deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{null}}.spec.template.spec.containers.name={{null}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
