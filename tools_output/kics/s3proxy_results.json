{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 133,
	"files_parsed": 1,
	"lines_parsed": 128,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:11:26.637502+02:00",
	"end": "2024-05-17T21:11:28.590763+02:00",
	"paths": [
		"templates/s3proxy_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "cb1c9ad10397d5c03bc5be08bc3e6dc5692172150650d71a38dba41fc825ebf6",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "bda41e7e6d024c9e322455e11b391ad22e7c10d3cd80b866584194f701d58e9f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.volumeMounts.name={{tls-cert-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.volumeMounts.name={{tls-cert-data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.volumeMounts.name={{tls-cert-data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "86b0898a9f59bac7bf01cdf9ad820da90062f5f00b691495b7ec227333b5e6be",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "86139b5d936461e3f15d3757201d83175ac1858bddddd5a2fc945adaa2194a80",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "f45797aaa762c5217e56f47635c65bd977f5ab2f06f0c8f0b164716c493fde84",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "e73b9415fc4c35dc2f4de68cfbba5e50e53789b8ee7f33408a3bcc74c174f6f3",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "7939077603a10c4bef0548737039db1b3430ccb3fcc3624758208dee90c5c48b",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "009105d851f9c879fbfa2fd8a50e709125bc68c19c89a28e9751b7c5ed52c052",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "31899e0f084abc33e883261df871c418274c6e02d4b19371815f8f24a38a1cda",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "197ef6f82f174ffc0e35386079013e9d5b26f4b11428e18a9d5bc573ed7c550b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{s3proxy}}.namespace",
					"search_line": 35,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "s3-creds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{s3-creds}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "s3proxy-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{s3proxy-service}}.namespace",
					"search_line": 18,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "374a790e3fc4abf28c0775c1bf1d45ecc69fb9cc17448cb58095080ea0efb64f",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name=s3proxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=s3proxy has resources defined",
					"actual_value": "spec.template.spec.containers.name=s3proxy doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "4a39c2c16aa1ff0f8830ae183faea418f1061217135e56a635b11cb0352863b2",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name=s3proxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=s3proxy should have resources defined",
					"actual_value": "spec.template.spec.containers.name=s3proxy doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "d3bfbf16ccabbe27ca298baf4bff84c3d30178e63171a8c2ab38f7960ec7a2f4",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "cb15bf4d3d98affa130e8f2c9c5847ff66b4f705219e6fff4fc81fba927af49a",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{s3proxy}}",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{s3proxy}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "9d00f6e52b8e09568c83bbca75578d262460a77d5fb9729fe6428ecfaa51e921",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.containers.name=s3proxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.containers.name=s3proxy.securityContext should be set",
					"actual_value": "metadata.name={{s3proxy}}.spec.containers.name=s3proxy.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "d5cc2b67747ac0d6f1f8d23804d7f3033ff2a0a3d46f3d358c3d80bca830fef4",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{s3proxy}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "df0ea77496b8681143e1281b7380a4fada9c6967cae5f644370b3fbb774e261d",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{s3proxy}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "0d5f3d7fdb4a5452d2c36d3b51db9b0efe07521dc1030333af807dbc06d40db6",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name=s3proxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=s3proxy has a security context",
					"actual_value": "spec.template.spec.containers.name=s3proxy does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "31386dfe27109deab08aa000fda072f41bb34226c4fce771e0d304ae32acdb36",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/s3proxy_template.yaml",
					"similarity_id": "a51042ea7081cef35a0b537e4922ba7d107f624f60d77207d9eed302776e1afd",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "s3proxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{s3proxy}}.spec.template.spec.containers.name={{s3proxy}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{s3proxy}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{s3proxy}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
