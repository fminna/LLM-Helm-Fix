{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 109,
	"files_parsed": 1,
	"lines_parsed": 107,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:06:12.51554+02:00",
	"end": "2024-06-26T02:06:14.571908+02:00",
	"paths": [
		"templates/oeml-api_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "709532e8c897cdfeba60ab71419c13b5bb870849ed1ed260c64b034d3b61e3c7",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "b0dd84f0b351a72b16db8d1cea30ad9f005c488197dfe0e09e0f6aadea1278ac",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "5f8b8538af41582a6454f4e9c66628e8bf0382e28a80d0f284962523f3f99c5c",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "f28fb30c69c89290e5f9be135cd7528a46d906079a4e75ce4c53256118a50e29",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "8e8e38ec65a8590e870029497682451791c6900e835d794adc61c6b09c0f7c85",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "c3772aa954a886a709cd1717dd5798b2e88416cf4defa2096da4a9ea1fddebfb",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{ems-gateway}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{ems-gateway}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "8b219684178f4624e9fbe0bed2fc425ec6e352c7813715ed34f3249b7e3bf14f",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=oeml-api has limits defined",
					"actual_value": "spec.template.spec.containers.name=oeml-api doesn't have limits defined"
				},
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "28d32aea89aa163d5b81920b5b74217eb9c5e6d99820d3fddb9627d048ab26a6",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name=oeml-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=oeml-api has resources defined",
					"actual_value": "spec.template.spec.containers.name=oeml-api doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "670eabf73290300c28bf53c1907213a59f03e2529c797e59b30ad04a212f2a65",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name=oeml-api",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=oeml-api should have resources defined",
					"actual_value": "spec.template.spec.containers.name=oeml-api doesn't have resources defined"
				},
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "0261a38f95e32df6b4391a7753fd488ff7482aa50476c4d77fa384a01c4db4fe",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=oeml-api.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=oeml-api.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "8b2f27886ec48b89c864c244a11330db25dd595ce7f0e78c9ffea730e2a601c4",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "4750b8c386e18934c9e214aa2626fd313b8b22f505ed94b4d9b517090a2899ad",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.metadata",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{oeml-api}}",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{oeml-api}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "fb8563f5a7c971ca9bb22794d099e3691dcd9a1d2cba6eeb5ee3cefc46649eb3",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.containers.name={{oeml-api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.containers.name={{oeml-api}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{ems-gateway}}.spec.containers.name={{oeml-api}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "0cb49af3184ffddb8cb532926923e4ede9796ca209753cb929c23643516ba3a8",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{ems-gateway}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "4e2470acd353471932392b5096f559c4423c52dddbc8f843c94ac83207e9ab7e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{ems-gateway}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "1ba3c56777721f1f9f5767f021eb2d184c09173d631efb51a4f54648e2d96ae1",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "ems-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{ems-gateway}}.spec.template.spec.containers.name={{oeml-api}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/oeml-api_template.yaml",
					"similarity_id": "a9d010ad93e5be4e76db310fdb0ac81ef95780eb6e4c1357841896f43020ad71",
					"line": 22,
					"resource_type": "Service",
					"resource_name": "ems-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{ems-gateway}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ems-gateway}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{ems-gateway}}.spec.ports.port={{443}} does not have a Pod port"
				}
			]
		}
	]
}
