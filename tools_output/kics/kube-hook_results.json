{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 135,
	"files_parsed": 1,
	"lines_parsed": 130,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:06:48.841552+02:00",
	"end": "2024-05-17T23:06:50.747178+02:00",
	"paths": [
		"templates/kube-hook_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "de8a12174b62056c2ac6ce00a782b14264e55183888c0729da487b3ad67f72df",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext.runAsUser=101",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "fe806f777d561155b49a0736a9fc0a7b863c6b4e11d7f81ced8faf0e6abe2e78",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "2952a901fc3d61187d056a80ae5922fccdbfc191ea57eed6cc9673e579edb2a4",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kube-hook}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kube-hook}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kube-hook}}",
					"search_line": 57,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "31d113e46cd83c9700ac06aa0c8f453c0eaa216e84091726a66fb0ebe3262c02",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kube-hook has CPU limits",
					"actual_value": "spec.template.spec.containers.name=kube-hook doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "cadcff26bd6dd38b726c0c6b894414ecf4530fe906f019e978e4f1db7cd79120",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{kube-hook}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{kube-hook}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "ba7690a92ade3e17100858ebfb409f71e68370d2d76499d03069e84b649b6e61",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-kube-hook is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-kube-hook is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "67c8d35cd9f853f850aa6478e375778b050e2fc40e7c298d46c48fd212a3cb1a",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-kube-hook}}.spec.template.spec.containers.name={{kube-hook}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "38e4a6e2bd635e82572c17bbef603d72845e359b75595e0c30c0872f51838cc5",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-hook}}",
					"actual_value": "metadata.name={{release-name-kube-hook}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-hook}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "29bdf4808868ae10cf865a0c57e6cfca824fc7cdb4bf416325abf36a1dd447f4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kube-hook}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-hook_template.yaml",
					"similarity_id": "a41d91d2f59f8b74399a2213ca77da82b03ecff02cfc269c56e2259f75ce898b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-hook",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-hook}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-hook}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kube-hook}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
