{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 105,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:57:37.598393+02:00",
	"end": "2024-05-17T20:57:39.487276+02:00",
	"paths": [
		"templates/common-test_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "62ab9ea2c78ff033f86a879e274778a9e5e650b50767c1050cbea797a5636b83",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "6662ee43041e610a60381ae7a1e49541b77e1cb9d009cb55c111c2a8002c144d",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "442a3a14a05b065d6bf680140e077a7b9d9c6f38b9763aa8437e45ae1f02f8c3",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "63c0ce039c6233e46120c79b2c80559c09cc2b0623fd7818a034995840f64bb2",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "be5adb4e6a86c91a108e22979db082f917156c56cd9eba20b24ed377a1991df2",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "d818a365d4271ce560bca6e08ee3ae60f73a5463c81effcbad565e518ec79673",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "82e911e7313448b41d516d414d2f2d812a1b45b0e0a7984654b441b585894de0",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "c71f73ea77dab9711847bf749dc701c481ff0f338b6cf7bcf15831d4577095a2",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-common-test}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Ingress",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-common-test}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-common-test}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "66e09faccba110616a0b4a594e2e8f54d08aa493a538f61fe9e7eb31ac3f2bd0",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name=release-name-common-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-common-test has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-common-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "cda8ad7705e8be6ead05fff21a69a25ca0b6bd3e5f6f4c053d9f68051401d36a",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name=release-name-common-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-common-test should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-common-test doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "652a8db497e71d84d44dac502c8202deb1fb36ebf1a7a2030573490febe3ee6d",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "d425c79121d525fb6d4497361927a3e7def7b9c5421863f231486e21eadafb5f",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-common-test}}",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-common-test}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "a3b7787929a1eeda1d501df8f048be50dbe9e874ff6bb41f9f38e687fc91bda3",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.containers.name=release-name-common-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.containers.name=release-name-common-test.securityContext should be set",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.containers.name=release-name-common-test.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "c6789d5ff9f9a553c291051d0aa436d4fced0ee843e3cf7841712ec3540f16d2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-common-test}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "954708dc8fad2e802ad96da7ebe043a84330b9ce0324fda7b2284ad3a6f046ec",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-common-test}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "742c45fc8322c30824a69c4888c8049aa216d4e3e55ea92b4a87de8b9bcca56d",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name=release-name-common-test",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-common-test has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-common-test does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/common-test_template.yaml",
					"similarity_id": "a69f83ce2881517b410ca82ff5184d617280f2a14f89e35f71ca0b0d62d1ef2b",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-common-test",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-common-test}}.spec.template.spec.containers.name={{release-name-common-test}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
