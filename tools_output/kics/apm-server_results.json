{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 130,
	"files_parsed": 1,
	"lines_parsed": 125,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:51:32.801175+02:00",
	"end": "2024-06-26T00:51:34.865393+02:00",
	"paths": [
		"templates/apm-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "67aa4245f9ac9d78168b4163bfbfb9c3e1dedcb6950fecfdcbce981720df6706",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.volumes.name={{data}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-apm-server' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/apm-server' mounted",
					"actual_value": "Resource name 'release-name-apm-server' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/apm-server' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "4d72eb134bdb54155ac8fec2b06c594d0398e5024d12533582eb210a47ff7038",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "7e4d568051afae1f7a344988e192fe080c3cccdaa896af865a396ab9cdcbd69a",
					"line": 118,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "60ce0f216cfdaec2f1b058b05474b50e723760668306a02036855cfa9ee1c6a3",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.volumes.name={{data}}.hostPath.path",
					"search_line": 126,
					"search_value": "",
					"expected_value": "Workload name 'release-name-apm-server' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/apm-server' with hostPath",
					"actual_value": "Workload name 'release-name-apm-server' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/apm-server' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "17bbd4f0977b68542d8818791ba04ba9f039c96a924a3f65054e2ef260a8fc92",
					"line": 110,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "7657e779a013442b142b23dea2d43bf4bf8a5114ebad0571a3dd878a7efe5acf",
					"line": 110,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "660458ec3b53dda88a627e831a43f19fe7c789595ce519e8cfeb73f0caf57ff5",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "d9140152fd56a4ff388efb952db81750533f969610d3356f258f7fece4abb7a2",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "bbd61b3e7f8bfb24a10ba67960e86aa4c1d04604439070bc3b205736cdba15ea",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "ea9f8313a7eba1cf9a31bc17a066d245b88b30348ded279d36bb35c7083e96f1",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "1043ffd57bc31ea304f86b273c7da042aa2667d029642a8474afdd63e32c255f",
					"line": 88,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-apm-server}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Secret",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-apm-server}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-apm-server}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "9ef1acdd4036021a4e0488b7c5c01c292a81fb74ec091ec9fccf144ff35d2ae9",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apm-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=apm-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "6fe3604cb1641dbea951ae8211ad1a7f7df15f792401869183ed04483fd804f7",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apm-server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=apm-server.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "f35039638beb526bd45e5db8009d61481ed0f1cf70383af5fedc3f6d439fc449",
					"line": 92,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "cd33a2971a05e1e2b042bef44d2e191e2ba6b91efc58b2d23b6f58349aeb36b1",
					"line": 86,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.metadata",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{apm-server}}",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{apm-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "8b7d06c820ec146c736896ddda9bd994a428b0ea9e066575239beb7c3c5ece10",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.containers.name={{apm-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.containers.name={{apm-server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.containers.name={{apm-server}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "54b0e32ef8898d1a7e9a1a6bdf24c993571a8b37eee4d036e389e366c1604ebb",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-apm-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "982c3891f95e23ff752843b669a269ddb20470fad64c93487a192bc12f5a6ad7",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-apm-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/apm-server_template.yaml",
					"similarity_id": "ac38d96a74507933ee40e0aac274cbebda287f1a04735a8c5c34224a1f30b4e4",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-apm-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-apm-server}}.spec.template.spec.containers.name={{apm-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
