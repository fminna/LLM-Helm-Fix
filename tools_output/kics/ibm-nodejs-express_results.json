{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 182,
	"files_parsed": 1,
	"lines_parsed": 177,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:00:01.818824+02:00",
	"end": "2024-06-26T01:00:03.956377+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/ibm-nodejs-express_template.yaml"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "5e5f1485353f89cb34cc8fbc42452f676ff918124382d5a6ab4982b3f1d257eb",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.volumeMounts.name={{index-vol}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.volumeMounts.name={{index-vol}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.volumeMounts.name={{index-vol}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "4d22a58f7c22bd57647ffc6d6a4a81093a688852b8b36b2f0bafbf303c3ee95c",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "f37061f0a89a5d2e56678e8760671907c20191ce6c7cef9a4758a2f564508055",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "2e241f088e8b2738416cadf5d20fd416ae2639621f30071634060547f22d3bef",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-nodejsexpressref-index",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-nodejsexpressref-index}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Service",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-nodejsexpressref-nodejsexpress}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress-sa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress-sa}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nodejsexpressref-nodejsexpress}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "ecf9f25cc51fbe502f188a5ab873e3a2d6f3ed2c8e94e6a05ac99f9df0348845",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "635bb56932e9fb53ddddcf698e5fd2ba8757fabe4d6135547ba4635bb5e430eb",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.metadata",
					"search_line": 88,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ibm-nodejs-express}}",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ibm-nodejs-express}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "3a5b3166d8105134bf3a930c9207a1e52923ef849ab79e2e68536b426ced98ae",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "f489ef1764b14b7ee3ece137ca1df92d179107a1f186a9b5d2998e80760d9680",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "a7a473726508f02e0f389350a01d6ff00660fd4b78b53ac95c148acff08eaac3",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.template.spec.containers.name={{ibm-nodejs-express}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/ibm-nodejs-express_template.yaml",
					"similarity_id": "3affb6abb4ee37efb486f0611b0acdbe4856e5d2be5bbd46f7fb32ed0cf889dd",
					"line": 55,
					"resource_type": "Service",
					"resource_name": "release-name-nodejsexpressref-nodejsexpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{release-name-nodejsexpressref-nodejsexpress}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
