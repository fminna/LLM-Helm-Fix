{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 826,
	"files_parsed": 1,
	"lines_parsed": 810,
	"lines_ignored": 16,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:52:04.215386+02:00",
	"end": "2024-06-26T01:52:06.444463+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/schema-registry_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "054963969ecdec44525504e17a038b5818db4b400f22e4ca72279929d5561f81",
					"line": 751,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "134e2e23edcaa7e562d80c738bd20b714888c5aa02f62b96d0f690fe3ff584b3",
					"line": 588,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "49cf11055082c1795fd13ff5fe16141e5ab5a855434bc180943ea2373f8b2864",
					"line": 527,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "fdd05aca3a0b27e02b963f9b5f8133eb3fca7d8a586fe2d34f841439953c20e6",
					"line": 530,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}",
					"search_line": 530,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "82cc45c7a8c57607fd486d72f36b41389a2cf771a286d972a099dd1654eb6b9a",
					"line": 531,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}",
					"search_line": 531,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Secret",
					"resource_name": "release-name-kafka-kraft-cluster-id",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-kraft-cluster-id}}.namespace",
					"search_line": 123,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Secret",
					"resource_name": "release-name-kafka-user-passwords",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-user-passwords}}.namespace",
					"search_line": 106,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "a355988771e7fcb244dd4e85d01a719034da28c7731631885f598954082b1435",
					"line": 139,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kafka-controller-configuration",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller-configuration}}.namespace",
					"search_line": 139,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "756b60fc1c103d1574705d4c2d9df44f813eec614526c297a29f6b03f2b9c602",
					"line": 452,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.namespace",
					"search_line": 452,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kafka",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka}}.namespace",
					"search_line": 77,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-schema-registry",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry}}.namespace",
					"search_line": 92,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "0dbc57814243a2c4e62814c6c117a36699144f77c71f21953a869c53ee6068fb",
					"line": 691,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry}}.namespace",
					"search_line": 691,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "1f815153f9266a4a8071911b766835b70b51c595180dc6202334a35ed41410d0",
					"line": 184,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kafka-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-scripts}}.namespace",
					"search_line": 184,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "4e0c1c3c57a1103fb83ad9b616208ebeecd87c7475288288d7e2ec2624dad7ce",
					"line": 428,
					"resource_type": "Service",
					"resource_name": "release-name-schema-registry",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry}}.namespace",
					"search_line": 428,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "4372cdfb533f7170c6fe7f2fa67a89e8dce992457148f5ef3367c69797667af3",
					"line": 341,
					"resource_type": "Service",
					"resource_name": "release-name-kafka-controller-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller-headless}}.namespace",
					"search_line": 341,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "10c2b1ffb792bd4c03a3a149d613ebead4350a6e5061f15483c5451e9120c191",
					"line": 378,
					"resource_type": "Service",
					"resource_name": "release-name-kafka",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka}}.namespace",
					"search_line": 378,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kafka-provisioning",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-provisioning}}.namespace",
					"search_line": 63,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "b7ee8541bda3b342b613739d98102b507f3c09d44c6e7e27347536140174ccf7",
					"line": 405,
					"resource_type": "Service",
					"resource_name": "release-name-schema-registry-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry-headless}}.namespace",
					"search_line": 405,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "f6bffb875a3e837074b80b1bab901ba1e467fb134039a03553c88b746f9dca26",
					"line": 530,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=kafka-init has CPU limits",
					"actual_value": "spec.template.spec.initContainers.name=kafka-init doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "338e2a3fe962e3d5b8ff8bdac901fc8b157b7287fc4565b0d4475b17e4546bbb",
					"line": 531,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name={{kafka-init}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.initContainers.name={{kafka-init}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "d1043cd91cd544662e4b6e96de32f98181ba79478bc1b56a848b70de30ddc6a7",
					"line": 741,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-schema-registry}}.spec.template.spec.containers.name={{schema-registry}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "2adcc676c72399a0616fbb631e8f23c245221e835663bc3b5f379e2247698c75",
					"line": 518,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.name={{kafka-init}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "7e21d7c8b21cb8099a27ebde63385d7407dba6dd573c50c33c29f9fecdf4be8c",
					"line": 579,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.name={{kafka}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "597dcc342bca782c8e985f47b4c5d3921c03e147ade242f8aa6cf758036febad",
					"line": 483,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata",
					"search_line": 483,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka-init}}",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka-init}}"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "597dcc342bca782c8e985f47b4c5d3921c03e147ade242f8aa6cf758036febad",
					"line": 483,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata",
					"search_line": 483,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka}}",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka}}"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "a33a6a26966a9aea19a0f075548d0e0e5054659857300510c2346182147e72e8",
					"line": 474,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-schema-registry}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-schema-registry}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{schema-registry}}",
					"actual_value": "metadata.name={{release-name-schema-registry}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{schema-registry}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "a989ad39d1764d8f774869bebb4e99ea0c829dd1cc9806bf403699d0a057d6b7",
					"line": 691,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-schema-registry}}",
					"search_line": 691,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-schema-registry}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-schema-registry}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "d6747fd5c099374a69bba437ae82bdac7ef2201fdc0473096cb7f9a9147e45a3",
					"line": 452,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}",
					"search_line": 452,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kafka-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "1116cc1c68ce3e8c361f833ee693540c8c3c08364ccc7eb24210f77dfa447f00",
					"line": 691,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-schema-registry",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-schema-registry}}",
					"search_line": 691,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-schema-registry}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-schema-registry}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "2bafa2395ac4b19c044a8143d96ae1795b5da602bd9e9745e2e2ca427406c519",
					"line": 452,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafka-controller}}",
					"search_line": 452,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kafka-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "d30538794ed5d28b8cde772ba29577aa7069e6af32d1254640a2a8c222f4832f",
					"line": 606,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "056aed4bbc2bf30b53cb1346b4d1b3d9c8356967daec146606e6be7bd8ec716b",
					"line": 597,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.env.name={{KAFKA_KRAFT_CLUSTER_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_KRAFT_CLUSTER_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_KRAFT_CLUSTER_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "4ed4ccf796cb6d974b73c16659df799ed746c68fc9bd26f5162498dfd9b10413",
					"line": 560,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.initContainers.name={{kafka-init}}.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.initContainers.name={{kafka-init}}.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "d760d565ef9b634f0b2d218abb0e37c1516ac8b90fa5e58645c1f172aee95d1a",
					"line": 553,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.initContainers.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.initContainers.name={{kafka-init}}.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.initContainers.name={{kafka-init}}.env.name={{KAFKA_INTER_BROKER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "07aef2e35c2ad88e5132eb91c521c4d01bdaacc20ed778311196cf01f5e470b9",
					"line": 613,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.template.spec.containers.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kafka}}.env.name={{KAFKA_CONTROLLER_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/schema-registry_template.yaml",
					"similarity_id": "45a392546bbab9cfb46cdfce15a9c56c64831bced081bec416eb6cacf7827237",
					"line": 684,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-kafka-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafka-controller}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafka-controller}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-kafka-controller}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		}
	]
}
