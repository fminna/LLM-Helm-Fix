{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 299,
	"files_parsed": 1,
	"lines_parsed": 295,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:48:27.015989+02:00",
	"end": "2024-06-26T00:48:29.084317+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/watcharr_template.yaml"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "4a51692970c68720bf7bf34df3d9aafe98304ddae5e7689399b5d35a85480eca",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "5e83514799c0732cca59ee66302353452fbe87de22e81ae71abb9346f42e0196",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "b3ec9eb835cd83586dc7a41ff02f39c9f631e05856a777f1bde3d3cefd24b44e",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "7d83ca4cdff78bd4c20171c22a88185d2299ba1d8af1c8dd5e4ff7ede801b599",
					"line": 225,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "eb71aa32b366d08a9a45d1095bb567cf4959caebdedb57bde701117fef30a096",
					"line": 225,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "f8314511a6864a735b020b83b71b87f61e7ddc6d6f410c23277d5d18b7035c3a",
					"line": 233,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-watcharr-watcharr-secrets",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr-watcharr-secrets}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Service",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.namespace",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.namespace",
					"search_line": 77,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "62f7bfc2b3a37152f498a12bb030df847803c02e1d46579c87f53db54b396c7d",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.metadata",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-watcharr}}",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-watcharr}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "2b59bd4db412dcace59688a91561460d1e22175b66ce1abe95571165cf99c36d",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-watcharr-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-watcharr-data}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-watcharr-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "82839d545f33fc02ed935a1978d9036b4ee089afc94a509f99e6eccb98caaf93",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-watcharr}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-watcharr}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "ce47ebb390eacb2fddb656a893e3d0e854b7988defeabbf4a23a9d09f2a9f75b",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-watcharr}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-watcharr}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "ea9b7ccec396e515be2b56849fa9d9975332860489a9d134545a26fa355c70d2",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-watcharr-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-watcharr-data}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-watcharr-data}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "b82be341615cd9f7e05c2ef46aa9b2ad1fecc3cca7226c5def2a4ad2b89462a9",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.name={{release-name-watcharr}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/watcharr_template.yaml",
					"similarity_id": "67c0d1a2b87b85b44526092cb2e20acbc49b68d57061359cb28757e3053146ab",
					"line": 268,
					"resource_type": "Deployment",
					"resource_name": "release-name-watcharr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-watcharr}}.spec.template.spec.containers.env.name={{JWT_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-watcharr}}.env.name={{JWT_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-watcharr}}.env.name={{JWT_SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
