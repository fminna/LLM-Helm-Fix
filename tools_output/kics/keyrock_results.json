{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 139,
	"files_parsed": 1,
	"lines_parsed": 135,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:48:15.677408+02:00",
	"end": "2024-05-17T21:48:17.575289+02:00",
	"paths": [
		"templates/keyrock_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "d2b22d3ac212326a2f8dee57504ff6e4f62f86952262503a9d7402ccebb1cd8a",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "d64343cd6c2898d0ddd91456b5ad7a69cb4bf06cba21a0b43acc48f746cd865b",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "4a04ead4c79ac6c5aa93ac697d212821cf158cfd1afb6147c6d887e802511b66",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "5f19e52558f97cd8215ed1ee8a97d09af8bef53e5d076fb4d31a0db2f9de06e1",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "9f2f9d6dae6215befb673c982bbe3b87e36635d712b7d4f2c2a7d2fcbc6cffe4",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "647b7a3d6f063001a890b958a35e9501b003b1adb8630fe7ff70075e4e49e565",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-keyrock}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-keyrock}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Service",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-keyrock}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "f4cfca501088a7da11056f08bc5f0ca9028df16551086f3b3f115d8e77d537fd",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keyrock has limits defined",
					"actual_value": "spec.template.spec.containers.name=keyrock doesn't have limits defined"
				},
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "529f924f64af2ab0f8bd9e25d39e288569dcc5b69af403a3f319f8b82572bd00",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name=keyrock",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keyrock has resources defined",
					"actual_value": "spec.template.spec.containers.name=keyrock doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "f01b92a78d707e71a960a50780d9553902d45503f5d998672201741d0ceb0c60",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name=keyrock",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keyrock should have resources defined",
					"actual_value": "spec.template.spec.containers.name=keyrock doesn't have resources defined"
				},
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "503ceeaf39f922f65b81af7273c2cd349caca6558333855022d4e54fd055e87c",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keyrock.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=keyrock.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "5ef2711b0908914e021984cd591464af9fe9698d06fc096fb223ca840bcd1fc4",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "c8e4e60f8878ff63bf55253e3d422f84bc2ba36d68da502216be89d4d3db5e88",
					"line": 66,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{keyrock}}",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{keyrock}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "4faa77b5371890d223ef4317d3d2591ab00737c7ddae489325b7f92c526971a4",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.containers.name=keyrock",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.containers.name=keyrock.securityContext should be set",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.containers.name=keyrock.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "dcf3f3ed9a2d7bd1b9b4a7392295d4357d8a62f8dc1aa56054ebd68536a2c303",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-keyrock}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "464d27efad64fa7d4d40ac74906ac417c0dee700cce6ce34a1ad80b0068e8e7d",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-keyrock}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "1bc45df57e87fc478469da6acc815c686c3816a561e208998a4401048f59d14b",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name=keyrock",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=keyrock has a security context",
					"actual_value": "spec.template.spec.containers.name=keyrock does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "379ebbfdc83dad6fbc1c55c017237930ed644284199f96b37207d02bc048ca78",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.name={{keyrock}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "613469d90bcbf5f55a81e8ac14390861ae73b4b37bce18d5873d58325bddecdd",
					"line": 118,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.env.name={{IDM_DB_PASS}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{keyrock}}.env.name={{IDM_DB_PASS}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{keyrock}}.env.name={{IDM_DB_PASS}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/keyrock_template.yaml",
					"similarity_id": "09348f9e1ad602dda0d6de9896cd8c15418d26b42a6ac23d1fd56ae379b63c82",
					"line": 127,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-keyrock",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-keyrock}}.spec.template.spec.containers.env.name={{IDM_ADMIN_PASS}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{keyrock}}.env.name={{IDM_ADMIN_PASS}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{keyrock}}.env.name={{IDM_ADMIN_PASS}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
