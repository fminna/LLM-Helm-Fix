{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 100,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:38:52.317971+02:00",
	"end": "2024-05-17T20:38:54.355564+02:00",
	"paths": [
		"templates/armada-event-ingester_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "cb7737f7488c049d795c9029a2f52a7613a62d680ce343bc49517dc94aeed45a",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "23bb93d20e4602ba51e274ce85462a86dd566be45d34cc6e706107af53fb849a",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "3663fda7fc14b5bd3c043558fdfc5d28fb5688997800332caf1c0defcd52b872",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "cccfdff6d4265055dab7c408c66dbd0e32806f788c5ba9b8205ddc0ac563eafb",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "07fe209806db9e898b47b10ef670890efbfacb1989c9e10353b7b736e37b198e",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{armada-event-ingester}}.namespace",
					"search_line": 33,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "armada-event-ingester-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{armada-event-ingester-config}}.namespace",
					"search_line": 18,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "armada-event-ingester",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{armada-event-ingester}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "b83e34c939f29f309b1adb56c65a74a58e8b30c18fd79653b24f106c5185af3b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "9197fb848c9934c381cea93f6a4eee3d2a19cd1e49e2c00a48e840edb408e39e",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.metadata",
					"search_line": 50,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{event-ingester}}",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{event-ingester}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "e4b4a6c6b2d0f5cfc26ea2f25d812406923c7f7d4612756e246bd1562d570d30",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.containers.name={{event-ingester}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.containers.name={{event-ingester}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.containers.name={{event-ingester}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "e985b054541fe1ed30ae9f1b37ca690def347329e832de34ea043f15fe9f3942",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{armada-event-ingester}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "03e20b29edee6ec7e4b31cb92e3415d023ad9363034bdf55e99a0d2ba21c766c",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{armada-event-ingester}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/armada-event-ingester_template.yaml",
					"similarity_id": "500d24e0ec42ba4cdb126055929c4622ffd1066f72772ebaa05ac47e3c637bcc",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "armada-event-ingester",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{armada-event-ingester}}.spec.template.spec.containers.name={{event-ingester}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
