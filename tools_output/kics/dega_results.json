{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 779,
	"files_parsed": 1,
	"lines_parsed": 751,
	"lines_ignored": 28,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 25,
		"MEDIUM": 33,
		"TRACE": 0
	},
	"total_counter": 62,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:33:58.465791+02:00",
	"end": "2024-05-17T21:34:00.508422+02:00",
	"paths": [
		"templates/dega_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "8b483e9cbfb04992a0cf4213e39c3c0ff462ba0924cec8c75d8530ab3e9c54a8",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 618,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "e795fea1d91c05375a3f52af661d8025da3cc7656c5a921fda82d725dd6d6d05",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": 761,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "4de3f45838dd040964187f869175c3a5c4fd901c089a55c282727f46558cfa59",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": 684,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "47372f20a83444e89aeb8b5984bda7f1d41b900dbe45e122484b087506742460",
					"line": 772,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.volumeMounts.name={{dega-studio-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.volumeMounts.name={{dega-studio-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.volumeMounts.name={{dega-studio-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "41e82dd7ec4a3a1b02946f4f77be9d9b7e10907a1861929014f7b39ab407c678",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": 761,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "8cc0bbcfc0b2dcde11570a4917e9ac01d0fa78e262e700a6f2fc338044999aeb",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": 684,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "707a1ae12cd58165393d65c542b208a046dd29b7fd09424821254ede1abcecbd",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 618,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "5fe45775eaec69325aee14920191ba899a89ceab0124d4a56c4276840021619d",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "cd66ad176bfc791aadaccf4dedfb56ad561af26eb86926857a82a8652ec17c31",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "303eb4988bb8226c7bdd647f343766d574a1096ac2848dd5471af33a4857bbe4",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "4abedbb1d9909fb070f5072a7fc32afd16f8035ccd458c76fd469fd92289bee3",
					"line": 683,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "f0dfa5fdb0d1f72008846719fd76bcb38a9198131843e9582b47ac24496117ec",
					"line": 760,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "1807f728fe03352304f75f6e23b808b99d072b68b03e5f99223d72509793d7d3",
					"line": 617,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "07edd86a93d4a93fb03b2e3fc88afa62ba18ca41570214fe14fdd23bed3b8d50",
					"line": 760,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "68b9d24e2803c2f1cfc07281a5c4b899ab43647a002cacb15e75ac030c54a9a3",
					"line": 617,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "e6384929faad3190b7958105de1e00284586d6a870e5b1744e5a1238572d64bc",
					"line": 683,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "1520681606544315a8e429f8e6713747d5cee463bb264215256492a04488c872",
					"line": 760,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "618e1812c24fadf242f742dbe16553fc3497db28dee9b250d70af725b6198178",
					"line": 683,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "7f9593ab0c1dd6cf32a2fa2edc566c72b074c784ed45f38d6b8a0a01c7a2baea",
					"line": 617,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "f951db1271a5207962687ca50b6856a1c8b87f26e7fb892e2025eb78a8deea55",
					"line": 683,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "b7621ed9d776f751ad4b818eb278112e845df9f775e4d8b497380ca06594ab7b",
					"line": 760,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "a515675ac809687b47a8ebddb918b753c4a208e348bd0bc246dd4c03e06d72e7",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "b956b0da316b7a57dab92c481dc8e5c44f956d40a7ef366ba3133c9f5d7b83a2",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "ef3068de325532025a9658f39f66969c3b073bf853832f422d2c8d1aeaa6be95",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "8201f5695d681ddfc47cccf7f4134b7aad2de950af056d97d050fb87a4d0fc28",
					"line": 613,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "d632a4bedf7d4b79f9564a94890a09fa0960e7332215c1e3a6d332ad5d83bdda",
					"line": 613,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "b6acdd81e7cd45e827b4b7eaebbd34e63ce79b21d9735046f45178c7b37f1ade",
					"line": 613,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "90a49fa8d52bc7ed11edc2a355410bccc366d92e2d415bf2abb9a038d9c9e546",
					"line": 509,
					"resource_type": "Service",
					"resource_name": "dega-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-api}}.namespace",
					"search_line": 509,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "64a4742111f2a2032fd9fd8c040df236bcb150cb3a1104d008a88ac7e11e7704",
					"line": 563,
					"resource_type": "Service",
					"resource_name": "dega-studio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-studio}}.namespace",
					"search_line": 563,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "e1fa920da714c56cb2f93c26eb8f4e2a7068f3c71d2c886b0852e340482fb208",
					"line": 588,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-api}}.namespace",
					"search_line": 588,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "7e8a135862d194577d2317a053742febea59f0aadae3442c5475b67b066fb3a3",
					"line": 534,
					"resource_type": "Service",
					"resource_name": "dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server}}.namespace",
					"search_line": 534,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "a7aaf922691aee1abe11e3618088fab7e35f4c7d4b95d184ae57c16c31ef6f7e",
					"line": 455,
					"resource_type": "ConfigMap",
					"resource_name": "dega-server-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server-web}}.namespace",
					"search_line": 455,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "bd9084ebbec335152a45ca954886038d46e5acfa94b60a6a9fddb12e5cd8a02f",
					"line": 731,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-studio}}.namespace",
					"search_line": 731,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "dega-server-data",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server-data}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "d548d22b4b35fb7891ea71ab809599dfe57bae535643991a1cc392d2a4522f07",
					"line": 653,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server}}.namespace",
					"search_line": 653,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "03c77468279404dbc8a76ccaf09c005914ded15c992ce55eb3b775b1972c5cff",
					"line": 492,
					"resource_type": "ConfigMap",
					"resource_name": "dega-studio-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-studio-config}}.namespace",
					"search_line": 492,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "9899a95de73217c8a6d95c86073a287f8523e9afa505b3b63235785a9977709f",
					"line": 769,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=studio has limits defined",
					"actual_value": "spec.template.spec.containers.name=studio doesn't have limits defined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "bf095781cdf15ae0a7ccf3af461bac0fdc13f691991508eb0c6b4bc15baef6b8",
					"line": 711,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=server has limits defined",
					"actual_value": "spec.template.spec.containers.name=server doesn't have limits defined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "563a79b19aa69ee65d5f6f1cf1b8fbd55d94717f9eaa93ed122fedb4e38bf2d2",
					"line": 645,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=api has limits defined",
					"actual_value": "spec.template.spec.containers.name=api doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "fc0393ae9b96369f10f62d967c4d2aeb028dc78ff8eb5feb631f71b77643ca94",
					"line": 769,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=studio.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=studio.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "c95cf7a3bf71941d1a046ba9c8b51d3652d4c1813da0c8d280aac57d03fada41",
					"line": 711,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=server.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "f076e13f93f929bdbded5063f4b5ae1de84f8525896b8cff5d8ab7348456c9db",
					"line": 645,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=api.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=api.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "346d296b8b75f2b5e4234878b1ca5a7c3aae56357b656138b65ef773fc895297",
					"line": 621,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "0c30e6823c3d47e4cf6573c4b829a6532780270eca26a9060131f73ac6e3db26",
					"line": 687,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "4bc5fc1a2004b1cac5ee87e09486263357086776eb6343ff73cc4330e3221454",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "d60843934888e05926391cfecb7e7ff4d30c07c38688d77df837f5164fe17f2c",
					"line": 604,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{api}}",
					"actual_value": "metadata.name={{dega-api}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{api}}"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "c133652d70b7790a672fcc9bd6821666176be961355eab023b471f21534d2a23",
					"line": 604,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{server}}",
					"actual_value": "metadata.name={{dega-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{server}}"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "2e9054f38c4497d629ab7bd06ccd80960bb667a40b4cad1220b67fc7cfae72d0",
					"line": 604,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{studio}}",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{studio}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "bb5681e9e8e01a5bd0af1fdca4b6661ea80da712a1020d9233a2efdfe9471277",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.containers.name={{server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.containers.name={{server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{dega-server}}.spec.containers.name={{server}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "5a140f9209f2795a6521d5ea9b3c3bb426ea883fd5d99de45658ed1170edbd01",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.containers.name={{api}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.containers.name={{api}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{dega-api}}.spec.containers.name={{api}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "ed438231133e51c04afa5e2a6639cf59a3ba3186483bfa5a0773fb37a2071b71",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.containers.name={{studio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.containers.name={{studio}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{dega-studio}}.spec.containers.name={{studio}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "131698b38c09830c83917abe96674235fedb188b68171cf163cb365ace8a87f1",
					"line": 653,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}",
					"search_line": 653,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{dega-server}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "676ce2e26b4dd8d393e463875f8b810eae11c3a12ca5b90b1c8a18df742256a6",
					"line": 731,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}",
					"search_line": 731,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{dega-studio}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "56fb635ddef75cd4edc09357e05082a50ea3e620d5fd11f92b277ac50a38dba1",
					"line": 588,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}",
					"search_line": 588,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{dega-api}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "6193b48b2febad557e3ceb23fdf5403ce92ffe802d890d6ced8bf9a977153677",
					"line": 588,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}",
					"search_line": 588,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{dega-api}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "c958502522c4aa91328a1916c149b385cd1d1a575fed62dd19eed112d8f57aff",
					"line": 653,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}",
					"search_line": 653,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{dega-server}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "9a2c9c45f4b6835c8782d7a47423173f0571d26b0be4c1bd106ae10b31d745c1",
					"line": 731,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}",
					"search_line": 731,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{dega-studio}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "efb25471f7875a1c504dcb8fbeb159ff0e9e7c6d877a4c67e8c3a133f1e70428",
					"line": 618,
					"resource_type": "Deployment",
					"resource_name": "dega-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}",
					"search_line": 618,
					"search_value": "",
					"expected_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{dega-api}}.spec.template.spec.containers.name={{api}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "302305e7fa9936b715303757d1f579444f787730397ae1333bd5a70da7d9a867",
					"line": 684,
					"resource_type": "Deployment",
					"resource_name": "dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}",
					"search_line": 684,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{dega-server}}.spec.template.spec.containers.name={{server}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "263eb8d7a48817bea9ca54838da5925da8f416d137f859961511a0101d09c7f4",
					"line": 761,
					"resource_type": "Deployment",
					"resource_name": "dega-studio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}",
					"search_line": 761,
					"search_value": "",
					"expected_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{dega-studio}}.spec.template.spec.containers.name={{studio}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/dega_template.yaml",
					"similarity_id": "9e70f7194e0105b38d8353712ac57ae0d065fba6efbf13db690fb21637211a9a",
					"line": 553,
					"resource_type": "Service",
					"resource_name": "dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{dega-server}}.spec.ports.port={{8002}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{dega-server}}.spec.ports.port={{8002}} has a Pod port",
					"actual_value": "metadata.name={{dega-server}}.spec.ports.port={{8002}} does not have a Pod port"
				}
			]
		}
	]
}
