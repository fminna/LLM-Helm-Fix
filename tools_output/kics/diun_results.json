{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 113,
	"files_parsed": 1,
	"lines_parsed": 108,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:19:52.454806+02:00",
	"end": "2024-06-26T03:19:54.565136+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/diun_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "204621b2d9121eb8375db1e002a95c9d49df07d37e02890a62186d22d96bdd42",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "f815a1415c720b2fa08a4fa9779a1a8deb77f93f332aa474ac8d2b932457af20",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "4a74f8136ac95e0af381d76b977d73179cef04936fda4d37585923c733913c13",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "a48a252c108a630f6a5f053fc967555417f9e0fa5062499f335e70b5eb3bee5f",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "457344ddd24d77fa9e57e7678b34fff9251c0fab822c564a2a640787f9e68e89",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "4ae0e65fb896d8f4bf3fe57a561e40e9d27fcbc185312278d77466419425e4c6",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "fb1b71f0816b38fe3a460ba71ee7a9db383134edc5cf41151128124f80060310",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "89a76c245f3e964dd4e7835d13183f8f1a7b28af1ab0f09639fb203e1a0d3829",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "e14bb2ab138a785a2f0707538a0543648a3d7d898351351244018c0a35d1b65a",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-diun}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-diun}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-diun}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "1282f02bce9f2d6d6ef65f14e1953760847942b022400b75e7d31082a732ad4d",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name=release-name-diun",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-diun has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-diun doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "5dfb91b29df2d6bebaa0da41e2c0751b506246578b0c442a4b955fb4ae114442",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name=release-name-diun",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-diun should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-diun doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "0bdc615e99cd4750c5623de710d91db353434b9eed01f7671bd1bd695133eba7",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "16ab9ed3f5ed397a253c5ff20b14cd284b293a1e4bec8482bbce90e42cbb0ae5",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-diun}}",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-diun}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "704bf8dd73081d457192611440d4278efdb31b88d6cb7d5aefcd6aa5bc3ae835",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.containers.name=release-name-diun",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.containers.name=release-name-diun.securityContext should be set",
					"actual_value": "metadata.name={{release-name-diun}}.spec.containers.name=release-name-diun.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "6e37589d07847d2388d4d47fca66c98beeebeb814c21eaa99105b3198fb4c98e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-diun}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "b1bb40795e4206dd5a5d638550e859e3858052b43b709beff94c93df9dd3fa1d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-diun}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "d5aa33f3c56386ee7a4de1f0e2e1448688b7e86c6c0419141fc1f8b7322037bb",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name=release-name-diun",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-diun has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-diun does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/diun_template.yaml",
					"similarity_id": "0df8c9f1ccf0e9fcdbf051c34a53c3b37b4d6095c212e6ce3797357523ccf3c1",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-diun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-diun}}.spec.template.spec.containers.name={{release-name-diun}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
