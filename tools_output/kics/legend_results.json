{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 108,
	"files_parsed": 1,
	"lines_parsed": 104,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:31:29.635766+02:00",
	"end": "2024-06-26T02:31:31.762283+02:00",
	"paths": [
		"templates/legend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "0f338382aabfb17a237e325f4e16df97a929d3f1868f5aa80ab795811b98f0bf",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8b56a158920bfac9c6fb5315371a9c774541106124212df80b4af8a6ba07ec2c",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "e7e96d3d9549bdae87182130dfddb4aeb14ab5da8443bf0eba65a6207982d9bc",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "0722e8e8cd8e6408d66a5b1a7ee025fc433e99d73a1806c362adb1fbf881ee7a",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "6083346445715a40dcf25e6826b45ae00f795a04b26273339750c9d152355793",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "85b8e48123bac35d4da743e9134e8c5d4660f48af81ba042a3304139b529302d",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "973689e283dc914a13761d2ceaf6bbc4080e9c31cb09b3cb856ebe95a4239e18",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "aedf1f0460cbc3733d2141e422725f86c3b24b9ab60b38cec3c9d66f94bff0db",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "1b196b5fa4b9c449c9431219d83889d24c565a5263b1104587b9400ef97bd03d",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "legend-service-account",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{legend-service-account}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.namespace",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Secret",
					"resource_name": "legend-conf",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{legend-conf}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "b956fb7318d431bf67ebe3d3fef25493553e500c2c505811e66fbdf3be54a57f",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=legend has limits defined",
					"actual_value": "spec.template.spec.containers.name=legend doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "a11c451a93f66f126f0514fa58e5d2736837bc3065d45d05e6100b8a5fed0004",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=legend.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=legend.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "54f0ad8c6f1266abfd78f4875985588cbce3613c72156cc0a0726c95df755549",
					"line": 37,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "legend-binding",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{legend-binding}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'legend-binding' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'legend-binding' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "ff4ac13f7718f693d8ac67fc90e1c81ff96bc8d00f998efdad1a72ee386becec",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{legend}}",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{legend}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8dcc0a5f6cc6be94273992166aab32565e0d6384a196d9212a68dc9296d5efb0",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.containers.name={{legend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.containers.name={{legend}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-legend}}.spec.containers.name={{legend}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "4fdd13069dd9726c60d0e94c951e74bc2dae80b2d8932ff7df3fc80d4147ef10",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-legend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "f72cd54fe1e8c475d34521ddce31cda45d5c5e7d3fa480040b25216af9907379",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-legend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8351f62a1c37bc60cb96427976423a3765dee338ba041fd2dab79950439a38e4",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-legend}}.spec.template.spec.containers.name={{legend}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "bc445f80c7dbad9b340aa9079efb18988db994db5faa07bf3c5848efeaebd1ff",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.env.name={{GRAFANA_API_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_API_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_API_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "d96cb94299138c25193f9a0bebb7b7f970b7aa0778cdf0cc52ebe3e5a628a333",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.env.name={{GRAFANA_PROTOCOL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_PROTOCOL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_PROTOCOL}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8637ff3779011e6e1efb16edc147b99bb0011c49269cac3bfa4d89ad42323f8e",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.env.name={{SENTRY_ENVRIONMENT}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{legend}}.env.name={{SENTRY_ENVRIONMENT}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{legend}}.env.name={{SENTRY_ENVRIONMENT}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "75f682e7bab979a894480dfae396aaa23e4265a051346c47636c65e4ee022b42",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.env.name={{GRAFANA_HOST}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_HOST}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{legend}}.env.name={{GRAFANA_HOST}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/legend_template.yaml",
					"similarity_id": "8ae0cb13f3c22bc80494aeb25bc52cafa5f3e99060a7cbd52c08c83267d9974e",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-legend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-legend}}.spec.template.spec.containers.env.name={{SENTRY_DSN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{legend}}.env.name={{SENTRY_DSN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{legend}}.env.name={{SENTRY_DSN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
