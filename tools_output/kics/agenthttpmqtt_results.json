{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 66,
	"files_parsed": 1,
	"lines_parsed": 65,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:26:36.452109+02:00",
	"end": "2024-05-17T22:26:38.353174+02:00",
	"paths": [
		"templates/agenthttpmqtt_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "5d3b9883380ab84a4198ca1431ad853361acfe222fe989780c2e9f99cebe7eb1",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "5dda43a18cafd65cf7673fd30d9142166390572b70b7ef1859063aef54da759f",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "684cafcb67f59b8fba7d383e1ddeef89d853de2e40bfc0e39bf79ab4f3d9bf18",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "d4ec64ebddf8c5a089107042f0337b1dd63805515f9d43e97dccb19a0bced059",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "087ce58b3965a47c764062750ced338e163d7f348a8a4489d0d10b16b7e29f17",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "eac2ed2eb4e27a44ff9810da5037eef5ef351277f6b3dc53bb98ea66f5e8b038",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "5130fd7ef63f5234c68916d37edbca0ab8192ca5ff907d651b2f7b27a8ed2916",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "0d0d7f40944730fadbdb6b087003e492a62116627014f4d1923cc00d28c8f7e6",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "5c29d07c13ce9e103af4af9ca67569ec95598bec17636ebac866438d002d8f85",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "e9558a92a221ef8a376c7b90d57f44a790c1b02fad85c14f732aaa5157c9210a",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=agent has limits defined",
					"actual_value": "spec.template.spec.containers.name=agent doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "aac7382be131da71e86b4e0e9ae74d083b5ea82e588092c52017b0c66f91dc0c",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=agent.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=agent.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "1e12cdf7ffbce4b679af2248dc1091f5c4289b738b90134840e0fd5934271141",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "fc1f5f8522b19890808a5ef3c10be0bccb88b15505513c7292beaa7023aed71a",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{agent}}",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "fdbab8576eda8ae05d9505b62d1999b18f77ecb3434de989328416ed9c45fac1",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.containers.name={{agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.containers.name={{agent}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.containers.name={{agent}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/agenthttpmqtt_template.yaml",
					"similarity_id": "6b2043a436fb8b78988fb0a157334fbe3fc2bba2654ad07f8c6df967de5e1c70",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-agenthttpmqtt-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-agenthttpmqtt-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
