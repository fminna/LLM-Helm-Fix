{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 157,
	"files_parsed": 1,
	"lines_parsed": 154,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:45:04.82524+02:00",
	"end": "2024-06-26T00:45:06.872329+02:00",
	"paths": [
		"templates/activation-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "bd21735dd92b3eee1c19c7e93747976eed121b97b6af199da7ce853b89169a11",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "283f2e879321602877d9342f42785c41a5f843c3cd3fb77f3cf6b04fe19909dc",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "0371e7bea2f24bea8da105590ccc758e8382bef1a7db8341cfdb2545a5ee9afd",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "22dfa787002ec247d9d976903a31fc6afb2c132629a7ed4f9a4b305c325d116c",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "283edcb5d252fa90596e00adffa62e275118c91a405361779057f93056b95266",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "c7912febaf5dac63c75600fb99198885d55e76e0b5392860fd2a4ca336699798",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "33a90bc5cdcc03af68c63774cada85a5a9294a38d0e177e5c0ccda3d6db8e80c",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Service",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-activation-service}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-activation-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-activation-service}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "a9a6e8c6d7d496417ba2b390643e62809f8871ee7589693319b92c4f550d167d",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name=activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=activation-service has resources defined",
					"actual_value": "spec.template.spec.containers.name=activation-service doesn't have resources defined"
				},
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "23554a28dd2987d4d8462bc43c85f764980af1045d667e376990656091c12d7e",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=activation-service has limits defined",
					"actual_value": "spec.template.spec.containers.name=activation-service doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "536fc5b68973f32e5291ab7f1d08c671002e60e3da28ee0d38961536f73f1bff",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name=activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=activation-service should have resources defined",
					"actual_value": "spec.template.spec.containers.name=activation-service doesn't have resources defined"
				},
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "9c0c9c14244e9c47af7a6159633cf372c9f2ce067a3eef8c1ea7a876c803f122",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=activation-service.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=activation-service.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "5fb1271bf4cc7c84791bdc94ef60350eda4571ad58443b0b418c130da266c4a7",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "722f7933e9862dd7da5360b226b198715160c45d97593e2aa8d4214bb83d6f4c",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{activation-service}}",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{activation-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "0573d5ea4cf9f126fabc3c62035bff5a3e023b8603c8742c43eb811fe2995540",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.containers.name=activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.containers.name=activation-service.securityContext should be set",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.containers.name=activation-service.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "55cb004aeb80fdafb5bc75fdaf45d66fb31b34b5f97a2c7e46b734562f8a6911",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-activation-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "f920829897fce9d20e877362be30bc2dd7868df07400dbe18bd030b5c2fd47ab",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-activation-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "79e8a67b4207cd6a8a9d7aff93b04be0d70536ec4d5fc4fb3f59effb9d3c69ce",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name=activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=activation-service has a security context",
					"actual_value": "spec.template.spec.containers.name=activation-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/activation-service_template.yaml",
					"similarity_id": "2aae19bbbc945ad8842210b12e4db5d4d516f28d4835a47200f6e179e3b24f1d",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-activation-service}}.spec.template.spec.containers.name={{activation-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
