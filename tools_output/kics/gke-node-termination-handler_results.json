{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 124,
	"files_parsed": 1,
	"lines_parsed": 116,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:48:53.907903+02:00",
	"end": "2024-06-26T02:48:55.951263+02:00",
	"paths": [
		"templates/gke-node-termination-handler_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "8b3e4686458b5f9dba9ef8c41a51cfba015beddb4a0573149cf31a0cc069af0b",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "e1bed9274a99465f6a8cf6c62622476e642ac7a1c09d6d17e65e761317a9fd0d",
					"line": 83,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "5419a010bb0dc634faa91155667b6f9a6491559758ecec2dcc4495bb69ce1bb8",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "b746fb7579c8f321a9c85830f0c8172357ac17b073b1e8450026354b34309514",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "51381899fa1e0884c27302bae16d08ff4a104d9d6ba242334271ea320fbdc6a0",
					"line": 102,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "eccf955e372b12970a298ff77b82419cee3b623260c83e2dcf58cf14ed583cca",
					"line": 100,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "400d36b76f7b0161e14eb2243748acd68594aac2b349048fbf7ea9864bc1213a",
					"line": 96,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "db0a638ebb825932aeff2c370501ee1b5b87d61b6cafef158b4f9c5dcdbf4eed",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "6a4e538278113deb4bf52b2b402890a9a197ac5e7c79560a326e8d7e36095839",
					"line": 81,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-gke-node-termination-handler}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "ab84076330460b372b2682b7bba6bc848eba65c25d5a0e29291c858cd5c64ada",
					"line": 11,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-gke-node-termination-handler}}",
					"search_line": 11,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "6c82914fb405db1c065efad354722c0a47fdd4a8537d878fd2342c50e43050b3",
					"line": 78,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{gke-node-termination-handler}}",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{gke-node-termination-handler}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "ba26f9391d015b1b79ec960ac9acc0efeea77e6656e79f294277a5a8d31773eb",
					"line": 100,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.containers.name={{gke-node-termination-handler}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[gke-node-termination-handler].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[gke-node-termination-handler].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "0d1ddce814ea84a6390480b2d888c7c07b3962f38bf8e692bb5a8921ddcf3173",
					"line": 11,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "64391167a3594e1d925e6576216b1201c6e04c3dd1e669a7f3f45310ed6eec7d",
					"line": 11,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gke-node-termination-handler_template.yaml",
					"similarity_id": "973e8785e7c27a4c5e69f522eeb26357b13726f7a6a6269f0669a8c64327a49f",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-gke-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gke-node-termination-handler}}.spec.template.spec.containers.name={{gke-node-termination-handler}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
