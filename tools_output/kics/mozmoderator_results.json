{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 180,
	"files_parsed": 1,
	"lines_parsed": 172,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:34:01.134247+02:00",
	"end": "2024-06-26T02:34:03.217005+02:00",
	"paths": [
		"templates/mozmoderator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "6f046908fab895d760bbb69e833d830386523f58ee73bb8f7f199ffb41f60a43",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "c240c9bf188380affcf49004ef4165a74f07112bdd806b8b4c96289fc2c80e0c",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "f1a3580ab254c106800a32a14b9be41c1fc0c25147b0a1e8a6bbde94c585b54d",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "0cd3e0e3fe3a3c0a7a93571d4ef2cf6ef32bfd4b4af48b5cb40c4e0ceef4f983",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "5d99254c8df86dc952b658d2ef8cc576b6076074489adc33744a5eb1f7a66f02",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "66632fea72b7d701916ec9b476007aef2006e71f55ae44ef9f6badde51e61c96",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "ConfigMap",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{moderator}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "6feb64159adfaa35819a55c3918f57b6da70382d77117cb187b05d3cbe3125a5",
					"line": 49,
					"resource_type": "Service",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{moderator}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "c60cc3aff40f4972fbfd7a093e1cf2d86ae004d86bb755e4d03cbb86834d79cc",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{moderator}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "f35a50b1ef45099fca0ebdd7f2a2c4cb35d0d0423933a65a281d310dc5ddff36",
					"line": 133,
					"resource_type": "Ingress",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{moderator}}",
					"search_line": 133,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "961996b493806b6d88541735a7627bd1e59f590fc0cf2f13bdf201f81adeba3a",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "f62f3c86929859b363ab175133f757950882a2fb9c7557fe4e5f77c40cbd9e23",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{moderator}}",
					"actual_value": "metadata.name={{moderator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{moderator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "7a1aa55cc05a1a25844a351b9b62ecfc946465531ef43313fe2dbc84dd3c57e0",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.containers.name=moderator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.containers.name=moderator.securityContext should be set",
					"actual_value": "metadata.name={{moderator}}.spec.containers.name=moderator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "00a4b1149c836dc43703cc9f8b85c4641776121fd04d4019c30c2f877f1d3a75",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{moderator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "dc3508d2a4e89efc4ec405f28c68cc1fd5f444d21fc03a9e42956676cf1e95a2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{moderator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "4dfee06b5c355a86ce73a4e7b4962ea10b633f65d0bfdc24df783dbe0546944c",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name=moderator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=moderator has a security context",
					"actual_value": "spec.template.spec.containers.name=moderator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mozmoderator_template.yaml",
					"similarity_id": "304e8572dd16add1d962ccf959a8ab420b3d6d6fa4a71bb16525bf1404aeab81",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "moderator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{moderator}}.spec.template.spec.containers.name={{moderator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
