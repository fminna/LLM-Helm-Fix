{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 88,
	"files_parsed": 1,
	"lines_parsed": 85,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:57:17.036785+02:00",
	"end": "2024-06-26T02:57:19.072594+02:00",
	"paths": [
		"templates/node-configurer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "955c5e7ce7d2c61624cc59a4ffe28e9fa82def857986b23df8bdb88179cd15bd",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "ae220a0d3a46ecad32fbde25ca87585cdc64b633a23378739e1679878667d5e6",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "7210ed5cc4535c08658decf6dc513ffe2a33aa1bda5ab333e6c193338f822193",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "d848903c276aa1e7868d2f99748b90f1635c82062dcac8af8648b4ce996d046c",
					"line": 69,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "0871abf6600d3f9839cb57d6b920b6da3f9b1a4a15c843aec474a2734075a8d7",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "3ebcbc10d8b8ebb8760e98528b3785b4055094771c7370a0eb009071adc78886",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "ab5409daf7ede5767b0138f8b74c794f781b63cdb37127ae06cb434d876c66da",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "565c5d3bd678218640ed28a04d76524c2879ba388362aec2df485fe32a414991",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "bec5372414a49e1607c110b4dabe6cd0ce076b7e560abf380bb38a8fb20ccb64",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "f1ef6137714eb479ddf76bedd995be926bb0727bca9ab82a8a5106b9c2cb49aa",
					"line": 61,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-node-configurer-script-routes",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-node-configurer-script-routes}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-node-configurer}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-node-configurer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "eb3acb6d7f9fdfdc09e256c513aa94f6032ecf560f13ea9d8f8f802e822cbafa",
					"line": 81,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-configurer has limits defined",
					"actual_value": "spec.template.spec.containers.name=node-configurer doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "711b893e706761f447b90f1dc32e26c68c37a2fb03a42266061c351b39b4f18d",
					"line": 81,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-configurer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=node-configurer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "83d41f357cd3a30965f6b7dd0004e69774bdd75e293d566511df5eb79cf93be1",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "20f3841286a1c5c8dc5134bb5b64aa7c18240c6a1c981f1c4c8716a1618d9a08",
					"line": 56,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{node-configurer}}",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{node-configurer}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "81fba0d59ac781158c31915e586285c9101612d4c39c9edc871077267d54e30c",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-configurer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "b4a5439add2338b4bdb67f5c6a9c2fdd69117f4be1fe410fd575c5b53694c530",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-configurer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-configurer_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-configurer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-configurer}}.spec.template.spec.containers.name={{node-configurer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
