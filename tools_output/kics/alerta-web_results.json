{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 385,
	"files_parsed": 1,
	"lines_parsed": 362,
	"lines_ignored": 23,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:25:07.92514+02:00",
	"end": "2024-06-26T01:25:10.090476+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/alerta-web_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "10ac2b43e5f382f99f6d2ad181f8359d4b142f2957320d4e5449bae8ceff9bcb",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "dd57a420e82d17090df4da1741f5c1e4ea9c72ebf37f8469eaf8f3b37865c17d",
					"line": 284,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 284,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "2ccef189fff175cf9f71ea209db2cd50462ddf717e43162e4b78eea16fa36d2a",
					"line": 368,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "0e23db88bb0dd22a08c0cafd2f7b00c87b23b75700484ade4cf392ba426dc4b9",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "bfb0e49aa6f3ea1acc0ae68780681c95d0f793f05786c3110b64421cb1157e99",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "84e2aea859b61e05902e6b1bcf0bcf0be92ffbd089e3d9d859f9c5b9dc1a6c74",
					"line": 285,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "c60b247a8c0ecf08d26884a17c403f3b8efce237b882a12d90ec6f6f97fb2112",
					"line": 363,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 363,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "cff02140e5a570dea9b75b3bb3d6e256ab393eb70adda0997de921168deef5bd",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "d9694e44a856497aa793851ab330f6d938d9997e4306b0ac40fce1981e0ceeae",
					"line": 281,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "c4e1baeeb9d2c1e92a0f2c0a1b82626773012dc486a83c8c905bcad04a3f81a9",
					"line": 284,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "a03973812e0f4d675b3a12502bed2b49cc39219a89b216f1f9496b4543d86b93",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "49aa367d83e6d929257f7b3804b525a3a21dd075f98e342ac4d299a3e01b9d85",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "f206e32452f6d36b154e1b259667cb8deb7f9fb65c822e9c02ff541aec0c591b",
					"line": 171,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "a3ee2873017c4307c1b274e5a11cc1455ada2379930e0220aedfbf80de1bc599",
					"line": 130,
					"resource_type": "Service",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-alerta-web}}",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "94d1e151e77bdd9b6002e991f0d6cbc6f33cb948fcdfe8b7bc582d3886a8abdd",
					"line": 73,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql-hl}}.namespace",
					"search_line": 73,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "8e3fea5c621b17c38490ea4a66266b98d3d9b05dcb3e186895e4908b145dddcd",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 231,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 106,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-alerta-web}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Secret",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-alerta-web}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-alerta-web}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "c50b199100efa0ad24c91fe66c4ffbcf2467f700b50be0f6e2b70a7b351ef49d",
					"line": 363,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "a9a448a72bbdf3e6c53f1d59bfe98004957001511095ff7b5b3b6eaa6b517aec",
					"line": 283,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "14db0b1021ce8a6a05527659bbd53fe09dfc7364e5da03ec4647418fa3fd72a4",
					"line": 175,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "995019c51aae9b9bed84b9eb7de8c89a849becd498d876a1ef1d309274e7420e",
					"line": 164,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "15ee4137765f1faaf1ff7274bbfbeecc9627712b8a02f6fa769276e0696f4035",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.metadata",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{alerta-web}}",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{alerta-web}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "fde959cd065307b3e2cda614152bbaeffef165b4d6064922dfa9222731c3537f",
					"line": 284,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "34dcc44f7f443378b1c5518635fd34c32cc8de9c5c1c33328016a97f9c5f8443",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.containers.name=alerta-web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.containers.name=alerta-web.securityContext should be set",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.containers.name=alerta-web.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "7b146f231c56cf61580592bed17bbb2a44de8da68a37dd36387ee49ef92b03cf",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-alerta-web}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "abd65d89e8a9227c982dc4f08372af53038320e249bba65329f6037591f64ea2",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "26ea54a508d602e3d18c4be68a0b18ad16c35c2b0aa1d5175c81cca7acea9272",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-alerta-web}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "52d63cdf45b26ceb7890ee526fa0ff9cf78313056f6f6ec144b2384e85fe59b7",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "6af311c82517e06e5094b689dd625617c759a3d20a8f476f01c69310fa508d40",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name=alerta-web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=alerta-web has a security context",
					"actual_value": "spec.template.spec.containers.name=alerta-web does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "ff5cfa03420608155ed490ecaa2f63edfe5f3b71724fb46f2ceee8e4983d83fd",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.name={{alerta-web}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "99906dad3a0764c0da34a94801d77e7f8fb184597412d4316f631fb2a4ed5048",
					"line": 284,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 284,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "63d8be275e3e989a60bf672e24622e18a1f511e275088cb99dbf161b8b2c414e",
					"line": 305,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "1a8fe0ca291988ccc7008c59e5afd00d8dac0b6f4c9c6ce946cd688042942eea",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.env.name={{ALERTA_API_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ALERTA_API_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ALERTA_API_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "98e5b43a7d1326ee5a00795071095ef05411559d0a21bb136eaf69d983912000",
					"line": 300,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "2e78c114e49dd5f23a7a0471d9726bcf30844669ac54ae5f6376676e456e216c",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.env.name={{ADMIN_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ADMIN_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ADMIN_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "e5637848dd966320722b978db3364d9f6ce1e00c5c233946b63d8dc8bf69475a",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "release-name-alerta-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-alerta-web}}.spec.template.spec.containers.env.name={{ADMIN_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ADMIN_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{alerta-web}}.env.name={{ADMIN_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/alerta-web_template.yaml",
					"similarity_id": "5e6a095ab1b8dfc8b486ee9ec60ea194a516ce8a14cf681dd0e01a19e24c0515",
					"line": 384,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
