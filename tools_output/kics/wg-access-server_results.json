{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 135,
	"files_parsed": 1,
	"lines_parsed": 131,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:43:33.853588+02:00",
	"end": "2024-06-26T02:43:35.921296+02:00",
	"paths": [
		"templates/wg-access-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "fc638dcc75775fc4f86ade4e75a3c1def73c0be8a4cb49593ad45700cb654f31",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.volumes.name={{tun}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-wg-access-server' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/dev/net/tun' mounted",
					"actual_value": "Resource name 'release-name-wg-access-server' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/dev/net/tun' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "720a72d877012e21dd2a1c8829e4c6573ac2e79f30d91079b95725a74ec59749",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "e16bb981212be010c5c534044eae26cb72d2f119fa3bf55fd91cb16ba353d09a",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.volumeMounts.name={{tun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.volumeMounts.name={{tun}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.volumeMounts.name={{tun}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "3b6141054d997913cdf1974124ac49576ca9bab192812d1d85fcb16def31c306",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.volumes.name={{tun}}.hostPath.path",
					"search_line": 129,
					"search_value": "",
					"expected_value": "Workload name 'release-name-wg-access-server' of kind 'Deployment' should not mount a host sensitive OS directory '/dev/net/tun' with hostPath",
					"actual_value": "Workload name 'release-name-wg-access-server' of kind 'Deployment' is mounting a host sensitive OS directory '/dev/net/tun' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "860e6e5028a6bedc164afa58655142506edf2094708604f53d6832885c9e3ec9",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "20138678f75495cbf9f72c0debbcd5f13e67cfdc999d7ef511e7e198b971906c",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "7b9077b3a8fd7fea28ca39f262ff693a90a9477af8423b24097017fdcc5b7002",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "74c9c4e49c7afd609d91f7e4e47713cf31147a3a85670c12dbdefe166184ba3a",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "bcb274b98c86792ec6235f8d0e3cbd43b96731ca461f60763e07c4280216c8f2",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "0b1103307f6f8cdf8cffba4c2bdc4bafe55c75d60312702883dd0c803bd2d1e6",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "2a5a573d5124186861d70df226633b5b0fcf96f18ceb88b8ee2d3de33c8f8540",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "ebde3d2ff77e27a6b5340bcea2cba72ff22678decbafb769accf1391290a5d42",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "release-name-wg-access-server-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-wg-access-server-web}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-wg-access-server}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "1e2fecfabd03cc171a80882de84ca792c2a9dc5b7a6f0d167b5b466735a2e02c",
					"line": 45,
					"resource_type": "Service",
					"resource_name": "release-name-wg-access-server-wireguard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-wg-access-server-wireguard}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-wg-access-server}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "62a777897d49ced7df90f11703bc6456ae77bbfab0b52ce437ba220a39112b49",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wg-access-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=wg-access-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "4cd8419d16cb887cec0d8d3c89f8fd88ae9ce9f99f2960ef26df2bf9e0e8273d",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wg-access-server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=wg-access-server.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "3cdd276ea58b0c8590dd32902e137fd8054e4b19c007aa0dc581fd955d0328ec",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "8a8f65b8d82c42db4bab419275e899e42dd30dc235e484583ee798123e474eb3",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.metadata",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wg-access-server}}",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wg-access-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "45922672d838511805a84147c68bfaa6bd5c03e2f7c24a4189ae4fdaa1fb6ee8",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.containers.name={{wg-access-server}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[wg-access-server].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[wg-access-server].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "2cf1a602f07d480cd2ce16de9b371e348cee1682723caf5b5a240210d791cb48",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-wg-access-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "ca6e798b2df0cbb87ce49abcd3c054149d9be8bc87f0a5d3e1826b2c8191fc3f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-wg-access-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/wg-access-server_template.yaml",
					"similarity_id": "118c67c4770f0de642136bf9585621b0364e98576d025254d4da0d334c5b36eb",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-wg-access-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-wg-access-server}}.spec.template.spec.containers.name={{wg-access-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
