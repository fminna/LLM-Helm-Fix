{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 79,
	"files_parsed": 1,
	"lines_parsed": 76,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:42:10.688778+02:00",
	"end": "2024-06-26T01:42:12.737553+02:00",
	"paths": [
		"templates/promlens_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "6302dd962e6efac95de85fd20bab11da6300dcf5b8fd2fbc8d6a331fbb93cb7a",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "3a49e5a6f65ee36cc27fc4e6689664b6c1cfd78866cfade4f131c5c387d4d5f2",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.volumeMounts.name={{secret-files}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.volumeMounts.name={{secret-files}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.volumeMounts.name={{secret-files}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "8b0761293d6a9510c5cf79a1604b83b0f96092ba2a9fc034d7ec861c1357df24",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "c1418cc4bbfe489ae78b2a945489c741233e0e53edc0aa6580274889a88f7cfd",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "9c2aabb99c0810edc3c8e4da2de20b8bd29f19354164a892daf11bc239348807",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "a12c64f1425f675fc2e98fa8f9256ae0d73fbdb2fb1708afcdd977b78afeb569",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "46d629a87cbb16cd738bef50c7e137438a087779cf8578228b1ddd551709ab21",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "7642848525c929760b80c3f21cfc0ab906b02c235c2302bcce242f4010de3429",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "ba6f43e2825c82b4568baff1725a084762becfc389f73dbac673674524be65e7",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "e266f6d5b7364c2c098e633b45c493fbd30e2d4c6bec09172e21d1af62c8b927",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-promlens}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "promlens",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{promlens}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "promlens-secrets",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{promlens-secrets}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "c3d8987be4a0cb47d71e77c43b844182ca5ca99bb47b563db7f22b296a30407f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name=promlens",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=promlens has resources defined",
					"actual_value": "spec.template.spec.containers.name=promlens doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "3e0ed5d057f256962afa51b489797de9376dc130a99e7b517a34d3bf4d0e1c17",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name=promlens",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=promlens should have resources defined",
					"actual_value": "spec.template.spec.containers.name=promlens doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "9050b0905bfed303993894629a0b99abc9d8e92ce7289d8b1881e17024bb438b",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "917d65edbac6d3cd1ee163357416fdd0f89dee24ea31c74bdaa9b4d0f2c2e964",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{promlens}}",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{promlens}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "1e2c548f71077a429d90135a019ef788ac4ed9ccfbf4d582d1dd0394e76a7ff4",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.containers.name=promlens",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.containers.name=promlens.securityContext should be set",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.containers.name=promlens.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "5416358a8950a5aed5d253526dd0b8853b596d961ea0f1dd06663592f22e35aa",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-promlens}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "e51ac49cdf4b1836900d3b02fb6c643106a21bf5d769b991f070ee025d50a4e5",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-promlens}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "dcbe327f461ac411601b36962d79fddca08d2ec644be40bf802137374a007e39",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name=promlens",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=promlens has a security context",
					"actual_value": "spec.template.spec.containers.name=promlens does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "43f3ec2a020eade1b1e9ba1cbf6ccfccffdf37af3b9f405631a84276673f60a5",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-promlens",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-promlens}}.spec.template.spec.containers.name={{promlens}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/promlens_template.yaml",
					"similarity_id": "42acc4c168c773c613c3eeba26b525a3ef9ece59e10dc0d3b9e945148f22a134",
					"line": 30,
					"resource_type": "Service",
					"resource_name": "promlens",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{promlens}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{promlens}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{promlens}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
