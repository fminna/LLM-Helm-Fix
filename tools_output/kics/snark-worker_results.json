{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 219,
	"files_parsed": 1,
	"lines_parsed": 213,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 7,
		"INFO": 0,
		"LOW": 22,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 50,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:30:01.829451+02:00",
	"end": "2024-05-17T21:30:03.844674+02:00",
	"paths": [
		"templates/snark-worker_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "ce8f841884826e9f01333c00180ef76ee621738d2dbc4e5828d8e02b5f3e5f73",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "8095169999b9498eb17276796264909e5bcf247df3e5b33c94b3b882838b4a0e",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "47eeafbc8632411b4a53eb7a07934489fb826ff200884b451db8bf01531d487f",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "ad5b23e54fe5112d742f8105b349067d55cd0f89f8bcdb01b3ff73b63496678f",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.volumeMounts.name={{actual-libp2p}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.volumeMounts.name={{actual-libp2p}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.volumeMounts.name={{actual-libp2p}}.readOnly is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "00d5a7d2632eb136e0432e0168397873d5aaf9979d67a8cd927b534cf6eeff52",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.volumeMounts.name={{config-dir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.volumeMounts.name={{config-dir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.volumeMounts.name={{config-dir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "9aa0fc79e0c86f9dc9ffda74a66c14a0cfa854bcf4d0af0ebc5f4b9d619130c8",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{config-dir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{config-dir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{config-dir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "11095497832c68ecc84297c903639c41fc29e8bb488af8c8ee06c53ddd11bc1e",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{actual-libp2p}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{actual-libp2p}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.volumeMounts.name={{actual-libp2p}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "3aade20005537bbc970d0824422ca9e9419a05dec4acc4b2d266d4a6467c9961",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "2757ce40b3b6ca427c711665072068e2dd0436f494d7a52eca8d4b74eff42d0e",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "2fa86c27beb4a8e48808883ccd0ed6f07e2f278d64a3c58503efcab90a3a457b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "c17d64bedd0f4712c1eafea26bdb3f0174d4715bc1833fcab6712b2374de9acf",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "edd1ddd9dc5ec2fcaa27b61b92562afacc04fed6164fd2be6e2405ccfaf9bb2e",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "e7345c77bab41e4f7566a754b3b63e3352e07cff8251d50782353a7ab04adb00",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "ec36c4d468e6adc6acaa9c914cf9a0115edba2d68f3509be2e811102f8b4cf9e",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "fca870a6a67e65e42a28a82a17bfa5a244414829656f8e8747accd5b45150db0",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "e2fbfd4dc3f54f9d024cd82c0ac2b874628816e1a99f2178a14d4a529414b643",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "ce597804e34ec9c661f889ececf18e17667e8c613144c75a68e21dc9de1290aa",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "67e01f2325f2ea07dcf9441c9a27b434221a5428f1895ae1463fb948be5540ea",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "2ee2f26970cc4670668fe8337fa14551e237238ed9ea49c386500e675982d1fa",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "608eb6d3190152669a130b42db1959c5f5633393509a8309b3ba2e16518d1a08",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "8838706bdcde40670fd3a7e8c98be81e060c4781447d2ddf30f65105a5a786ad",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "05a61677679907bbf45d6e1d3b4f1fe74e3b1d6fcb98f3841afd62b740de1149",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "d18dc1bee74fc22152a18dfdfc7861e3d1598596d68d12a0c81ec05824979062",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "1f7fb4b77e9152494ffe91c7f8bf607354061a720f7fd68046255d1dcadf4ff7",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "4ea071640d3142be34872bbce456648e859efd7b3eaab8a4dfcc1c19af26d83d",
					"line": 183,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{snark-coordinator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "a1e93095bfd33fbeb206120b2a03bf529bed1a1373ca3c396c659816c6ed781e",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{snark-worker}}",
					"search_line": 164,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{snark-coordinator}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "b90bc4c7c6e9b0b2ca6c60f48e118f1aefe372e229ec910f92068d5fc1cc4335",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mina has CPU limits",
					"actual_value": "spec.template.spec.containers.name=mina doesn't have CPU limits"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "b09e073f32262faa44cf57a8626b9f8ea9e8417179c15ed92eb077bac3fdb1b9",
					"line": 187,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=worker has CPU limits",
					"actual_value": "spec.template.spec.containers.name=worker doesn't have CPU limits"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "f4ae581be904d2fca654ea1d529151b2482e404e26ba92fb5259c96320a9da05",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mina has limits defined",
					"actual_value": "spec.template.spec.containers.name=mina doesn't have limits defined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "af0a83c3541e042fdc3f92141858a9c0c789bbb5d6eaa50345ff9981a71e57d7",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name=libp2p-perms",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=libp2p-perms has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=libp2p-perms doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "bc8d544154625cc38ee5279f5c148600bbcc9640a80913727420de61dddda4dc",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name=libp2p-perms",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=libp2p-perms should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=libp2p-perms doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "8119c1323ddf751bd30bbbb52b95fac4cf605d250f2bd419cd1322452aa1da7b",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "101d82f08005b13873929f9792d378fe81af844b5bf67fd73836281df66235a3",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.metadata",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mina}}",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mina}}"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "101d82f08005b13873929f9792d378fe81af844b5bf67fd73836281df66235a3",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.metadata",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{libp2p-perms}}",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{libp2p-perms}}"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "cc9e18ae929e36b425b52e5b9ea03e2df77f74712e637894f992b1fe4b21b54c",
					"line": 179,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.metadata",
					"search_line": 179,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{worker}}",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{worker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "03596c391f764a808df34d7e06219e181a5bf26d2ddd2d96d4591bb1ac5177f9",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.containers.name=mina",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.containers.name=mina.securityContext should be set",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.containers.name=mina.securityContext is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "b9a1616c44707bd8ca043d7598cf411415e2934a77c9a7fc8eb67cd3f80578f2",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.initContainers.name=libp2p-perms",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.initContainers.name=libp2p-perms.securityContext should be set",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.initContainers.name=libp2p-perms.securityContext is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "4251147ed9a31c38a743cac8953688e29a1a2c84133822f22a3d1f54cb79b5b9",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.containers.name=worker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.containers.name=worker.securityContext should be set",
					"actual_value": "metadata.name={{snark-worker}}.spec.containers.name=worker.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "1744462bfb9caed9d2d3e6545443ff10b45c9288f72b072a55c0f8b7c83c38d1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{snark-coordinator}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "8e5a093ed8584f9c2b7a383a0e9cf44a039e9afa46745894e562b2ace49b7142",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{snark-worker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "f207d10a79641b79238b4946fd5de62df96a66d527e5484fe3e48fbe298ec1a4",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{snark-worker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "0d47f2a07d407f9ddd64512910f79c7a8ad7932973476584198337754f2d2654",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{snark-coordinator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "294c04b615db98e5368925705a6946ffdb942faa1042807bcf38034cecb1988f",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name=mina",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mina has a security context",
					"actual_value": "spec.template.spec.containers.name=mina does not have a security context"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "c93eea00581d3b1023e3ba1abb8de008e48670f6f74e801f585d0901d9f615e2",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name=libp2p-perms",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=libp2p-perms has a security context",
					"actual_value": "spec.template.spec.initContainers.name=libp2p-perms does not have a security context"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "fa043a5baf305bdbf465c4541b0135db061ad96cea8eae20c263751ebde01e7e",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name=worker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=worker has a security context",
					"actual_value": "spec.template.spec.containers.name=worker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "0c5c405c47237d6d6b561a3d93509507e7d850d5ba169621909f84e9c3af57ad",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.initContainers.name={{libp2p-perms}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "19125e15fd77562c184e2296fc1c7d90591f99dd491c75e2ea3f042ed73411ad",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "snark-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{snark-worker}}.spec.template.spec.containers.name={{worker}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/snark-worker_template.yaml",
					"similarity_id": "3ad298448518a5db23c1bfbdac1569cc0ffc74aa9c40ff9beed9027cf35e2dae",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "snark-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{snark-coordinator}}.spec.template.spec.containers.name={{mina}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
