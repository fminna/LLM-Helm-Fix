{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 190,
	"files_parsed": 1,
	"lines_parsed": 185,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:57:22.886702+02:00",
	"end": "2024-06-26T00:57:24.933898+02:00",
	"paths": [
		"templates/promitor-agent-scraper_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "cd3f5b2844744853d11f2fdba5517d16e5d560a82f634718a72ae06e49107fda",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "ea2565caced5588c0d4cbb2405985d2e5c470eabd7578deebc1dfe6ffa9398fe",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "868580e3c8be97e647938e9aedf53fe09ec0a72ab60886348324188b3aac5be5",
					"line": 83,
					"resource_type": "Service",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{promitor-agent-scraper}}.namespace",
					"search_line": 83,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "5e7a32a6628929093d428e7afb06026083c408bcd8ec038ffdeb30998b3682d4",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{promitor-agent-scraper}}.namespace",
					"search_line": 110,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "ConfigMap",
					"resource_name": "config-map-promitor-agent-scraper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{config-map-promitor-agent-scraper}}.namespace",
					"search_line": 36,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Secret",
					"resource_name": "release-name-promitor-agent-scraper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-promitor-agent-scraper}}.namespace",
					"search_line": 21,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-promitor-agent-scraper",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-promitor-agent-scraper}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "9f972d1eb67f5c7209fbca390f4e3eefbf952450ddd43078f7240830521a425a",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=promitor-agent-scraper has limits defined",
					"actual_value": "spec.template.spec.containers.name=promitor-agent-scraper doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "cb49aa4f3c692f733834bed65d16df901029a233e8d0db9ae0e632e0c36004ba",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}.spec.template.spec.containers.name={{promitor-agent-scraper}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=promitor-agent-scraper.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=promitor-agent-scraper.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "6689ebc9483e254b92b20970c8ccf226f289e5c36bb277024c773d176143b87c",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}.spec.template.metadata",
					"search_line": 133,
					"search_value": "",
					"expected_value": "metadata.name={{promitor-agent-scraper}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{promitor-agent-scraper}}",
					"actual_value": "metadata.name={{promitor-agent-scraper}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{promitor-agent-scraper}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "23ce90896b68f088f220b7325a2e44c794c01e613a6c2ef2e3e403b01cb9b461",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{promitor-agent-scraper}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{promitor-agent-scraper}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/promitor-agent-scraper_template.yaml",
					"similarity_id": "30374d298f6d03987cd71969c60e26754052f1136d98da06823fe1ec78bb2b87",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "promitor-agent-scraper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{promitor-agent-scraper}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{promitor-agent-scraper}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{promitor-agent-scraper}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
