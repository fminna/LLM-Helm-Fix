{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 192,
	"files_parsed": 1,
	"lines_parsed": 185,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:02:36.187853+02:00",
	"end": "2024-06-26T01:02:38.281131+02:00",
	"paths": [
		"templates/kai_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "31af350296f0bad088d652ed07b6e4019b0d368a6617c2e105c3a5801c21c2d1",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "188dfebe0e004a8a84d391a4b45971af540ed9ddd94c6d25a49b10286f5d5423",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "9b99e9d77e7521200856f45fdb302b0fbcb3a354808759b22de30d645b5af35b",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "dd95fffa573acc274bc9b2ffc18d87be2bb7a7d23e7a7939e334217b733386f3",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "d3534c53457210b41f6f2b3d573533a9e1beec9b3bbb4b4e18bdda8baeade992",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "1e53b5b0ae0a781caeeb7ef2a47c50e7644e0f07772a5c6251c1a224a1cc24c3",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "68ef525cb68cc663cd5ebe3645dc03a62b103301b36d626234ec31dbb4ac3543",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "4d00f475d92019c540208c2bfab11708a4ffb22eb38310f19787e7ec18e6d828",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "bcaa508cacc6b384322c09f6e7c8ef6bc09a77d67454a81aec711470089e1546",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "anchore-kai",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{anchore-kai}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "049009b4f284758e9e351b3a22557ea5c262618faf725679a663b892e34ce065",
					"line": 103,
					"resource_type": "Service",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kai}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "7f4cd65edf93ef878f77a3dc1286b51fad6cb08a5e64e3ebcadbea724a6b339a",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kai}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-kai}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-kai}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "9a39eb72117590891e2f35f82897aa3ee334f48de0d082387bf4ed358362b1f1",
					"line": 179,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kai has limits defined",
					"actual_value": "spec.template.spec.containers.name=kai doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "d9dc5801197902e78aaf3c78554f6e3c0014749c1965c3262d87cd9e4b8ce31f",
					"line": 179,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kai.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kai.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "3e7792b05cc17ebd36832dd6d6aa8b084ae7a3ac7ae90ddde451ddfb4f31862e",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "7648675a1889086663c7e84c1b10b898cfe2d59c7ca49d828f20b06c1402ac7c",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.metadata",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kai}}",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kai}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "0a8895b4b8f3477ddd9d291e832be4be7db969f9f138cefaa529a486043a3886",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.containers.name={{kai}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.containers.name={{kai}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kai}}.spec.containers.name={{kai}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "16eeeca398ad28fd28f865d8753e4d3a2c3986e66ae0f20e032b15fcf541b1df",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kai}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "71e3fc12fa9c0c3dcdf13f14016aca5b2965e8d1f23ab7dd15592511c492df2c",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kai}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "30c214d1023b30a741244822aee5bc584ed0e1aca91a545e1c77f1287fb7d73e",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kai_template.yaml",
					"similarity_id": "254cacf12e0d73d7eec35b6a4035969f05fe01ee2c325765dbdc18d08a3957df",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "release-name-kai",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kai}}.spec.template.spec.containers.name={{kai}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kai}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kai}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
