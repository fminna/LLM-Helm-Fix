{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 316,
	"files_parsed": 1,
	"lines_parsed": 306,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 15,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 23,
		"TRACE": 0
	},
	"total_counter": 54,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:27:57.202421+02:00",
	"end": "2024-05-17T21:27:59.15513+02:00",
	"paths": [
		"templates/node-feature-discovery_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "a7c89087b58567543074dc79f0d52b94cc7442c39123b699e7785e63b654519b",
					"line": 236,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-boot}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/boot' mounted",
					"actual_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/boot' mounted"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "da3cffa946d0f63c31715390357f3d997b436feb7247fa4de9e2c75cb5f14475",
					"line": 245,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{source-d}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/etc/kubernetes/node-feature-discovery/source.d/' mounted",
					"actual_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/etc/kubernetes/node-feature-discovery/source.d/' mounted"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "5860d5ad8edefd987092718f9a530fb07af1b05bebfe415f8da5c0879f110d35",
					"line": 239,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-os-release}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/etc/os-release' mounted",
					"actual_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/etc/os-release' mounted"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "8f0a09a305ce239a01788b66a594b8d02549548ac8d1d910f0fd8b50a6fd415b",
					"line": 242,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-sys}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys' mounted",
					"actual_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys' mounted"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "f00b79c073d846304e2a5bd810bab024354f2688295098e1ed88de30a7f2d045",
					"line": 248,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{features-d}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/etc/kubernetes/node-feature-discovery/features.d/' mounted",
					"actual_value": "Resource name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/etc/kubernetes/node-feature-discovery/features.d/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "dd57a420e82d17090df4da1741f5c1e4ea9c72ebf37f8469eaf8f3b37865c17d",
					"line": 284,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 284,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "f5b5da77424eccf650c6d1356227dfc91a3128f040b2510ef233e013a2b21a7b",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 201,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "f0b6ea2876c2b31e92d993eb565e50a74a488b118b71c364b79e00253f82c342",
					"line": 226,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{features-d}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{features-d}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{features-d}}.readOnly is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "89c6c0ec7f5a8f181457bac6a713737661b5bd03b537171a0171bffee1218e0a",
					"line": 228,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{nfd-worker-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{nfd-worker-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{nfd-worker-config}}.readOnly is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "4e1a5d1b30216e3fbf37cc3f68e7d800fd79b28c2fbb55701cf7cb956a2daed0",
					"line": 224,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{source-d}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{source-d}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.volumeMounts.name={{source-d}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "27c5eb1c2c4e485e28b690fab19bf2e1a84f2afec8c696dcafe86eba3bafae91",
					"line": 248,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{features-d}}.hostPath.path",
					"search_line": 248,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/kubernetes/node-feature-discovery/features.d/' with hostPath",
					"actual_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/kubernetes/node-feature-discovery/features.d/' with hostPath"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "964a7be3c3c3b2befb49abf7ce10c0980cfaa15c149b64d7dd5f703762082332",
					"line": 239,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-os-release}}.hostPath.path",
					"search_line": 239,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/os-release' with hostPath",
					"actual_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/os-release' with hostPath"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "259749da628a8b17bb47d740dab699a8c7386b384a2a7354e16115deacb16e27",
					"line": 242,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-sys}}.hostPath.path",
					"search_line": 242,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "506a91a2a930e329111336bf904e8a88cfe0f90da727127417c4715572ccaf85",
					"line": 236,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{host-boot}}.hostPath.path",
					"search_line": 236,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' should not mount a host sensitive OS directory '/boot' with hostPath",
					"actual_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' is mounting a host sensitive OS directory '/boot' with hostPath"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "b35695aa2a817f8a51dbacdb92692f597a8c132d7ed4fff42386fd148825c01b",
					"line": 245,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.volumes.name={{source-d}}.hostPath.path",
					"search_line": 245,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/kubernetes/node-feature-discovery/source.d/' with hostPath",
					"actual_value": "Workload name 'release-name-node-feature-discovery-worker' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/kubernetes/node-feature-discovery/source.d/' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "0abe33bbbcac3e6e188b67f54675c7671dea6f0f0035fed9323b0d9c29ee57c2",
					"line": 284,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 284,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "b9f4de7a5616fe75ce22b416cdfd53c0c12f3a383ffe030c9b828d2cde5f6cd7",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 201,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "50a21f3c9eded9db29589135044268f3f5e037f5582a144cf4e23264d67746d8",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "0593a2e393b8969d8661e4c9d6aa2a20e3da983816268e2c24c0910b061b41a5",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "0fdb6ee28b707148d019a5ce817ccb47364dd7b38d0df9f822979c1b5f5644b6",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "d2f8be047591f1be9863c95d2852bacf16e9a037977d0699e6c8bae0a2c19f4a",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "87d17cfb0b4f36016c54cfed2f82578cbb5cab9250357430d781d6272d3c6e73",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "35884c1b517a9923e975bc4508f3d65ae10740c96cb94a75abeb84023cec1541",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "1290cbb108a9e6d3550d5b48040209881a94178ff3f35d44bdbe9225bc24b26f",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "8c1f6ed87985e2dc26bfb78402f73f5ef7a80e1b02a93a3d895fa62c98100348",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "7b48c62e0586c730cb688af997ff3ae667f0175e49b47d70f0f5ff8cf80bbee2",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "ece47f823d97030140de955f7043366f2e40e761993f1a8dbae7fd9262013368",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "4052c92b3f9ad8fdeca8833daaf55e342df3d660aca6f76e946c148e53592b35",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "87d9315b7bd4bec9ed5901c468700ac2f9dc056b4dbc95363bb0b218a61b8dd3",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "4526396be9f8013362945fa1acb6c1760bfe2711abfe061a563ea9bfb2954888",
					"line": 194,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "363482facee8bb90d1ef95bcea37d9c2eafbaa10f17842d75fe9ebed2af52814",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "6c40870c643759a0d23d8255a17493f09eefa1be5a411f6f558fe14452898965",
					"line": 195,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "032c95c4612a6c0cd98e0e151669a883cc73c5189f30111fc7c0ef458055a3b6",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "c01b9106dd4d8546bea6720a7f223c39b3a561eba0954e756a2de01f30d910f3",
					"line": 150,
					"resource_type": "Service",
					"resource_name": "release-name-node-feature-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-node-feature-discovery}}",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-node-feature-discovery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-node-feature-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-node-feature-discovery}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "884f1adef2d0c5e463cd37980a0d60a2c416fac96db2576b5e759ad4fbc0cad4",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-node-feature-discovery-worker}}",
					"search_line": 174,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "c15d2730b07e0f25e1a98a1adb65d7e78831e9f22930dd59dab927ac0837733d",
					"line": 257,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-node-feature-discovery-master}}",
					"search_line": 257,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "cce37ed3ae544baa0409481d01f567b296d50fb68e4ee617f8ba24d633570895",
					"line": 230,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-feature-discovery-master has limits defined",
					"actual_value": "spec.template.spec.containers.name=node-feature-discovery-master doesn't have limits defined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "c741e9f5c51f9bec43fbfc10f978a7703e2f146badc7e16986378a919d0fe16a",
					"line": 230,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-feature-discovery-master has limits defined",
					"actual_value": "spec.template.spec.containers.name=node-feature-discovery-master doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "91e77acd5756d090011e8c6688d8ff4d35e3ce5ccbe679eaa71cfe9a4a31dd05",
					"line": 230,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-feature-discovery-master.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=node-feature-discovery-master.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "250d0df7de7b075b5a3711fb62bf6606c2540f329c4e57fed60cb44329a603de",
					"line": 230,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=node-feature-discovery-master.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=node-feature-discovery-master.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "51a9ea417ef5c198c45fcba853b4953eda54cf457f11529550b90b971cc74c8e",
					"line": 204,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "bbef3edb01fe4a824c81c4ad2ab6cbcb70b84c58baaebbe1c259aef42cda4511",
					"line": 204,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "04dca0c1cfa2f38a3a90eda7fd17c96762413cd1afd3e334c7b5b956e0e5a7f6",
					"line": 189,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{node-feature-discovery-master}}",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{node-feature-discovery-master}}"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "bfbcadef5d9ee5a41dc46be50d74d95ca420c2bb81ba8f7bc1fae4dab3be9af0",
					"line": 189,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{node-feature-discovery-master}}",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{node-feature-discovery-master}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "d1d9ff04ad129b7dc0a9a98d43511367522e78dc61f1968556c455e7648adac1",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "664950cf86093e2a8d6b3156849e69dddaf489560d3d9e87e227e5e00239729f",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.containers.name={{node-feature-discovery-master}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.containers.name={{node-feature-discovery-master}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "fe58ab106937f19e33e13d6b54b01cc8127a984ee7f483c53ab9d8d90fe8517d",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "93299a3255d237b3962c39bc6b9d1f5a93214a0bbaf2acf58060dcb5cd621a74",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "65ae2b47a84ba93bd5ed92952a2da6dea3c9bd96242367432bda728683bcafb2",
					"line": 174,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "e49a3d6f0209c6053147f2cb167e3378f0428aa2fe3bd9973f040fbe3c960591",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "76b1ef2a2e33663f32bc895fb879dc0059b22bc5bebfca376e7d55da554d01e6",
					"line": 201,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-node-feature-discovery-worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 201,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-worker}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/node-feature-discovery_template.yaml",
					"similarity_id": "99906dad3a0764c0da34a94801d77e7f8fb184597412d4316f631fb2a4ed5048",
					"line": 284,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-feature-discovery-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}",
					"search_line": 284,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-feature-discovery-master}}.spec.template.spec.containers.name={{node-feature-discovery-master}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
