{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 147,
	"files_parsed": 1,
	"lines_parsed": 142,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:39:28.517079+02:00",
	"end": "2024-05-17T21:39:30.428118+02:00",
	"paths": [
		"templates/proxyinjector_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "736aabc0245b1a77fb93b3defb23b34cb823ea9d7148525346a34b005bac0bac",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "a5b1c238ff4e1a9c8310b06eda14f94bb3f1bdedb144d6fd29b691495607ebd7",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "2193317cc37deca68958991ad35368c84908c369030bdb40b0c5d5dd9fc7efb5",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "064adc0ffe42336f3d53ab2bd9438d006d2e496e3a67d428b73c13c074506a65",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "dca887d94ef85e0db6e00275006e63cf765534b778b769cb302d3b2555767bec",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "504840430aa70ffd4d6b7ebce28b326331738db81e271dd87bdad6f31b101b87",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "88a4930ecb1deb06dc57fb08a92d21a9f065b12ff05b041e13e5c079014e0bf6",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "47cbe1fa185e71010e7381f8634814a088a115562f400a89c1b2a95bf88e9a0c",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "1911e3f1e88875441cc4ef537dcd598f8c89f3d45ced4dc337d07582a02983e0",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "2f262659c427e4e1ad696a2482d178ef3892eeff34843e02218caaeb29189a25",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{proxyinjector}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{proxyinjector}}.namespace",
					"search_line": 116,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{proxyinjector}}",
					"search_line": 14,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "608cd7a9b5a57c4329cf67db39d66da81f897a9fa4f563be86363fdff08820a4",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name=proxyinjector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=proxyinjector has resources defined",
					"actual_value": "spec.template.spec.containers.name=proxyinjector doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "f573fa9c53c79e5f7b5b6e78c54c48b54bfb763921ad75c8287ddaa05241a799",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name=proxyinjector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=proxyinjector should have resources defined",
					"actual_value": "spec.template.spec.containers.name=proxyinjector doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "34911e024234f064c0e0d0f56153e421221c72c8f6c5ee988a32128b23d6d455",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "fa832dfb66094f59ec4fdc81dfbb7e4ab43a8f04f295e1a0515d88fbbdb3f4c4",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{proxyinjector}}",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{proxyinjector}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "b03129a09dcf3b8573e4c35267e7e1e0fb82c99d4739629a64003c1c45db80e9",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.containers.name=proxyinjector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.containers.name=proxyinjector.securityContext should be set",
					"actual_value": "metadata.name={{proxyinjector}}.spec.containers.name=proxyinjector.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "dce367285ed2adc960f1cb4ae5b63f05f96f06bbff6f4eeb95e295da352fe3a5",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{proxyinjector}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "ee60e5e865843657625b984a655e7a39707a334b7c7903c015143abd86a35f93",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{proxyinjector}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "a6aebb567fe66b3abc22dc880d586a7fcc24e9f7d6f3fd94088ee4c29b57aa9a",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name=proxyinjector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=proxyinjector has a security context",
					"actual_value": "spec.template.spec.containers.name=proxyinjector does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/proxyinjector_template.yaml",
					"similarity_id": "c0bb9b7977876bb00dc4187833c537163b77754bfb6e85e76fe0be93fac55011",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "proxyinjector",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{proxyinjector}}.spec.template.spec.containers.name={{proxyinjector}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
