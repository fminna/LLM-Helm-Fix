{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 159,
	"files_parsed": 1,
	"lines_parsed": 155,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:48:20.778745+02:00",
	"end": "2024-06-26T01:48:22.81978+02:00",
	"paths": [
		"templates/actual_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "b88bbeb2c07a71b8fb992cbcd266f731b4e02bbb5f74832186144180d01c6839",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "2aeb50a83c301779c6b0df1d59a9037861d558d83e8b9b49646131efbc72f062",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-actual-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-actual-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "3c9bd076bf86d5c8b13952e15c6911c35b1551cdbf814bf632478d51ff8f5cc1",
					"line": 132,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-actual-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "da68f51a07480c750e69f1dfe582dfe615d02af269a9d1f22a4199c5ff79c76d",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-actual}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Service",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-actual}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-actual}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "d83478525ad9b105d7b4e1101708e440c27ee3347bc2f1be0d217f5416465cda",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-actual-test-connection}}",
					"search_line": 124,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "07e87e1df2dbf5527568eaf20b4d172b7d14f4237d9157622bab92c334f42919",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-actual}}.spec.template.spec.containers.name={{actual-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual}}.spec.template.spec.containers.name={{actual-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-actual}}.spec.template.spec.containers.name={{actual-server}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "7ee6ec4b0b3ee35627434d7150ddae607d1458784225640f4d94001a6c1ea0e9",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-actual-test-connection}}.spec.containers.name={{wget}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "7d647eca52f0a4dd403a742f9320b43a6fbab861bfceec4f39adf49ba308da1c",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{actual-server}}",
					"actual_value": "metadata.name={{release-name-actual}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{actual-server}}"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "c13222a146c2a44c76c585817df542176dd609d0563c84cf09d3cb91dc1e3b97",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-actual-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "ff6399834cd9eec2786e21d6fa2cd853fc1c311edcb0a32d1e0a086740cdd3d2",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-actual-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "ef4bee87ade7375152cbb92ddb055ff7a36519609d853ee535d7bb449acc462d",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-actual}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "808837c0a1ec30730fe51360044043609fb3e467e7ff8e101b9b8a8ee6dc2fb7",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-actual-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-actual-data}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "7e5efdf7908f1ae9133aae58690f2ee941cf2789944dad495d751249ddae5961",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-actual-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-actual-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "c76d77fe6ead4482994d9151bd0bc4e8e2f635f6f4ea3c71a5090afaacb24042",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-actual-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-actual-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/actual_template.yaml",
					"similarity_id": "9c8b42d7c351e5f0283accefc1a993fa9b82aa3ab539660a686dec52f2c91349",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-actual",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-actual}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-actual}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-actual}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
