{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 442,
	"files_parsed": 1,
	"lines_parsed": 431,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 24,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 48,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:40:08.568747+02:00",
	"end": "2024-05-17T23:40:10.55845+02:00",
	"paths": [
		"templates/parse_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "f20b13cf1e80a5360d65ca857abff009cf5332b6f46b061912459beada3ae3de",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}",
					"search_line": 242,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "7487dd216f0fd9ecc7b2997a1601f4600fcefda682531096c447346aec75654a",
					"line": 375,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}",
					"search_line": 375,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "ac103103b7293c821720f8afd00e3acc81137cbdc965015cd3f604c00697ae5e",
					"line": 244,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "3d8f7f9b2f961dc74d6c77d44ff55aeb270c19bf626eb3fbaea66cbc306687ac",
					"line": 378,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "d933b6ce37537fe5e9ca7f3f414e786ba6c014ca3260041d747c7bd87bb8da14",
					"line": 302,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}",
					"search_line": 302,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "459e23722f319ce9571fc0c5cc919825e08eb017192036ed2b2741b379992cbe",
					"line": 372,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "372339f10ca981eabb3984936fa9793a41e651dfd37f499f6c294d6ffb1634f3",
					"line": 372,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "a8f35cd65e794a8c880412bf089093fdfe8d9e48f3c7a1de73c0ea3a5fd672a2",
					"line": 303,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}",
					"search_line": 303,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "520557c851fedcefe2d494e95f99c95843b827f1254dae8195bf2df6464438e7",
					"line": 372,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "0780308fa541c65fb1efa7c2a60df45c394033ba8f89c5bf9b7e053721c970bb",
					"line": 239,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "9bedd133c56e948d14d3b01e1c0c2ef976888652f792a37f9114882a011138e0",
					"line": 375,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "ed1423fbb4db8f802030f36dce73c0436f9e21ae5da54a403424f7535cb31007",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "ff2fe6e5a7ec20f99deac91715f0e4f450cfc99f178d3ec36bef530be8b7228a",
					"line": 15,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-mongodb}}.automountServiceAccountToken is true"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "fefd0eec82dcab7962f39eb8e066b2b0c07980b11d997bb6713117046acc8b83",
					"line": 29,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-parse-server}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "f1af13a8ee520bb24aab03cced2198fde7e233889c901b2c624a328bfe3a36b1",
					"line": 52,
					"resource_type": "Service",
					"resource_name": "release-name-parse",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-mongodb-common-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb-common-scripts}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Secret",
					"resource_name": "release-name-parse",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "7320c23a2dc19d9f4d3787c16c75db69af650921c073814c0f029f6d3fe82c50",
					"line": 165,
					"resource_type": "Service",
					"resource_name": "release-name-parse",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse}}.namespace",
					"search_line": 165,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "fd903f9efe62a8a890791ebc2313edffaf7eac58aae37d1a9d22e08ba63e2eca",
					"line": 324,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.namespace",
					"search_line": 324,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "Service",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.namespace",
					"search_line": 140,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "ebc1ae0adc1b67ebbd0381e8e282edae30d307c3eb5ce6ac7e89b6c986c891d2",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.namespace",
					"search_line": 190,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Secret",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.namespace",
					"search_line": 36,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "36069b4a61655e47470829cafc4c5eef857911300fbcb30de09afddfb0283202",
					"line": 302,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mongodb has CPU limits",
					"actual_value": "spec.template.spec.containers.name=mongodb doesn't have CPU limits"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "d116a240ed1026ea0197952e8de8785c2f0567336dd09920c53222dad99d3d7f",
					"line": 372,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name=parse",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=parse has resources defined",
					"actual_value": "spec.template.spec.containers.name=parse doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "baad794090d5b9864237664d2d715d55747280fb535cce7065959a1e0e5bb8af",
					"line": 372,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name=parse",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=parse should have resources defined",
					"actual_value": "spec.template.spec.containers.name=parse doesn't have resources defined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "18f797b5ef91a166233c9ee4261023bbd685b132b6f520c277fc0e76ec7acec0",
					"line": 303,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{mongodb}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{mongodb}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "05de0c4a721da7a0516a67c1e853c9b0b84dbe0d014c08dfdd892fb248b30eea",
					"line": 374,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "215aebf699f5fb06b8ac9b536237382dc1964e93e52a002e2b92ba1c37c711aa",
					"line": 241,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "4b4c3a9a814647a3189f432abc43f665ec9f161005d2c8e989ee7ea567c1c3db",
					"line": 207,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mongodb}}",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mongodb}}"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "6da1a24c319d6805a71d6f8dacd12dc490cdf0b364d785055f651e718edefa1c",
					"line": 207,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{parse}}",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{parse}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "c9fbba9a8d9fc1fda32fcb84fd62a97ab9be58a9b47324903cf2dff31c1b6a19",
					"line": 375,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.containers.name={{parse}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.containers.name={{parse}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.containers.name={{parse}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "44c2c174a2f93bc4d0110097b095aba6d9b99403a155087b102fb25dd3e89f21",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.containers.name={{mongodb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.containers.name={{mongodb}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.containers.name={{mongodb}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "93e533d3b1a57792a15a5e6c5491ae9ef53bbf91e71c90a541bb09c22796a1dc",
					"line": 122,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-parse",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse}}",
					"search_line": 122,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-parse}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "d9f264b3d79136120a9b9f6be2a2f55796fb762cedb510a5eae499216e19cf8d",
					"line": 324,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}",
					"search_line": 324,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-parse-server}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "7d2171a74be3ed9333f7c11bd8b105b776342170d039d56c91fab1d3ba1bc50e",
					"line": 103,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mongodb}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "9067b54d1eaf70b5abdf964fdeca2139a5d17cbec54a2720314084dc0b88eafa",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mongodb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "2476557258dfba6119e1772cbb837a8cd144313944de4d8eb28a25d7126da637",
					"line": 103,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}",
					"search_line": 103,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mongodb}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "63a532002d31990a1aecc44b27b71e780f8d3baccd0fd4688e9130ab24cb6bb8",
					"line": 324,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse-server}}",
					"search_line": 324,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-parse-server}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "57a6c4ffc7af38102dc18f0220a70ef5a7051055dfe0879a3c96793d38e95ba6",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mongodb}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "23cbef8a9e94e36cec03f36efeda390aa5e3e1ac7abe14ec4015d9962ed403cc",
					"line": 122,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-parse",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-parse}}",
					"search_line": 122,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-parse}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "a2be0de027506db0fd628ed29d216d11f22276d7a5184c019a46ce0fbd6e14c4",
					"line": 376,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.name={{parse}}.securityContext.readOnlyRootFilesystem is false"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "0325fec7a36d5dd7ef271462f9519f69acd7f5da648fff4821818cc6eb74ea9b",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}",
					"search_line": 242,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.name={{mongodb}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "25c5699b5bc569da441a46addb891caa73fed75fa5cf7cd1eb9df67fd2b3bf70",
					"line": 405,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.env.name={{PARSE_DATABASE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{parse}}.env.name={{PARSE_DATABASE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{parse}}.env.name={{PARSE_DATABASE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "bec58d94a94a24541543cfe57d20e7298da729c4c82ad97c5e169477e26b7574",
					"line": 261,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.env.name={{MONGODB_ROOT_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mongodb}}.env.name={{MONGODB_ROOT_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mongodb}}.env.name={{MONGODB_ROOT_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "9df740b36e0faecf1d48227abbc42d58195e8aee413cc597b72dd11e2306b549",
					"line": 392,
					"resource_type": "Deployment",
					"resource_name": "release-name-parse-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-parse-server}}.spec.template.spec.containers.env.name={{PARSE_MASTER_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{parse}}.env.name={{PARSE_MASTER_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{parse}}.env.name={{PARSE_MASTER_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/parse_template.yaml",
					"similarity_id": "e721dc57485e0bd0760e51ba71828b49ebfb2c30526108a0be36f2f6eb0cf202",
					"line": 254,
					"resource_type": "Deployment",
					"resource_name": "release-name-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mongodb}}.spec.template.spec.containers.env.name={{MONGODB_EXTRA_PASSWORDS}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mongodb}}.env.name={{MONGODB_EXTRA_PASSWORDS}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mongodb}}.env.name={{MONGODB_EXTRA_PASSWORDS}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
