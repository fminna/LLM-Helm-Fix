{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 192,
	"files_parsed": 1,
	"lines_parsed": 182,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:40:18.278582+02:00",
	"end": "2024-05-17T23:40:20.288619+02:00",
	"paths": [
		"templates/mogenius-metrics-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "aaf58495d0d3289bf73fa860ed733b4781c0f92b9f2f956762deed4f23802d66",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "f9bc986777e164aea1e6f6b78bdb0612baae75ceb6b5de701c97d83a3c89cbe1",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "bf400c38ecccdf0a340214b715896200bb55b2460918ffd8287b29acc1d6e738",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "4dfac33849b0f842fb80a1e475fe35ad2676e2d59e7f6a7daf83039b6df28935",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "9fddd4ba6ce6015f248e1d94c3cc76ebf8877846cf115426fb8369a4f548a732",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "af74478af80349701dea20108f8613f84c9cacba318e1d7e898940cab6ba1a45",
					"line": 91,
					"resource_type": "Service",
					"resource_name": "metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server}}.namespace",
					"search_line": 91,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "5978480e43b9f1bd495826403f7aa7ae0f8df5d49dc12c72d69308b353caa3e5",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server}}.namespace",
					"search_line": 111,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "07a23520c6c9a5fe6dac911140b60062bb98a2c39bc50d5c4f113fb164d59c80",
					"line": 76,
					"resource_type": "RoleBinding",
					"resource_name": "metrics-server-auth-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server-auth-reader}}.namespace",
					"search_line": 76,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "a2b4bbd3b9127ca9a32f6e9958a042caf6399c352ae744e4298cc29acc6087f3",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=metrics-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=metrics-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "98f2f714428bc62a7d18e5243b9d7b3e7a2bbddb9a566e29a7ceef9df746abf5",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "c3ea5616927637f29d480712a4ea713a0dd0d12b86b5f4af2d43cd9dabaca189",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{metrics-server}}",
					"actual_value": "metadata.name={{metrics-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{metrics-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "964a0b116421694d149c5625a8a6c0cb1aa82b18715ee7a50c95029d8cb33624",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}.spec.containers.name={{metrics-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}}.spec.containers.name={{metrics-server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{metrics-server}}.spec.containers.name={{metrics-server}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "6bc155da6a05e8c6952fbbd6cc82763fd972cfe4b936d4a9fec171c468c662b9",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{metrics-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mogenius-metrics-server_template.yaml",
					"similarity_id": "019ecf708086b34732c6f944767ba3442c29b6e70094af8e3002a25d2f91c49b",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{metrics-server}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{metrics-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{metrics-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
