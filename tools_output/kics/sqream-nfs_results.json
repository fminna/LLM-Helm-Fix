{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 120,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:36:37.132632+02:00",
	"end": "2024-06-26T03:36:39.302429+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/sqream-nfs_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "010555186afad84b8ae3e9da964ec90df3a5d38264d4d4db1bd3a8f2fd8393ba",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "f2032782cb5a6a4ef2d6f5c3ef24a7c6363fa21f7d415e66208c4913851fdd37",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "6a829757f2f9878b281707b2b4dfa20f4530d8b4272388fb39af3cd4fb1b34f2",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.volumeMounts.name={{nfs-server-conf}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.volumeMounts.name={{nfs-server-conf}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.volumeMounts.name={{nfs-server-conf}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "48a4cb370d58d6c58cc358636d8f7c38aa0e18aef5d5a6bc242407f1fb423061",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "e4a8c1981b8401fd5cbe430eb4f070d8d61e8fa7ae52c987ea65a059727a9a41",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "a4d4d1523ffb106b834a4a3b91c25d988972999fe8efa53eaa5709604473bbc5",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "10fe8292faf272eb49da70ced7b1aee5343bbad46e83be335467eeebd67ec84f",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "863363065c4423b023262d6ece744e9c112c98a8258aad31f83ca725651f6df2",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "88cd0590fd529765f02fc638fbb9dafe26ab3f576d765dfba7c7186c141348be",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "749d50ac71b15d4ed0630f94803944c29ec3fb013f370bab34308f53d17dbaed",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "14d8c9ef86835ad7906d81b4e7ec042948cb57f01ab7b2745aed4fdd7e567b9b",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{nfs-server}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "3e903c3dea671834178fc1d550fe848b03a286ae0cef14e117e7b25e277dba87",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name=sqream-nfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-nfs has resources defined",
					"actual_value": "spec.template.spec.containers.name=sqream-nfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "2251f60ef90f286a449c6817cb1921fe153b3264e3009278524af26c742e2c6d",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name=sqream-nfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-nfs should have resources defined",
					"actual_value": "spec.template.spec.containers.name=sqream-nfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "fd933e0529cca10710cc6c5c8f5c51dcd17afc6ce8d218946a8da03bb1144d39",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "15e7c9acf0fc45e35ed71d55be8a79ca93eea41ee0bcca91b75e8522e7772bfd",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sqream-nfs}}",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sqream-nfs}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "4f945fc266869e212e6a2f8342c2bcf25809e156f5ef8ad4ba88ef9d3dfc355a",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.containers.name={{sqream-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.containers.name={{sqream-nfs}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{nfs-server}}.spec.containers.name={{sqream-nfs}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "3c83a460490aa05f688a766b8499e8772bd09409a048d204c860fc3f8ee2ea56",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nfs-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "fd571acb9e1368907a0dc0fac12756c3b52fbd83466b11c6a5459426ffa0dfb1",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nfs-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sqream-nfs_template.yaml",
					"similarity_id": "a4e56753cc5c8f7b48ef257610aa4f82ae6eec68668b088f19950d4396160822",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "nfs-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{nfs-server}}.spec.template.spec.containers.name={{sqream-nfs}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
