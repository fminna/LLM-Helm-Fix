{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 108,
	"files_parsed": 1,
	"lines_parsed": 104,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:30:25.09867+02:00",
	"end": "2024-05-17T21:30:27.013088+02:00",
	"paths": [
		"templates/monitoror_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "30b7994c161a12722f16ec70f37c163cca4f1c20936fcad9deeccd2dfcf3cf78",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "538a8ddedcc24a38555d323a8868ccbb35c8bcb938c473d5b6f49df02ee0a99d",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "430f3410fa0909d2c567cc9d3adc284f84690681d42265fd03cfac713bbaa570",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "4ac29438b3db4de75f565baa3eacf19bf843219809175eb0c49ab1579da17049",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "8259c3f30e1be3258fa53ba94ada29921cbae3f7edc6230ab95b59a87873fd1e",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "8c1b2995b09a2d61e043a740dba6c8cdd0112aa210ba035e905efcecad2f84e7",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "90164807da6e2effea3737f12c235c8f1fe75ad517f40ed9ee3d3ab8ba511d00",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "ConfigMap",
					"resource_name": "monitoror-env",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{monitoror-env}}.namespace",
					"search_line": 21,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "monitoror-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{monitoror-config}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{monitoror}}.namespace",
					"search_line": 58,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Service",
					"resource_name": "monitoror",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{monitoror}}.namespace",
					"search_line": 35,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "7edc013e21ffd075cec9292c8587473e449057dc4d37e0b89fb4fe153f3450ae",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=monitoror has limits defined",
					"actual_value": "spec.template.spec.containers.name=monitoror doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "51f25dcb5d7cce000e95bebf3ae533ba49f41888e999054d55c3406151713c86",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=monitoror.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=monitoror.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "3839ec96fec871470844aa1cb46c14d0be520a3d0b62a09961ad43294815a7e9",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "24ee99df45db455874e320eb2276c5d71387322327844769ae5ce93a81764127",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{monitoror}}",
					"actual_value": "metadata.name={{monitoror}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{monitoror}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "164c63a4017391c10ff1a1834481a8ecc4cd3b86b88e39efaa09c2cfd3773033",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{monitoror}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "d7a396da5d014f0cfd69c62bbdac22590e2d55535fa7f99959fb5668f95f0e07",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{monitoror}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/monitoror_template.yaml",
					"similarity_id": "54f87fb2c184ec66b1a65e6f320305607ac699d02096f26befb2f2a9df127688",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "monitoror",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{monitoror}}.spec.template.spec.containers.name={{monitoror}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
