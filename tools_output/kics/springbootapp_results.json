{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 97,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 23,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 46,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:27:29.355942+02:00",
	"end": "2024-06-26T00:27:31.450222+02:00",
	"paths": [
		"templates/springbootapp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "245228170d0bf0241d473ac90ef057885e2cc709c2973ceb186779f1b6a02035",
					"line": 14,
					"resource_type": "PersistentVolume",
					"resource_name": "springbootapp-pv",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{springbootapp-pv}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PersistentVolume name 'springbootapp-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' should not mount a host sensitive OS directory '/springbootapp-data' with hostPath",
					"actual_value": "PersistentVolume name 'springbootapp-pv' of kind 'PersistentVolume' in non kube-system namespace 'default' is mounting a host sensitive OS directory '/springbootapp-data' with hostPath"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "8943f05a5ab751497f8b92bea93a4267482360e4d4b0c0cddcf9c46a9dd39756",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "585dec2d3cace6bafda6d7fcd9657b13adec598cb5aac19abf9fd6787527e0f6",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "94ab4697399d8aacf928790a0771a07ae9134d5c4bcb3c89e5ea79e30be3363a",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "840350cf02688c0652349c848bc6638e252e9fbce19ef8adf346c6aa2e8f4620",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "fe518ef59c0f351ba19b2b0272d3b44450436d8f6e5a29f237b1b2b706dcb682",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "f627aae7cf9577afb93e5ae6de02fa49edb042cc73b955f0360effab251d51cd",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "7a1b938ad8188e1b01b415fcf7d37cf124ac42c7cfc897c164ce2ce1de768d79",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "a9b26b5531c4fdd84920cc2ffbbe40badfedc128c390c42fc2d698f2ac875fa9",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "9d0db66e70a84575cb4f5a277e5fdd7c77b8fd920482bc4556d8ed201f87f2d1",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "b7be437e30bfd094190a144aceaf53c971dad14e81e2dd66c6a155a6c83a728e",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "33dce7bc52c48168ac1eff2610e34509d9523149fb8a0737f8e630690ae9d105",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "23162883a52a26a6c2480010da95f2d357d435cda9e1e95eba7a1e6d07b11e1e",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "1d08724fe1f58ca8ab532d8c2c1b8a4120a16f1cb0f4112e11b35aaad501f9fb",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "c71cd370aa9c92f078a75512b048285961a1ec187654156a3b44ad1924c0fb74",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "320d5cc61704b9752c46fc2d62e7c556b7b91845467b308e86764d9d55ca4014",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "1a794ce3fdb969aa4dc3c4b5855ceeebceaed9f599e415fb00869be1f92e98a5",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "a2fd9c534c098566eaf5e0a049453ba5775c153e2e1b8d8376f6b5b5b8553652",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "339d87023b59aa2a3e665d790bc5a16e4e4657587561624c4eb9748df93effc2",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{springboot-app}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "springboot-app-svc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{springboot-app-svc}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{springbootapp-mongodb}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mongo}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "be91670f20a7409151d9a254208e3e976c961c8500df80a639b0fbec2f276c44",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name=mongo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mongo has resources defined",
					"actual_value": "spec.template.spec.containers.name=mongo doesn't have resources defined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "f9e104b81b31de4f9eba874a2d4e1ffadfce6c74d2d9bff743fda25dad5b0a70",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name=springboot-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=springboot-app has resources defined",
					"actual_value": "spec.template.spec.containers.name=springboot-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "b0944f92aa2120a22b0a6d54cdde3fc00f4af095aeab22e51e52f59cc98ae8aa",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name=mongo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mongo should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mongo doesn't have resources defined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "848eebed87193cbef2c427f3b67a47d717cf27aa0405355b9e85dbd1bad9b5e6",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name=springboot-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=springboot-app should have resources defined",
					"actual_value": "spec.template.spec.containers.name=springboot-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "aaa369fa6d0041b4293017580ea845b909ba39c0627a679ec3bb74803887ef67",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=springboot-app is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=springboot-app is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "8d9930701aa376f2540a02e5e42e8665e5ed0ef510ef199b6d74a67619e077cf",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "df3677909b6df32a06b8bafc35b0c9c872362019211d21afaac352817b87db48",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "8ff257bf839c1749b785235f37ec0298d6a09848a0e36f0dcd61529a399239b7",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mongo}}",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mongo}}"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "250f58031ffd4b4a1781d58f64ead549b6a70a77ec46489549cbbc2acc5774fe",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{springboot-app}}",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{springboot-app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "9ae414d7aacfd945d4a4e23c4677ed15cec79ee8228d8f9d7b7cc5b1513b037d",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.containers.name=springboot-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.containers.name=springboot-app.securityContext should be set",
					"actual_value": "metadata.name={{springboot-app}}.spec.containers.name=springboot-app.securityContext is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "85021524a194c908fe9864debe7a97813f242dee6962d4a54290f9723a7be732",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.containers.name=mongo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.containers.name=mongo.securityContext should be set",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.containers.name=mongo.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "1d596e4c2b69472deda4b4d8e1721293b2d7405c7149cfa7684146d70a0cb8cf",
					"line": 20,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "springbootapp-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{springbootapp-pvc}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "508cb97feaa1ee321cf002b5b2c7d29766111bbfa35e977af0a05af6a2c5e29e",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{springboot-app}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "dd950156700547cca3fe560264a5215be7c8cee002a62d992e028ac5bb9ea206",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{springbootapp-mongodb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "0a957ccc420ffacfe4a34a405fea1f4ad766633f4b7e49dcf28e254473be8ce1",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{springboot-app}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "f959522ad3cd765240ebeb1de9645ca9fba7730eecc0c31ea8b98e8e96219b78",
					"line": 20,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "springbootapp-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{springbootapp-pvc}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "81b8bf0e4c7ea0a68167b2dd3206f77f54f58b323dea96a9d5aa22dc48d998c5",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{springbootapp-mongodb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "08c853616e20ffb33c95129cc92427dc837812f41dfc9d30a8d0825eb28e87ba",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name=springboot-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=springboot-app has a security context",
					"actual_value": "spec.template.spec.containers.name=springboot-app does not have a security context"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "2500653ebac7e01974e2c54fad46bdf76bfb0ba77f255ac88c93f90950eac3b1",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name=mongo",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mongo has a security context",
					"actual_value": "spec.template.spec.containers.name=mongo does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "1576079fa17ffef0a203c2e71c0592f4d6583a5bca066250a9cd6cd809d26920",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "springbootapp-mongodb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{springbootapp-mongodb}}.spec.template.spec.containers.name={{mongo}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "7cafb45a6ce79d7123f9087bfa00df986700f30280a415a88438955c0162686a",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "springboot-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{springboot-app}}.spec.template.spec.containers.name={{springboot-app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "a3cd2514f3d2b17568e55d65558ef44b34a8e0832cbfbca8165fc3509eb19e3e",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "mongo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mongo}}.spec.ports.port={{27017}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.ports.port={{27017}} has a Pod port",
					"actual_value": "metadata.name={{mongo}}.spec.ports.port={{27017}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/springbootapp_template.yaml",
					"similarity_id": "87facfab4d84b8515de725f06f5ceba7342e2e2e2ea7581031bfd327070e461b",
					"line": 48,
					"resource_type": "Service",
					"resource_name": "springboot-app-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{springboot-app-svc}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
