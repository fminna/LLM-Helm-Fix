{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 133,
	"files_parsed": 1,
	"lines_parsed": 128,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:29:35.096584+02:00",
	"end": "2024-05-17T23:29:37.063654+02:00",
	"paths": [
		"templates/version-checker_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "2f3a7dec9bda8e8dcbcee299b8a5c50acbe31aac88ab8f47ecfca4e551240f78",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "cb423e38f09de2a8218d4ccdeeb2df3d83990ef14074c44cc337e3750a1b67df",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "4f8fa8d43d480bdd043c793d958d948c0290916dfc4f99ec52ad04e3afe98561",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "a28d456cf89f5180a686b4a7af36fb3ecf7651558e4233e2217c936765d3b371",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "6b59b9d5aff5d86fcb38970d345b9850d017729dbd6730b1af630193d280c3a5",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "a6b7faf7e4959beecaf70cd0035c015b2b939cf97221fa7babb8e93c346f7ad2",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "70c02e468561614e16c2ae2ae0c358f995eec93129040f640c569e419d1e0d24",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "c4c924a78859df8b27576fd97cd785b91ba1c352ca1ccefddc9b3e102cccc5bf",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "1b7c76c122b4f8dc5183ee848a64d7964a375210d5851527d321ebee64c8c969",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{version-checker}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{version-checker}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "ServiceAccount",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{version-checker}}",
					"search_line": 12,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "084c519c44e7e5d1a23e6165df4fca7d8d0c7bd8ca9bb66de6654654c53f5169",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=version-checker has limits defined",
					"actual_value": "spec.template.spec.containers.name=version-checker doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "adc4e5195a08d457d445615926e3e6195392a19ea8999661c826f56156df3186",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=version-checker.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=version-checker.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "36c7f571ebb4f58dd939939a296a50a259883139280930b71463c6a8a4a3dadf",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "ac63e09e420285d16e429a669a8f20e60b00a8464906245b5f30457c179f5735",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.metadata",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{version-checker}}",
					"actual_value": "metadata.name={{version-checker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{version-checker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "dcb46662533ead2b5a2d481bb4bb9b30a2bf29d772c0633f9dec18f11e3ed0c4",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.containers.name=version-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.containers.name=version-checker.securityContext should be set",
					"actual_value": "metadata.name={{version-checker}}.spec.containers.name=version-checker.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "72dacb4ac39c09fcc1974bee61b4f10a93de4f7b0896b9f35225361e81be6d04",
					"line": 12,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{version-checker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "fe30e4557328cf68fddb5ed958071081409cd813c56023d3e51dc994900c7881",
					"line": 12,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{version-checker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "312dd52b5feb26a8104ba306836f23f0bc1b412b724969b946cf593801023d96",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name=version-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=version-checker has a security context",
					"actual_value": "spec.template.spec.containers.name=version-checker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/version-checker_template.yaml",
					"similarity_id": "c33184c90b8d47fb2fa6c0bd38d915919e5ed42c4975447c3346fa7b02e55c30",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "version-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{version-checker}}.spec.template.spec.containers.name={{version-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
