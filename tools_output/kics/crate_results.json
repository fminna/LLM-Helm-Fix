{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 120,
	"files_parsed": 1,
	"lines_parsed": 111,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 32,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:38:18.357799+02:00",
	"end": "2024-05-17T22:38:20.268143+02:00",
	"paths": [
		"templates/crate_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "0568c95d1c903d9213e3201ff6e0e7c9531fff56d1466e78875491519070c2d2",
					"line": 56,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "2ac53b8ba8cb9213dd997c16b1b7d080a48f4b4bfd3fc24491ae187f59900235",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "84ab7874e33d4ee87c4e1d5e0d1fde402423fdf77bf8a07adfe3f10a69c4bdc1",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "bb6a5ec68584de622732a0ea0ded46b86ff704f4a298737d67b6dcb48960d7ef",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "8788383b20e75773f76d9b19031616c9c552271836563deff7c25f5a145366e0",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "2580683a21858bc0ac7a5573ae93de5f48b3dd4efed9c6f54bedfa00ed17438d",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "8262a6d9840a19b9155bfab41ab9c2ac214de6ef8ad31df4ba1a816c99129888",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "3ad53db8c6259d53efeb61f363066b97ad71df8d33ce879139e85dd3dd223608",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "6f837fbcf5c95bfc4e89ae1defcd633d584d9396b21a6c4d751d062fb700481a",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "412d27758867b57604a942baff4c7e80e25dccb13a1ff57aa93bddb9746b58dc",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "e23b0918b6bab6f64ff721be55a562fa6025683c5449f948b532889dc5fb0c52",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "e862701bc263ec8b0052f2d03d52360766e97896d3bf84e73c48d57a9dea9cb9",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "9cc969318bb2f91990dc02968a347913bd935ba0d374873167cc912c8a28ea9e",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "a17ef3ba500a926bf934c8169cf2b8a5c8215cbcd2053dce6fc3656e998800e5",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "1160bb8f77f3ccd50d8831a1a9b9c13a4343f3b765ee2ff2fd020078d49fd648",
					"line": 49,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "ab84076330460b372b2682b7bba6bc848eba65c25d5a0e29291c858cd5c64ada",
					"line": 11,
					"resource_type": "Service",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{crate}}",
					"search_line": 11,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{crate}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "b9fd9de2f931a75f01ff43f3ac889a16ac5f26015ed89ee1c7005d7becbdda35",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name=init-sysctl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-sysctl has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-sysctl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "e162ceaa9f34dfb9b0a51ce5c448bd13f831ddbfd795c61e72510424c0354dff",
					"line": 51,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name=init-sysctl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-sysctl should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init-sysctl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "25c3e917f4735b2ac1f5920d47cfe2c5f29065f00d3b5c7068314aa6821091d4",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "838ef1fa6f11c9d7b09673d3ca13910389206c37523086bf285bfe8047d55ce5",
					"line": 52,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "9b1f263ca83c1f871b038c9024335aee1c2eaff1fa44aa8320ef16dd21378bc3",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.metadata",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{crate}}",
					"actual_value": "metadata.name={{crate}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{crate}}"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "9b1f263ca83c1f871b038c9024335aee1c2eaff1fa44aa8320ef16dd21378bc3",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.metadata",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init-sysctl}}",
					"actual_value": "metadata.name={{crate}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init-sysctl}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "c7bee8d4cf3659b7d0ce1d712919e8946d35f9c2b8823f7b29cd1211ea661edb",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.initContainers.name={{init-sysctl}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{crate}}.spec.initContainers.name={{init-sysctl}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "6ea25e5afa56edd6445c141201ebb922f34cc2e975cab6962c232edc60275059",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.containers.name=crate.securityContext should be set",
					"actual_value": "metadata.name={{crate}}.spec.containers.name=crate.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "431131295d8d8e6dd4a292d4dc4097adbae5f10f52ca4554acd7eb071143c989",
					"line": 11,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{crate}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "588349292b43998e0449fe0b75ecbb5ab2cf671f4649375b2f2128f9f5d425e6",
					"line": 11,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{crate}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "5149921a92af77c7da6a20b0c2cc0504699ea7d58d1d5e974c5a34384b9def2d",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name=crate",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=crate has a security context",
					"actual_value": "spec.template.spec.containers.name=crate does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "efe19ed9f414d893b3b5f35f1d2300c7f7de903bb45022a7a59cf0023c207951",
					"line": 58,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.containers.name={{crate}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "649b99f724bb517374823e30017f7f04b9257b12ccdebb4e24a5b4ed4e3f6385",
					"line": 55,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{crate}}.spec.template.spec.initContainers.name={{init-sysctl}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "5f009c97ba7dca2197a9012b96607e9cd8f82cac482fd3fcfc862192f18777c2",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{crate}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{crate}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{crate}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/crate_template.yaml",
					"similarity_id": "d27ffd78ae8293d72cc33b78adb2cacb41a0ac59ac48fa0cbd4665a0a650abd7",
					"line": 37,
					"resource_type": "StatefulSet",
					"resource_name": "crate",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{crate}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=crate is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=crate is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
