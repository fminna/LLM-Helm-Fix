{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 821,
	"files_parsed": 1,
	"lines_parsed": 818,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:08:38.960645+02:00",
	"end": "2024-05-18T00:08:40.915364+02:00",
	"paths": [
		"templates/prometheusalert_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "05f0b09f595f4b76328b0563f920c0f059038d84fb5865597642e6b2246af3f5",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "c5d4ccbe4721f2fe51b846d11c0be582f22eb4896551dd70cd0e58e6681cff12",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "4adfd13a9053c4112c903f329d3666a18e2870aa81a61f5f61a4f2f65cd46842",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "13ef365bfd5159967d608987123be2c7d0e5cca1a6c9cef5e77fe2d58c3249df",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "7cff9d6e9a5f9de47d4630712f9b39cc908a6051b885046c64e5957502dcb411",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "8a122c5ffc837e4a045d2817e5459553d3ed896b12af48201906e2c91beba73c",
					"line": 762,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "e17f8919eb1bd1b99fd8ad82b1a584f311e4d56cff57093837a7f8dce68fc2da",
					"line": 719,
					"resource_type": "Service",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-prometheusalert}}",
					"search_line": 719,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "32e4fdc31f4a8609f4cee509bbaf46951316d77eda023d08c849daf2b845895f",
					"line": 742,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-prometheusalert}}",
					"search_line": 742,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-prometheusalert}}",
					"search_line": 12,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "288e9ef0c05b8f5a1d13a1ca396bf59020b03b49968ef5cbd0275d5593426789",
					"line": 766,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "a465d9b7404c86aaeae57b6e97a946ca0717c7ff7e8397d7755b4f28ea61ffc4",
					"line": 760,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.metadata",
					"search_line": 760,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{prometheusalert}}",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{prometheusalert}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "deac72b72c98165f95c35b7325949ba3d0925978e0d0b895f073819b270c46b6",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.containers.name=prometheusalert",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.containers.name=prometheusalert.securityContext should be set",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.containers.name=prometheusalert.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "ba59a6e6d28c7630d39c03f990c0fbf199d55cd4d5d0f3ea31185243b16465cb",
					"line": 12,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-prometheusalert}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "46847aff6eee1d7cd606b069a7169960d1ceaaeec27e7d11b48d06cc875ab6d6",
					"line": 12,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-prometheusalert}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "7ed0e660acf6f6219444038c6e19c31d05d48c76eeb691aa68213e487ced2923",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name=prometheusalert",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=prometheusalert has a security context",
					"actual_value": "spec.template.spec.containers.name=prometheusalert does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/prometheusalert_template.yaml",
					"similarity_id": "142f3d3d4ec378f0bb398906e17a6a35a8ae2968570a4ad38a5ccc18097c8e68",
					"line": 764,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheusalert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-prometheusalert}}.spec.template.spec.containers.name={{prometheusalert}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
