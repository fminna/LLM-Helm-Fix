{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 75,
	"files_parsed": 1,
	"lines_parsed": 74,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:11:23.311577+02:00",
	"end": "2024-05-18T00:11:25.220071+02:00",
	"paths": [
		"templates/upgrade-storage_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "84a2cdb9010affd197c4d7775aa3655f4f00b856b7c911eccccee7766ba52a61",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "864b035468c2a2d3abd04d6e24527335b0c249dc8031736dc7045625e0793738",
					"line": 18,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "6e50aca516c7fa6669ac9ddeb3c2c5c2afcc6eb5aab684096ecd30bab48250a3",
					"line": 51,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "a18a9bc37031c17ddf27caad4ce5c1be42c510faa5448bc784f71aaf303c0a24",
					"line": 53,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "320d859ce836554d4853e17697c07dcd38557a4028d20a7e0de0bfd92302a91d",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "3f1c8bc61b3577e4b35edcfb5724bb1acc065413b63daedf9e11521dd187e469",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "3dceff8e5212cf0c8b9d199825c9b525e0b1819eaff350b92195cfdae6c176d6",
					"line": 15,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "eec8b2bb2241e660dadbd987adaa4467d5cdaeaa07320ffe896452b7f2e81862",
					"line": 51,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=upgrade-storage has CPU limits",
					"actual_value": "spec.template.spec.containers.name=upgrade-storage doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "2ab022fac06fa6e8b02c865879afcd5b83a16ebdf56908c05f72fa0e7a11a9f1",
					"line": 53,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{upgrade-storage}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{upgrade-storage}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "767030d9f3363fb1c367a04eecbd703ad022823df7f173e18eea16b34fe16d2a",
					"line": 23,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "eacb0086993c7b596c0492250afb225495212d5cb2b07d2c1f135a98ba59341b",
					"line": 12,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{upgrade-storage}}",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{upgrade-storage}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "16d6643f4e38f10b5096f5e6b0a878ccf082369c63a12c38db00271c748ca9af",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.containers.name=upgrade-storage",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.containers.name=upgrade-storage.securityContext should be set",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.containers.name=upgrade-storage.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{upgrade-storage}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{upgrade-storage}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "04dde638b0aa08f98f63f01c66c101e6ddd87ec226fcc8183532219d13cc4222",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name=upgrade-storage",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=upgrade-storage has a security context",
					"actual_value": "spec.template.spec.containers.name=upgrade-storage does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/upgrade-storage_template.yaml",
					"similarity_id": "94259683a2ed3f51f1cc849964d75f58cf75e7d174bba2bae81df24ee6874cef",
					"line": 21,
					"resource_type": "Job",
					"resource_name": "upgrade-storage",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{upgrade-storage}}.spec.template.spec.containers.name={{upgrade-storage}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
