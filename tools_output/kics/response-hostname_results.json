{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 107,
	"files_parsed": 1,
	"lines_parsed": 103,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 37,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:20:23.924365+02:00",
	"end": "2024-06-26T03:20:26.068684+02:00",
	"paths": [
		"templates/response-hostname_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "ddd1dad6fe9bb5c35429ce2cb87f515f6c54702bde39c1909c0c3113f5145dd6",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "5dcf6ed25f9e66f3f1cc978a7eefb51aca98e0960ea83be9a2c145bba7b51508",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "66f139b3439cef2399d8142627d92ff90831271c9d8214e768f1b40afa7ae228",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "24b10b46d387ef0b4d0643f873d4cf4e4f52643719639ec71a1251afdfbcec2a",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "8b58aa034cf49cd179400f9573a0e430eef846648dc24bf7de30ac705b19d2c1",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "3c37daff9b3af44617d759faeb97229b25356a44f194bf43e54b11cd6a6bb710",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "72f44b2d3eaa897fab645bef1efcb8f274e11bfdf6981cdb717ed316549c1bfe",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "20845dbe0f6c5635db1e0fe8d5cc3e31703c2684b414a82cb8063a91cc13197c",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "4c55f572aa19b5b6fa8204cc522e8beed83936d1bb0f49501e48e9af6f805a8f",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "439eb8dc33cb08a644473294e8fa64ed52b9513cd6f27be4c2e9be6ca1608a36",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "f188d8b27f67b8c757306061b7b53f49479e4af01bb40f984efcb7b99ad44791",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "aaa9d7b4537fdb5a78a508f3884bdaae5510ef02ce83cac56db5bbea5816554d",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-response-hostname-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-response-hostname-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "01844866e5d84fe11a8e46c3f614de000d9b05003498d8c43b1108d14b944576",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "d63a260aa577a869116b5f996f16b10d467574e96198afcc3223dcba6e2bff5c",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-response-hostname}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-response-hostname}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-response-hostname}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "af74478af80349701dea20108f8613f84c9cacba318e1d7e898940cab6ba1a45",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-response-hostname-test-connection}}",
					"search_line": 91,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "71845b67b51192a40e2e9d84738dba5ae9d659490e2994c84c8db85092e72e26",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=response-hostname has CPU limits",
					"actual_value": "spec.template.spec.containers.name=response-hostname doesn't have CPU limits"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "4da5cf9f68b7218b9a93e34bbd56903677bbf79967fb5ec7de400ae783a4a9b8",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "ab5e0acfe032d0673b91ceafd4ded10c12ea6c9dfe602ea3d5547c4735970793",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "5d5e8d125ccbbf82b101eb8f79539ed7cfb9e18a16ec1467e31fa35de7c265ba",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "17f02a50d81eacfa19db6aa2be7dcfa0b778452bc2b33e02a244406832cf676a",
					"line": 103,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "f36194757ab238b13167453499d54d3a46f56231ebb5cf983e02c9339e1c42fe",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "8b5afbc72b389ce08632334cba311a16b0582ba5b0b0e30e271b644578e92d72",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{response-hostname}}",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{response-hostname}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "4ce4f565ec958e9076903a3789978bda453808555c5ef106405b919872a5e3f8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.containers.name={{response-hostname}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.containers.name={{response-hostname}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.containers.name={{response-hostname}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "c93f406d7b3fa427ebf70db3dfc770137730d50bbab84cac816053944653365c",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "2abdc3f6ee19c46c0d7bf87ac33c491a933546c27727162019382b4ac07ccbfd",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-response-hostname}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "16af289a6ca6d03c36c2379fcb404e1b5871432bf000fc11d55df6cb8d19bd8e",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "0ab539ef5ca72e044c3f2a5abdee4bd4ce660342cf3f65bdbdf1de8df74f6683",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-response-hostname}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "c0484b802cd3a8caf6d1c3ace4ed015e8460a2d655e6f3f5bab696bc88eede2f",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "514d4bf31c9c128f881edcea3ed13fd42fef04a543043e94fb86e6be830f10f8",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "7dc3f89885337a93a08991b72105438c336fc290bec3a6216f1888189002711c",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-response-hostname",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-response-hostname}}.spec.template.spec.containers.name={{response-hostname}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/response-hostname_template.yaml",
					"similarity_id": "bcb46ad6cd380dad98ad3272ccb7c7bfca10e5865c9c7363d9408c777319c2e2",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-response-hostname-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-response-hostname-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
