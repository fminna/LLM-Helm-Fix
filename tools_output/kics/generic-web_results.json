{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 74,
	"files_parsed": 1,
	"lines_parsed": 71,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:10:48.230796+02:00",
	"end": "2024-05-17T21:10:50.336667+02:00",
	"paths": [
		"templates/generic-web_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "e6e3bb7a9bacd4b0338790f7c44d6d6b4d80ae1b58f3aa8ffd395df5d051a3ae",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "54c74a6786ae22a33646855fe5986d35fd48cd41b3dec6a6d60f748822970074",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.volumeMounts.name={{conf}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.volumeMounts.name={{conf}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.volumeMounts.name={{conf}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "06f580c2a31ff809f659af5ba047b69e236e7145c82225d8602c4052099a94b0",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "cc9039c776a87bac0886b3ac6782305f4a49a842094400e585a6f66db6641751",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "ff40258c4f2aff0aa126efbbcdf66aa9deeeb659622208773731271bbd5fd132",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "ba5d64304602a3fd19507f55fdceedc8303679679cadf32f68688630d85e579c",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "f18ebb559cd0b9c0da0c909253528f7a53be6d3c6a9b2a49f0d87a05655639d1",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "b7decbda6555b9e1d6a61bf2964d79616f804fe2b829e731fa27c3e893b3e74b",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "9e6ebd4fc9f96c08d661f7e84d8e557041eded1388d63600260ffa98f0b772f6",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "b810d6867a20ddcb61d44f5ba10ff4c546c6c32ea028c283bb1179fed0ce4461",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-generic-web}}",
					"search_line": 38,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-generic-web}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-generic-web}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "e939951bd2f1a31d75a07978c033cb5b54d29941721ebb2dba43677c1d954cc1",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=generic-web has limits defined",
					"actual_value": "spec.template.spec.containers.name=generic-web doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "01fa2e06bc5325a7cf642a6efa5caa9423135cc4254b0bb30a736ee2f28fa77d",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=generic-web.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=generic-web.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "2252de61bd6d79ebca2a38c863204edfbebfe6c0d8fb03d3336da32559c7d8d1",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "a7fe423ffcf41f4c4ba3467c9f8a669463df724e9c06cd29efb8b68f23f67663",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{generic-web}}",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{generic-web}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "c21056fda1b75cfb53daecb50184ba7779686d6988d4668fc43f18838e1e2e71",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.containers.name=generic-web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.containers.name=generic-web.securityContext should be set",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.containers.name=generic-web.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "ef6110d313952f6189f1a2879f4c12f3c64ec01a0107f4f7250c231cfa93cf07",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-generic-web}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "222ddaed960eefa4b65a483bd6341f5b1c176d8257eca6e1cdc640bb4b525d0b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-generic-web}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "3154e3267391ede67b05d7a93520773b309c4f789e90a6fc5045e8b86ae95f35",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name=generic-web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=generic-web has a security context",
					"actual_value": "spec.template.spec.containers.name=generic-web does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/generic-web_template.yaml",
					"similarity_id": "5d2c9c66fdef8b91e9fba6aee06e36143c6dcc9cbb9bbd2f70c48c820a7bab43",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-generic-web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-generic-web}}.spec.template.spec.containers.name={{generic-web}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
