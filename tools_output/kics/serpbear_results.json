{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 276,
	"files_parsed": 1,
	"lines_parsed": 272,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:55:50.601944+02:00",
	"end": "2024-05-17T22:55:52.260301+02:00",
	"paths": [
		"templates/serpbear_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "4396613afdcbb2a34d9a734535e7315c4ae2b2a59d65d1cf880c2190803107f0",
					"line": 177,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "80f2ae9a25ce86a27ee93970a6e68af0b557584cb209242b982e6fe28b8a1f04",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "da73227aba491ff955e67aacb14d447ea204b7d7d2bab1252afeb0fba0185a11",
					"line": 189,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "27a6cc717f17efca4c2a9f3b2ad903c1918ec6fb79dd0b3a363594808ab2176b",
					"line": 229,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-serpbear-serpbear-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear-serpbear-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "3ec9e9507de8e1a276ef545174a3bbab20b5593fedc5b64069a93205d1c175b6",
					"line": 52,
					"resource_type": "Service",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.namespace",
					"search_line": 52,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.namespace",
					"search_line": 81,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "608f3f7ba07700c0097838273082603cb051dc3d6e651ba54401a886b3a4cf66",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.metadata",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-serpbear}}",
					"actual_value": "metadata.name={{release-name-serpbear}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-serpbear}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-serpbear-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-serpbear-data}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-serpbear-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "ab7c0a0bee983ec1549c12ca968c173ffed8a008b9dfcdf5634d6b7197199a7b",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-serpbear}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-serpbear}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-serpbear-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-serpbear-data}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-serpbear-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "5ab1f958709b4a6a7e6cd80661931861fb8dce55d4e921497dd6491974705786",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-serpbear}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-serpbear}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-serpbear}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/serpbear_template.yaml",
					"similarity_id": "f0854f7c737e5f28e673f3d07aa3cbf8e53201205a1c779c45f2c4c122857535",
					"line": 240,
					"resource_type": "Deployment",
					"resource_name": "release-name-serpbear",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-serpbear}}.spec.template.spec.containers.name={{release-name-serpbear}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-serpbear}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-serpbear}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
