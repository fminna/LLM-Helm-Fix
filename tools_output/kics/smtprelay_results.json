{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 274,
	"files_parsed": 1,
	"lines_parsed": 266,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-03T16:32:30.764276+02:00",
	"end": "2024-05-03T16:32:32.704166+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/smtprelay_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "ff5a3f60917db15be0b59756f914938f31d78e8418123123ee70183ecc46e8f2",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "209b3d55be4a3e26f9d2d9f79146000517a5ae19d66ae5d17eae02d046a4904f",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "31a20a27ec8c788ea788450893ce5c6d721f8ff695aec6b5a3bba5bf04f01b77",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "402ab4e251fc4428a482d1b76053fc4dfa00c8cbc736ded9fbb13a4c095eead4",
					"line": 176,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "fede5338b60e38c673338c81d93410a780714db21385d86c311dfc374e2e71ea",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smtprelay}}.namespace",
					"search_line": 159,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-smtprelay-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smtprelay-config}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "d83478525ad9b105d7b4e1101708e440c27ee3347bc2f1be0d217f5416465cda",
					"line": 124,
					"resource_type": "Service",
					"resource_name": "release-name-smtprelay",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smtprelay}}.namespace",
					"search_line": 124,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "6b8203baef850b2f878b3776c706fe68ee9e1499c1d376503bd6aaccb7f2c0c6",
					"line": 222,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=smtprelay has limits defined",
					"actual_value": "spec.template.spec.containers.name=smtprelay doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "05497c020a5485571f92dec03e3463a88cef6ab3297b37ce21315f3fd73d96fe",
					"line": 222,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=smtprelay.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=smtprelay.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "bf755593d9d793a0ec64e922890bc6c7a2b54384fd94b72c6c17d8e0c45e1785",
					"line": 194,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.spec.containers.name={{smtprelay}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "76c136b5a30158def6521b33355e926a9dd94f6500a71720d6408db7537d1c42",
					"line": 172,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{smtprelay}}",
					"actual_value": "metadata.name={{release-name-smtprelay}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{smtprelay}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "865fbe08d9943a402db5c0dfa8f77ffaa1b6e38fff3115e2ecc3554d19fcde1a",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}",
					"search_line": 159,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-smtprelay}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/smtprelay_template.yaml",
					"similarity_id": "bc163285a91939304dbab84ed2c3b73628b7e143617a23a1233c50f13491aefe",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-smtprelay",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-smtprelay}}",
					"search_line": 159,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-smtprelay}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-smtprelay}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
