{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 367,
	"files_parsed": 1,
	"lines_parsed": 327,
	"lines_ignored": 40,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:27:38.293508+02:00",
	"end": "2024-05-17T21:27:40.221609+02:00",
	"paths": [
		"templates/multitenant_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "f862fb00e7af445e5228e989b8bfd0901ccfcf33aa7fdbcb737789f9428835ed",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "0654697e5116289329b3b0b42406a731f62d57145f458217867764e9c35a0e6b",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "e5f846f62b5fc42322a1141dc38de068ce090e1d9863f4c425c7e9103c5e78cf",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "77650d4c8e3701396b193a5ff2f3d945f600c9dd48ae331131861ff75c609bb7",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "aae6568280086e0c0b4e5a52c9513aed52a87e8202e34910c76492b863f6cf8f",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "804efba370887446c9ddf8c6bb95f2573414221fd9410aa7d558a08ea8dced83",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "c343d684cc67bc8318547c4f018dd1fe116e75ec8d45200e80d46c4041b0a531",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "fe04ba166b1ec054f8a28fff35aacf13cb3fab3e9035f4a2c72734dc479c1952",
					"line": 166,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "f8588023c26968085140dc146a2c8e8a684c655407906b9d3916b2078ba5d3d4",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "e7603b6a8bb083e4f20c8e0b10f5660a8953ac2f25d23f4dbd64586163ee4847",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "0b82b99efb2396ec58e38493b62f1f64cb3064500e260a7a2423be102581b17a",
					"line": 159,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "39234dd91901a7bc0c2410c80585e96f5399bf614646937c19ff6b89df15c09a",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "9eca2e927c0a067c8f1e5e9aa92403ac39bda0537367f106f193f922bbb9c057",
					"line": 157,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.annotations should specify an AppArmor profile for container {{test-from-helm-multitenant-repo-networktests}}",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.annotations does not specify an AppArmor profile for container {{test-from-helm-multitenant-repo-networktests}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "58fb8a95a834fbaf7fe8d3da3fafcf20febf6502dd3bd39dd222000a4704af02",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.containers.name=test-from-helm-multitenant-repo-networktests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.containers.name=test-from-helm-multitenant-repo-networktests.securityContext should be set",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.containers.name=test-from-helm-multitenant-repo-networktests.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "6944964d012ca8aa25bf18d9b9bee4f35a3131bd8ce74321e66fb39d030c58b0",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=test-from-helm-multitenant-repo-networktests does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/multitenant_template.yaml",
					"similarity_id": "6405328c54ec592fd4e3f1f9bd2afc61684c6648c13854e025319762eb3920f9",
					"line": 168,
					"resource_type": "CronJob",
					"resource_name": "test-from-helm-multitenant-repo-networktests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{test-from-helm-multitenant-repo-networktests}}.spec.jobTemplate.spec.template.spec.containers.name={{test-from-helm-multitenant-repo-networktests}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
