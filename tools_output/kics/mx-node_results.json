{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 205,
	"files_parsed": 1,
	"lines_parsed": 192,
	"lines_ignored": 13,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 44,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:18:41.123796+02:00",
	"end": "2024-06-26T01:18:43.19734+02:00",
	"paths": [
		"templates/mx-node_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "3a96b02cf78097e8a5eb75ac1675a46bb761bf3d124fcff422be35f041222e48",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "96e513cb16c6b5d2fe5aaf8e13a8e21fcb58d87a89e0a9fd0558a0a54e884cfb",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "0b331f18734b64b8bd6b568189c03e59f27a4e5e107265b9bcbc5d661d32cd12",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "b02f05db401d79e7cc40e5725f679565a34ef7d5eb76e91247e9a0d56e3f5fbd",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7d5c57176106f5c6084a11c06248c3bd52e08efd2ec79d919cddd2eaaa87450c",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "f0dfc3133a85aa4fae1de589ccba89611c36dca23784d6e829550cfc2b31c306",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "be53186707cb00c475b8c04a7bc7774b09ee95affb75eec07ca4bfa865b5d252",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "827a92917ca137e20abfd5cff7ca7694b0b3aadde553d7add704655a148954bc",
					"line": 88,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "c81fe040cbb0ed17abbbe252d1251587ccbb8759dd35c42870ba55e5588200d5",
					"line": 88,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "e484632faac414e29ee5082ef25cc1030fb5fb63a2da027726dec4d47e238a80",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "55b777386b95326529e298cad444ff9a093a5bbd9f25ecd519942b85675bb422",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "c8746c0963aeb93ead5f565089ced65d03e139296aa28215f3b423e41b03ebf8",
					"line": 88,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "3e5dd8e7dfd6bcde782b5b5205ea5fc91773c0f7016c5e58b917d31a1eba0447",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "584a5e16f9e81971250529c0004495e02e1c5cdd382f5a876a82cee3f797fdc5",
					"line": 88,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "da306e8a07abb38edf0b84078e66c13986f4f2ba709823b4893bdd1ed5d0ee00",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7b5c3aa0435c80b581ac2fc2b6a90083e6c6f0026917f4ba370dd086a82aa104",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "2359985043e52befd3d4ca07fae160b4787e70f882f4f6a44842a4a0c40972a8",
					"line": 198,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mx-node-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mx-node-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "f577d3cd967e7d45b59f016003e9cc7a568cdc4a11c7c981ebd00d7bfdbc4883",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "050cbe7358b96567caa7eb4078392cff55a704fb8c0c035ee7f481628ef37845",
					"line": 198,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "3cf0790d198e327a94d3cad7913bba0c9a6d1dba8bb5b14cbf8f35fbb56d37ec",
					"line": 64,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-mx-node}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "d7d0d0da0fdaf32a1e09f1b19b8fa96bab291b3ace77b69d2f91d60f51aad8ec",
					"line": 41,
					"resource_type": "Service",
					"resource_name": "release-name-mx-node-p2p",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mx-node-p2p}}",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-mx-node-api",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mx-node-api}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-mx-node}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "37c42ad761059dfcce6944d8c0ad33fa309b10f6d0474a59e455548176b510a6",
					"line": 189,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mx-node-test-connection}}",
					"search_line": 189,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7ff34663a9f7fe614a572acee28ba6761fe676acf06ee89b30d070277a5c3ab9",
					"line": 171,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mx-node has limits defined",
					"actual_value": "spec.template.spec.containers.name=mx-node doesn't have limits defined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "ce03017c7fe76e05c2fc27e278662b0007284d802c892660a8e228444a8eb8cc",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "d45eb040e3a1374da63325c6e6efe1310e627157cf1f8b6077b5c68071ff97a2",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "e6004984654f921c5bb8fc783461f4c790b4cedaf844e89b104f209337ece0ce",
					"line": 171,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mx-node.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mx-node.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "3742dcfa3c6c407624b5ab12de87137b92da22effcfb0689691472a36ff129e8",
					"line": 92,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "6f9365597d43820152d1d3411f67946031223d5ee29a01c08052d859083ffe40",
					"line": 201,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "5b5264c6c95f1e5371cce8f8566c165386e96aa554253b503d84d29837a1469b",
					"line": 189,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "465a195e9b393b02f3b8fdd7b6b52bcbf43de7b4efd8a0868741d7cf28047d2a",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mx-node}}",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mx-node}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "67e536fa9b4c465593d5a04fed635657142457058b58f3ea5b5976128097974f",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.containers.name={{mx-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.containers.name={{mx-node}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.containers.name={{mx-node}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "918f59425fd886d8eef94aeeaed133739374db52778c013475adef15c2696327",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7110c433ee6011379392d1d475dee0c7d1833825dedfe7f1fe0e3aaa2a46e8cf",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mx-node}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "968b0b95ab73c510d86ffae3568306832af6972079f7bb14bed1ecbb8a7a0e88",
					"line": 189,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "aca2bc56960e67f8e5b7eb7451cdff27ab7353a6c810ed9df99ab86b6699c0a0",
					"line": 189,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "8c60384dd2c1743e0b5447a88e19070fe34c068cca2cab5958cc074b701150cf",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mx-node}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7f8ab45b8f905c3dc388d7d94cc6c9539d67243563720c9ef636f9df5129e5e6",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "6947f684bf173920c7805232c57588fa1a2351e8ea227449535389cc7a875037",
					"line": 198,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "22a4f579a7485bb0ed1c57d156d2ac905876eff0d60c8a5b8f761685bd45c137",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "release-name-mx-node-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mx-node-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "1bf49181a2d8bd8368e05b689d07ed05381ecea1043877f68a035aeb273d38ef",
					"line": 89,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.template.spec.containers.name={{mx-node}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "75168f95f4e954a20b9ea7a941ecd8f0cd95b21e8c523cb13120621c455e799a",
					"line": 49,
					"resource_type": "Service",
					"resource_name": "release-name-mx-node-p2p",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mx-node-p2p}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/mx-node_template.yaml",
					"similarity_id": "7ac2ef17fc78c26480eaad63f8ecf99d5efc65215bf8f7a897ac935e321e8291",
					"line": 183,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-mx-node",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mx-node}}.spec.volumeClaimTemplates.spec.resources.requests.storage=500Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mx-node}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-mx-node}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 500Gi"
				}
			]
		}
	]
}
