{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 225,
	"files_parsed": 1,
	"lines_parsed": 220,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:44:00.006597+02:00",
	"end": "2024-06-26T01:44:02.075861+02:00",
	"paths": [
		"templates/databend-query_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "f0809c790c449f8c4b70b25b9b18ebbd4940a2a82d3216830d38ccd3700fd002",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "35c4ad3face9ac1c2e14ff11414185f39780e3bc66583bde3f93a54fa367e4ba",
					"line": 218,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "876760dcf837422befdf14873a46147365e996bef525211c5442d6b03408a7e1",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "0fc42a24608ba5e4c2fbaffa00a3536299aaa9fcb487a09db558e18b8d0454cf",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "674665d7b433df83be3626c314dea976d56d6316ed5a04e86c7611284f58dbb7",
					"line": 145,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "9661de5e089d102898dd8c461940d7aeefc20e4fafe3074636fee9cdb380c702",
					"line": 145,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "a7fcd561f882bcc10a6570a539be8a1e236830ed825d31bd0f6108acb8b850ba",
					"line": 145,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "7bb9c0248f83278ee929fa1bf940a9ea38f946deba5eac4c098660d2f1178acf",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "c018b43c0d2687364da3b38e72e8852b32b79efbced46e357b41620aabf64903",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-databend-query}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-databend-query}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "f10455d8e77dd29cc2c80bc17c641c9f8a12fd90be212f3b8e9dd6e5f6413e0d",
					"line": 117,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-databend-query}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Service",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-databend-query}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "2afbf1f823f46259a719525c7d25ae8bca053e5c837fcc91478378a482ab382a",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=databend-query has limits defined",
					"actual_value": "spec.template.spec.containers.name=databend-query doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "f8ee8ae153d8a794c157d59f99930b8b8b44f56518a8ae2889e2bb39ca450bb3",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=databend-query.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=databend-query.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "38e695801f1867452b87c82b8d0cab5f65b5e938c85e39bacdfd94d45f23ba4b",
					"line": 153,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "667d99e028d7098c7a14ecff5c04c262076a7ef16a8bbcb972c210aa19ce685a",
					"line": 134,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.metadata",
					"search_line": 134,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{databend-query}}",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{databend-query}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "bbc40cc9b811042fb696f592e0ac831339a056e01fde62940bbb7624c0da1003",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.containers.name={{databend-query}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.containers.name={{databend-query}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.containers.name={{databend-query}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "8b47a637f0164eb87475615abd9860d42a84f16b3c03f7e342a4a8931c15e6c8",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-databend-query}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "4b008d82199719aff726cc432b6985385e7020967eae9212fce4bd68345d8476",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-databend-query}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "2764221ba7db3ba32bd096d379445af77c5564f4be0e6d247305877295ee3587",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-databend-query",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.template.spec.containers.name={{databend-query}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/databend-query_template.yaml",
					"similarity_id": "0aeac333792e8cd85d9d26009d1e279fb612b2ec2e32f3618b69fb1542a02f49",
					"line": 108,
					"resource_type": "Service",
					"resource_name": "release-name-databend-query",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-databend-query}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-databend-query}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{release-name-databend-query}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
