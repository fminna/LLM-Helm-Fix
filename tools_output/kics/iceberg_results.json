{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 146,
	"files_parsed": 1,
	"lines_parsed": 142,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:44:14.021615+02:00",
	"end": "2024-06-26T01:44:16.15255+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/iceberg_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "47566b060559545a6220357379361ae6276a84d30903809112b80ef305a997cc",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "33fcabdd1dacbf653f02f0b220c19f97753b08d1a9dd017952d465f386a49baa",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "acb53d26a1274aa3fcd14fdfd09fff1e5c4c1e23f96a80571bbfcacbaaf6b933",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.volumeMounts.name={{iceberg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.volumeMounts.name={{iceberg}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.volumeMounts.name={{iceberg}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "31a5af45b5826fed19ed39d0cb3c02d49c5cf2ceaa846047a18179ed4b3c164f",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "2606af66d4a1328a8eabef14eaf7e8d84c17f02a3d2603819f5da96ed2b5ed3c",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "89ac8bf51ee17ae9fa60ebea3942a83091aa21125f3fd0fee01e80a208ba9ff1",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "d91ea21b6b5167dc772f29f55a5138398586b74efe4074c24161b9cadb0dc069",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "0d46031c61add4b6f57d8ac71828ebb0e21abe92cb9bf7b4bc959aec75655970",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "77be445c26a760a89b54687da1c421a8360d2b2d7ab802319bbc2aca6b71b7a0",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{iceberg}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Service",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{iceberg}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "000613f253ff3c87e33cb074ddf8776c0d8ff3a775906ad71efb8c3ced9e7c6f",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "16603b51059b11399bb75e166b0e4ac797440c241babd2e0783b835e37ac581c",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{iceberg}}",
					"actual_value": "metadata.name={{iceberg}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{iceberg}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "e601734bb896d6832119cafba2b2345de54c3c6ed84856880d30436ff4dfd5df",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.containers.name={{iceberg}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.containers.name={{iceberg}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{iceberg}}.spec.containers.name={{iceberg}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "17ddbcfe629dd284c72dd331d2c5af929a99329e6d205d579b1afa4a4bd00866",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{iceberg}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "440b315465cbfe3ea322c1d264e31f1eb768863221db35a6ad1640c5bdf3d234",
					"line": 17,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "iceberg-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{iceberg-pvc}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "9c89e6b479713dff5ee99a102fd298d47931a50920341df345226654bc1c0b36",
					"line": 17,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "iceberg-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{iceberg-pvc}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "e5e03764d852a90699a3114cfd210c3a3ea51b90d68b0397d9ea899f775f2de8",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{iceberg}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "3ed5f4e5f4c2df79bfdebc5120f99ab60df71b2cab7144f75185f74c3b319c70",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "iceberg",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{iceberg}}.spec.template.spec.containers.name={{iceberg}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/iceberg_template.yaml",
					"similarity_id": "c18e79bc394ee3ceb46db20cdb114509e0a8243e3a0ef764322abe8b5629863e",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "iceberg",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{iceberg}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{iceberg}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{iceberg}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
