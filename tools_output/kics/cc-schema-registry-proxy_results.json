{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 78,
	"files_parsed": 1,
	"lines_parsed": 75,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:19:43.040764+02:00",
	"end": "2024-06-26T02:19:45.179593+02:00",
	"paths": [
		"templates/cc-schema-registry-proxy_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "ba2fa05d3a052dcc579fcdd8b6d79564003e2e9039cd0c476ad4a3bb2367d1fe",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "36528f36c53473f31389654b9ba3a9625255afb886cad23f950b55f4c25e05aa",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "7351e2dc630c338e63035e319e840ded58a9263d87dd63c4f5bd912a0a08b252",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "ee9a028aa727eb20fbf5fc768947d35d0f418f69858f0eeb020fac45b8b92c14",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "8524acda756ba71b0fc9166f8eb3f2c7135774ba72be876610a6c448768c83e0",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "35e421f727a71aceccdfdb53cfe9bffff3e0d420c1f378651340e3ea5b43240e",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "c54eafdc244acf9772ac469994e879cff9f9e911a506329bc23c2b6551ce1d12",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "3aa7201c9dc5f2cc8fbb336136e071db83d9ab2d346cdc3adf135342840ded53",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "e79fcccb5da87511ebefb8699a0d4b5a104f48a20d0cacd539eef34ea9847439",
					"line": 71,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-cc-schema-registry-proxy-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-cc-schema-registry-proxy-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "a7e73e293c9a556ae93025629e6ccb0d577ed26bea69b64a7c3a8f38ec81507c",
					"line": 71,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Ingress",
					"resource_name": "release-name-cc-schema-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-cc-schema-registry-proxy}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-cc-schema-registry-proxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-cc-schema-registry-proxy}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "a420e01fc76c49fe78500f15de59a57e992e480c872d9cf3954f5e8d86375760",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "0c069775741079cb75c9364985f3356f568d8e091b13bb67eecc935c82e7f75c",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "73438831de31d4b53f257d3a7342d801d9e0d98bea6127819f6d608d65842905",
					"line": 74,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "22b30dbd6d4a899b039f97849aac2dd4b4da734d447502a7c83a51a9d5decaa9",
					"line": 63,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "7e1940e60f9e73f29069307db007fd03684cc62c021f283d9aa948ddbdb7fd76",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "6b09badcbe384b46ed9be54506c9fb6c1348d95753facfc3dadb0dbb68f1c31b",
					"line": 63,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "ab9c21cf1b590d9d0fc2d5d9959f00b017546aff3dcd94dea35f25f155b017f5",
					"line": 63,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "ee58ea3f57740c13afdc6ec2be4a9fc5832f308ec8c4f20703eaa04db29f0dcd",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "6c1a6c8a2efd9569ed6b4b63063edfe25a536efe31182988bfceaad389ce522b",
					"line": 71,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cc-schema-registry-proxy_template.yaml",
					"similarity_id": "5dd52bece3cae32be07ad9477c677b4ed9a0031ddeae65cc07a3a88837a4c5a7",
					"line": 73,
					"resource_type": "Pod",
					"resource_name": "release-name-cc-schema-registry-proxy-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cc-schema-registry-proxy-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
