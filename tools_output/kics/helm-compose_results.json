{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 244,
	"files_parsed": 1,
	"lines_parsed": 234,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 24,
		"MEDIUM": 26,
		"TRACE": 0
	},
	"total_counter": 54,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:50:43.825836+02:00",
	"end": "2024-05-17T20:50:45.809289+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/helm-compose_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "83e3fbb762e7d791a346a00cce60e62554d0f07ece84f83e4e37890fbb67b3a2",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "89dfd6ba2904968570a6b96275ca7f369f57bae3463c50694dd1d4600da47019",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "8ff80a4e80f4f551dfdff4f05c7c5ee2af67cd60eef6acc40b2d05966aef140e",
					"line": 214,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{vol-0}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{vol-0}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{vol-0}}.readOnly is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "8965e2b32ef6c67f5188ca50324d3c7f52067bc5cf5b8c6d42f571273a658253",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.volumeMounts.name={{vol-0}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.volumeMounts.name={{vol-0}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.volumeMounts.name={{vol-0}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "9535ee8cb836e4dafb1b064f6f7edafba6ead4d99d7a99ee4eae43cd41b14cf1",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "c73610f63d944c92a25c3412ed793d5062c20498e380eace12e180b255d64703",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "98c2492f14ad064c1595041e8f90ef16593e97069a1e9598af95f292ccbc4362",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "5ca34d95ab5954860d6c1bc8a5b18956af83d6857076c6e3b76d2c4594f74472",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d0c69b05d55840f0770a605bca7637ad76c60fa9dd7effe0668c1e063e4f445f",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "7810eff7939cc728a37f3e5b93bea6b4cf53f7905ffdf6aafbe10261a8106218",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d1aa5912ee0d16b6fe064f257cc32eb15bf95e751e4f84bc9b2f3da47e26d1fc",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "3435c5abb501ecfcb3738636e4a7cfbc65dbf0ec572e2de6244967fa3a33ceab",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "1bc9817f1cb1bf45b5ae1567714dfd50f17761f6fc8005a2904ee728d0c7baa6",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "082ce039cb3e2c623eb60e82d515bd2633dd121b623cbcc44eda9faf34cfd724",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "ae57ef5694016da50d3c1bab5a45b89ee2ce0689a837a524400086c22cda5f27",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "1bff8f76c261719131ea735b53d84160114fad5caee364b92225e557954a8977",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "e8c9838819e3ce945c41d0c12dfa234acfde7fb67572eb923953ed11793b70ad",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "3ff94845ed672582a0ee62a9ad6bdce596cac68bf6f34e1682aa18bea4bc84af",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "6fb7b5fa8f007d0db7c3a776d507c85f16c1dcef46f3cebedac0846892509d62",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "27127e588d9b1030564bcee7e6c99e11af1c4d8725129c9e41a14edcd576a2c4",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "816b755e9782778ce432a8b3ac09515d84e53d0ab079ebc5975de866ac005e8d",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "9780c3c29d66c562ca8f274f4a6e93fd156960fb69e8c36acccaca09cb103e63",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Secret",
					"resource_name": "release-name-env-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-env-wordpress}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Secret",
					"resource_name": "release-name-env-db",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-env-db}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "06fe1159e457b08437a043218077a57ea2e1e8419a4602159cfb216f3cab4b4b",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-wordpress}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Service",
					"resource_name": "db",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{db}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "93142a03521798b0d9e1898ec808404e9e41923edf7e4823b4833e27caa335e6",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-db}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Service",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{wordpress}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "cf41dec01c3acfd082779c77ac66a3938b65038c7ffc4e1c78bd63e667a5f8d1",
					"line": 224,
					"resource_type": "Ingress",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-wordpress}}",
					"search_line": 224,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "fb9af1b7bcfa5302b340e688e4eec861eb09a46f85d847c55f0073a36c99fb36",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "398147819e6dd4e9b1da97946fab943637b12dd83b7e2b56bb7a035dfdd33406",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name=db",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=db has resources defined",
					"actual_value": "spec.template.spec.containers.name=db doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "f717517fc08b768007948ee6f1b38ecd30fe2948e84c3bf077e21fd2d603cbff",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress should have resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "41eb5226b54cad615ec1071533209501ee7d06ed0965b935f73ba3ad2fecb4e5",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name=db",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=db should have resources defined",
					"actual_value": "spec.template.spec.containers.name=db doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "80b3078f6a3fe092eb38696788c38cc4715d9c43294fa00e3fa261d557863a98",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "9389e030ad8a6b26db87dfe34e2795d2de0116423b9a9570b504c1d9a5d636f4",
					"line": 204,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d080f0c72aa45f5bcefe5e63b26e89704b1cdb7892c3fbbd39262b71d24b863a",
					"line": 198,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.metadata",
					"search_line": 198,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wordpress}}",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wordpress}}"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "50f34f534d3577c3e69783072971d9561bc1babe63992080d997ff46827b19b8",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.metadata",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{db}}",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{db}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d396af22c49daedf0949d96463621b73e4f04b96d75376d54870db2abcb17046",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.containers.name=db",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.containers.name=db.securityContext should be set",
					"actual_value": "metadata.name={{release-name-db}}.spec.containers.name=db.securityContext is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "e81000900e09c2dba49254245a142373553378245ed5c35cfb75ba93db10f2fe",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.containers.name=wordpress.securityContext should be set",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.containers.name=wordpress.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "a5a4f28be295740571aa97ea2bf495da171078e41c77eff0c9052b9e6b443d42",
					"line": 66,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-wp-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wp-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wp-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-wp-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "04d01cfc85d7af064a839cf3177d139b3350fbed10adf2927f5dbd161964815f",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-db}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "9a875b20e2facf423d49972d376ef2372c1062f9dc1279361873b92f7cfce4c0",
					"line": 53,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-db-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-db-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "556a770fedec34b6ff35a4abc9200a112a6b3621a4a9ea4230d1bc9434164c20",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-wordpress}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "c458438a5f667650096b0f3f3b5a4a0c45f89d69062658e8661ac0b61c32615d",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-db}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "b699ad0357a58033e9adce8e80e421cda6c842130132305c3f477cc4ecf311d2",
					"line": 66,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-wp-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wp-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wp-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-wp-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "765f320663da839f31fd847be78af4d2039b9a8d0ca8ea18537d61304c143ef7",
					"line": 53,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-db-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-db-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "961130cd8e0a02538f07ccc9b5e08f64a70e81e4b9f1ff5d2c3b0e4a39758560",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-wordpress}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "5e9d623734248f941fb530dd6ac5e18c8204fece274f13f0aaf667c4c3861462",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has a security context",
					"actual_value": "spec.template.spec.containers.name=wordpress does not have a security context"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "1ee33b01229419d7011e4067e7707ac801efe9a4a4648c143391711083a20fc9",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name=db",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=db has a security context",
					"actual_value": "spec.template.spec.containers.name=db does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "54eecb815209b84ea4d17df277e05e33b3e4c0144f66ba568704b0dfa04256ce",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "bf7ce57a390db348dca07eaa029ab330b9fcc402a11144e70f310b19bd33aa98",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "a072f2e8868b9e20ad87b95f55b2921ccedcbb0d1b81aa5503fa5a194d57a1ff",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-wordpress}}.spec.template.spec.containers.name={{wordpress}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{wordpress}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{wordpress}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/helm-compose_template.yaml",
					"similarity_id": "d77e7b078949a52020f496d6f6b19cfa278dd4dc2fc9c6c87178c0dee6402f79",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-db",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-db}}.spec.template.spec.containers.name={{db}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{db}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{db}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
