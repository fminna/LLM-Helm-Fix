{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 70,
	"files_parsed": 1,
	"lines_parsed": 67,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:26:43.124729+02:00",
	"end": "2024-06-26T02:26:45.219245+02:00",
	"paths": [
		"templates/postgresapp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "2c4bd0fabd178f01c6bd05e5731757569bfe4d9f81e88cc1300b3b4b277bbf1b",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "3d8fbacaed69ed709bfe9521c0f44027638c6d8f6c62cc47a33c41ddc419035b",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "572dd9638d9682dc00cfd92c1be0efc697aef7231ba13768cbd10ae060d1944b",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "119237a676cd96f9b58a7ee823bb78c9e252c8fe13fa339b03a2c835b25a971f",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "b25613953e3a8a62edd45154944673d4f704aae7fc9b0a989d6803a1e19f0fff",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "199ab8ee8981395f2bb405f307178cf2942f73da51b4ce99489c5e7bd1dbedc1",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "5deee9a52179b67a40590f1ac2f7e1790db4308a28b5d0592e47d51a686e794b",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "ceacfc3d61146bacfdc4921767368b2bcaee0f302465daeaf1c9cb9ba48a41fb",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "3f26c846910f89b6117180ceb169303834c3abebb3a8d84381f16bd899492979",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "db",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{db}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{postgres-deployment}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "db-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{db-secret}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "45574c773f706a219eabc12b96ee2403d2513a9ee6528d6f34e23621f34384de",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name=postgresapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresapp-container has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresapp-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "cbc0e5174c1343e4efd2e977a8c1d901780635697c6e31a1e7d75c83fde85fb9",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name=postgresapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresapp-container should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresapp-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "359e2199fb0c756a13db63ecabfc9284393462bf1aeee8f7178bfc9215d23be8",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "2c6f40876c51611a1388f85d42329ade5a101c9cc7cbc0fb8d60da45d57e980e",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresapp-container}}",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresapp-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "d01345bdd3a28022494d2888247854254d4fc5ed3f5b214983aaafa9bef757cd",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.containers.name=postgresapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.containers.name=postgresapp-container.securityContext should be set",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.containers.name=postgresapp-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "da5cccb1145ef61dbcbee26d55ab568922b392d91434211fcb4e5a87b041f265",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "b81973cbed5c5421906d0c59b254ed0f5cb2797b185f7d289a5ce02c79d6aaf2",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "ee84c812f29c74fff3e6973c334ae2839c01cf92a585cd2569ecb60d0413bc02",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name=postgresapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresapp-container has a security context",
					"actual_value": "spec.template.spec.containers.name=postgresapp-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "4a5dfdc27ed722bf9386279f5d3ed4690c86b55ea13789ebf33ef8e208b699ad",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.name={{postgresapp-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "81c69d1419c4742b38c8d25fb3474c8e19c76aa023f4ee210e7f806b20198831",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.env.name={{POSTGRES_HOST_AUTH_METHOD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_HOST_AUTH_METHOD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_HOST_AUTH_METHOD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "8aecb42ac794dd2fd55dccd554a90fa62139ede3cc57671a78b93f987671d19b",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/postgresapp_template.yaml",
					"similarity_id": "7cef720f04bba0fb6e18cc934fdcde17b9570a56b30f18ee234575a53b31b1d6",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "postgres-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-deployment}}.spec.template.spec.containers.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresapp-container}}.env.name={{POSTGRES_USER}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
