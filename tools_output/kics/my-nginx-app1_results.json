{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:45:12.583391+02:00",
	"end": "2024-05-17T21:45:14.561639+02:00",
	"paths": [
		"templates/my-nginx-app1_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "955c5e7ce7d2c61624cc59a4ffe28e9fa82def857986b23df8bdb88179cd15bd",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "328e01227f876e7843608ab65e9fda6ab45bf40c5576b057e979705b478a0c2f",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "ae220a0d3a46ecad32fbde25ca87585cdc64b633a23378739e1679878667d5e6",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "0b205d7ca1fa4725f9b92ea26e1005527057b1aa2095dede64c7835f73c0e950",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "4592fe2efb7707b39fc66770ebc613316e34b9a4ecafb37b2f68048b7ee475aa",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "ba3a62789eeccee0e5290ba390f0c71c598f6881e25a5d894b34cab6e3ea2e9b",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "e496d1376c1f591cba4e51eb1cd6bd5395312483ff9863e7401e5810c4e9fb47",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "b1eb8415ca36a021db58ef286f3e424bed23613b8b17b539ec48ceceaff423c2",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "c36090e2bfa45ffd915079408fec7ff795600cecb5270b936331f62a34bb6c24",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "f9c3546d0bedd73e5a57836e98caa8fa714734f8b9cbf3c86edc2535768c7c18",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "7a361bfc650bfc369d7dec4914f5a83f39233f83227e96c60df1802a949812ba",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "f7571d76459993b76a16f50215e7119d6770d76c2fe25ba9bfdfd5850cac76a8",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "d90f533634906332f7583ce03f5737a15d5a04345f06a6e46adb90032080d32a",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "ffdff44a63611a6da60d4eeebf7b459b0bf40711e972a7e440bc5f42112a810b",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "9f7ad1ed513faf1364aafef33145148a17d1b22a915a4a2cbce1f9a238cef557",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "9935b6d05f152bfc8b58b3bc3707b1c8ea7fad7c05aa79f63a6025506c31721d",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-my-nginx-app1-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-my-nginx-app1-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "6955267f4644005620931a5ab9de0a04fe9026e14f1c44b6890c150647ab1a32",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "07526d87c487198fcaef5d0afb14018f42cd343382e8b3d0989249865d23edd6",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-my-nginx-app1-test-connection}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Service",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "12751549bd824ba9e0e1550bb2fc27a9838f81c78d10b18f7c6b4e765c54e51e",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "cc24238c1afbaeae985d50dfbbf4a16bf7be57f2ca92df29fc8363125b83325a",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=my-nginx-app1 has limits defined",
					"actual_value": "spec.template.spec.containers.name=my-nginx-app1 doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "186cc1315b9232d6e710826da8f3a8642642c27c509acafc397c77fc8486748c",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "000e35f43a631add6dd6bf59077f2b57171842baeaf34120638acef8c6468100",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=my-nginx-app1.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=my-nginx-app1.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "13a83ce1e880ba445d937a2a1b45a5ffade7c6d01d038f2f3e5859ebb3a66743",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "9f4dbfedb2ebc5afd1e72c57fcbca8fd467cf834cd0cccb8d18ef25a4182f935",
					"line": 102,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "19fd013be381a3dffd350a361681ba995cbf88ddc68ab96bcabcd865b889e992",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "5ea58a394a473dd69e80eef19ad81632ec4d1ae5e0e165f9cac24247b595f532",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{my-nginx-app1}}",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{my-nginx-app1}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "89a088a941ce60e4d2f9be9b0e69787d1425b4795560e37cc1744eae20133c4c",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.containers.name={{my-nginx-app1}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.containers.name={{my-nginx-app1}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.containers.name={{my-nginx-app1}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "ce0eaa3e4ced61894c8e3c0b82899283a3ccd11e9fd298b44fa63eca45048d1a",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "f1a7d4b2eae3b28c2e52ebbf9c9a640af0beb2ab75126f20fa287879bbd65bb7",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "6d90e5e678c02c7647119da7daa120fef4eaa448e8d1c70706f3faa705e2c634",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "4e24c2fe5773f11cd6a50a8d46812ddf618cf0a9091e85e552088f9757043dce",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "d174987ad10ff96300e796ed8376c2286743c976c97c547726edb0bf7442b111",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "c364e47c54fd65357068fc32792756f8f891f8c04b1d54753d62a22b271673e5",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "528e44bbb0fa98c8522542e3f5e325d9462e4afcb1777b17b63a98e4e7418f7b",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "2d6da327d31f94112394c85f7c8222a33c80eea6bc40a00bd84b8365571c567e",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-my-nginx-app1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-my-nginx-app1}}.spec.template.spec.containers.name={{my-nginx-app1}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/my-nginx-app1_template.yaml",
					"similarity_id": "f119f01fde6555f2f4d6391ee94d354fa52393ba7ece69bc06a70386c0758ca7",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-my-nginx-app1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-my-nginx-app1-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
