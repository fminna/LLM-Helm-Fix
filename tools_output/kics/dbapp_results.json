{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 43,
	"files_parsed": 1,
	"lines_parsed": 41,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:22:21.433194+02:00",
	"end": "2024-05-17T20:22:23.333736+02:00",
	"paths": [
		"templates/dbapp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "49824bd3f0c2d73f8a91b2bb24c65e8759f2606724c5c3940c6e40f2a73312f7",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "79c1cc5b17992fd25b0d48cb0530aafe749762f975e9599e8a03091f54558464",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "48accd844473e6bbcfe9fe2839dd38b5010aa5ed9e9197ce1c9c312e47108824",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "0fe9f94241a3dca504a3ab271658977fd86cb9e13396ed57ba815b2ea6e4e8fa",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "45208e99e04b36bddc0ca082cf7cb2488c572419b69959e5d94f43d72ae294c1",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "28bf827c5f82f93f355a58ab1d49dfda29f4c46e91f3661e214b05739703542d",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "16e6d20b8e07335bf241398317eaf9036e74b0fb3e32b7028cb8069ccfd4cb4a",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "2394d2c247d73ea443df5dc171321a392f3a68a57a35ef52ba182a6f0c8aa302",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "0fc3228a716edaa6caf0ebb17eb4ef6d0c010ececc6e3f3da3670172e11cfe3f",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "69e13d7c5e1a9d07a57a9f92f7c5af4bd53adf776e2512e3522cd59d61e20d0f",
					"line": 10,
					"resource_type": "Service",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{diabetes}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{diabetes}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "0c8f2fc68020f70369a7aa461b22ed492cdf25e0fd74d15eb2a705e9713f168b",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name=diabetes-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diabetes-app has resources defined",
					"actual_value": "spec.template.spec.containers.name=diabetes-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "572aa76eb7bc1855e1f9d49342d1d8cf76f092ea1f91a0267c998303e3885b51",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name=diabetes-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diabetes-app should have resources defined",
					"actual_value": "spec.template.spec.containers.name=diabetes-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "bec80af03aee4e127a6f115038c1aced76778834c347169d8e16ff85949d3ce6",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=diabetes is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=diabetes is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "8adff418dbee5c981d10e7026437e4d6218ce132e3aa84828756c87c52b059c2",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "fe1fd2034ef93c128d606e37f065690d09b43c6c981fcf871ab5286cc785d1cf",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{diabetes-app}}",
					"actual_value": "metadata.name={{diabetes}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{diabetes-app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "476d72c852711abe466d5483d3a0aa072c66747ea9df2d0588224dd1f346592b",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.containers.name=diabetes-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.containers.name=diabetes-app.securityContext should be set",
					"actual_value": "metadata.name={{diabetes}}.spec.containers.name=diabetes-app.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "62afde3e7c8b14f8edd3d733cda6940a8109ae34f90877c7c0237b7ea1cfaa12",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{diabetes}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "410f54c68603cffac95c4c845b72b063f895a9e29dbbf0fe250826851072cf8f",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{diabetes}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "dfa5e090d5fa5f1a401ce3d9acd6fa0337a5e7b3131baa32c98a4bc90b00afad",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name=diabetes-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diabetes-app has a security context",
					"actual_value": "spec.template.spec.containers.name=diabetes-app does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "175d542c2a5519030dbe3f0f97f962a7b1291976380e1d53e59a7d0f01970c68",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "diabetes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{diabetes}}.spec.template.spec.containers.name={{diabetes-app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "2441e45b62932d22c50c3f7efa7b6a8bfe1c2c8cd70767f5a1cf8e872eeee919",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "diabetes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{diabetes}}.spec.ports.port={{1111}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{diabetes}}.spec.ports.port={{1111}} has a Pod port",
					"actual_value": "metadata.name={{diabetes}}.spec.ports.port={{1111}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/dbapp_template.yaml",
					"similarity_id": "e453bca4d535fad388bdde373ed478b8946e96ee6f735ea7e5e202fbb3700b1c",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "diabetes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{diabetes}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
