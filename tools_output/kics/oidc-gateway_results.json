{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 86,
	"files_parsed": 1,
	"lines_parsed": 82,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:01:05.815962+02:00",
	"end": "2024-05-17T22:01:07.760398+02:00",
	"paths": [
		"templates/oidc-gateway_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "8a32f32d41a660c888dfe58d4a2783380fe1f21bcd762e4f22ee07e5e381907e",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "676e90ed260b6a2f42d2722348a25cc34a01139ca9157b391191ac8349627b60",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "bddcde89dcdccbb80251317e3447b79942bcdad9a78aa95f030eb20c16726ba8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "ecbee2f8bd9eaf288dee8790a5cc270ef5c4ebfd32bf716c10e7ae829ab6d897",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "dbf7960663cdebbefd533bf8f22505d5cf289b0fc08334215508193833d9fcb8",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "18357137ca1eaadd7f4fea26495d09fd10be192267cf1a32a34a60e2e6a8dcb0",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "045761d1fd72e93ef7f5ebb302b8316c39d0dce99bab7f292f404a513e58fd67",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{oidc-gateway}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Service",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{oidc-gateway}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{oidc-gateway}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "f5666f3ff397480ecf09f9d5f5d88d85d9d443d717c7ebff1308031cf4cf55ee",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "4465b166747733bdb7f3246ac2b9fbab5ab66980a1b184b99ec5e811014ea903",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{oidc-gateway}}",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{oidc-gateway}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "c99b66c9768f4bb4257188f6da7cb32ea02a44d66de6c42b7ab25f60eca9081a",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.containers.name=oidc-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.containers.name=oidc-gateway.securityContext should be set",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.containers.name=oidc-gateway.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "3c599d0bfea01963e931b3ef2c6dd557351f12eadafddfe40a64dc0ec359753d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{oidc-gateway}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "0309b075152d997375ec7c66cac70d8c2fbd0385c9870c6fad8cdad0235abf17",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{oidc-gateway}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "89b2082371e040ff3a37547f91e880d1e1b4138d72a6b15fc8d5f811be53f117",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name=oidc-gateway",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=oidc-gateway has a security context",
					"actual_value": "spec.template.spec.containers.name=oidc-gateway does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/oidc-gateway_template.yaml",
					"similarity_id": "40f5bd63e3289d072a07eac3044e423d6e5e3747b95fdf00206f3f0971287bdd",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "oidc-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{oidc-gateway}}.spec.template.spec.containers.name={{oidc-gateway}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
