{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 2600,
	"files_parsed": 1,
	"lines_parsed": 2592,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:44:31.304118+02:00",
	"end": "2024-06-26T00:44:33.578206+02:00",
	"paths": [
		"templates/redis-cluster_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "ec6f144b8f07ad9c787851f529e11321f0f0bd299172205225871325c289bf02",
					"line": 2494,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}",
					"search_line": 2494,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "4076f53ca0fe8c0144f36b2c54ec5c44b053f4fd82205ad86a91501cb7314919",
					"line": 2496,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "b40ef4a60ed729270b7298fd962d6027a56605480ec758f017c38dfe0e0758ec",
					"line": 2565,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}",
					"search_line": 2565,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "5d57b4fc1adf0867e334c5e071d62d298b6e21099c5c6a55f1b4a2322bac7a0c",
					"line": 2566,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}",
					"search_line": 2566,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "af8f1a6b2b9c38fb57f1c03e965defadf4ab9b5430ccf15d349988ff081748d9",
					"line": 2491,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "515f4dda916f6b73fa2723ca816f90bff786ea7a9d6254498c59289a2e17a272",
					"line": 2494,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "331158e414947bc15f18dbe0ef107db5084d9d8813485ac1b9ab0958757d268e",
					"line": 2467,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "5eae97683fb6ee806374039a5151e14fc1deb1a6a48416bea48fff2ee6f823be",
					"line": 2387,
					"resource_type": "Service",
					"resource_name": "release-name-redis-cluster-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster-headless}}.namespace",
					"search_line": 2387,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-redis-cluster-default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster-default}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "17379f7cf4310747551ee41d4269a2008efce27d8731e18dc83956f49c7ded6a",
					"line": 2438,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.namespace",
					"search_line": 2438,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "acefefbd57c96324a9fabea5b2fe023fc6960ff7d497b74d83345866f57819a8",
					"line": 2413,
					"resource_type": "Service",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.namespace",
					"search_line": 2413,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "d3817413f3621aac70530649a3f61bf9fff43d119fbb58192bb756373f527ff3",
					"line": 2314,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-redis-cluster-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster-scripts}}.namespace",
					"search_line": 2314,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "2b3fb349aeddbe576f1c5ad79deca3993f48f8021010bc7ca4ea63b8b7271bb7",
					"line": 2565,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-redis-cluster has CPU limits",
					"actual_value": "spec.template.spec.containers.name=release-name-redis-cluster doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "c2a998ba532e982b25a4ccbd4447548e79116f36be45b41acebee14c0f76b7b2",
					"line": 2566,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{release-name-redis-cluster}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "e3522b67f98e4536f4e7f3f9423b375ce9d59009cd533c61c2db86c70e50ded5",
					"line": 2493,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "e2ef2ec59489e7a48fc3e53c7d09cc9f7edd3496cbb6f39add1ae7cd43e52960",
					"line": 2463,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.metadata",
					"search_line": 2463,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-redis-cluster}}",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-redis-cluster}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "5b5ab7ef695fd721d663ff14df7833dc512f1c8de853b65ef2aa02ef68cbcfa9",
					"line": 2494,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.containers.name={{release-name-redis-cluster}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.containers.name={{release-name-redis-cluster}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.containers.name={{release-name-redis-cluster}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "0502e850bb91276cbf087d83b00c95b4cc298ab3fdd27643b27b40f9043bfef8",
					"line": 2438,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}",
					"search_line": 2438,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-redis-cluster}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "640f68390b3c7eb45a339565a462d6f95fdacd0c96e334bad00819f8c44d28b4",
					"line": 2438,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}",
					"search_line": 2438,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-redis-cluster}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "7f2dc190b0fccc3c791ce7cddd18a8cd2088600bb9931325adc166d551fd8034",
					"line": 2494,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}",
					"search_line": 2494,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.name={{release-name-redis-cluster}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "6d213fa4b15eaeb8d985e8fac14fca632a4ad396285659ad5493ae0fbd5dceca",
					"line": 2521,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.env.name={{REDISCLI_AUTH}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-redis-cluster}}.env.name={{REDISCLI_AUTH}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-redis-cluster}}.env.name={{REDISCLI_AUTH}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "ee00b26f97e09fcee2630730e2145eb1cd10f0f0a5cb147af479944f11c81596",
					"line": 2526,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.template.spec.containers.env.name={{REDIS_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-redis-cluster}}.env.name={{REDIS_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-redis-cluster}}.env.name={{REDIS_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "242693dbcf062b99c2a7a2fa5f73f5f8ef7d9e1a128898aaf5a29f6ac52adf15",
					"line": 2599,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-redis-cluster}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-redis-cluster}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "1db3a5a5-bf75-44e5-9e44-c56cfc8b1ac5",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "f3c77130",
			"files": [
				{
					"file_name": "templates/redis-cluster_template.yaml",
					"similarity_id": "c75357443304db554948dee718d4a64dc4d7e7b1cbe9e32a491a45b03c7c3090",
					"line": 2450,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-redis-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-redis-cluster}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-redis-cluster is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-redis-cluster is not targeted by a PodDisruptionBudget"
				}
			]
		}
	]
}
