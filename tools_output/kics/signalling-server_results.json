{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 79,
	"files_parsed": 1,
	"lines_parsed": 76,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:26:45.072098+02:00",
	"end": "2024-06-26T03:26:47.124859+02:00",
	"paths": [
		"templates/signalling-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "25690c03876252421a19c33d993c718e14bc76479c6e24564f08be03ec95e066",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "cd35ce020f6c3aa166f747ac2e0524a80ed8eb0cd6b35e3a527902adc04e346b",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "00ae96e9e30a7bcb4bdfd07ebd4303627d3741dce6c8abf68ee7623d383caa28",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "738bbc545482acb2637d88f330e9f0d363d73211123bbdbeb8e59d0a60dc0ddb",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "1fd5b2f3363385ae38445a3b43007225db10f8161fa7b3790e8fb8c4506d29b4",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "70d5e1612ad725a09b62e76b0331c1fe8101046b793f4023d09a725e76256e0c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "c0cff0789e82cc3804185b8adfabdd954d893d5c6db26c2c357f90b23181f510",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "1d187fd5bc1018a985eef9893e4e3ae1665771fe3c0ce16f7758eaff47e09a7b",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "ec30e6dcce626a38910968b88184c2b00478ffd51e5ca04e8bf5a0cadf106ca7",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{yjs-rtc}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Ingress",
					"resource_name": "yjs-rtc-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{yjs-rtc-server}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "17292fab6d316bebaf6df62526cc19df530977a6c819db9eb867fb2d3c302bbb",
					"line": 9,
					"resource_type": "Service",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{yjs-rtc}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "e95d0a506082b3cba75018fd00490b830ec2cf4ec4eb8220d60901172a6bb3f2",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=yjs-rtc has limits defined",
					"actual_value": "spec.template.spec.containers.name=yjs-rtc doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "043d1a9c3c8f8878deafdae8a5bcf60f59f7ca67da024f9c12332f7398724b4a",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=yjs-rtc.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=yjs-rtc.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "b29e4aa05e73b4cea7ee7afbdfd7f24dcbdd3f538734fd772cdfc260502783ba",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "37ffc05c1205de77951d61212cb6413181484aefd38cd4646b7919ef80cd37c0",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{yjs-rtc}}",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{yjs-rtc}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "5d143947bc639a502f4edb8a70f642bb2a1bd1ee2065c273f597f6dbb3902883",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.containers.name=yjs-rtc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.containers.name=yjs-rtc.securityContext should be set",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.containers.name=yjs-rtc.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "2e7aab0d9236254153a28419551f319663c1e2a6412a9e2c5986a2964d7d0dc0",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{yjs-rtc}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "f535a9ff46bac7b137a34487f6ea45495174aef3a7b13b3044c6a996d0edea72",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{yjs-rtc}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "d06225841c585eb3f545a82a100484b144f6cb6df2f770eab09ba698037c07f6",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name=yjs-rtc",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=yjs-rtc has a security context",
					"actual_value": "spec.template.spec.containers.name=yjs-rtc does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/signalling-server_template.yaml",
					"similarity_id": "5ec33f6b414c059179e9fe0b56169a59d7bb0f20a5d983bd770d8cf3084da51a",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "yjs-rtc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{yjs-rtc}}.spec.template.spec.containers.name={{yjs-rtc}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
