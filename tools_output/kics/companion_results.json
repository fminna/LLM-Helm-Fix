{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 104,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:09:35.619789+02:00",
	"end": "2024-06-26T02:09:37.932073+02:00",
	"paths": [
		"templates/companion_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "027234fe87795954395193fad527c10ad0a8c08b1fe87e9dce66cfd7d9cb9f76",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "dce315cd6f3e7255efe82cfc1d5266f70db9e1dc562e97ac784d7e7b90b3b704",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "924339bbaabc0657a78bdd8e46ec4cf0a42c735312baea2cd7d78351891694ba",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "7c2fba5305938dc6cb9cdd0809d724597c76e552ae66c232264e3e39aed41f86",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "dbbd8a2600d601e1c8b9ca39c62e3ddbf98c86e97b20f308f0d5aeba86fff223",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "458882a8f6a49753a884b75e4aad9127e423d67a44d4c959ed9159d14c6e4f73",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "65afd508ffc72c4e5a738301f0880382e97f8a49d2c6f6193a8ea1f9bf61a6ed",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "ba094aaa6031e8be265c6f3824a8b8518d0e0a32a8f010e21185b652cbee322c",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "companion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{companion}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{companion}}.namespace",
					"search_line": 31,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "68b65d96766cb79eea7811c953003223c381772bc35cb97b3f1c4480523c1d7b",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=companion has limits defined",
					"actual_value": "spec.template.spec.containers.name=companion doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "ad1094ea012a9f8022c8a7d8428e5414b66a9a0c459e833b944414e08d01e6df",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=companion.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=companion.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "114d76c51b245201f0de97080302efb66aee80cd2ea7aa83bffd8b216dc0f7e1",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "08e5591121c2ae7b6772a99a0c562a188d16dff5008c999738422a954b4575b3",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{companion}}",
					"actual_value": "metadata.name={{companion}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{companion}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "6e9cfee8179362cf11805fceb29cbf1ed698a7f165c425cd4d14e5f0335b2267",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.containers.name={{companion}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.containers.name={{companion}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{companion}}.spec.containers.name={{companion}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "726f5ac321cebc20981d485d206634afe41e81383e41097408a4964f77b31e75",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{companion}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{companion}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "7715a3d1cf9a1bc55a25e3c90502e4b2d642a913c5f424f04f5dc819686c0eb6",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{companion}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{companion}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "ca52e2592857a1b964b80be85adc4201ca2415488d6933a3ed9a4f55103150a2",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "companion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{companion}}.spec.template.spec.containers.name={{companion}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/companion_template.yaml",
					"similarity_id": "a1be0a3800cbf04114ed1c7fabeea6e2f6f4e765c3762ff6770af097932e05ee",
					"line": 19,
					"resource_type": "Service",
					"resource_name": "companion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{companion}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
