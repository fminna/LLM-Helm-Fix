{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 75,
	"files_parsed": 1,
	"lines_parsed": 73,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:39:47.275483+02:00",
	"end": "2024-05-17T21:39:49.190915+02:00",
	"paths": [
		"templates/duckdns_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "dc844c4e24f0d03f8927f42c82ef07a88c2a26bb5eff084ddc4dc670b056ae90",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "f2dd2bde4328f021de66183d4359af58ba75d81b239e7d30690666c07d66410b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "6551cfe98493fdc3bf7db958a56694060ab034a3136d70b0ed76b234ad5cacbc",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "deb5ef59a9cc4d2339d2d6e48bd3321969e1bfa95c63cfda1f272584f8299a3d",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "3320a276af9f8d8c348d5871d1971dad4af1e5de5d0213428ba8286fb51f1fcc",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "ef75f4394d467af10ea97562fa09961d989ea27cafeea1081f60a835bbd2bde3",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "16798a17b77aa19e61fa9f57e1f8645487f1c704a9455f8503352f474f198598",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "41e5aa088a156b200b0085249debc17ae326e64df6d788978c058d52d8ce8dc0",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "102bb7ca2ded9d65046549e3d03917dcfb4844e94de70fcd85d99c733e21d270",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-duckdns}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-duckdns}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "45fa27c243a46c3b436458076864850cfd118182b99159cb5e4ba547c5298158",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name=release-name-duckdns",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-duckdns has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-duckdns doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "2eecb06e9f488a3d51404d33f8610c151da4eb55ce375bdcd3cb315d36b3d4c2",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name=release-name-duckdns",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-duckdns should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-duckdns doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "a3397eedcaf7871906bb7a49219dfe94ae0875710fa96500feaf0698c92b9cab",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-duckdns is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-duckdns is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "47aa7f0415c01291a3a01418e09cd719dc5894d931aa09b342aa35669c478801",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "e6392391a653cd527c4295765002953af868d9f70ab0a5862e4ba848892f4cf3",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-duckdns}}",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-duckdns}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "db7f708b4681376c8347a31703a928cfffa8e25605a7afee479d6ebf92f79f40",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.containers.name=release-name-duckdns",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.containers.name=release-name-duckdns.securityContext should be set",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.containers.name=release-name-duckdns.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "864ae05f3696f2e3c2d5dfd4d865c615da6d7f7d967e6e01f2201f72c6010312",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-duckdns}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "8cdbd8e4e6fd4414b44e2513def11b0df8c9d8ceba52e45e7dc75626dd6f616a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-duckdns}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "ad8507e4c0a64c69e482a02e38be33e7743149a920e2e0acaf663795ade69f9c",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name=release-name-duckdns",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-duckdns has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-duckdns does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "b394ce8c86f6732fb620f00fdcfce6b0960eeab6c62496b3e67a197a66585358",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/duckdns_template.yaml",
					"similarity_id": "fb2ca9238b30a8313739981f61b710e2d29547a6ab1a07127b3f5d34bd8b1fc5",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-duckdns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-duckdns}}.spec.template.spec.containers.name={{release-name-duckdns}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-duckdns}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-duckdns}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
