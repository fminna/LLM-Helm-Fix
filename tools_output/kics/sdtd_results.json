{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 104,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:24:44.986291+02:00",
	"end": "2024-05-17T23:24:46.937247+02:00",
	"paths": [
		"templates/sdtd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "a9cb736eeace14ce7392760baa87019f1a27e2d4d1a7f4030924f088a951a74b",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "70778bd005d2a306e29982a878404b78274cd7f6b96a0c0fb14b2a8e23bb0482",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "26df6395e0369a7c85ec104d5a5d196b40c3c44b439da843f2f58b1d0839dd6d",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "2dd9e0e7d65d883f0dcb59b3b56b798a28035ee66a639f07236adcfebc880aa0",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "6af190880e47ce873895393d7a634b61be482981c137dc3bdae780b0be885aef",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "efbf3a4165a97e4677f6a889ad9f4810882324523a629125869b7f49f4185f20",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "44068247aa577ef22cd293684fc4ad28407cbe63c4e7d1de399e50ab3ac6dc80",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "7409344e182274588ffd26697937a65372616d9fb2111371ac2074049e666871",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-sdtd}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-sdtd}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "7a5b5cc1ced4b0c72446188530f4145840b9072637a12aea680c87be697b5a31",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name=release-name-sdtd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-sdtd has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-sdtd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "4b39418b3067ad749f8ed90f353096bad38b0237a82a1e55447b6104b0787f39",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name=release-name-sdtd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-sdtd should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-sdtd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "b692e6f06debbbb9504ad6f992b768e5e56475e0c80bee10e805c941e970432c",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-sdtd}}",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-sdtd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "79f2263112276d1c66e30f4b2f550bf8e966c62e7f09a90f3235d1645899eee9",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.containers.name=release-name-sdtd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.containers.name=release-name-sdtd.securityContext should be set",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.containers.name=release-name-sdtd.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "65e00fb787c2e5510296b8452da8b0871232d13f361e995a617e994f990ed4c6",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-sdtd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "9ddd84c1c4f0ce82bec75c646322a69378995dfa3f129d256ef1ef4c709f2ce9",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-sdtd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "9e4ea3b4ccaf6e22f8b4da63a5d48e2bb235ce149fa7b7903f4c83e012a42f7f",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name=release-name-sdtd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-sdtd has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-sdtd does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sdtd_template.yaml",
					"similarity_id": "c78e2f1deee3258571b5c2d0fa2bf167f381d8eac4c4418590d7b615f17aec99",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-sdtd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-sdtd}}.spec.template.spec.containers.name={{release-name-sdtd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
