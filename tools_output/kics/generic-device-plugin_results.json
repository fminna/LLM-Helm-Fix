{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 184,
	"files_parsed": 1,
	"lines_parsed": 181,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 8,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 26,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:13:05.438064+02:00",
	"end": "2024-06-26T01:13:07.647124+02:00",
	"paths": [
		"templates/generic-device-plugin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "fad8f43aa1f7a1ff12472b8da17fd903df208c589dbba9c3d574fe2c1332ece7",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "b6378dafc18938efb58c27f7855fe4eeae93311de717aea92e7536842ee7e6c8",
					"line": 180,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.volumes.name={{dev}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-generic-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/dev' mounted",
					"actual_value": "Resource name 'release-name-generic-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/dev' mounted"
				},
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "23732ec7344dec43f9e62edfd9c32dc168d002453f064a2fafa2fe73405acb7b",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.volumes.name={{device-plugins}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-generic-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/kubelet/device-plugins' mounted",
					"actual_value": "Resource name 'release-name-generic-device-plugin' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/kubelet/device-plugins' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "b27b6796d6a94d73860b1a3bd5bfa8448ba33a168803ae257707d317fc21a227",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "b3e05b03c69f8a00ce40005f661e942b2ecf807d4dd695a2d18f965cf0a27065",
					"line": 145,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{device-plugins}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{device-plugins}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{device-plugins}}.readOnly is undefined"
				},
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "3c7633516c7de7a70f45b4ab8a0cba5504fbba785bd9bfea21b23843d3c74735",
					"line": 143,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{dev}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{dev}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.volumeMounts.name={{dev}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "92776c989d56a2861b1eacbda377d82decaaae318c2a14a9d12761e85e6e3611",
					"line": 180,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.volumes.name={{dev}}.hostPath.path",
					"search_line": 180,
					"search_value": "",
					"expected_value": "Workload name 'release-name-generic-device-plugin' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev' with hostPath",
					"actual_value": "Workload name 'release-name-generic-device-plugin' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev' with hostPath"
				},
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "1fc001b29a54a50529c3ebbe822bf8abfaab4053835cf7531371a226e4b772e7",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.volumes.name={{device-plugins}}.hostPath.path",
					"search_line": 183,
					"search_value": "",
					"expected_value": "Workload name 'release-name-generic-device-plugin' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath",
					"actual_value": "Workload name 'release-name-generic-device-plugin' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "1ab5f047835adfdecc9b375f705f0ec87379b3664f86833c8f2160a0c2adadd0",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "743c612076f737f7385c7ae059243926313e816bda64b05f11928fdc8cfaaf86",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "0a65dbe324d6473d28f3be0975b0a7160a168c2adfc208413e821c4771984772",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "fd6b137ad51e6cf3fb58d76298312d96376fe94a9bdfb7c34bf9c2be570516b0",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "9be0bd130af3f11cb61def58d99df4368e1766b53faf0865082ddcd690a6cd8e",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "c36506a2c239c7fec3dbcab67a5a9d6d2e53ac724ca9d53153fe2d2aadff17c6",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "61a42221b7fe0296e7c0da9f0392da2522aa35fe65d4c19d124603a838691f44",
					"line": 117,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "4d2a64feb3aa95bbd7708f5e4991ef9d4b0284dbe81cd8bcc7f96892f28420d3",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-generic-device-plugin}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Service",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-generic-device-plugin}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-generic-device-plugin-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-generic-device-plugin-config}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "f6e833cc6359c08e48e20e16de21557ce46bf327859976cc5161b5191f5a8aaa",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name=release-name-generic-device-plugin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-generic-device-plugin has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-generic-device-plugin doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "30b34600137ab4dbbfa6381ab0972981b824b18d828d2a65242644d2f9a177ae",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name=release-name-generic-device-plugin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-generic-device-plugin should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-generic-device-plugin doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "647bf92da7f3f1bbe88f21e0d6daabbfbb6920b835921a7dcd0a11ee765fbc82",
					"line": 122,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "aa84e270d0f01a0766a35f04f06f0c19c06bc55b71a5f1a5df2a4aba668bb431",
					"line": 108,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.metadata",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-generic-device-plugin}}",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-generic-device-plugin}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "4f9819c24a0d0db9efdd5432463213248386d3cfd16fde24bdcc0b4589b77de1",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.containers.name={{release-name-generic-device-plugin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "584d274d73bdf430502d10763dafe547c3af424839ebb6d566aecde59e17fd91",
					"line": 69,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "6ab269acbc16ebdf932b2ebb9eda7d2a97268ace3bc123243a862984fbf18696",
					"line": 69,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/generic-device-plugin_template.yaml",
					"similarity_id": "5d24ab4db82d7c54762f66588546c8708478b7860b7de4b89ce1d8fe12242190",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-generic-device-plugin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-generic-device-plugin}}.spec.template.spec.containers.name={{release-name-generic-device-plugin}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
