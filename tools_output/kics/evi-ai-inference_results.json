{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 288,
	"files_parsed": 1,
	"lines_parsed": 277,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:30:03.699662+02:00",
	"end": "2024-05-17T22:30:05.629511+02:00",
	"paths": [
		"templates/evi-ai-inference_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "4918b05fa6bdb468dde77c487b9f3858867428447ce3c949deb060edc8a8a9d1",
					"line": 188,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "2a1cde46dbf8bff7a71828f31fbae334ddc38ccea2a11c85abf716cbc79f9e6c",
					"line": 210,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.volumes.name={{dri}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'evi-ai-inference' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/dev/dri/card0' mounted",
					"actual_value": "Resource name 'evi-ai-inference' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/dev/dri/card0' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "9e4abfcc3404367992b2df2a13369fdfc151e39f04f310857c25da3f287170ed",
					"line": 187,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}",
					"search_line": 187,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "6458edfac46ae094985ac452138b702059ada422005d7ab082699a3103d13383",
					"line": 210,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.volumes.name={{dri}}.hostPath.path",
					"search_line": 210,
					"search_value": "",
					"expected_value": "Workload name 'evi-ai-inference' of kind 'Deployment' should not mount a host sensitive OS directory '/dev/dri/card0' with hostPath",
					"actual_value": "Workload name 'evi-ai-inference' of kind 'Deployment' is mounting a host sensitive OS directory '/dev/dri/card0' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "dfe4ffa401ee0a346d7f8a410f0fc31204876fcf524558c12c63415b58e2e196",
					"line": 187,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}",
					"search_line": 187,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "774262b9a1aea036d921e271be6173de41e17237671bfc4ef6a84ab8d9c7034e",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "d5b8ae71a81f41de9c9a905a31b1aa4f2aec40fa26457bd98d91ff5b6ba25b5e",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "c3ed59d08ed8d1bf6dad555a20b7d7c86b472e9487862e50eda5337b221d8b70",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "b7a2890ca57dc005a6d9fd56a31f365f8e8450c4e31e1ae20294b409db87a011",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "f450ef30d17127185a489a2897c90a45df7cec2a3a110674c6d7ece28bb24488",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "4c3cf8c38d389e625e4f400ff02dedb559d07d17318beb14b90464d5c6b42e12",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{evi-ai-inference}}",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{evi-ai-inference}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "041c72f87922703a8c9c27d2029d7a0af2a4c129e3e757ff482c06fe42c1a601",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.containers.name={{evi-ai-inference}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.containers.name={{evi-ai-inference}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.containers.name={{evi-ai-inference}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "23ce90896b68f088f220b7325a2e44c794c01e613a6c2ef2e3e403b01cb9b461",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{evi-ai-inference}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "30374d298f6d03987cd71969c60e26754052f1136d98da06823fe1ec78bb2b87",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{evi-ai-inference}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/evi-ai-inference_template.yaml",
					"similarity_id": "a2922fc5aa2d8bf07b5d1b0238f1bb5be1ceae19e676963eafe0c7c335724fe5",
					"line": 187,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-inference",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}",
					"search_line": 187,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{evi-ai-inference}}.spec.template.spec.containers.name={{evi-ai-inference}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
