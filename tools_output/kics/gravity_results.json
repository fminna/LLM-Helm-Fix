{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 345,
	"files_parsed": 1,
	"lines_parsed": 340,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:16:53.974967+02:00",
	"end": "2024-05-17T22:16:55.916273+02:00",
	"paths": [
		"templates/gravity_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "cb833767aaae18aae7ab6bba35289f36245e1a81a2c74d2afdb4119146bbe815",
					"line": 228,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "c158fad1228d7cbd95fe99befb0a4ae193ea2216b58f2be50361b068fd756bd1",
					"line": 225,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "f6ed62c7ebb6f22c8e8e8709e7534e27862152c3ce3f6aa81892c74c0d68253e",
					"line": 216,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.volumeMounts.name={{devshm}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "c1740f49433faf2fc93820ff048f89271a00216a18cd92532f084a1fb403105b",
					"line": 268,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "59c0b61f165d0df976b1d15fd3b88168c231ded6ccf3e68076fc552203d8293f",
					"line": 268,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "9cee5e899ec7ec314227cceb8bfce1fae600ab117534d9f4ed1d5db16139afaf",
					"line": 276,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.name={{release-name-gravity}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-gravity-gravity-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity-gravity-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "5e7a32a6628929093d428e7afb06026083c408bcd8ec038ffdeb30998b3682d4",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.namespace",
					"search_line": 110,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Service",
					"resource_name": "release-name-gravity-dns",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity-dns}}.namespace",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Service",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.namespace",
					"search_line": 81,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "757a30bd39aeb37a432f5f02ec3590237ba6885f50b4e92566653ded2e58b861",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.metadata",
					"search_line": 143,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-gravity}}",
					"actual_value": "metadata.name={{release-name-gravity}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-gravity}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "2b59bd4db412dcace59688a91561460d1e22175b66ce1abe95571165cf99c36d",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-gravity-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gravity-data}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gravity-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "23ce90896b68f088f220b7325a2e44c794c01e613a6c2ef2e3e403b01cb9b461",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gravity}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gravity}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "ea9b7ccec396e515be2b56849fa9d9975332860489a9d134545a26fa355c70d2",
					"line": 26,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-gravity-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gravity-data}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gravity-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "30374d298f6d03987cd71969c60e26754052f1136d98da06823fe1ec78bb2b87",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gravity}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gravity}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gravity}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/gravity_template.yaml",
					"similarity_id": "14dd37d894b38be46485e65f24d5de304391a43f420e80a94a156dc2173bc3bc",
					"line": 312,
					"resource_type": "Deployment",
					"resource_name": "release-name-gravity",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gravity}}.spec.template.spec.containers.env.name={{ADMIN_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-gravity}}.env.name={{ADMIN_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-gravity}}.env.name={{ADMIN_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
