{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 111,
	"files_parsed": 1,
	"lines_parsed": 107,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:28:41.337019+02:00",
	"end": "2024-06-26T00:28:43.262262+02:00",
	"paths": [
		"templates/easyclaim-frontend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "f0beb65a29453ccd32102d4364677ea2527e1e8f3b113b59e31812568dcb35ac",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "bd0fbe1a14676ef14a5c987d916b77bef84f6d91fa128fa355ef20c54defdbc1",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "c3bb23e2be8057b59e5bba46fc37711f70851cdbc00b4938e77477f6459d5a4d",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "4cbdfbc61a02ec9b512718155b7509b398e801dc93dea5de208b17867c40517f",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "3c1719332ed3923c20fa7a32ac64103ea7ac0a160105e4e5bfa9f0cc0e8a0571",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "ddbc825af0788ea70d34be639e1d4e386c301ae243a98f513189b2df63b6d730",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "0c06a912fb8d8fb85d4f695f8a553867e89fcb056484a471d2248a4f0f1c78d8",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "1173642cefc82105bc6678ffd92e8d56d94bc1dfe6fb6f0eab0a038e75a62f8e",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.namespace",
					"search_line": 48,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.namespace",
					"search_line": 26,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "fb1c9819bac9e2b8ddd9089f59bae7459ae05987a030ebf27d8a8520ecb9862d",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-easyclaim-frontend is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-easyclaim-frontend is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "dca22526434ec14dc097716e247ce2125bdc43a2c14032c34e1532a0128bd812",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "71a6222b478220e8f0a5b275ce65b791915cafedf5b37d9f7091838672e8577f",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{easyclaim-frontend}}",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{easyclaim-frontend}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "3064ddf2bfaeaa156e5d1b36413707f6d0344b5a946b0aec739ffb729ebae191",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.containers.name=easyclaim-frontend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.containers.name=easyclaim-frontend.securityContext should be set",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.containers.name=easyclaim-frontend.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "4fdd13069dd9726c60d0e94c951e74bc2dae80b2d8932ff7df3fc80d4147ef10",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "f72cd54fe1e8c475d34521ddce31cda45d5c5e7d3fa480040b25216af9907379",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "ed8e30dc62b5fb89be9b69f4323247334f9fedaf55d8eabb5e98834c2182f50b",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name=easyclaim-frontend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=easyclaim-frontend has a security context",
					"actual_value": "spec.template.spec.containers.name=easyclaim-frontend does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "549fc4f6da3fd3c000311488d0749600a9cda4dacfafa0a5f5be51cb85d5a274",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.template.spec.containers.name={{easyclaim-frontend}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "4c493592c95292c5c14662e28125062d49a07f51e6a47708e6d2c6aad779b234",
					"line": 36,
					"resource_type": "Service",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{release-name-easyclaim-frontend}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/easyclaim-frontend_template.yaml",
					"similarity_id": "4eec565c0de7cde7e6f2a6820b449c932b32c131f7e4ea658530e5ae7c7f238d",
					"line": 42,
					"resource_type": "Service",
					"resource_name": "release-name-easyclaim-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-easyclaim-frontend}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
