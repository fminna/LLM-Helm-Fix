{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 412,
	"files_parsed": 1,
	"lines_parsed": 388,
	"lines_ignored": 24,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:40:13.187835+02:00",
	"end": "2024-06-26T02:40:15.269542+02:00",
	"paths": [
		"templates/armiarma_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "335a95a9c8a491d87852f333e5b8369211a3010dc9b5ee125c9b5a9428ce6711",
					"line": 373,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}",
					"search_line": 373,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "2ccef189fff175cf9f71ea209db2cd50462ddf717e43162e4b78eea16fa36d2a",
					"line": 308,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "84e2aea859b61e05902e6b1bcf0bcf0be92ffbd089e3d9d859f9c5b9dc1a6c74",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "e4e007dbb9f8abd079a7938254b42ebe7c1a23bfd9cfda443df8b5395c194315",
					"line": 366,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "f6e041614a23122754e6698fa67b78b8e522cead00dc8b89992cad2d073640ef",
					"line": 303,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 303,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "ec6bd9b253160ae15181bb4c3dc2f2381d3d43b6b9f83cba02e88339a1319361",
					"line": 366,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "5b47d4501e4de50b80910b056984b40913d6d252ed4c4ccb41c54f258fd7c10d",
					"line": 366,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "2f6feab577c063955a6046dafd37ee8533c5b4eb34f7ad2d723c9e05e75f23dd",
					"line": 373,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "f206e32452f6d36b154e1b259667cb8deb7f9fb65c822e9c02ff541aec0c591b",
					"line": 197,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "d77d3f88859da8d51beb3f793005126e57f7ec9c5f50f9a59581eb0a40b38b2e",
					"line": 197,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-armiarma",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-armiarma}}.namespace",
					"search_line": 12,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Secret",
					"resource_name": "release-name-armiarma-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-armiarma-env}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 92,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "b2fb63bac6e75c4144c61839e1601a94c5245b120cd3d9b7c9f119b1c889c5f8",
					"line": 142,
					"resource_type": "Service",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-armiarma}}",
					"search_line": 142,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "7c05d13214f5bc907f8c23b851acadd77c373cccc0fc20ebbdcf0fac1b6215a8",
					"line": 332,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-armiarma}}",
					"search_line": 332,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "f10455d8e77dd29cc2c80bc17c641c9f8a12fd90be212f3b8e9dd6e5f6413e0d",
					"line": 117,
					"resource_type": "Service",
					"resource_name": "release-name-armiarma-headless",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-armiarma-headless}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql-hl}}.namespace",
					"search_line": 57,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 168,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "c50b199100efa0ad24c91fe66c4ffbcf2467f700b50be0f6e2b70a7b351ef49d",
					"line": 303,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "a29ce5c6b5426e7cdbdde7f6c9446f261de7e036656bd45733f05831cb721148",
					"line": 395,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=armiarma has limits defined",
					"actual_value": "spec.template.spec.containers.name=armiarma doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "b4db99416720fb5f4d68bce1282acf11d7211f5a6dac35b82658acaf02602f11",
					"line": 395,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=armiarma.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=armiarma.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "d209aa3e7f54c5927dfda67281fdf5a4e121a7ea8be9085ef4b81d4da4ae04bc",
					"line": 368,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "a9a448a72bbdf3e6c53f1d59bfe98004957001511095ff7b5b3b6eaa6b517aec",
					"line": 222,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "aff31985610288223cf84e8e8ca34c7777426253e9e5c1cf3b000aa42263352e",
					"line": 355,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.metadata",
					"search_line": 355,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{armiarma}}",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{armiarma}}"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "995019c51aae9b9bed84b9eb7de8c89a849becd498d876a1ef1d309274e7420e",
					"line": 188,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "3a62328e9f97043cc3d7ff80f41519129c51b7009e572c1446c29f198b285168",
					"line": 373,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.containers.name={{armiarma}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.containers.name={{armiarma}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.containers.name={{armiarma}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "0ccbeb796febdb1257bb1ac67b35ba1f4ca97a4c52c9a89aa7946fa84292a0c3",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-armiarma}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "e159c15a744ee416ed1d8163b643ff79ea17250394b081d7c4a790ff29d48abd",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "fc4837386e54554d8e5093ef38871a9f93b95d20b4fdbf36f4567e7209405fe1",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-armiarma}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "ca5baf4425b08379df0e636670f31a081ee07f1231adc3e3e390f0fe2f565144",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "59306f16d3d96a7f901f748bbd210a8300d028297c70d82047a33c52bd140ea3",
					"line": 229,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is false"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "f519fbaf594d8b58c8a967d1d32d76ad2de47eda8c9d9702689eda236b1d642b",
					"line": 373,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}",
					"search_line": 373,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "2aa78a15c9988614f9b59cf1036865f81d7f2efe99e905f0924a0abd574d9865",
					"line": 397,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-armiarma",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-armiarma}}.spec.template.spec.containers.name={{armiarma}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{armiarma}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{armiarma}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "63d8be275e3e989a60bf672e24622e18a1f511e275088cb99dbf161b8b2c414e",
					"line": 246,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/armiarma_template.yaml",
					"similarity_id": "738555fe8f3dd5911e4410b0079f41de00324f64d91eeb18b7965a41f00aa73b",
					"line": 326,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		}
	]
}
