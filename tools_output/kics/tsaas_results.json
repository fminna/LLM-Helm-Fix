{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 71,
	"files_parsed": 1,
	"lines_parsed": 69,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:25:03.698122+02:00",
	"end": "2024-06-26T00:25:05.560924+02:00",
	"paths": [
		"templates/tsaas_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "f27e3fbcf0c421b3bfac9f18b15c1daa2e38ebd5b08f839f2c28a446473c4e3b",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "f1613a7ace4b0710a5c42e54f4cd945f9c7225f9f3caf87361b35c140a500358",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "f5056f6b61d602e32a4dd8d850b8025bca65ca67ab197c9400c77bdd8786cac3",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "ff18f34a460c045aa8b7a166e5427fc06d74d3540cd7ff3ab11e81fa01c9f4a5",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "a4f6c7fc877393026cf16f5790fc9cb400e0480650a50fdd9565876962bef12e",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "1f920701708140591ee8158551fafada78d3131acf30a34cc65a62eddafd6e1a",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "a4e8ef56d23c1b2d9ed6ca9ebd5950aedaa8f8b2d676e7dc3ed0ecc04bc84c92",
					"line": 45,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-tsaas}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-tsaas}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "9a4475434124b54ca814796b1d1abe717e0006ceea2dd39e476c31e9fdbabf2d",
					"line": 49,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "49b8d57eb4722b837f61756529fdfe89b9ad4e4af96269c6a3769081c7dc7218",
					"line": 41,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tsaas}}",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tsaas}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "ee5e5584c222e8a48d50fa5ae068a6cd08ac839a324abff4e533aad48da79c3a",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.containers.name=tsaas",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.containers.name=tsaas.securityContext should be set",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.containers.name=tsaas.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "50058ae4852d8b6faf9169bc4889435ed5ff5e2094cc7b1179229c4e3165c5dd",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tsaas}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "1da1cb1639bb40416cb35954fa36344566c82b20ab8f6a266149725108b9115e",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tsaas}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "09723ab14c6e02c28dc7b4c1a74338bbfbf7fdab86f8ec506577a5a08f1e969a",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name=tsaas",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tsaas has a security context",
					"actual_value": "spec.template.spec.containers.name=tsaas does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "6a5632a56c5eb053aab0b33d747b8aaf9a9e68a84aa31d72f40d3ebd9f35fbf6",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-tsaas",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-tsaas}}.spec.template.spec.containers.name={{tsaas}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/tsaas_template.yaml",
					"similarity_id": "3407e0b528b238c22973a322d18c6163ef49e344d5c221fc1d30d6a80dec6db3",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "release-name-tsaas",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tsaas}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
