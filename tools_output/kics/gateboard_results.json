{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 302,
	"files_parsed": 1,
	"lines_parsed": 290,
	"lines_ignored": 12,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:23:21.418327+02:00",
	"end": "2024-06-26T02:23:23.494324+02:00",
	"paths": [
		"templates/gateboard_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "bd9689413bb281c8a98546ed3a750891ed77f1d05f5fda03f3f970d8e1bd3faa",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "98900133ee70ac2efda8c0627c6f2f0e67fd93c41cec2f166ce14cd1f145e7b0",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "fe8741e8f5cdd7e051c5c7390723f03e251c40c05f7a9107876c19ef876f74d9",
					"line": 217,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "c7b0be69406463615f85174b586fc81d66b01e8017a8d436eb6681270cf54171",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "5b46fa374e1de93984f02245a8aa485c039875378c5a8d65fc60674d0e48a6d6",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "cf58c304afdfe412f29de46b4ec4d87f5d422e2356aa226132f1dcb85854a6f6",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "c5a01354dfd7046b6ee1204066f6e65334bc02d4025ffaf217fbd19f3c220950",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "2af0939907fd7c3ff6241f906db521da1cd7b6c529a91b4e92a031e48b031320",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "493db3c34cfb65c9b7e6a0456b2f3e373b99d5d316c1d6fe5b05354bbfb299cd",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "d67dc92c3ccf4781c904aebc946fe918641c9e69f45f23b6b6fa897491e41b54",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "e4eca6bed738574458bb8151fc77c3658e2c1e5c636cca5df7c646e8efb02e98",
					"line": 204,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "112c6e56ee9484ef1cc0f01957f8b94b13458f5ec1f58562cbfd4c3f2417500e",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "7f3587ea0bb436263a789251b4eb72d7a0f7f2a1687ecd2e3d31ac576be46738",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "fbdf1b05bd139a4706ef8b4af02f31fd6f1771d3f626112d049ae4bb91cb8b28",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "1b166494259c30652239bdcef4ab299e3a7a1d73beb65b70aa374636f01660de",
					"line": 295,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-gateboard-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-gateboard-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "42e073f5e02e4519733b60ff4ef46c3bdeb61bbc15b6811b2bf9df45ce54c009",
					"line": 295,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "d431e21186a26bbb9aee4638adc9f13825175893074f076140031a8479955a8c",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-gateboard}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "2ca35aa53a48b1f85960f8ad384acc2ea5ded75902965a3cb3e186503d0835b0",
					"line": 286,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-gateboard-test-connection}}",
					"search_line": 286,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "89bab32a45a7e60beccaddb7d5d1bac449401a2fcefcc922722c6933d2fdd3d1",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-gateboard}}",
					"search_line": 156,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-gateboard}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "8a553bf4f3ebcb4cfaffe877593474bf8132b5681ee0b1d00037b0ec0a961b86",
					"line": 34,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-gateboard-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-gateboard-config}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Role",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-gateboard}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "7af8bd27b8285e55aedecc17caf51d0b9ac369bb425c3b5912e54c6c9a138327",
					"line": 134,
					"resource_type": "Service",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-gateboard}}",
					"search_line": 134,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "18bd6d5b1eb240c27528b15e6a79fbde6d5dbed88a41f781c9a219b06448cff8",
					"line": 120,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-gateboard}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "7a225995e7e4d36e722d6567d2117c6e4b5c1a87af0a7ab708ab95d86f18b645",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "f8008955dd1b2c9a97d47789a651ed3940294f0eed079d209fb4acc23758a820",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "2c894cdb375de906c744a11213ab48b7d8cd276db517825df333a8d27741d6c1",
					"line": 208,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "7cb784a1f4119167f8b10ab722152a2fb0e9b710543f2d1c936c538020476ea0",
					"line": 298,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "8d57a3a31a9aaf61bdb3f0957bdb954da859b95fd0e5857ace71a9ee1419ccf7",
					"line": 286,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "61d879399b1af641e44cecd2556ad88bacb423f4061e025e92dbda919f9e1098",
					"line": 170,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.metadata",
					"search_line": 170,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name}}",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "753ad5d5481448c54d8e14a7be68d510febeb4944cf2bf48e4e4e2ff0b16a8c5",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "1bbfe935f888439829b31373876225d1f42a2d0089c25a279b5fac68ccabf9a1",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.containers.name={{release-name}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.containers.name={{release-name}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "ddbe538885a1c8cd14caeb019bddcdee67f2f14bec6f13ba594cbbeb94125534",
					"line": 286,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "52ce3ba295181a368e5841892806753a7dfb36926a3b95bd07b2d176069d19ed",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "5d21cb3cecc444bc0d0056b1e91eee63b35e8ee7e0f621ca7abd6254c191616b",
					"line": 286,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "00667359829f93e15904a3bfbd33bf4cd7be023067a94411d63b643b07717883",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "d376ff27b561fc3296915a4091486eef627e9326dd2a90683fd5deaba542a122",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "a8039a8afde9ccbadbb97d1a56cf858b70f1ebd0b320256577d83552c594dc7e",
					"line": 295,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "6b5f3614505fe002a02a01609a681bd2ded08cd0bbc81d44914a1518d42ee410",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-gateboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gateboard}}.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/gateboard_template.yaml",
					"similarity_id": "c2b0316c64e3519d2d18f8a9f87f6cb461246494435af7e5571aad45067f76af",
					"line": 297,
					"resource_type": "Pod",
					"resource_name": "release-name-gateboard-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gateboard-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
