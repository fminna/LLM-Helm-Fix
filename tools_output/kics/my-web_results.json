{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 47,
	"files_parsed": 1,
	"lines_parsed": 45,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:00:58.59399+02:00",
	"end": "2024-05-17T21:01:00.501466+02:00",
	"paths": [
		"templates/my-web_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "1a49cf6f7cdf7c7379f179892d80ecd21993c79f2d7296f999231776e77c5dd8",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "4a59563ff1f54b841c06e2403278240658df189e0f1713f5f1e68113c0844bd8",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "dab511b160cf5d71b29af1ef7e5eac9eec4298429bd7f0d26b67acbfdcf5dc11",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "45a279f1cbf8390db3f92f5eea437ccaa9cc52b366b54977b51087ad622ec8da",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "40827eca5b2e44d29b5dee5024b591c2126bbe31874fbf4a165e12b122a4394e",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "f848cc1180097f046fef5f389a2068ef230831734964423b1a03e44dfeb424b3",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "fb8be95c34387c5b6ef528db129ab1d92a1dd5a8dcff064d173f21700ae22ea9",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "4ed632bcc531a877f16c73cb5b7fd853bde5b3ace1d9934055428b5a52a17c1e",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "df4c8239ec9f5d279bd408ef990a8b0366bbfca82bf64287d356e3ce8dca8ff2",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{myd}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "69e13d7c5e1a9d07a57a9f92f7c5af4bd53adf776e2512e3522cd59d61e20d0f",
					"line": 10,
					"resource_type": "Service",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{myd}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "679b117beacfc90317ad8170b4b76ea0ec136f6c66dd65458d6b607606d3f147",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apache-webserver-php has limits defined",
					"actual_value": "spec.template.spec.containers.name=apache-webserver-php doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "3e45cfac1e5cbabc42472246428e4748758f5a28db6ede66e5283aff97d27ac7",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apache-webserver-php.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=apache-webserver-php.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "63236ee8daf98b1deacf928a45f3d48f7292547cd957e1523eee612c00978b35",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "f96ac76b1962f63dbc120c68f3e6a1779498631fefbc60d1bf0189a852b47f74",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{apache-webserver-php}}",
					"actual_value": "metadata.name={{myd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{apache-webserver-php}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "bad7d2211f1e8e67366e3215162b6c341fa7cb5ae4f45148b9a419fd596c2b1c",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.containers.name=apache-webserver-php",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.containers.name=apache-webserver-php.securityContext should be set",
					"actual_value": "metadata.name={{myd}}.spec.containers.name=apache-webserver-php.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "1150c41aedfce7224ee03485d40d2a50f028d3ec617dc3263d03f753a5e0a556",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{myd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "d7dbd6623982fe4a7ac248e51534830470fede6ab99f077528d4a67ba1049e62",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{myd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "afaf70b418991e85b733d700ad405d36470504a3b5c017ec714005de49e50e0f",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name=apache-webserver-php",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apache-webserver-php has a security context",
					"actual_value": "spec.template.spec.containers.name=apache-webserver-php does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "b81fc55b8034be481bec5a9e6a73916789b638bbc4a9e1348debd7acd77896bb",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{myd}}.spec.template.spec.containers.name={{apache-webserver-php}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "1bf8f0f2b42ffb90fe96f5362eba25134fa4d7c845fda5d48d7341c635d18c93",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "myd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myd}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myd}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{myd}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/my-web_template.yaml",
					"similarity_id": "85c28afa72ac6bcb6d0a78c60257709bbd27d4dd7c622464cda60e34372cb41a",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "myd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myd}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
