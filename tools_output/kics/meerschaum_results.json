{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 153,
	"files_parsed": 1,
	"lines_parsed": 149,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:03:50.648078+02:00",
	"end": "2024-05-17T20:03:52.597252+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/meerschaum_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "66cdf39c5c974a5b2e353bad769858aaaca2f0bb2a73f806868e90f15edf8ade",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "26d284e54bba7e784e1bd267cf535daf11d244d7db3674e6e2217b3a96c3e319",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "4af9410030a95c91b589a354a9f664fd2260864e8656b94b6c404e779d323241",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "d183a17bbaadc5ee0b4fd89fb1037c8e1f6764c1d8509ca6cf152b378ad60205",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "001b289eb1b4807d9c47d1028380369dca9f22016d1bdcc64d9846fd55e44a73",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "d14fe9ce57a1608338fb658bae0ecc23675434d7c4ade7ded0a4342a6927b67b",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "Service",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-meerschaum}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-meerschaum}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "a3ee2873017c4307c1b274e5a11cc1455ada2379930e0220aedfbf80de1bc599",
					"line": 130,
					"resource_type": "Ingress",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-meerschaum}}",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "b63f493ed78703dc9abb99e5b0d06fd9335838c9f6dc4420c3367e4664c55496",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-meerschaum has limits defined",
					"actual_value": "spec.template.spec.containers.name=release-name-meerschaum doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "b2521fcac017cfc9701d9daa779e0eb5624adce41350649fbf4641779f0aaec8",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-meerschaum.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=release-name-meerschaum.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "35fb18d1fd39d433de3cdf7103b852f83c662f757cf914d4fe4acd4811a379d6",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "287e93c611fa7171dbc4d9bad2b4ab6dd64d1fd4d8d1ab6d6de250df107ff88e",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-meerschaum}}",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-meerschaum}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "3b34d0f456dd77a62569f352a1077e43de89c6984ad3754e19c7fc9004109f53",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.containers.name={{release-name-meerschaum}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.containers.name={{release-name-meerschaum}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.containers.name={{release-name-meerschaum}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "46c4600cd00a4a8fe0d608c9afe94796af0a6b88958224834f0870f935929f30",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-meerschaum}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "db924a0ad9efa5b093549b729ad27be6cdf8e77ae2ec6d20627176ccf0904ba0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-meerschaum}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/meerschaum_template.yaml",
					"similarity_id": "8a3ba2aec9c31280027139d2cab0e32264bbd2760ef548b191ba7ad901166d8e",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-meerschaum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-meerschaum}}.spec.template.spec.containers.name={{release-name-meerschaum}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
