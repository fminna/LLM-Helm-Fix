{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 222,
	"files_parsed": 1,
	"lines_parsed": 217,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:25:11.581856+02:00",
	"end": "2024-05-17T23:25:13.483269+02:00",
	"paths": [
		"templates/evi-fm-worker-as_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "0dc9e849a511e59170fb8f730c1575edf729e41730c1a7ecd3fbd42b1f76a8de",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.volumes.name={{fmlocal}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-evi-fm-worker-as' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/home/fmlocal/' mounted",
					"actual_value": "Resource name 'release-name-evi-fm-worker-as' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/home/fmlocal/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "206fa55a5101d12343da1c718fc9837a8ab52d6aa9b0ef6abbd03aaecd403dd9",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "468e5af6660b2ccc06be17011f10bbaf2691446741edbfeadf8e35dc13b9b72d",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.volumes.name={{fmlocal}}.hostPath.path",
					"search_line": 156,
					"search_value": "",
					"expected_value": "Workload name 'release-name-evi-fm-worker-as' of kind 'StatefulSet' should not mount a host sensitive OS directory '/home/fmlocal/' with hostPath",
					"actual_value": "Workload name 'release-name-evi-fm-worker-as' of kind 'StatefulSet' is mounting a host sensitive OS directory '/home/fmlocal/' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "3709529929a06cd8d186fa5490d1f49e7e17e4747cc9b558b941e22362f7229a",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "7c2ce11e74c0116c8252c5483faa365e95fb5c8749b6aa627a9950d099a6764a",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "0ea18c30532a65e169b3eb890e61b32d70ebff2231883c8868f4584c1671f156",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "c8646b6de37b1ff73d51e0b2ca2564190bcd2d33f1c6c52ece1fc5c1fcb9b731",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "8148dbda9feb38aa17a512efdf487ad30631b3a43777507647799956734d87c1",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "29b3c282e483584e51a9ac79d15fdd48ccbcc0154de6b423f0f6385452c6e208",
					"line": 84,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "00013bba244f9b2a3397b0d84286572a7e39b1abc07b82e722a5ed1e119bef79",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "c3d290751ec7725457902ab351939ad840e83e156ac70980d16d4a595f937cc6",
					"line": 79,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{evi-fm-worker-as}}",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{evi-fm-worker-as}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "495af7557209db7f4e7e13c24eb479a28ffb9282882521f514beb6606bb50503",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.containers.name=evi-fm-worker-as",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.containers.name=evi-fm-worker-as.securityContext should be set",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.containers.name=evi-fm-worker-as.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "81667bb41120c17350658d2e60996829024012fbc908b7a9c97199a54f2a9b00",
					"line": 69,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "51c93cd65042f95e0035bc3939ad6dfc27e21e998835ef90d8697724fca8317a",
					"line": 69,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "b8abdf14f12e7fcd5a0437dafcd52b45d92aba491c252bb025e8e2baa770f3de",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name=evi-fm-worker-as",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=evi-fm-worker-as has a security context",
					"actual_value": "spec.template.spec.containers.name=evi-fm-worker-as does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "53a21a6b7c365da8f79f3be4235fd3e5e37457d8a3b2546700612932f0b11a2b",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.name={{evi-fm-worker-as}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/evi-fm-worker-as_template.yaml",
					"similarity_id": "61b169245abf1c5659f65307644bbbd9d183900c7bca21c8800e99806c239d48",
					"line": 124,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-evi-fm-worker-as",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-evi-fm-worker-as}}.spec.template.spec.containers.env.name={{FeatureStorage_PSQL_Password}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-fm-worker-as}}.env.name={{FeatureStorage_PSQL_Password}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-fm-worker-as}}.env.name={{FeatureStorage_PSQL_Password}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
