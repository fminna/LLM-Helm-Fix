{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 388,
	"files_parsed": 1,
	"lines_parsed": 364,
	"lines_ignored": 24,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:12:32.189155+02:00",
	"end": "2024-06-26T02:12:34.449438+02:00",
	"paths": [
		"templates/service-presets_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "d4e9449031f3564a194a2bbc7acc6b85a222d5099f622e52b794af8a8fe7c550",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "b21ac85239371896cb2eba8224b5489fdd6fe805865c41d4d4ba96f384e8dd57",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "c6be18e611c2e2f1adf676ed2abe0322e2ed63fd4d7fab8c7e4a76e1ee710824",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "038797b7bf80d9bb88af4e420c95709785616c6138bc391c31085d2ab953fa73",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "f7ad08a5c620e1abcc765fad2ee2db26b2df10c9cf71640062a10c6089339d8a",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "f589aac8c12c79a9ed6f9458ba959a435b5c4450d935fda4a7781124b0fdfcb3",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "8884555a36bc370668e476773b5e963af2da1bb38fee7179b3805b49ddf4e9b2",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "1b74b3bd38a141feb673c54363b2363819930ee274c1cb989df9c62746c00a0a",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Service",
					"resource_name": "backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{backend}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Secret",
					"resource_name": "release-name-service-presets-ca",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service-presets-ca}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{backend}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{backend}}.namespace",
					"search_line": 87,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "6b60541195432d40f9655b690df87d16b5eb6d7bed128fb88dfc95459d83eeea",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name=backend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=backend has resources defined",
					"actual_value": "spec.template.spec.containers.name=backend doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "fb48fb08137e9607137b0fac95e794cceb917b75c576e89a9b32ea461d0a4a9f",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name=backend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=backend should have resources defined",
					"actual_value": "spec.template.spec.containers.name=backend doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "c63480c364f67e3cdb0be3b2265370be188f3c82a4952e3f41032ad43fa534d2",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "e3c4901edb275946709e762d983f81d17dd4ee7f3a260facf27d573097f50ff2",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{backend}}",
					"actual_value": "metadata.name={{backend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{backend}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "de1fc9ca7a1c57153322d90c59cffa497307b26892a66f1d9f036d5e11ae82bc",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.containers.name=backend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.containers.name=backend.securityContext should be set",
					"actual_value": "metadata.name={{backend}}.spec.containers.name=backend.securityContext is undefined"
				},
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "39b8e48583d7628a56478612a07ae69c1f709d7a9867bc0f99d187906573f7ca",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.containers.name={{backend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.containers.name={{backend}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{backend}}.spec.containers.name={{backend}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "fe5fd4f98b5c83f3d0a809c791d4b22e90a198c8a3423a80a11f51890b9681fd",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{backend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{backend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "5c22faf41c0f793e20e7dea793d8737a66dd7ffa364c9813f24688014925ce58",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{backend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{backend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "e3cc0e411ead8ff4b1c11bfb68c6ef07fe6c892aaa45ea4865becff636a090a8",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name=backend",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=backend has a security context",
					"actual_value": "spec.template.spec.containers.name=backend does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/service-presets_template.yaml",
					"similarity_id": "4d55dcc0ff0f1b4e56f9b70f1c87c52c205061f37b2d963d6b6692b363b37818",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{backend}}.spec.template.spec.containers.name={{backend}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
