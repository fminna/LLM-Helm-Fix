{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 96,
	"files_parsed": 1,
	"lines_parsed": 92,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:18:10.354439+02:00",
	"end": "2024-06-26T02:18:12.400021+02:00",
	"paths": [
		"templates/mockserver_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "232d459ca4e83aba7d496ffcdea3533281b7c1909fc285ef3e1801ee3dbf60e3",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "0c37e28ba6228bdea2e8a23ff96fa88314c2607940c0e4ed1f902dc1f9872af9",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "8651fc8a2481433522a60e99043292e7116b6eccebecd81696e7d5ae509f8d41",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "0e0eed0382c4544680666b2720d06cfa910499bf8eaaa1e9eb650805e22956c5",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "f1076527ff55fee07357ee83f8337c85de42bffc4ba8db3d1868d451c26fb65b",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "e18ec1f63a26e584cdab071d44bfec8fdb8677b1a833c18cb2012f6772e7be0d",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "9b63d98c7465f6775e95b640d6b1bae9029c8b30e5b63a728d8553dd4a1a0008",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "94b9fb0c82da3d6d6d3815c36c90124a0e9059bca5c576e9e368bcc94b22a493",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "dd44d431e1555606764459d7a51f05367503ef484e96147802774f09f5e1b6ce",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "411cda4bfe314c6356f79e28aa74a61c583a858c4b2521a1252c09e14079ce65",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "0170c33ce93fcd4a3550f9f7df86daa97d71a53d713ffb82ed2252f65353dabe",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "2de9f8a3b545d0a287e1bb29ecd98c5a6d24307ae2095b66fb0f9833e1605228",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "dae99abbfeb6d7bbed293e3c6a007cad094a4090eb39f35b264fcafdccc70e99",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "3bc3f333e9b9e96aaf4851c6d3389962794f760760a6a58f3d7abf141eb66c72",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "f9840f1d2869328548a04295b4be664f3f59c0cc5128ec309c1a4ece36ed0b9c",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mockserver-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mockserver-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "944d268d2fac3f19656bb57d0e2e4798a37547a723a066079ea22205bda8ea13",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "fcd518964d7e7dff45e13ecea798de7cb836d534916093c237529ed49b3afacf",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-mockserver}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mockserver}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mockserver}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mockserver-test-connection}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "bff26faa6cfba535abc92e10594c7e146fea6d1631c61308ccc2316d6d7bc4a5",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mockserver has limits defined",
					"actual_value": "spec.template.spec.containers.name=mockserver doesn't have limits defined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "6b7f107873f9bc10c23539ffee51807dec9fea537b3625c0c2ca7e8df0d561ea",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=curl has resources defined",
					"actual_value": "spec.containers.name=curl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "b0ead94c87158775735754e700c917909b76d7dfc4e027785ab76ab231723a1c",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mockserver.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mockserver.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "8f400f3bfb75b9a54e0be17816818604341d047a6d2dd1874b9c6246815c48ea",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=curl should have resources defined",
					"actual_value": "spec.containers.name=curl doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "7e62d3f4ca43acd891dbcde606b6352afbf6e0cf23912afd6b28b93a161a9647",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "0270e6e3bbdf10164acb8ff240026fe02e5f8cf95f82967bdcd3d3108bf62585",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "a1e81ed8e861ec3a135debea8437255c855039fb09c5b278ff7c50ef3d1bb99f",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.annotations should specify an AppArmor profile for container {{curl}}",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.annotations does not specify an AppArmor profile for container {{curl}}"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "1e795dd134ae579723a966b5f0c686f3db6fd116c3719f44c094a05388f33f72",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mockserver}}",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mockserver}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "0807de32dd52056811ecc19bd4c410b83dd83d5cc1715c7462b0428697db51db",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl.securityContext is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "2c11f54a1a894ac69d0e9a0ddd69a46a76711a69e333408e01196d00f1d9b293",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.containers.name={{mockserver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.containers.name={{mockserver}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.containers.name={{mockserver}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "6facfec3c425456c5b615ad0765f714db15328506e8f9281f8f9a853cc091d29",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "32f7139549b1818b1c8d43f887d3d9aa61f77ce369c03783d74f09f0850ccf9b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mockserver}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "702df4d27f3a8637b63c0df10f69183cb4f946ce77c89c41b573d3349965d499",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mockserver}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "dc87b9ad67b3689f6c8cb3acc7668cef6ec332d0e575c774259bc3323344ac44",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "1e384cf558e952e27fd37190ea1e960bd9a82880096ea0407429cbcf7298d10a",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name=curl",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=curl has a security context",
					"actual_value": "spec.containers.name=curl does not have a security context"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "aa0ebeb1d2db886b8ca360a304c683c493754792e3d06fb93822c2bd9eff790d",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-mockserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mockserver}}.spec.template.spec.containers.name={{mockserver}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mockserver_template.yaml",
					"similarity_id": "b86b24383ef110054d82180a1935d2ed1451045bf0d5c3c867f93031385792fc",
					"line": 91,
					"resource_type": "Pod",
					"resource_name": "release-name-mockserver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mockserver-test-connection}}.spec.containers.name={{curl}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
