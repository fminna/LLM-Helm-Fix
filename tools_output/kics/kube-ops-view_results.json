{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 134,
	"files_parsed": 1,
	"lines_parsed": 129,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:43:25.984826+02:00",
	"end": "2024-06-26T01:43:28.104988+02:00",
	"paths": [
		"templates/kube-ops-view_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "d635e65bed7c208779f183040f06eecfe84a8e5f1d0ac81cfb798cc3570b57de",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "51ead36267f92f8d8ab7206108968c949251e463f48faca45ccbb5ce0173c387",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "348d28ace5d8ca7547da88aea3982c5ae355beaf103b8cd00459f6a4a6cb51ec",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "125da400f6469f3ac279391a822c7aae578af771b52eda84b25c8416840aa209",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "217cd368c3ed07863de4cc84101b4cf835fd399eeb2c4b76ec797a271fd12f4c",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "72297f437f2f881df39c33f79990b675615ecc20b59422360faf53c3a86aff95",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "f693b78b1632098deff1f24facf9a5ff60a71bbde4342c18e5de23887b3ac007",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kube-ops-view}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "c60cc3aff40f4972fbfd7a093e1cf2d86ae004d86bb755e4d03cbb86834d79cc",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kube-ops-view}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Service",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kube-ops-view}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "e4d6c2512c0de4ce3bf5822c7b7919750d1517de180b62cda4d7ceb7bf29b62a",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name=release-name-kube-ops-view",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-kube-ops-view has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-kube-ops-view doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "ce94283213f6d6a293de52b4d328a2bdfe73ff508872f53ff933955ce8d56632",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name=release-name-kube-ops-view",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-kube-ops-view should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-kube-ops-view doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "9a988a1ec6b5c42374c2e4138ac9de24a3c76f10cdf0d30b4bb5269c95bcae89",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.spec.containers.name={{release-name-kube-ops-view}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "15a83e5eb2769aca8183edbe04e0797f0741c29a4eed21aa1b7a3ac094130f0f",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-kube-ops-view}}",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-kube-ops-view}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "6a8320c4359adf2832a55b9175209e550eeaf664d4e1326694af22429c256320",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}.spec.containers.name={{release-name-kube-ops-view}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}}.spec.containers.name={{release-name-kube-ops-view}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kube-ops-view}}.spec.containers.name={{release-name-kube-ops-view}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "cd5b12a4b27ad3a93c1f6e1fcd7c192788d6912717fdc189188ec4ebd14047c3",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kube-ops-view}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-ops-view_template.yaml",
					"similarity_id": "27a3fb0498f211e46177f78fb017c28e1409d1c5967852c0188a2b7d7269441b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kube-ops-view",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-ops-view}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-ops-view}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kube-ops-view}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
