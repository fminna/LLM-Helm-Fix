{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 251,
	"files_parsed": 1,
	"lines_parsed": 242,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:05:02.771313+02:00",
	"end": "2024-05-18T00:05:04.754779+02:00",
	"paths": [
		"templates/logstream-workergroup_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "a9b02eb5cdb19ae3deca7db7004a89ddd57ee2ca4beb1302bd6cd3020cd03e17",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "d1b2eb04330261b83cd1d7ee2b9c441d173e96fd37686669de46a3ab1b142329",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "274fbe88cd3210fe13a0353ef14dedcd09ad79b86cc0009a85f6f4e110ad5699",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "899f8ee5f7375d4cb446606e0445786fccc618ada5e64a98a583c1eb05f13eef",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "1e5f17f82fcccfee1a8f70f09bc6f0ed7a9dce443cbed2ebecca4aac0fcb73c3",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "e05028238e83b9426a478f256796a6e8d19f103f3d93bbc415f41b0d9312d74e",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "f49d41de17fd372f7d8e07449dc97847a1a6aa2b2875ae9c7db11b2b2261b998",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.annotations",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}} using an external Load Balancer provider by cloud provider",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}} is exposing a workload, not using an external Load Balancer provider by cloud provider"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Service",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-logstream-workergroup}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "751aefd41ef615bae9ed374e14b167035306d4ea950919823616db8eef3d7b21",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-logstream-workergroup}}",
					"search_line": 131,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Secret",
					"resource_name": "logstream-config-release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{logstream-config-release-name-logstream-workergroup}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-logstream-workergroup}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "2163a42df96a6113ffe20bd41d0e4b9c17d9b097caa11a8892b3af7943629cff",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "852756c2f08cfbada1c1ca4e240cf144be68ec66b2f19c91a71ddd13da242171",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{logstream-workergroup}}",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{logstream-workergroup}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "5e5487db22cd65c5e44f0c83cbf5e88b61606209906c0eae90cb2beab0e6cc70",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.containers.name=logstream-workergroup",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.containers.name=logstream-workergroup.securityContext should be set",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.containers.name=logstream-workergroup.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "bb8c15abc1c8689018092b517bae39a0d4611941facc2f4b6934d7b576c1d76a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "4a2a8c8ddcde386d910703185da3efc26869a4f69b63a59ea24ed15491faf6b9",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "ecf83023a73ac3d80285015bb89d973d844ebfcd69b45c4b1bcd7b7e95bdb5d5",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name=logstream-workergroup",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=logstream-workergroup has a security context",
					"actual_value": "spec.template.spec.containers.name=logstream-workergroup does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "fac12c25df32e6feabc823f9f0a46d2862f05261ccd1997a1413e63f680431b1",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.name={{logstream-workergroup}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/logstream-workergroup_template.yaml",
					"similarity_id": "c57a010be42114e21723ed0c45ee270b87db968904d62aa6d9220b1fb12e8687",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-logstream-workergroup",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logstream-workergroup}}.spec.template.spec.containers.env.name={{CRIBL_DIST_MASTER_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{logstream-workergroup}}.env.name={{CRIBL_DIST_MASTER_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{logstream-workergroup}}.env.name={{CRIBL_DIST_MASTER_URL}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
