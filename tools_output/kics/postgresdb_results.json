{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 199,
	"files_parsed": 1,
	"lines_parsed": 195,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 16,
		"TRACE": 0
	},
	"total_counter": 33,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:49:23.430056+02:00",
	"end": "2024-06-26T00:49:25.584054+02:00",
	"paths": [
		"templates/postgresdb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "ca1565c8a241cf06c2e41f41b611eafb69ffd67acee4e617ad5d994cc1fd84eb",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}",
					"search_line": 162,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "8cfd8a0cfe2d4b2a2efc0327945158a301705ed75ccfcc85517e6576ad092c4c",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}",
					"search_line": 139,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "90420133179657a297ef8927e733fa4873d469e98b0b1d206486f9b7a3f51baa",
					"line": 164,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "9c2a0f55ba6ea927056851573c40444b6defb9baa1bc89e05a13cdc7e3c16b49",
					"line": 141,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "ee039c132c412869d9afa75691a37c4aeeb3d56bf49e65c992eb126284f8f030",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}",
					"search_line": 137,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "c4c583126c7b3e08b0376b8c53094c11794198c3c5d92a27c7c82fba4e3e9b2b",
					"line": 187,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}",
					"search_line": 187,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "0f8ec35a079097edb1875bc44c4494123bd949308ce2c79a2a9b523b450970b2",
					"line": 138,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}",
					"search_line": 138,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "94af3493862898aeea4bcdac15bc7efe338cb8c374eb5f4b5bb33f82eab0948b",
					"line": 188,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}",
					"search_line": 188,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "23430c2ebefea12f45b748eb8836baf6e685007667e62289373f96e906bcf149",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "3c7336bda4f4fda6c5489de9f053de9f170586c9d21f39a4d4feb44a2a4a2808",
					"line": 133,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "40d1e66d1e579d8832bd508f97393c8e3d8d2a6ebbdf5c600ecfb73444938b1a",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "59f75406ebed58f0e2b07da548999dde8a9df2a04d71a03006d916c8d616cd2e",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "76843bf744cd0f5dff48a392d1f4900f317ec451433b8333d2e827fa8985a9f9",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "479f3537b69b61a8576c69246de556e7dd93589d7916a8c9aa6cb2fa576893de",
					"line": 111,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.namespace",
					"search_line": 80,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-postgresdb-headless",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb-headless}}.namespace",
					"search_line": 26,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Service",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "1a46702facf6fcf994f89380c42c9d03d6cccd4987510fe9d6799b58e230c0e3",
					"line": 160,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresdb has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresdb doesn't have CPU limits"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "28d9b142cd5c1b14058a3e01fda66d211f509b20fca9f99cd31d29d7f2c8f0b7",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init-postgres has CPU limits",
					"actual_value": "spec.template.spec.initContainers.name=init-postgres doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "bd94defd09ca3ebd71676545fe60b3cb61e35cfde96dc0aabafa4661f5f4ce3b",
					"line": 161,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{postgresdb}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{postgresdb}}.resources.requests doesn't have CPU requests"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "77d1257e817c4931f13a42216af209d2002b763e88437cef3cd9841a53bf68b5",
					"line": 138,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name={{init-postgres}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.initContainers.name={{init-postgres}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "63601622cb3a3c9e4345f3d449e7f8905ad7ac85d0b9cd819c2cce3a10919634",
					"line": 135,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "643a642aa5f7de3ec286e8a6b2771511b03c45eba1d340b0e6579bf952e5b4dc",
					"line": 158,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.containers.name={{postgresdb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "713886030abb41d8b2ce06b9977bfe1ba8e9da06bac7f00dcb9e3c337260b1a2",
					"line": 109,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.metadata",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresdb}}",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresdb}}"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "713886030abb41d8b2ce06b9977bfe1ba8e9da06bac7f00dcb9e3c337260b1a2",
					"line": 109,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.metadata",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init-postgres}}",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init-postgres}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "55769c394ad99d7d29c5020edb883db3ae9574bf9d38727395c662112a70f6ea",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.initContainers.name={{init-postgres}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.initContainers.name={{init-postgres}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.initContainers.name={{init-postgres}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "e4dfbca94d351dfa974501d9fbb7dde85e102310447a8551dd74df65356c958c",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.containers.name={{postgresdb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.containers.name={{postgresdb}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.containers.name={{postgresdb}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "8e7d9c2ea26373158f7ae592832ef482ddc93e6a1e6d70b38a37c2a9c5700cbb",
					"line": 80,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresdb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "5ae2df1c98d460383e3a3c310a4dd6fc94f7ee7118ce4663d12b896fb3e73c50",
					"line": 80,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresdb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "e65d9c3cfc8eab5d985405e801f128c08a57b71b9cf611011cc61ca4d7fed3c4",
					"line": 139,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}",
					"search_line": 139,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.name={{init-postgres}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "3facbc815ebc5057b9608c879f74ed62d0f23a27651a84dcc52867601e8d6d99",
					"line": 145,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.template.spec.initContainers.env.name={{CFG_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.initContainers.name={{init-postgres}}.env.name={{CFG_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.initContainers.name={{init-postgres}}.env.name={{CFG_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/postgresdb_template.yaml",
					"similarity_id": "0675f3085096e23f05dbd5b5aed3b63ed46330f225497719a5f0bde365b1710f",
					"line": 198,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresdb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresdb}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresdb}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-postgresdb}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		}
	]
}
