{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 138,
	"files_parsed": 1,
	"lines_parsed": 133,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:10:45.090062+02:00",
	"end": "2024-06-26T03:10:47.222859+02:00",
	"paths": [
		"templates/powerdnsadmin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "aa0000c698be6e50fab6f14d3238d872c25e1b5595b20df50bf86e707b7bbb57",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "c684df6ad93ac6f45a1173fa0f94b4fe54a1c2c11d5f392834ab95526b0e4777",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "ef315e1b61a4bfc5d8cbb208f0f57b03bc41c92a1ae768795e9198387209e58f",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "df3ce477900abe5fcf55e4b26a01b46c828dc1a728f15f6220a40c1a9dad1c99",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "897edc8a5430ff813406017c25bedb054a88bcd899eb5937350fa2573b9e6ce8",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "5c161b487fd90ad432622518edfc5ea3b63a8e63bfcd9599703eb72f1a08b663",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "99283e873e0d7ab35623513684d8c80aa8e2c324cd07453d4e32a14feee9d23a",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "80a2bee44b88b3e3ed623ce327224ce105f19d4ace6acb4fdca8d99f79bcad36",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "f7ccc3c19587f1eb3a40489726970ac902cd0fbe81139575d16ea39eea8f9ca9",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "2da8d29d6a811b9b0eda2aa4adaa992fad438f362df8b6f7afb4a89f7530dcbb",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "9929e88d6fcc3af938dedebfe77d366f1772eb0323730f050d565a584fd463f2",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "9e9dbcd729834a5b8e5dde60cb8d809919699077e9c26a7a4c08a564173ad99d",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "baae4a3eda773925595fed7813b762782377f40b521d1e5b20d6d214343ae106",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "3bcf140894f3dcf4ae9524343dfffa5c1608ec7a4c63824385837d719acdff4e",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "4659bfd78e826bf6c7dfa89d3a2e3fe4b8cdb08a225dcba74b736a5d121e71f1",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b7c193cc85214cb5977f4805e6fa6d5af14bd88f5011840e8d56651079521dc8",
					"line": 131,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-powerdnsadmin-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-powerdnsadmin-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "96369431685528cec3ded65f8cde162b1e08c00d11848c4b91c935b7e16f36a2",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b0650d023de0d32dcca8d64604c060406117e1517001d8691ab4b95b74a3d171",
					"line": 131,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-powerdnsadmin}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "a762c30bcf108857d0006871a31eb39da3f96bda188ede559396067c8c3cf5c1",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-powerdnsadmin-test-connection}}",
					"search_line": 122,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-powerdnsadmin}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-powerdnsadmin}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-powerdnsadmin}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b5249f3a6513c55ea5319d041499700c5d87f5c0eb1ddb97cad5ab8c1c05d538",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=powerdnsadmin has limits defined",
					"actual_value": "spec.template.spec.containers.name=powerdnsadmin doesn't have limits defined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "3272a4c92f49ec8aa761ed67f8cc59ed208d0eeb609ae9d97275d635d811e2df",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "6a0b013d821da8a6c72281b68761541ae874f79669bdb4bc6b3b61e0d7a5dafe",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "7c3fb3bdf18a8b06e089d0e0e9ddff4cf9f2d138337ae1a65774e8ecc3f87557",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=powerdnsadmin.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=powerdnsadmin.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "73f93ba2627518353350af8de381195cc5826d758e191b26398f0efc25eceaaa",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "6f98067bef98215a32d4aa09596276700d1a579bfcd86dd092356a40bf48d7b6",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "324b6a1b1dbeba432575a6ce3f4c1734e8749065172928699c37066a8b61f03e",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "ba36393b282cb01f5f0d1d70dff93f2c151995b452414abb3959ffe91c0b326b",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.metadata",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{powerdnsadmin}}",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{powerdnsadmin}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "14c435f382374205f49e7bd661955abe3db2f1645c4f2db275923a7028c6e1fc",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "a082b541e0c96076c27b43fddbedcbc537b0b1e710a192fffdb7999311a2a2b2",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.containers.name={{powerdnsadmin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.containers.name={{powerdnsadmin}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.containers.name={{powerdnsadmin}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "70cea96465d75765c6f82c338e9fbf7fe47e9169b6bed7d745858d732dd6364f",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "0cbbe136166e35f1114be673dcf248249d4d1180cc270047a2666ee329a373a5",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "e758047e7c406cecd5176dee632bc23054906cafdc7437463c3160f46082f64d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "93ec802142bab15ecb5b2f80aaa1d09452fbf1569e4d99e5a2528254d4069776",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b735afb29e1034daab615cc47a9c47ff77e0c600b3cf0f30cee26edc1442c292",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "b6a8d80485fe26bf49d7e7d8decdd84bb619b5728cac1b5151c6205f298f89b8",
					"line": 131,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "2748e3e98be51a192cd3bc3b759bed9e5fb1feca2db71687d1e72b3ab4a6e468",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-powerdnsadmin-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-powerdnsadmin-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "143e929a9f8cc7b6f548003d43b40642a507849b90f0003bb294e58d85923af3",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.name={{powerdnsadmin}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/powerdnsadmin_template.yaml",
					"similarity_id": "9cc22d89a28e9d33ab1c0be14d2168b0bf698ed961c7c1ee7024620e7450a27f",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-powerdnsadmin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-powerdnsadmin}}.spec.template.spec.containers.env.name={{SQLALCHEMY_DATABASE_URI}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{powerdnsadmin}}.env.name={{SQLALCHEMY_DATABASE_URI}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{powerdnsadmin}}.env.name={{SQLALCHEMY_DATABASE_URI}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
