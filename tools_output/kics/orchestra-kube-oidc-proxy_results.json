{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 140,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:03:08.019945+02:00",
	"end": "2024-05-18T00:03:09.930504+02:00",
	"paths": [
		"templates/orchestra-kube-oidc-proxy_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "15e71bc72d2b716048da5aff93bc674cd435e3938bd48ef00df0ff8844f1268d",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.securityContext.runAsUser=431",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "f57574417f33d64042f6829a9e0e4224db57d195d4841bbf8bf94fb1f5eb0c73",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "3cdb7f566aff49f50764c3014591422e0df4def19f9c5f41f83c61f5c3134ed6",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "bb98a975f70121825992ff9008383230691fc9cc4e57010551d0a37d68243f28",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "Service",
					"resource_name": "kube-oidc-proxy-",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-oidc-proxy-}}.namespace",
					"search_line": 14,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.namespace",
					"search_line": 37,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "b7006a1e25597410d4702078376515b359fb6be022d5f5a5708867eee1ebdc9b",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name=kube-oidc-proxy-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kube-oidc-proxy-release-name has resources defined",
					"actual_value": "spec.template.spec.containers.name=kube-oidc-proxy-release-name doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "3dd20325f7a5b5ce6a65b32c6aa890078b75965d311d4e4eb8ca2206d9b575bb",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name=kube-oidc-proxy-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kube-oidc-proxy-release-name should have resources defined",
					"actual_value": "spec.template.spec.containers.name=kube-oidc-proxy-release-name doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "015bbb8cd1455001600ffb30319d0984733f79b31e3cea1d48859bc2d513f0af",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-oidc-proxy-release-name}}",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-oidc-proxy-release-name}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "31b8366db3fac684971caddee1645d7de5ec936947aeec7551dd799134dc8154",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "511a97ac5e30abe38f8caf9a333de1910e0eb4707f7ac3db61b93dc651027113",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/orchestra-kube-oidc-proxy_template.yaml",
					"similarity_id": "752059667fed76582013c6d7b179c6d101e16e6e878983262c5a7361e7b34c18",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "kube-oidc-proxy-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}",
					"search_line": 84,
					"search_value": "",
					"expected_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kube-oidc-proxy-release-name}}.spec.template.spec.containers.name={{kube-oidc-proxy-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
