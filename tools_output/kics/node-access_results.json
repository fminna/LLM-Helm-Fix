{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 74,
	"files_parsed": 1,
	"lines_parsed": 72,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:46:12.780034+02:00",
	"end": "2024-05-17T23:46:14.761513+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/node-access_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "9c680f4dcd1c76f80924e6c81063e8a1b229cc31f75768736cd066ddd12c09be",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "99865d2ca79bb09301efd2729dc855fc3b2830da29a993b13dfda7842c2dd673",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-node-access' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/' mounted",
					"actual_value": "Resource name 'release-name-node-access' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "b405a373ec690d5044608287ab24d31fe43c9ccc7f1218255ead0fd00b241d50",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "5882e27b087135b8a160a89f3b51836e1ad4b9fcc8ed461d1f1fe777c683b32b",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "b43076259b55f85c6e8860f19bfa6bdba3c5a25a3bb65d00a02926dd4414cd13",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": 73,
					"search_value": "",
					"expected_value": "Workload name 'release-name-node-access' of kind 'Deployment' should not mount a host sensitive OS directory '/' with hostPath",
					"actual_value": "Workload name 'release-name-node-access' of kind 'Deployment' is mounting a host sensitive OS directory '/' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "59109db7c91084d66b0b46633f2120ec2c36f648a55dfc6d743eacce3014a44c",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "42baa55b2118c9044cd850be1116b6946da15816d110e7c55ab4ca3d35c59873",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "2f132095635af7dc55cbfdc6196a48b4e2951d6b0e4e40edb6974c017b52c832",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "ea5bfb8e2b3b0aeed9b80637c32d02ff19f892db837e2d50c4a36d37c7ecfd49",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "84dc8d63eaa62261a8e21c146f9d34b6e010eaaca2988f1143e9994bc8e199f7",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "f78c83b11bf61f45910003ae541aed37bf0fe9608ae32ddbbe923a3943054c72",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host IPC Namespace",
			"query_id": "cd290efd-6c82-4e9d-a698-be12ae31d536",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host IPC namespace",
			"description_id": "1ef1fe71",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "54824fd924abebeb83d850b19985300cc967f9885f72191763a772cc33388179",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.hostIPC",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostIPC' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostIPC' is true"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "80871dbe6bcdb3a61ee03bd9f48dd226db53c5726168e3723ea703d0878c4333",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-node-access}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-node-access}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "c34d4a76f916b471faa7f890dbf33e61926065f038d36caa09ca2420b3cee38c",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{node-access}}",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{node-access}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "077523594779289dad657c4360a4b5871ad8eeec3064e971aa4114e9afdd2123",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}.spec.containers.name={{node-access}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.containers.name={{node-access}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.containers.name={{node-access}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "fe07307777ad7de23834f29e0fa41eb7035d1a007204f30da093d6fe04ffb51f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-access}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "77490f1b68b612ae2114b7727a357ae21a99684b78e909f97ea5a91995c2c8ab",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-access}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-access}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-access_template.yaml",
					"similarity_id": "b93ba0d703d7afe5fb855511a9cc2ee9c4c0bd9c4e663b7f01983c13e306cf71",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-access",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-node-access}}.spec.template.spec.containers.name={{node-access}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
