{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 235,
	"files_parsed": 1,
	"lines_parsed": 230,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 13,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:58:51.923015+02:00",
	"end": "2024-06-26T00:58:54.02712+02:00",
	"paths": [
		"templates/kube-router_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "ebe20d6a48ac511fa0b999abe34c55f298c65b2aa9bc7cd5d33df01aae24831a",
					"line": 182,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "89b6560040775e09ff10e8dd9356d0b7908f6fdb58e9c80dc6221c987c24425f",
					"line": 224,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{lib-modules}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/lib/modules' mounted",
					"actual_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/lib/modules' mounted"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "88796db93d79136bb28bd72ffc5eeaa77b1d751a3344fa9f25d9ab9040358c9e",
					"line": 233,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{xtables-lock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/run/xtables.lock' mounted",
					"actual_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/run/xtables.lock' mounted"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "c48830065e98c5dffb2e7bc2737eb77252e0512115be26a21ed54d7a83990d97",
					"line": 227,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{cni-conf-dir}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/etc/cni/net.d' mounted",
					"actual_value": "Resource name 'release-name-kube-router' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/etc/cni/net.d' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "09f4c51c3121d23c86cd60809c8eb98f695790ad47ad4c792dafeef1720248f2",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "6a4f213414c49e0c6aab109208df6f34db43ab429d9cdba82e2219cd17faec0d",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}",
					"search_line": 181,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "ccb8a204e58b029e297051bcf4ff91da022415702564d422f1e4cb993bed1284",
					"line": 187,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{cni-conf-dir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{cni-conf-dir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{cni-conf-dir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "a575d3850e02961930c9c0b1f91b74288dd3a50092cfcf6214e93d6cc2c60aa7",
					"line": 191,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{xtables-lock}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{xtables-lock}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.volumeMounts.name={{xtables-lock}}.readOnly is false"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "a31f2a889cd85a17a7ca8d304b68b09024e3fc65a050d055ac9fc6f8bbe4af52",
					"line": 210,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{cni-conf-dir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{cni-conf-dir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{cni-conf-dir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "aa1eb3d9c32c72c8ad48b7a0f4676684de71a417ffa659c139d0ae8149f04a24",
					"line": 212,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{kube-router-cfg}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{kube-router-cfg}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.volumeMounts.name={{kube-router-cfg}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "f2baab949cc07b5d4be41533a5d81a638a2c8b1749ee92e0557b777c45138aa6",
					"line": 233,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{xtables-lock}}.hostPath.path",
					"search_line": 233,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/xtables.lock' with hostPath",
					"actual_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/xtables.lock' with hostPath"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "0df59a87213ff6fa5f6fbde80c8fb4e2fae885d589e59d63028ca88d748079bd",
					"line": 227,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{cni-conf-dir}}.hostPath.path",
					"search_line": 227,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/cni/net.d' with hostPath",
					"actual_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/cni/net.d' with hostPath"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "3da8897c5be1fa2972cd139dfb0237e8b00010a02e2a742d9b78b8bac043a899",
					"line": 224,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.volumes.name={{lib-modules}}.hostPath.path",
					"search_line": 224,
					"search_value": "",
					"expected_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' should not mount a host sensitive OS directory '/lib/modules' with hostPath",
					"actual_value": "Workload name 'release-name-kube-router' of kind 'DaemonSet' is mounting a host sensitive OS directory '/lib/modules' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "1e507d2be279bffad7c1ca07d9026495e969c0e8966d2a3f3d6662e7c5cdb950",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}",
					"search_line": 181,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "b77a329471bf66c65b362589468afc6c8bb4f8eae721005206146106e787d3e4",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "d6a724f6db7e83e9aa83891b24244d7a3bef752f0e08073e8f2f3909abcdb827",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "1b27696651059cde70b9202fc2935462b7bdb2c19de2b95323f109ad2cba2504",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "1687412c45c0638ba314108185c2d62b9f96d2146f51cbf778495957efa76b24",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "b052693d2864d2bc6734113dba77c8d199d62afc5325b6813131ecc0cd03fcfe",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "cb9d929bb02e0f8b05e3dcd6ec448c0df0d36c1e36b66eed15bcf8968fe63ed4",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "ad9a4301ef90d65f3f052521f4825903d70ee546804209d2b87469ae5e3292dc",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "303cc8e73c491b7cd3f804bdbe08405afbe87f13dfccab9836d2aae65d45322e",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "bf02a362eb16c754624a710883a081126859087f1db9b41e46a537b9bc04fddb",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "d45cdcfd79ae62ddbe12c32808d6bb6bdb6d502fac666d56227aef73d9456301",
					"line": 140,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "6a75886e051c64476c5bc8df52a7fb5e2236b267d3461adf12db39e70f9c14e6",
					"line": 213,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-kube-router}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kube-router}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kube-router-cfg",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-kube-router-cfg}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "10c1f7050a75f275e7d84421e1c6e1efb96d0398c8433741f810d64bd509f22e",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name=configure-cni",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=configure-cni has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=configure-cni doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "9d0c37ec61fdb8c09b06342b482e149b872b43472895e25926667b5e4f20abf2",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name=configure-cni",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=configure-cni should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=configure-cni doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "ce6fff72f8f8716b6375294e280d78b578a5a272be6defdfa15a141eb805bcaf",
					"line": 146,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "7c97e18f4a4a19808f14ede1665acc663fca942c6f64b04e0f07eb296b2000d7",
					"line": 133,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{configure-cni}}",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{configure-cni}}"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "7c97e18f4a4a19808f14ede1665acc663fca942c6f64b04e0f07eb296b2000d7",
					"line": 133,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-router}}",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-router}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "eac7e3e5f119bea7ae01c10c3afda3758366dcef07ce45ac7c197ee68127dbeb",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.containers.name={{kube-router}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.containers.name={{kube-router}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.containers.name={{kube-router}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "846dc9114111e38ae9d9589b4805c16b809637589a733762f7dae8eaedbc0ec3",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.initContainers.name=configure-cni",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.initContainers.name=configure-cni.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.initContainers.name=configure-cni.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "85a5a5001d1a8980008bf213156972431099f6b231b58eb7c9ac151fde4d3000",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kube-router}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "967aa275ed9d5659d28148c3c3b90cba8c8d91c6f8994802659339ba92d2fcf3",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kube-router}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "e3f21ead7e08e3eb4fd1cf7cef68fa691f6d24066eec51dd5d835475e132d301",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name=configure-cni",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=configure-cni has a security context",
					"actual_value": "spec.template.spec.initContainers.name=configure-cni does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "dbb59a9d1ecb583bd70aea7c8d15d1c48f09088246ab8706531713393323d7c2",
					"line": 181,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}",
					"search_line": 181,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.containers.name={{kube-router}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kube-router_template.yaml",
					"similarity_id": "67990ce6179c0c23234fad59f4ffd8cc2fde33137e7de41da8deb017a52ff615",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-kube-router",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kube-router}}.spec.template.spec.initContainers.name={{configure-cni}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
