{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 211,
	"files_parsed": 1,
	"lines_parsed": 201,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 8,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:20:08.896333+02:00",
	"end": "2024-05-17T23:20:10.816771+02:00",
	"paths": [
		"templates/telegraf-ds-k3s_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "10ecfcef15a3cafd6d7a6382efdbab719bb9d29ceca13bbea7d59d5ac4ffa55b",
					"line": 203,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{procro}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/proc' mounted",
					"actual_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/proc' mounted"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "7eb59ee971ecfe9b49012502561953a0b24db7784c35a4a75f27f6d70fa3d2ef",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{sysro}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys' mounted",
					"actual_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys' mounted"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "6286e398374ef2b340738d419e6c742abf1e97ad6e7e01edbf1620c8c67ad5a5",
					"line": 206,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{varrunutmpro}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/run/utmp' mounted",
					"actual_value": "Resource name 'release-name-telegraf-ds' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/run/utmp' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "3afabd0846c455df65464665aaeb61bcb911b97d4c34feaaf2b292628319c493",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "26ddc25ecb0986afb904fda3bd591168d5befe23d22b282d3c0fedc18b2e8b89",
					"line": 195,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "0fdc6a835fda09e51050aecea5ba1049bcf5bbdb88cc08a6dcd0d2fdd7abb8c5",
					"line": 200,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{sysro}}.hostPath.path",
					"search_line": 200,
					"search_value": "",
					"expected_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "74f3a543c2e9c5d09087dd85808e71275f4ae4a2206c3ffc572fb1f89df37fe0",
					"line": 203,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{procro}}.hostPath.path",
					"search_line": 203,
					"search_value": "",
					"expected_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' should not mount a host sensitive OS directory '/proc' with hostPath",
					"actual_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' is mounting a host sensitive OS directory '/proc' with hostPath"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "949c466a8f8c878191c2586bc575f20f57417deadc0bf9e334f2187675334746",
					"line": 206,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.volumes.name={{varrunutmpro}}.hostPath.path",
					"search_line": 206,
					"search_value": "",
					"expected_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/utmp' with hostPath",
					"actual_value": "Workload name 'release-name-telegraf-ds' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/utmp' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "b7154c61c88c0ad2f4b02409ca662652796542c6fc97215c8e3d8281b94847c5",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "497df694b42b94e7863db2dffa62329bbae0d3980ef9d0dec46fe96d903d9295",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "7f1ee34ec9f24d6a21e4e1dd511dd0aee68690d17c6367ae9dda69e773def624",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "685f29f8617d0f734a2f3489f418bc058971c18cb7e26038995c5823f4026dcb",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "538d73fa0b1c2d393530938d3417f26788bc084ab9b23c18bf8782bc5355b2ba",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "8b8873d4bf624b05173fe722d3d0713ff9ec81293e764ca7e241864107ea720d",
					"line": 155,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-telegraf-ds}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "2fb824d21d0da366f07d6823538dacac84c86e381ef7fedb373eddebf3d87ab5",
					"line": 135,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-telegraf-ds}}",
					"search_line": 135,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-telegraf-ds}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "cf61a8dc0acbd5bc2d164d0196db397b30eb9d1df08c09988639dcd058c5a0ac",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "d4d730f58af0ec2224a8a3ff554404974276e4f6beb9db7e72d5a6cbd39e3d67",
					"line": 151,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.metadata",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{telegraf-ds}}",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{telegraf-ds}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "f195547c27059df61b001dd86968630d94704ae49140e60a888b687cd56605a5",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.containers.name=telegraf-ds",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.containers.name=telegraf-ds.securityContext should be set",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.containers.name=telegraf-ds.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "03b00b326f452c928328ec0f5a5b9fd30b96ec954bc3623e73185a390d4047b7",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-telegraf-ds}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "5b99b7b9063c6ef6a25c7795ce4be9ecdeeb9478a1881a4e805bff85023a241c",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-telegraf-ds}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "f7bd41a7ffad65d859f9109bd97df24cbeb41eef0b346c880dcb236c0b9e3da9",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name=telegraf-ds",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=telegraf-ds has a security context",
					"actual_value": "spec.template.spec.containers.name=telegraf-ds does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/telegraf-ds-k3s_template.yaml",
					"similarity_id": "9ed8a5930a2a6dd1af643e2eb5a348a0abaa1cc750213ed27f74fef2faa03310",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-telegraf-ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-telegraf-ds}}.spec.template.spec.containers.name={{telegraf-ds}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
