{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 154,
	"files_parsed": 1,
	"lines_parsed": 151,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:30:07.856416+02:00",
	"end": "2024-05-17T23:30:09.772485+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/contract-management_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "ad9490f32ba6ad834bf252564a141b0a606b9018c8b0bc2b2cc0294289e09caa",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "8961fcc5ef2b0f64f90d3a7c91b9dfc78fcd4a431878714a14a471a5e6171aa2",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "3d4546bd6f96521dac2cfdf9df31a3c9f779f420d00381b20b74c5a3242ef9d5",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "2cc1a5f305bcf76010190f05641f3c004505709e82a3eabf466cacb0eedd7d60",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "07146c40e49718836d7654473980fb27ba8102353906e40c9f2b00caafdc31a3",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "5359422b6848c792eecc56c35d46077142004f3b2900342e0acb777a4f387d8d",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "cb9be538b90587ab2e7e9d2d41fe97d94e6d208354d0ca904c3e74e4d9dee506",
					"line": 50,
					"resource_type": "Service",
					"resource_name": "release-name-contract-management",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-contract-management}}.namespace",
					"search_line": 50,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-contract-management",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-contract-management}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-contract-management}}.namespace",
					"search_line": 74,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "90134a796d530b012a3a713990045013cf536a9154e83bdea24eed9f5bfa760e",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=contract-management has limits defined",
					"actual_value": "spec.template.spec.containers.name=contract-management doesn't have limits defined"
				},
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "94b3e2c69f6337a05bccddb361755a8c4d595693f76972427b16cc9e7806c420",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name=contract-management",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=contract-management has resources defined",
					"actual_value": "spec.template.spec.containers.name=contract-management doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "d72602829cca4609677243e48738aa726eb7b0a085b9b3ab6e03ccf347fa7cd9",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name=contract-management",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=contract-management should have resources defined",
					"actual_value": "spec.template.spec.containers.name=contract-management doesn't have resources defined"
				},
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "9c576d00797c0b04da9e9ecb8af90a7b409b7c8b5586360469afd4c09f6c0f6e",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=contract-management.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=contract-management.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "e11e8564122d240b6d22cdabd72292390c541af806e690511b59076dbb980080",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{contract-management}}",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{contract-management}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "515f33e9d57ad9f137aff0b2bd32e9ae3a72b3289206ccd7e90d046919e76b43",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.containers.name=contract-management",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.containers.name=contract-management.securityContext should be set",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.containers.name=contract-management.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "f8b550a84598e9d4dd7083a1958343e4544103e0bac157abd86516e408c8cba8",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-contract-management}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "009970de5e61a0754eed51d5e9157c848da5790b746191e9efc8242db559882c",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-contract-management}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "3267cec3b8a6faa56a9a502edeb4214066f59b9fb67cd3169e39ada701a8f19a",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name=contract-management",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=contract-management has a security context",
					"actual_value": "spec.template.spec.containers.name=contract-management does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/contract-management_template.yaml",
					"similarity_id": "0b2ebc0c603c3114a344015573cbcd7afff018445c156b32ecebf9fa272deaa3",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-contract-management",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-contract-management}}.spec.template.spec.containers.name={{contract-management}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
