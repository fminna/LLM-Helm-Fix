{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 115,
	"files_parsed": 1,
	"lines_parsed": 111,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 3,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 8,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:42:47.544884+02:00",
	"end": "2024-05-17T22:42:49.434417+02:00",
	"paths": [
		"templates/basic-demo_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "27e32a5d72566255f5f180ee9acf8a5aefa8427ad1fd8da01fdd6db635ecec61",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext.runAsUser=1200",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "9d5708de80c1f84195a82beb3ad955655734c5824dbeb13535b8e2fe96c47df7",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.containers.name={{basic-demo}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "fefe685502d8eabce6e172a98b3259f9f0a56934b6ddcef85efe7f26828f6d5f",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-basic-demo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-basic-demo}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "fbb5037e87048fb67f186e9ecb72cca4997235bbcce54730346608f0cbdb5941",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-basic-demo}}",
					"search_line": 39,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-basic-demo}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "1926d22fd6146af70b25ae369d29999a14ba5fd2ee4ec46706af30fa628e699b",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-basic-demo}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{basic-demo}}",
					"actual_value": "metadata.name={{release-name-basic-demo}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{basic-demo}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "a38905219dc8259b6e78be44e513f88feaaf94a81bba2e761e590aa4e25ff9c0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-basic-demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-basic-demo}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/basic-demo_template.yaml",
					"similarity_id": "5392da6b6742bf63806f79afd2430b98bba524ebc2b2f3cfc3dca1a35c60b41f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-basic-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-basic-demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-basic-demo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-basic-demo}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
