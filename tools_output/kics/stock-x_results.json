{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 74,
	"files_parsed": 1,
	"lines_parsed": 71,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:03:21.070243+02:00",
	"end": "2024-05-17T20:03:22.810857+02:00",
	"paths": [
		"templates/stock-x_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "663209d5bda2bb7f1e35493826b55b046f6c4b082111bb2f068f381f57d2e9f9",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "dcbd5800c196bbf8f555b96b65c6c5623a105647b1d7f5a53b793503a17c355d",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "af99b969eb256658708a614c8cd988f0926f87c43c96be37190ea6b31da1bbdc",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "f55ef7fef6f63e0c51d99d948856b3002d96544e8a49da8ea3bcad544eaf433f",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "3dc3d3e77e0c24529db7441a4ae856848839fd1ac773062f6122dcab224bcd36",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "a96f7789d86cf21bfc247ab2d364c95740e767c2bcad7d4d1fc01adb8a9340e0",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "9be7878b82a0782be125fad9261a15f6629e5ddf16063cab43cf06568b367dd1",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-stock-x}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-stock-x}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "stock-x-dev",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{stock-x-dev}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "4af96c197c18129232bebf46d26d52ac7217859523c74969e1e819eca339c4b8",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=stock-x has limits defined",
					"actual_value": "spec.template.spec.containers.name=stock-x doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "c3a403a191682d198c47ae57550a99c7492287e53e5a878d95219feeb23b69f8",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=stock-x.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=stock-x.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "e09e8d60b07fed1263dffc44b171566e5d17195860d571d5e167f457465ed00f",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{stock-x}}",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{stock-x}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "8518d491c65d7b3d559f0d9fa09fe96d300781e806d69847c3fe710ba30b5f37",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.containers.name={{stock-x}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.containers.name={{stock-x}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.containers.name={{stock-x}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "1f55d6b56dbc2ae51fd02b7d37e8e26301b46a5bd6ee57527de6298705cd35e4",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-stock-x}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "0c46688b5e93a7de0c451b61662fcb4299937650530698d53664a62c94494446",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-stock-x}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-stock-x",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-stock-x}}.spec.template.spec.containers.name={{stock-x}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/stock-x_template.yaml",
					"similarity_id": "5802389011b323d7bb53e85eafde066e4809fc1dc0bbe21374d4778ca2cfae31",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-stock-x",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-stock-x}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
