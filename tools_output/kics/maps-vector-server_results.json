{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 730,
	"files_parsed": 1,
	"lines_parsed": 724,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:28:38.227141+02:00",
	"end": "2024-06-26T03:28:40.335705+02:00",
	"paths": [
		"templates/maps-vector-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "bf1294c22afadc361921ffbb0c6d5da1f88518052943ed8f72e3ca54a0daf0df",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "d1559e93d8d5f809a445ea2f7ef59c32467d8dcc96db8adfe4252b1b57d09882",
					"line": 724,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "7cffb478a7abac331760de30f21d39a16a816a5e4b25440d41b633e61bab9825",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "4ac5b59eb2d26b1960141cf477066cb75dce0ba06d727ee73134e00bcb64a77f",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "a8de48c4b55f2296fe220a59d7329e3965f4af5a4544001ddc552b41119054a8",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "65b3380f88386cbfc643bfaff4370c89c685db53f43e5d5c5daee09839ef2b27",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "d37a1e133ddcd991f01245036fb9ee6944a20a6d88b254789510f29905851292",
					"line": 689,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "cd056504dcccdf788dd9dea8fb840520ae19d1c9cd7b93c84491d36fa0a7bb02",
					"line": 42,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{config-release-name}}",
					"search_line": 42,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Secret",
					"resource_name": "maps-vector-server-release-name-secret-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{maps-vector-server-release-name-secret-config}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "eb75c625f813d0310dac98e800aa215cbdc25500604f71a59da704f43ad758a3",
					"line": 668,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{maps-vector-server-release-name}}",
					"search_line": 668,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "7aa8a3f1e0bbcbdd43571cee85fc18084676dc84524cf3c563e5ee0a067861d5",
					"line": 648,
					"resource_type": "Service",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{maps-vector-server-release-name}}",
					"search_line": 648,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "669d9f8bd8d2e76d971546f07ba9c749d555f0688dd88b2372a7416676527c26",
					"line": 693,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "c468ce26d201585f28a345ab4c0ae61404753e346feda85d801c4295decc5cda",
					"line": 685,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.metadata",
					"search_line": 685,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{maps-vector-server-release-name}}",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{maps-vector-server-release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "f3af1167da2989f3fdc9507c204b2bb05cb587ff7b0f942bfbbafb9b704c93d5",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.containers.name=maps-vector-server-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.containers.name=maps-vector-server-release-name.securityContext should be set",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.containers.name=maps-vector-server-release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "0c29a41d5331bdb66a0efee8efbfba8edcd8de6e25316026554395b8a1413d69",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{maps-vector-server-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "10c1c3928385e124366f96449d93d7746cb37c1316834f3b5f852b855c696d44",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{maps-vector-server-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "33a1b0ba8cc422c8c2734ee015d97db04399b82969f13cce7e2562d59cc9417f",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name=maps-vector-server-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=maps-vector-server-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=maps-vector-server-release-name does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "702a457ee491eb29c9ee327516498cfa8f1157e185899ec3e07a705e7ca943d7",
					"line": 692,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.name={{maps-vector-server-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "e573c02aca6a0e001c65df45be80ce30407754d6da285538f207974a6354db49",
					"line": 713,
					"resource_type": "Deployment",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.template.spec.containers.env.name={{TEGOLA_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{maps-vector-server-release-name}}.env.name={{TEGOLA_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{maps-vector-server-release-name}}.env.name={{TEGOLA_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/maps-vector-server_template.yaml",
					"similarity_id": "8f43f27428b61b923a1fe7f170a2c2f18a772aa2fb27394eec5748f0a425677f",
					"line": 34,
					"resource_type": "Service",
					"resource_name": "maps-vector-server-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{maps-vector-server-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
