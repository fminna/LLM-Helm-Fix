{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 142,
	"files_parsed": 1,
	"lines_parsed": 139,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:31:25.316936+02:00",
	"end": "2024-06-26T02:31:27.3806+02:00",
	"paths": [
		"templates/bae-activation-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "932381856592ba67f496149415d5f6c416db935a20be98bf56fa433f9d95f5d3",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "26d0fa53b8e71f73f186455f1da28c1666a0b8a947be6d442b63c63b95454c6a",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "94126adab124fcdf1bcaf125982d8d6fcf34b891ae4a314fc38106879e6c4950",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "3893cdf4a1bb60e5a25558540fcab0f5a6d772564507ea5a1533068adaffed02",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "441ebdb0f4f68d5a20e0c5441e0a44d8ebda42ea09f0a7fe2983df3b75d67a06",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "834a322a80f08a7fd3ee196abf467e080e4bc9baffdf7e66880f402a01ea4a69",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "Service",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-bae-activation-service}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "3d245361eb8e2f528907e46b644bb889f98ea442f521ec836ef1ab746a4e7cd7",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-bae-activation-service}}",
					"search_line": 48,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-bae-activation-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "2511bb4e6e9ecb02f3c74995979dd0681ac6167fb9fc08ff205376f0a300aa34",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name=bae-activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bae-activation-service has resources defined",
					"actual_value": "spec.template.spec.containers.name=bae-activation-service doesn't have resources defined"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "7e8d53b9a359bd2a83ec5d22050eabcb0a605dee2405c2edb74be9f0caf905fb",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bae-activation-service has limits defined",
					"actual_value": "spec.template.spec.containers.name=bae-activation-service doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "2fc18c800708b4c708be3b943e9d62f76a5530c1c834641d7f6c61c5c4bb0303",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bae-activation-service.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=bae-activation-service.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "e91c033af8440126f0bbfe42a17c4685f6595c806271d046ca62d12b09a4f3f0",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name=bae-activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bae-activation-service should have resources defined",
					"actual_value": "spec.template.spec.containers.name=bae-activation-service doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "d98fd26328e127401939f3f2d3f8b5e8c96a12fc7bdab577d7ac4cc5904342bc",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "191eda4a6e34e83a5370c8f7ac89bfea41af246a6404aea63586d079cfd9fba6",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{bae-activation-service}}",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{bae-activation-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "5473ee26dd8af73aabef9443a60d3862f1470ac7b600e32a674b7f9959f71ebe",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.containers.name=bae-activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.containers.name=bae-activation-service.securityContext should be set",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.containers.name=bae-activation-service.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "1a3bcc74c43c379d40d421fc0ed82d8256a1748525d1fb4c25dbf0f5726632da",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-bae-activation-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "6b6384183641c4fdf9a0422c3356495a2f634709ccce5e03df6ad27fee21dc37",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-bae-activation-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "f20873dc1ea9b47c7157067733a43aab0d890ff860b2f2f924ab1973e0bcc609",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name=bae-activation-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bae-activation-service has a security context",
					"actual_value": "spec.template.spec.containers.name=bae-activation-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "d8e4e74ecefca94718f597726a83d8a4e8037daba23dc8e5c8f2c3f425d6baf6",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.name={{bae-activation-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "06987971c62bbdc403d941329b1a1d46c83138a050b18e5ed60c0abffb95f6d9",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.env.name={{PROVIDER_UMBRELLA_API_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_UMBRELLA_API_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_UMBRELLA_API_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "ddc9432568328ea591666a5145aa6ae61f6f0dde62db7c3287a37eb3a0585e65",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.env.name={{PROVIDER_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "5f62f59019ada751394d4e8d35b465df03461ff6208a202c7ba74c48ef61d30c",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.env.name={{BAE_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{BAE_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{BAE_KEYROCK_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/bae-activation-service_template.yaml",
					"similarity_id": "e4f6581500bc3895d5c859b4216c11f432374a705f76c79182dc31d127a18428",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-bae-activation-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-bae-activation-service}}.spec.template.spec.containers.env.name={{PROVIDER_UMBRELLA_ADMIN_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_UMBRELLA_ADMIN_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bae-activation-service}}.env.name={{PROVIDER_UMBRELLA_ADMIN_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
