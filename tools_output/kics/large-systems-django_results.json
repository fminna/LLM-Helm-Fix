{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 76,
	"files_parsed": 1,
	"lines_parsed": 72,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:39:23.192988+02:00",
	"end": "2024-05-17T20:39:25.099416+02:00",
	"paths": [
		"templates/large-systems-django_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "4a6a279faba53f9b913232120e1c24a97817d35cd85c69c7fc6f2a2bb01476d0",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "25ee3ab1774f72d8cd5d12357965f2d21a7c016d02467dbe9abb21a672260b50",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "9606a426463c0751b8daea40a55f46ba92ab9d3be9c7a3a8d4da6264442ba86f",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "3878dc92-8e5d-47cf-9cdd-7590f71d21b9",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "f4e48914",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "228af30eceaf3f96cdfc668f73c97ec3c84ec0d54c4650ba92dc9872ab0e5130",
					"line": 67,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name=release-name-statefulset.spec.volumeClaimTemplates",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-statefulset.spec.volumeClaimTemplates has one template with a 'ReadWriteOnce'",
					"actual_value": "metadata.name=release-name-statefulset.spec.volumeClaimTemplates does not have a template with a 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "2d512f4edac5aa6da7b2c5d79c56089a562ea1a34f635880f30e7741441fd04a",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "dc747a19ca40027b2e9dcc5571c1a4cbf31fefbd645976f6de452325f839bb6e",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "285daaa24792fc923f2537f49b63fffdcff8271d21eacfd18debf41e601d38d2",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "d8b683499266c5a4e43a7751335a0c32d54de257b58dd81ce1384cdc1789d4c7",
					"line": 46,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-statefulset}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "611cf28f72e46e78f6e36ff9563bad2d8e498316d884a66ac63a4f6e990749ff",
					"line": 16,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service}}",
					"search_line": 16,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-configmap",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-configmap}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "21de61d5488bf89648b763de4d0975ff48ccaa346b03e4d5399f933ef1b0cb22",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "1c4275af797a6a8ce0c3068fc8f3bb28d22065d19b05194d484d3f9e85c0b570",
					"line": 42,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{large-systems-django}}",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{large-systems-django}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "36f1f97a70a15e2151f0f0454a5e038bf2346daa2d3ad108bdb7f2223e683124",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.containers.name=large-systems-django",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.containers.name=large-systems-django.securityContext should be set",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.containers.name=large-systems-django.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "f26504ecb3e10714f8b4596bc7b53168d4f5a32523c07a0bdba8eef37477de9a",
					"line": 31,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-statefulset}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "a47927ad49c275fe36be204a3906a4e528dac7e4bdce1026601fdb2d6de6bc6f",
					"line": 31,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-statefulset}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "872da46b66fbb64c6fc27fb4c0178c7c75a0f4f3f623eb675d675ec1bff13c3e",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name=large-systems-django",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=large-systems-django has a security context",
					"actual_value": "spec.template.spec.containers.name=large-systems-django does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "c2f5a5cc9f5cedb8942af63cc4b83381b7f5710b6f6bd3888e7e76ef529b0612",
					"line": 48,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.template.spec.containers.name={{large-systems-django}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "7e543e400e346a05b12be7ff711c93e3aa0e800a2671bb069cf84da0a24bc887",
					"line": 24,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{release-name-service}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "8fee9a053cb4d305ca8feceaf7bbb3aaf7fbec40b7956f699bee4e8bee34d65a",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/large-systems-django_template.yaml",
					"similarity_id": "70d0db988aaf0a7b59417ee6124427e69c3157b78b2f92665033f3dbb3b2b391",
					"line": 75,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-statefulset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-statefulset}}.spec.volumeClaimTemplates.spec.resources.requests.storage=128Mi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-statefulset}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-statefulset}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 128Mi"
				}
			]
		}
	]
}
