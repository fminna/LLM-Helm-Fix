{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 131,
	"files_parsed": 1,
	"lines_parsed": 128,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 31,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:14:40.195426+02:00",
	"end": "2024-05-18T00:14:42.168105+02:00",
	"paths": [
		"templates/hello-springboot-microservice_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "cb45b81358e66a7ce36362dc87f016a9d364704b9a436d572005f65df4ba9eec",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "c62311f06cc4886135cdb6e6ca570af60193208b7dbc0f443adc065fa2b49920",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "6855d6cf332e0599e2cbcfc414715de50250d23a716d29e080c29246ed32f3a3",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "05f777ae32b1b7437e6c1234be1348e793be62bdf329c137ce0d1a9070fe27aa",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "47f009f0ee97f020c4ce7e31d3af54649d19c9fb2bb7397fc8dba2f0f3c32e30",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "1cfbbd01ffed184d6da9fbe5dd3b4fe5fb833d5a85022d3b80867e10cd4ddf17",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "6ab717b1a26807f0ad76894641d11ee343f126b5dc577416158ae6286fa4a7db",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "d69a79011ba28cd7afda779d8140cf1aa541261f8daccbf5ceab22480ee8219d",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "3b39a139f6defc330be9faa5b99f43494192e82f24f98799534f61f4b49a347f",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "b96b33d834801980c4b9a78a46cd5ea8430cf7f946a0493785697b86596d7b79",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "4654fad0f90cc7bf433c963f9105ad32acee46db1cfb59853b76f8948b7618ca",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-hello-springboot-microservice-helm-test-service.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-hello-springboot-microservice-helm-test-service.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "2855c6626fab798e4176d0d6138d2b6b202f400850a92f1145b87fa2146adaf7",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "cea353eb61ec4e966c2e124baba86383443f0bbda857353a33900e44c3618015",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-hello-springboot-microservice}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "9e5050f2a67d6268088c52133f106e9eabe030125fcae21fb3af575e8ffc7488",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}",
					"search_line": 112,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-hello-springboot-microservice}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "cab7415e3add23524147627bb67c0897fc81a46ece25c188855c93948677df9d",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "3fdb540aa5868ad3d3e78eb2571c614d8724212880aacef1f10e18c3700d301e",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "f99da4f7c0bae235d87c8468eaa15534cb87cf2fe30a01e19dbf6761b47f9085",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.spec.containers.name={{hello-springboot-microservice}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "f8ed41ee708633bc3544a1764fa8b0e83706eb6e42eba1d840a2b969b9cb5044",
					"line": 126,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "d96f8208c84de6286b1b39c64e5a1e02f556f1b7478c422f5099ac3dab98bec1",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "e02a9195f79d3456a1856f4daffd0b1df423086c0be525eebfb8113b3ae217fc",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{hello-springboot-microservice}}",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{hello-springboot-microservice}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "f86269a9637cbb97e7bf0707581fc8dadfaea88bccfc15238c57921d148029b5",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "9bf7cb0a7d316e2cad7f359225fcbc2105328a159a753dbe859a718a90f05c44",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}.spec.containers.name={{hello-springboot-microservice}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.containers.name={{hello-springboot-microservice}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}}.spec.containers.name={{hello-springboot-microservice}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "0a62e634e3070520b3f76a5fb2d425b6ebf2c97a3ae03ef58a2855b13e13e86a",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "318293711ad7afbd0c22685e049d07260bd180cf4bf1a4348e0bb780502cb7f2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "998f3fd7b16177795ed40a01174e8f099b208f4890b518d721d6b680d466b0cd",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-hello-springboot-microservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "b8cfc67ad25cc538ef1f49d95e17ff745c7463f2149ee9d5f9b501effc10b9c2",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "793bc5b2930e6300318a48cc3006f2ef8938abb5b126d8bc31e2f126a88c3e25",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "5d00d2bb8b7ea1361c59f9d18499611cb2116757d64f715041a3a2de239b3867",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/hello-springboot-microservice_template.yaml",
					"similarity_id": "7eec1b4dbb1630c5473250cf0275f64d396f8e82cd2c2634af38f4af80c992d7",
					"line": 125,
					"resource_type": "Pod",
					"resource_name": "release-name-hello-springboot-microservice-helm-test-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-hello-springboot-microservice-helm-test-service}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
