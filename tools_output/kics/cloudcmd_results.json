{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 85,
	"files_parsed": 1,
	"lines_parsed": 83,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:22:42.741734+02:00",
	"end": "2024-06-26T03:22:44.915034+02:00",
	"paths": [
		"templates/cloudcmd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "b9d7c8068d98698e538e0a24b64cc646375895dcec1a2bb8c8e8badeb3720bd1",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "4f9727742518d248a0c74bf1f3662ba2abe47ae08be56fd9b87d3be661221893",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "2d699797c113223a8fa12a09f07dc7b4414b83c5aefc437e637b523e1b26b3e4",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "0d0804fe2d0af7b643b2e574a21ed5d0a25446f1fba8231987ff928b6684f0ec",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "8b5ff6ca9859c4a7e5bd4d7245a1a3f3ba1242d5bdc4a2b77b0dc04786d8265f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "a71044a5cc7bcae7b66e887e76f249692a6abc2139dce4778c3535e6b11ad6de",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "640a24226a9b1d11fd986afa5a2e5da45082920a6b7626b80d0933207816de5a",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "2ddf5612ebcb01ac510fea2b24485dd23bfaef5878b75cd116e5a8adcdae173e",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-cloudcmd}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-cloudcmd}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "ff26784251192d78de10d861f4ac7c0930b5374496db9f915a7b541c432b700f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name=release-name-cloudcmd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-cloudcmd has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-cloudcmd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "301a3d35507aeaa999a514f19d7d9200a4c376d7341bb3b20471cd7f300deaa6",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name=release-name-cloudcmd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-cloudcmd should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-cloudcmd doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "e13c11da46946be5243c3bce7960dac5b8b0f87b5715c805894c5d73932e4790",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "acd68a64856b35a322e9f6d41d9be9c488891c74a411cb3f814b4df23f733798",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-cloudcmd}}",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-cloudcmd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "f9cc9502aaf0716b692ac01baffe7280877124cc62f0d1574b471b446b78e298",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.containers.name=release-name-cloudcmd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.containers.name=release-name-cloudcmd.securityContext should be set",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.containers.name=release-name-cloudcmd.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "15ef62fba19b1c0c017aeaee3bf9de777bd0ff975631d29267060a1dc41d9055",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cloudcmd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "0cce84751449f34c18805e3639963800f0ff73eb8d705960fb9421a9bb956695",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cloudcmd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "a29e94d2055a570373cab438059ea0dfcb99de8f261a67a6819ffb04daf1982a",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name=release-name-cloudcmd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-cloudcmd has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-cloudcmd does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cloudcmd_template.yaml",
					"similarity_id": "685b37ae41e952f4275fadc797217fdd97ac659d1075fdeb8ba3447278e90c65",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-cloudcmd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cloudcmd}}.spec.template.spec.containers.name={{release-name-cloudcmd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
