{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 43,
	"files_parsed": 1,
	"lines_parsed": 42,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:51:32.443162+02:00",
	"end": "2024-05-17T22:51:34.397516+02:00",
	"paths": [
		"templates/amd-gpu_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "59c3b2d4816212410236ad01376edb7d277d666a22e18bc497729a9e7cb3fd15",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.volumeMounts.name={{dp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.volumeMounts.name={{dp}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.volumeMounts.name={{dp}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "1c70c9bdbc7d835713c7def9b109f04adc5efb2e01d750817b65f1d53c89470a",
					"line": 42,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.volumes.name={{sys}}.hostPath.path",
					"search_line": 42,
					"search_value": "",
					"expected_value": "Workload name 'amd-gpu-device-plugin-daemonset' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'amd-gpu-device-plugin-daemonset' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				},
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "52ed181f4986915807345c0db7f28dc37532f22e66c6d9c96274e44578770b1d",
					"line": 39,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.volumes.name={{dp}}.hostPath.path",
					"search_line": 39,
					"search_value": "",
					"expected_value": "Workload name 'amd-gpu-device-plugin-daemonset' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath",
					"actual_value": "Workload name 'amd-gpu-device-plugin-daemonset' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/kubelet/device-plugins' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "77e5ae3f558f4b2dff35ffe79bce065e4464ba2401a0699231376b434434e356",
					"line": 24,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "3f33edc79db21d9f5756248a7810c2d5c6776ecd2a7b86af8c65b6fb74a67e5c",
					"line": 24,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "a85dd206a8264f4ed6f2fefc92209f4901a41243968567e90f3b09bb672009da",
					"line": 22,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "ef6dc49e98884dd53c8a9f4784e166039295a51df59f6b3b446b3b02cfc6ad35",
					"line": 22,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "e9ffd3e460815275dfed72891997ef84f7f01387c017dfdadba149c3b7fe451d",
					"line": 22,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "f6793dec44058d50a7c27ddfe061de9834056af74b57bf3ecc27d4fdab6c3d58",
					"line": 24,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "6f7f9e2c725b9f1cc82b1d6cfc2d0730797353eedb2cc728dcea99c7b0f0980d",
					"line": 16,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "7606db2075d1142e52b68c29c99a4db1a7b2f520aea941017f75102e8ce74940",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=amd-gpu-dp-cntr has limits defined",
					"actual_value": "spec.template.spec.containers.name=amd-gpu-dp-cntr doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "1647c6453300c5c5f36f303ea49316f65dc35f25f6b769a1758f38be4867f0e0",
					"line": 34,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=amd-gpu-dp-cntr.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=amd-gpu-dp-cntr.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "f3a88b901c11e53f890628d29e1dd052b87a16c1f8883692ba6b6cb803452f5b",
					"line": 22,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "67fa42484ce148b9cece45103c434aa453a193cca5b6c4301cd2367ec303ce85",
					"line": 13,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{amd-gpu-dp-cntr}}",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{amd-gpu-dp-cntr}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/amd-gpu_template.yaml",
					"similarity_id": "923e056a98209f29a0408c0d6d5c6c74a6d70a5e669dd94f15818c53a80388a0",
					"line": 24,
					"resource_type": "DaemonSet",
					"resource_name": "amd-gpu-device-plugin-daemonset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{amd-gpu-device-plugin-daemonset}}.spec.template.spec.containers.name={{amd-gpu-dp-cntr}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
