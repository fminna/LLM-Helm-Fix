{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 84,
	"files_parsed": 1,
	"lines_parsed": 81,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:30:56.324493+02:00",
	"end": "2024-05-17T21:30:58.223629+02:00",
	"paths": [
		"templates/mychart4_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "05c6c6048ef3106894c5a02ff4078900618e5b66ad170ec69cb365d51316db68",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d08e4399cf246f67a7cdef8c94ba6e9ee36483673c04c18317072485ba278a50",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d2024de9be153713f90e1427cdf3a56bc375c0aa5be5551f9c1e7c32648b01b7",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "c6a11f6639fb6154234f05dec262b724e7e1a40d5f2660a966b3c630dc35e7a0",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "147b99e4a3eef17540504d5dd1dce44ee8f015c568696e13c1c46978652cfbc5",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "60ee7a532726bed89d4a2168abab7b5d2577a35f7e88d81c6ca0850d91a509ef",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d2f87be6edd23a05cc9152e007f2e77f91c6ce3970e5da6d02c75ee829a275d4",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "c2e8a2d9707586d9ed79b9922d63d45164541a916f68bed566c65a3c4626f5e3",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "334e91d8072147aa9e8711b58c7b04bb0bceaba7506dd7fb2b3beabcdd1bdbff",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "df646050cefb93b9f4199b9138cd5f63f9cb5a7fb8aa1e01dff75350018ba73a",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "ecc858c1fc11dcb69a078ad9086f1d24f86bd2e7a846e72a4a00be956406b5e1",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "eeeca89e7098d32fa07aa96a4010967d490919c21df2173ddcfd1381ee83a80d",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "4c95fbbbb419258274ce4b29f88a59bd28f082bf8599ae6986d083873677b971",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "e514dcdfdd51c3d08a8118c1f1ca484d4b4d76216a0a8700f2b5dbd50199b78b",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "8fe416abc4518f7eaa2cbd0052361360a0005b9f4efbfe44212580007a6a3803",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "3b0e0e05af2ee024e63f54b98b34863c4bef9dcdeded9b2b0eb3d7e0acddbb5b",
					"line": 77,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mychart4-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mychart4-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d14e4546f88de9db36a141bba96b231f92f6f1b9874afaf62a9fabeba37208e0",
					"line": 77,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "6a4faf25838ab97a044af1167f87decab42ace1b87545d6d7cc6596c233dbd99",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mychart4-test-connection}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mychart4}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mychart4}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "a4deda7c0c4a7b8aef17242253b958ec9ccae14edc53a1abf46104b0d9296280",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "30689b76ed9d293efcb6c021d46181fa507961831622ab54b87fa3be4bd416d4",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name=mychart4",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart4 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart4 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d411140c1724c6b0d6b2b30d0b6c5fff8caa01397b4d397e7ccc83c8808b6fc1",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "ca01d42756d627ec1ebc1a0db316e5c1031cb2a391d311484487ea8d45d371ba",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name=mychart4",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart4 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart4 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "8f315b16e3098cadeb5376744e944ff219e18e9baff40e45fb191b5d0e12b0c2",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "fc8159f8e1572873b51cb84012296c5f14302c7a869928cdcb48314809a0c095",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "1a8bbaa078b9cd90966b6216ba414e54a6084f4fdd402f9cde0555e0a0d666f3",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mychart4}}",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mychart4}}"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "bd49ec3cd6cccaf60b35742ed0fa72c99b053a2cb6a3b418c8e7ab1c3fb8948c",
					"line": 68,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "d94bddb133c6ef3f8c6c430d0cb81e453aa718dcb194af730bfd8ba4f0c205a6",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.containers.name=mychart4",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.containers.name=mychart4.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.containers.name=mychart4.securityContext is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "bedf19ad2d603027dd68354dc9ecd1ae45d11d487f67693644c0fe6bd4ad8c81",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "5cdb8b2fb20d5c1ac116a5bd7220b58f286ab897a9c54e4f66a1363e55742305",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart4}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "28c42075ed05c7797190d0a0c3a776cf70de03e965ef6dfa2b3fff2d5692a761",
					"line": 68,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "b74f0e525eaa9fb6ed060940329e1a7a33d8c6045dbd2cc9b4bb9c173171b1b5",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart4}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "7521d8685f8e6ec305af5be5bf765176ea144a8b906696309e735f485445e80e",
					"line": 68,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "7fe5a5abb0cbbd89bb388207170a051a37f3a14503300e019edd1a033c30a175",
					"line": 77,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "abc9e2935b64984068cf8dde19ecc3cbad77ee647c7dce4e8ea5b939d6e7fbde",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "7a95de9f5f81dfd6b07391cbea0074a058392fcf65f8e9235ee69f08a16ef1c9",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name=mychart4",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart4 has a security context",
					"actual_value": "spec.template.spec.containers.name=mychart4 does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "2ab296e21fbf592aca052436cf15285dd044fb1b5a2890cad65856d711403237",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart4",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart4}}.spec.template.spec.containers.name={{mychart4}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "37d5eb2158bdb358204c27140552faf97bf325529ab6861176e2445807492ec2",
					"line": 79,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart4-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart4-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mychart4_template.yaml",
					"similarity_id": "cce2f341de6170c9201386a25dbd0ba66cf5b1af379157ca9abdf5d9301d2a13",
					"line": 14,
					"resource_type": "Service",
					"resource_name": "release-name-mychart4",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart4}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
