{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 120,
	"files_parsed": 1,
	"lines_parsed": 113,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:51:52.798116+02:00",
	"end": "2024-06-26T01:51:54.920077+02:00",
	"paths": [
		"templates/ansible-automation-platform_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "81cbdf58ab63708a43ba9250348be15a22cbd9fa73011bcf6af4351f13d37166",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "14e8609f59beb2ed8f766fd1b1d603808b36ff8bea056b90df0ee2882589a4df",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "7d2e403b9de791d99be8e512cf9e05f9ead6911c732a759025aac403b59a627f",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "a2cd485effac89c8834b85f29a7ea432fd8baafd4ebdd509292504200126a934",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "80c0570d2284902f27cf862f775c1697e20d61451fb54979cccb69cefd22fc90",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "5969721a45b1c94f616e5bf1a41e590aaca210a12a00194063aad87c43b9123d",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "212a3c4c3a53ac43ece307d69300cfc71454627bc74b0c9f0724b550fa33d1fb",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "73eedcb1e74e1760e0069bb6639367fdc247275d63af90e2bdc8d08a5afb1b07",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "dafdb93c7c0e4593fc3c8ef30bc3043d046fb0810d5e5edc60c6b6262bd453e7",
					"line": 86,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{cluster-check}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "c10210e75b2d15722e1036e4d7471fa7f7b4bfb51460d689ea01b62c698f6c1c",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name=crd-check",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=crd-check has resources defined",
					"actual_value": "spec.containers.name=crd-check doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "e4d94da20f1bd99426ca28ac906dbd65f0b316292b1c3fcb6f9d7d5d311ec5da",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name=crd-check",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=crd-check should have resources defined",
					"actual_value": "spec.containers.name=crd-check doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "137a19c3e94cd081c919b81ea2240e4e3892cc73b14b1a40eae4957af65d0c6f",
					"line": 90,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "4d192fa6777faf23bb4b91c45cdce22b6aecb0b37cd74d0c96a36a476cd3a11f",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.annotations should specify an AppArmor profile for container {{crd-check}}",
					"actual_value": "metadata.name={{cluster-check}}.annotations does not specify an AppArmor profile for container {{crd-check}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "9cb417e7566862a2af469cec0f4b932e8480c78c7592d7abacf05aeb09855046",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name=crd-check",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name=crd-check.securityContext should be set",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name=crd-check.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "bbb1582a1949446b9fa132ce85bfa4381c8dc41b1d0b83fdd5c62203dfb1a300",
					"line": 85,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{cluster-check}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "8749b8f5d0bcc81a15f96c7ffb646c52023f749e59545326afe4acb803407f70",
					"line": 85,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{cluster-check}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "97b4fed426b6d3a52c0bc1b4a848b00cd2a6f21e4cb27fcc8c9b99264dffa990",
					"line": 86,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec has a security context",
					"actual_value": "metadata.name={{cluster-check}}.spec does not have a security context"
				},
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "9d284b2fc9fe8dbd603638b84a40725cfa8ff191580d3fc3f55637b2d0f94b54",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name=crd-check",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=crd-check has a security context",
					"actual_value": "spec.containers.name=crd-check does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ansible-automation-platform_template.yaml",
					"similarity_id": "6f8cb813bd5ba01b0b71333acd552b68cdfbf228960931a96368f475d2a2f52a",
					"line": 88,
					"resource_type": "Pod",
					"resource_name": "cluster-check",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{cluster-check}}.spec.containers.name={{crd-check}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
