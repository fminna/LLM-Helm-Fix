{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 71,
	"files_parsed": 1,
	"lines_parsed": 68,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:52:24.786021+02:00",
	"end": "2024-06-26T02:52:26.826125+02:00",
	"paths": [
		"templates/logentries_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "f02c837be9da76bb0b4f15354b1bece4be6b029077a1992124e0bb1b86712201",
					"line": 47,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "b6f2e71a46072aa05a4037c49e916e3d0e2d1020dde50cc467b8417570b1e776",
					"line": 70,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.volumes.name={{socket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-logentries' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'release-name-logentries' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "d88f968d477ed574775cf5b874d695861e572dd6eaf20a7c7de697710cf5bee5",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "9c7a24ea7b9998410c9500717bc4830f1514dc5d0e3766050173f911a58d60eb",
					"line": 59,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.volumeMounts.name={{socket}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.volumeMounts.name={{socket}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.volumeMounts.name={{socket}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "721469886164f2d6cab09897732df7f63dc217a75f76280968a3046a008e0725",
					"line": 70,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.volumes.name={{socket}}.hostPath.path",
					"search_line": 70,
					"search_value": "",
					"expected_value": "Workload name 'release-name-logentries' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'release-name-logentries' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "020b4c46f8975f5be563c94052d62c2fad02ad718a8bde799b2ee9e15de0c212",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "ac3e414c704f953e45172da288f7b005035fd60e8dd2652c29d66aea96c9a341",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "b4f71d92008366ec31d08b370e564894c4d468ddb72f6306df1f541b31a96eb2",
					"line": 70,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.volumes.name={{socket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.volumes.name={{socket}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.volumes.name={{socket}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "2ff3656c90fc57249063832c70308e5a3c16eb8c959d7cdaa5949c66ea466444",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "d35745075a021a9656a6b928be919ae565d1dcf387b2e04b5a19bb1c74306412",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "75eb68903e7faf81ffb1efe3f0d9e6329b8787f1807a77d2bc1c60f6393f60d9",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "27b92b79b945f47d0de13eb01839d52fcc93b54e0c8c80b937bee4f97aeaebd4",
					"line": 40,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-logentries}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "Secret",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-logentries}}",
					"search_line": 12,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "logentries",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{logentries}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "2b1b998996e06acc3264e9f06b36f6105d0d7c614da0d280df030b9e058930c1",
					"line": 45,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "e81d5b73788a1db16a63d0692406bb3b84682e4c9f51809bee32a31093072f9c",
					"line": 36,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{logentries}}",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{logentries}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "01c1b973ba57e2a1f603680377a1c306276760c6b102b69989f1455652734cc1",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.containers.name={{logentries}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.containers.name={{logentries}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.containers.name={{logentries}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "58a43ce04f7a22548c641c41bbd956424e8d0d473edfef6879b9fcbd48d51369",
					"line": 12,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-logentries}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "05eff6fa79c46f4e1039a9d45c948ce6ebcdc334d6e717d198ab7132542b0bc3",
					"line": 12,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-logentries}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "b9e0be9dcbd8950e4685f03f9fdb5315fa6527fe96594f583e643a610db7f80a",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.name={{logentries}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/logentries_template.yaml",
					"similarity_id": "6af93ff220087856824fd7604f6e7c26a2c619e5277c00fc8141daab16ea69f9",
					"line": 64,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-logentries",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logentries}}.spec.template.spec.containers.env.name={{LOGENTRIES_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{logentries}}.env.name={{LOGENTRIES_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{logentries}}.env.name={{LOGENTRIES_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
