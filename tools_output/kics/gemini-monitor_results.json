{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 117,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:30:17.037729+02:00",
	"end": "2024-05-17T21:30:18.961323+02:00",
	"paths": [
		"templates/gemini-monitor_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "32515f3443a29e7ef771a22245985401bfde21f0558edb3f7b2b80912f94b6d1",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "2c7c6fc66d6233260722e87b73d9e92cce089623fa7f9e33b57e69f9bd33fd4d",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "056f9b989dbb831f4ce2d8813e20ffff95a716c33bdfb727c320dff24fd71e6c",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "ced513d9d0eb724077c8cea28b2000538cd3e9a54736cf82feb3c2f922bcfb88",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "0165667df36bbb84654a6bf7788620683cbc13b36165ab75b0918b4c96661cff",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "c29623c978feb28cf719f206e01ee5ed02f53a9a910da66768633c6e9b505eb4",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "4d7891182dcb956ab9668cfcf4ce91eb8dd2fbc3f8e466054ffa71e585f5c50b",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "539c53b36e5c24b58c5c4830a6899a0e348653baca2824dd6eaedd8e43771d7a",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "b2df0a727fbdfa67fec77af3965917d8abb2b104c7d7e9c8c9d953abe266c60d",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=kb-monitor-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=kb-monitor-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "e27eda64cfd8a69230e50064e1a736c16bd8e63d9c87924eddeeccf4d290ff89",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "5f38186f7c3697a57a2413e097d1a55a1dce9e4d34146d4fe02a7ff99a3a054f",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{kb-monitor-test-connection}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "142073c1eb338cdfc3f7188d9c41cfdc1694e6b9f3fac51c4fe6f62f6ec55455",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "57e417cee036954ad6af887e69b3ccd6519cb47088a0e96e69f493761cef28dd",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "f77413758db9ff02af959a12dc6fa194036ea97b4099f5f3db500e6e2b6ffe3a",
					"line": 113,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "e3cac0e4ab58abece2fe108962f1bd77540d6428873b6348b3560acd917454ec",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "a9fca92755b0d71e4a2beb33c0ffc359f436cf104995e60f3c836873413da9b5",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "8ea79a0cd540380f4079da8da4f1c1b26592e226a3d69698ae1176a8b76d2ca6",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kb-monitor-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "778f7e7b8aa5575fcd03d5a9ef0eee0ad134dc4c942458338c650319aeddc90d",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kb-monitor-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "924ddcd9c5cfe2f65d35537e16c762e62cdf217a684b79bb8d0be119bd370451",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "329f7f000acaf9621e8a464e11097c2ad480360d1b9bbedbbe1570c537252de9",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gemini-monitor_template.yaml",
					"similarity_id": "18bcb8c9a2289ce57c1f4708b9c3ec1eee3bca4c2bbe4d3541478339900d9d54",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "kb-monitor-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kb-monitor-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
