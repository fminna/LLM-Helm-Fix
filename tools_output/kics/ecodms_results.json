{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 286,
	"files_parsed": 1,
	"lines_parsed": 281,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 7,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:22:10.893867+02:00",
	"end": "2024-06-26T01:22:13.058289+02:00",
	"paths": [
		"templates/ecodms_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "150e5c8767318947edff71ddb3be873bbcffdf600613ef1e3348527b8eccd5e1",
					"line": 189,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "357f01ac5d0a3e5fe090e68f9f171abb35c2501ca22d05a0a28a0ed9a11fcb23",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{scaninputpath}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{scaninputpath}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{scaninputpath}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "8c519f847965536b2fdd29164d42167229257e50c42228a7beef7e76de017a23",
					"line": 183,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{backuppath}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{backuppath}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{backuppath}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "da4c0a62a93204f52a1ee3fe794121908a601608e238e98e6bf5556a1ab8ae02",
					"line": 204,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "2e0cc9f4a2bf9e5023820f5c36032513e89607ae647c5c4a5de5ded592808c33",
					"line": 207,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "95cadc70069b727eb4c6b88163bc5676b190c9f93de64f6cedf2174d32ca34fc",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{restorepath}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{restorepath}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{restorepath}}.readOnly is false"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "8cb8af58a1b59e43da52f1ceee16c06537f8cc7c906499b56f402a5bc94479b2",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{data}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{data}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.volumeMounts.name={{data}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "9bfb23c3758299e76b7e826db32c1819baca8043ec7ed5a200816fff8c3df17c",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "e833ff473c8a6420a32c3f7956dfdc77542c5962150329c0198986c7752de3ca",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "b12aba7a1c590aa79f8b9b1f6e4696b7478f418b563d8dd59b939276333a15a1",
					"line": 226,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "cea24611a43950c66a39f89545a1d5b3a7b6b5813b74fc24e15bada9d5addaa3",
					"line": 175,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "be1e691567e8224e57203781774773ceef1ff0ecc9563f16f096e4073f34a33a",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.namespace",
					"search_line": 95,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "9d853c486dede98c57cce1bf7faa6060f84fe8da34b3437c575f78d4fcfb1ff7",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.metadata",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-ecodms}}",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-ecodms}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "4bced110a3586ef92051b4e3ac42b0ddc0916a60d48ea485ff7a814350596a23",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "daf6f9c2c300b54a76637597f8ed9a91014320706f549416da281f74fe5f850c",
					"line": 73,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-scaninputpath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-scaninputpath}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-scaninputpath}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-scaninputpath}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-backuppath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-backuppath}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-backuppath}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-backuppath}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "a4305b96d70af5ffaa6e7daffed7e70af5b0c66690e31ad5b1137ee964ba4cec",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-data}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-data}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "d7aff4256fc4a624bfcaad82ea9bd7d7bec9f074b05c7f4c8e9720684b715797",
					"line": 51,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-restorepath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-restorepath}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-restorepath}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-restorepath}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "23e5c6da8155aa93fb05c65f51a31e5591bc1b5de194e8bab3712c03f1abffac",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "613d091d1f6caaadfa1e389b9645940437a381b2a5e2d7d0ee659bf99b469322",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-data}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-data}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-backuppath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-backuppath}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-backuppath}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-backuppath}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "85258a33c9ecdad67471a98c5037bdc01ca2258455adf8d9ef44600856ee211d",
					"line": 73,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-scaninputpath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-scaninputpath}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-scaninputpath}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-scaninputpath}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "393d7156674085d95db1cbb8b9d5ee1ac2bdf3821c7757011fa2808788d1bb04",
					"line": 51,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-ecodms-restorepath",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ecodms-restorepath}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms-restorepath}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ecodms-restorepath}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ecodms_template.yaml",
					"similarity_id": "6126e2991502da6691fbc38d0d0a3343f1bba8be6ea18734ea181fac3c9334c7",
					"line": 220,
					"resource_type": "Deployment",
					"resource_name": "release-name-ecodms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-ecodms}}.spec.template.spec.containers.name={{release-name-ecodms}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
