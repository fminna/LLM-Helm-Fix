{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 212,
	"files_parsed": 1,
	"lines_parsed": 201,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:59:42.276341+02:00",
	"end": "2024-06-26T02:59:44.365879+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/apm-hub_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "38b72608da7ed24e2912ff9513307a89c11377bc4fddccf88313d6893cdeb45b",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "7f4d1523dabdb56ec655d0ec857e996b571f0c30268fdeb141a556cfc2aea922",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "a94ccb4e641fcc9cad42124af644b4b30ed97bb15d28bbe6f51037c4f5fb7195",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "e3bf21513a1c66b86380fee46c570e075f26839df9d36af295405fb7bf37f17d",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "a5ceac1b6d478ab2f065bd2dee2041a987fbdd4531e1d91ae27b703f18cd6d44",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "bf9120d16deb11560fad63ce32f748428803924ade1bf7489350495c25ebae6b",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "a9935b09068bb7999883352c0b549cf2ed9a6fa6f360b0e4c070c5a11142c312",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "e7c3f81bc26a435b0a714a9a12432609380a89914ca6c1a4b68deed3e3c0611b",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "8cd0b210b73e2c4aae7925b2fd6767e6af194901893aad78d6ffeb75cc478b89",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "a4dbc26064bd05469f1a4656fd129decf39a79bb225b837f4820a78409ad1fee",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "3c72adf5344689d2605c8809d931d4f1d8e1476345e9cdc079701666284346a5",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "f6043684f3df141553702bffd9d1b0d1d339d16daafaec3e4f38739ffc26d037",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "9aba9f63a4107b46b6aa295a3d5c6df8e456ac434de359ad8ca254ce0cedc76b",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "28d64e396d69bf25a990d12cf9f0606c4052b84f0e5826764f98779fef632cae",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "33193bbca458d6c3af21fb3e433fe0b4bf02170f24b73dfd9726c64dfd297c68",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "0dd33392c2df4e02a9a1d668f8e98ce9515b472e33b076296807cfa0a59ff06a",
					"line": 178,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-apm-hub-sa",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-apm-hub-sa}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{postgres}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "e9c3cda4b76811c354ac2671abe04db37aa735852920a25203f0731deb25112c",
					"line": 167,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{postgresql}}",
					"search_line": 167,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "5cc30473f2dbd3540e656eda4b43e764e4306bff629e6829002b1ccc3b15dd55",
					"line": 94,
					"resource_type": "Service",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{apm-hub}}",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "e947cf965e7c677aa6222deedf7b7b85e2cc0e869f3a24a6e7111e0e1b317168",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{apm-hub}}",
					"search_line": 116,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "7f272be103c7237f772eb8c70565916c98021f8740ba3141d25f2dfc0292e718",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "83e6b3e3cc672bd2587f38a2af44eb982844917c328adb2e5faa121191f1b9c6",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "ee537e2ba6a7b5176a11c7f65c314a06b20bf653a44aeec2fbec55a2683bff0a",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "6f3dc2315a86a8b1271ab47dbb131ae15f056d099c9df2181fdce3a925998f6c",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "720821a7b5f81cb8ce8f90ce4245e950384a4ab49709ad17b6959807852340b6",
					"line": 175,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "2361428f9f1ea2d944013c7263d8c9ec96ceef6061ee3e51a3ad18735fb4b7b2",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{apm-hub}}",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{apm-hub}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "312bf8b70b2061cd64da583e6bb11ba0c133f155497973b2316f26fcc967f55f",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.containers.name=apm-hub",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.containers.name=apm-hub.securityContext should be set",
					"actual_value": "metadata.name={{apm-hub}}.spec.containers.name=apm-hub.securityContext is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "f937cb7e8fe205614beca6e897a39eaf0facbf9acfa52c6dc540f8a3d0539daf",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext should be set",
					"actual_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "1b082f5dc0c93db4dd937cccdab8b28c17ccdbc4cd6ab1b0adf989833191c215",
					"line": 167,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "535c13dcffd44a2739f15e5b6c333987948250f9d3ca0316aacc8ce1ff158754",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{apm-hub}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "14c3472f2ef561287ef09109f7405283ec078456f180aef2134f40347085e68e",
					"line": 167,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "8456ae5d11082b9ea1740a4fabf55b6df773c7452c9205a28eca4c08046dd4dc",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{apm-hub}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "dbd63cb430fdea770365cdcea321cd4794124a4815687127ae083325499a5e53",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has a security context",
					"actual_value": "spec.template.spec.containers.name=postgresql does not have a security context"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "1efd86a7863621a3671dbc6b72ada5d4b08eec19daa59abec9e53c1f56764c2d",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name=apm-hub",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=apm-hub has a security context",
					"actual_value": "spec.template.spec.containers.name=apm-hub does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "bc01071b548a946705a30d16b99b84a27e6cad4c29fd11af49e1f29c4320ffd7",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "a7ac67590f1c462f620735a51e9b791c146e8ef8d000d4b5a46e9249e34d9b41",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{apm-hub}}.spec.template.spec.containers.name={{apm-hub}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "ea449ee089386aeef2348bf54b545e0c73c5de09b00e2c4a4a046571ceeb1e95",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "86d0b6d5b18726629550fdb96802c9db12918d61ec6edb6314615a5f8eb00d5a",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "apm-hub",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apm-hub}}.spec.template.spec.containers.env.name={{DB_URL}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{apm-hub}}.env.name={{DB_URL}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{apm-hub}}.env.name={{DB_URL}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "96ea44dac55c6aedb8686df1514b7c92fd5940ead69d0aa9f5669ce14519adff",
					"line": 104,
					"resource_type": "Service",
					"resource_name": "apm-hub",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apm-hub}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apm-hub}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{apm-hub}}.spec.ports.port={{8080}} does not have a Pod port"
				},
				{
					"file_name": "templates/apm-hub_template.yaml",
					"similarity_id": "6410c4036d856671b776b6d66b847aa4774442155be2b5dcb9eb136fcddcf05d",
					"line": 87,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.ports.port={{5432}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.ports.port={{5432}} has a Pod port",
					"actual_value": "metadata.name={{postgres}}.spec.ports.port={{5432}} does not have a Pod port"
				}
			]
		}
	]
}
