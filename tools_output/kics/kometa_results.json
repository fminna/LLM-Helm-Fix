{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 306,
	"files_parsed": 1,
	"lines_parsed": 303,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:57:12.299081+02:00",
	"end": "2024-06-26T02:57:14.384095+02:00",
	"paths": [
		"templates/kometa_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "191259c991d6883f8fd3372eff0b0b323313eecd3619ac13f7576a82803c9f59",
					"line": 233,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "18a8ccf265e0ae2dcd175a36cdf1137b105d23f66c7afc419951508d68afa9c5",
					"line": 236,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "b04dfd847a5538d04a062692b42386a7a5526409f2371de7f1d74198d3959070",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "0f8a0b2210f4a9586efe30762eb3843527cedd3d00acd63d72ad9645142d7011",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "fd9a0a71d91ac09936989aeebd8da7bb7b9fcf59b1b8abfe8120f02d10253c1e",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "ce652e88368566d326371636ba3fcf5dbc30595a7c574e3546716ce50e855f80",
					"line": 224,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.volumeMounts.name={{devshm}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "4c0dfaf4340f9987690c3362be07284b204b313a4420e8dc623231d50761e4f2",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "daccebd1785d2d2000847b40e778beb6adee630851f0342e58b7dc7ec1066e47",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "02b306ec8fa705e5614cb2420ffc9d384adf979bd6194bea2c0a280d8db0e8d5",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "97e2c5897d8fec965fca3e6220aab6889f773917a179a790bca69b62fedff391",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "c3086e23fd55b25e129a4bdc1b04768cab6819bf26eea1e25aa713aaeabd86a7",
					"line": 175,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}} has a capability added other than NET_BIND_SERVICE"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "13c595503b85cdb670f55d769f9f5396621aef18854b5d1768623db2176acc24",
					"line": 255,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "36350c77fbdf14076c5895f3fc8f55e842ae6521f230a2a25e28b4f70db25bf4",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-kometa-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.namespace",
					"search_line": 53,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "cd33a2971a05e1e2b042bef44d2e191e2ba6b91efc58b2d23b6f58349aeb36b1",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.metadata",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-kometa-init-create-init-config-file}}",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-kometa-init-create-init-config-file}}"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "cd33a2971a05e1e2b042bef44d2e191e2ba6b91efc58b2d23b6f58349aeb36b1",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.metadata",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-kometa}}",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-kometa}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "da09f249b0ddda41193bd60b87e440fc15a65fb0db674f5daa6fb91e84d79bb2",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kometa}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "726f5ac321cebc20981d485d206634afe41e81383e41097408a4964f77b31e75",
					"line": 31,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-kometa-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa-config}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kometa-config}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "7715a3d1cf9a1bc55a25e3c90502e4b2d642a913c5f424f04f5dc819686c0eb6",
					"line": 31,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-kometa-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa-config}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kometa-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "2eddf2df9594486007f96bcffdebda9b3f9a1cda7e0fab3ae977137f66f033fe",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kometa}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kometa}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "d92a46787870dc9b16bf87998c64423f6751a8ab756509e60b4f0c02b093bce5",
					"line": 249,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.initContainers.name={{release-name-kometa-init-create-init-config-file}}.securityContext.readOnlyRootFilesystem is false"
				},
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "bd342e910f61f5e9a60c6399e113ba4c0b0ac52bed390ca7297c93d848356eb2",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kometa_template.yaml",
					"similarity_id": "416ba3967c380a8726c1960b6482fd6d30bb0a7cfc50ea6d1f399b544773e43d",
					"line": 183,
					"resource_type": "Deployment",
					"resource_name": "release-name-kometa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kometa}}.spec.template.spec.containers.name={{release-name-kometa}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-kometa}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-kometa}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
