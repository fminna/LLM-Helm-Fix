{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 134,
	"files_parsed": 1,
	"lines_parsed": 130,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:05:00.547351+02:00",
	"end": "2024-06-26T02:05:02.601908+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/motioneye_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "961c70924c8b0add4c070ea5c64e1c682b4c944b48991bd5ed16d6800c28ecaa",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "1bc41a0c71cd32a41a8ab1344b9a68ca652c957922558af163116a4e3a220bb8",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "aa00d52db503473977082a396146c19ab0d4239ba0a7d901cc26c16bba8e4020",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "9efd8db38b80ba4affcacc5fab3a0431491df22cb3c6e1e3fe0e26fd53de5c4b",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "1102af58e75c5828411e8124d59ae625d40809d31eb99712a56fd623e6ccd169",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "b060a44a3f953b8c7fc5dbbc3afad4bdfaca09a1ee554d7a3e2b26a44779fb6c",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "d098fee6cd58fb1eaba8106122965dc09830f23401b3395f8fda999c7568ed46",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "fc21329cb00100dd5d690414644d04ca30e88b2fcb1d4103689d6c0aca6bc5e3",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "0811619c891571b19f0729851bc6a7a30b3a939c767c58068633d9a26b9477ea",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "motioneye-svc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{motioneye-svc}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "8ec473b89a3d27c6c7fcb9239e49adb0786ddc9cc45d89d624a1db3b1cc58d20",
					"line": 107,
					"resource_type": "Ingress",
					"resource_name": "motioneye-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{motioneye-ingress}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{motioneye-deployment}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "e67f5d923c9320754cb14a13a5e94efd18c736467ed52474d096ca913fadc0ba",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=motioneye has limits defined",
					"actual_value": "spec.template.spec.containers.name=motioneye doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "a8bd67dfc8acd792290852b87ccde570e22ea251c601b13968a2e540ba21b9f3",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=motioneye.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=motioneye.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "d1b1aab841b5769946b7164dabeb0ecf57942b1ee7db967011fad6c325e97042",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "2873eaf212cc743f59cc2f81122dc87f5af0f7e07d1ba5eee848c792574cab62",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{motioneye}}",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{motioneye}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "ac86c66d9487df95e1a8d28c3a4e71a65b4c1fcb4f4f5400de7a2dc93c648e3a",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.containers.name={{motioneye}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.containers.name={{motioneye}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.containers.name={{motioneye}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "c1d127a6095f7993210e02e63b20a4b2e94954b014a49d6f24a3b51df5463cbf",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{motioneye-deployment}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "d50dc157dfafe3c5b5dff25281569595f0ace11f13b06dafd61ebae4010e6338",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "motioneye-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{motioneye-pvc}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "f57495fe62579aaa2c07a783687f0086ddc94fb298558d500d47029c2fa1e1e6",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "motioneye-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{motioneye-pvc}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "6af8ca853d397cf718e5d3c38eefce308746feb13557bfc09453b8268ece0a94",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{motioneye-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "64cd59633c0f2fc37f309c3a91ca3192d91fbb794ead33a1aeddc2db7d85e257",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "motioneye-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{motioneye-deployment}}.spec.template.spec.containers.name={{motioneye}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/motioneye_template.yaml",
					"similarity_id": "ccaa7bfcbd9d9c740ef4cee28818729427e9baa0b28ec80b429787d328942f9e",
					"line": 31,
					"resource_type": "Service",
					"resource_name": "motioneye-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{motioneye-svc}}.spec.ports.port={{8765}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{motioneye-svc}}.spec.ports.port={{8765}} has a Pod port",
					"actual_value": "metadata.name={{motioneye-svc}}.spec.ports.port={{8765}} does not have a Pod port"
				}
			]
		}
	]
}
