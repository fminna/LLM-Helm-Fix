{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 66,
	"files_parsed": 1,
	"lines_parsed": 59,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:30:44.304019+02:00",
	"end": "2024-06-26T02:30:46.418401+02:00",
	"paths": [
		"templates/datacube-data_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "a05a0ec34324576945c9f9d9a8ec16f57356789ca6c0cbb2cd551302402d92bc",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "eadb9caeb3cb2f8c717c6bf0ee94253845e01c0e1b1e8909ffe01648b16a1c86",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "e6d19074984f5f772c68148f46a4cc2c8afb231d33afd48883a639aec86caa1a",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "a01d74e6bcbadf941ce3f4f0746a680053c6ed769cb845f6ebbc87d8da4adbd8",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "0abbb63e5b451c4515799fd3cc9b5157772624f18140ce1f451bfa7496f41c28",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "68152dfc24d540202f18eee6c1808e3a3744d22c0097af909dbef84d71514742",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "1d7209b2d6f4242cfc551c44f7b6ea19a5145d9b980a9aa94bc13c648f7179c7",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "4bbfbe0026db01254e1ff85721639a988e5af0b077e3d6bf8cc5aabfd93a4d76",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "82f91b7b6ea54a182e038c3ded37eeb381ad947890abb95af4fd2e55a87b90b1",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-datacube-data}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "a3c711db8571bb9476ad9d8fdbcae708961c86a1e6dc261f480627892b306d5f",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=datacube-data has limits defined",
					"actual_value": "spec.template.spec.containers.name=datacube-data doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "61d82364131331276884668bb0314d676ebeb759605bc7df49f093bf33f6dcc3",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=datacube-data.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=datacube-data.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "8d6677bd18f84faa225fb5398be5096e85f407964a43b3bb6726256f2cdf82e4",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "bffc887ca3ad6c4d306ec9a75c636fe8a2f8e4d53c917a55159cbaf04627b268",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.metadata",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{datacube-data}}",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{datacube-data}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "a75f8ad0d672075cf4af054977127a4169bded45bdba950f117daf651e1b02e9",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.containers.name=datacube-data",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.containers.name=datacube-data.securityContext should be set",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.containers.name=datacube-data.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "47f4260611ce02d0e564d5ac0f997ead02bdacf3e24ecc5080509c83c02aee10",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-datacube-data}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "341852984b49ef6a139a329b5e9a769e80b7bebef31bb9c839e6c4eeac6ea381",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-datacube-data}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "33707ada96129a8a20ccd4757646b7278f7cd71f8ae20abd2d89c12712e47f5b",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name=datacube-data",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=datacube-data has a security context",
					"actual_value": "spec.template.spec.containers.name=datacube-data does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "acc095c8fe39747bb6242d1a00c02a85fb572ddebfe65a320de8ef84b0da84b6",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.name={{datacube-data}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "9ef1bad417e33ec4a5ac837c3022ee7a279774c3b0cdf01d4efdee898c17a028",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{datacube-data}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{datacube-data}}.env.name={{DB_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/datacube-data_template.yaml",
					"similarity_id": "171249599820129284f81347452edbc8e7e62c2da967887a8e54fad7ffea0712",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-datacube-data",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-datacube-data}}.spec.template.spec.containers.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{datacube-data}}.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{datacube-data}}.env.name={{DB_USERNAME}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
