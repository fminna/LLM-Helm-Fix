{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 140,
	"files_parsed": 1,
	"lines_parsed": 113,
	"lines_ignored": 27,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:14:54.410648+02:00",
	"end": "2024-05-17T21:14:56.390559+02:00",
	"paths": [
		"templates/tritoninferenceserver_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "53ae4509c4b09c84431ffbd57223040f10044261752d381c1c9a5b800aeed710",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}",
					"search_line": 137,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "e08702802cba3f02b6da953a7e02e124e42312019def33443b4e0fdff32c0384",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "8707e8f3f3c6184ac24a9af511d8e84fd0d230a6c4e552f008b020a4bd92e89a",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "1822922ee886629e485986a541c1cfeaab1f81f7052c08e6331315d64ea6dc54",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "d282c17167246f039f7f6a0301c58932db96ed328d4097f1b7a60053bf11371d",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "7afb0b846a67db62ef74208ae36b8457c46a20051ad4852dda63da7d19cc62ef",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "e7d316b97448eb6524b60c0e2212c603701bc2859a652e0f4a4cc43fc466b6bb",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "8cdc45af4bc4e08f5bde44bcca3b58767f51f04236c081d34c3089a68bf4eca7",
					"line": 32,
					"resource_type": "Service",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.namespace",
					"search_line": 33,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.namespace",
					"search_line": 86,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "f2f433044346d43e49261a3d6247d5683316d40d8dcb57c04b62e9ef8894061b",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tritoninferenceserver has CPU limits",
					"actual_value": "spec.template.spec.containers.name=tritoninferenceserver doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "5f88f43f0e06f86154ea2673d9d0fc42ae26f015c3fc32d30ea3bdae964b20de",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tritoninferenceserver.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=tritoninferenceserver.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "c44ac78eca28ad2bf38db3e4c21e7d2d0cdf91eddec52c87a547d6e2313f29a3",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "6b439f6665617398fdf320a88bde318a188a31f4af4c14805beb9e5ba23ef9d9",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tritoninferenceserver}}",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tritoninferenceserver}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "e9219674fc2639a11cdf0d8f5026a49d46325693ef11c807c4137cceee6d459c",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.containers.name={{tritoninferenceserver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.containers.name={{tritoninferenceserver}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.containers.name={{tritoninferenceserver}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "8274d8f4d501ea3c3fff2c33e16f2d2bff5529b7f4dd08b5f69e5da5432faf64",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "5d73301cdc38a0250b41dd2778c5b28f8d573ca36c53d9e33f1f3528cfd28e82",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tritoninferenceserver_template.yaml",
					"similarity_id": "4af94c93ea0f87de5c517b12ef4bad79a04b484e06645f58536c20e7b526adab",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "release-name-tritoninferenceserver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}",
					"search_line": 137,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-tritoninferenceserver}}.spec.template.spec.containers.name={{tritoninferenceserver}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
