{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 221,
	"files_parsed": 1,
	"lines_parsed": 215,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 34,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:46:46.661315+02:00",
	"end": "2024-06-26T01:46:48.74266+02:00",
	"paths": [
		"templates/mathoid_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "223b4dae2ba93f20e26a253183660e22dc8e05b4d88be47f2fc82452cb559978",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "decaf06ae113d05cec5d657bdff4d6775e5279c2885bcc018770387b0cec3977",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "af83d1d218bc2ea2ae983c6eecd4ed25e15d3e779c1424d00d0ad846001ca459",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "010daee6099e050450929d65ef849ea55813f2bc6bc2ed9f9a5bed196c7c3b19",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "e420b9d9392da4c56ac1c254471f530bcec25f500a0858cd33960b273831797d",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "53c2008bb2f6e9af0af10c34e64dc078759d5fd3a9e0440a762ac007d5c22bfc",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "6e61e756ebab0346f013409444429a2fed88e6667250f82655d927c83edf90e9",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "07946c612fa90838994d9a2f30f69a2ad98a7ca73d30a790a5f8172a2370a56c",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "de6ca43348904b5b6cd0f867503f6f3ed9f58a684211706b4cef52a5d1f2bad7",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "ade0ade83d926ef65df2bb2bb2e0842af5ee5b2af5c0feae3ee07d0037164723",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "b61c39a690074b2ec5d6ee7c179a6188afc3d3f900623ccf390fe8e2708d106f",
					"line": 213,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=mathoid-release-name-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=mathoid-release-name-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "8a7285913b8fb00ab9c794fad8706a25ab7313398fa61c9dcefc234c14f77bc2",
					"line": 213,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "3a5d47d7c1649ecf4653d0a3f23ea4faabdfac8f7906afd4747a6c51fd1d1ae9",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "164224c207f73fcf68501ad40220aa1a1b152d19a2b5d2319af9d33f12c2ecde",
					"line": 118,
					"resource_type": "Service",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mathoid-release-name}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "a355988771e7fcb244dd4e85d01a719034da28c7731631885f598954082b1435",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mathoid-release-name}}",
					"search_line": 139,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "82455c716ed795c3d35d0d867061c1f7cfa23014664ef4e0ab5d5a5fa5cf49e5",
					"line": 209,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{mathoid-release-name-service-checker}}",
					"search_line": 209,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{config-release-name}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "f56fa7ac0ad2b2cf48e150801b3a5e87e42277f963bdeec822400dbcd554a4e4",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=mathoid-release-name-service-checker has resources defined",
					"actual_value": "spec.containers.name=mathoid-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "e4a1fe78cf8eeaebe5e4e99c91c1884704620c4952f8133059e201e94b4d71ec",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=mathoid-release-name-service-checker should have resources defined",
					"actual_value": "spec.containers.name=mathoid-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "e7329defdb62f353a3a4f54c8305205178083623536e49cd85fbebdf86adad4a",
					"line": 216,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "7b14ed2064e487e3f94006f17ef92f8c5df6dfe67b3ee4db67a21828bb98219c",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "37e99dd250ecdfcf23d17b5ea0f53339a250616cf9041935dacb07cf2fb08cdc",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.metadata",
					"search_line": 157,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mathoid-release-name}}",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mathoid-release-name}}"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "e05e40c820d7cd84a05ffd9297f1e1c73b132da21485c1aaedd6bb681f0c49c9",
					"line": 209,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.annotations should specify an AppArmor profile for container {{mathoid-release-name-service-checker}}",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.annotations does not specify an AppArmor profile for container {{mathoid-release-name-service-checker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "84e1ada707ac969ed131d8a4d6f857470f0e5ab845ab3e074fd4e2f69f2f858f",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "6506af1701aef0c1754c9176323bfde3bb46c059b014f8756c7936b141d9ca9c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mathoid-release-name}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "17c466c74e5cb936d7c5edd2ef1b7028cd91a10f737b3ad984988ea12b0e4fb3",
					"line": 209,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "00c1c3aa4ba267e5bfb3b183e04a8d51c08a7b53fc93506065c94ae35988b319",
					"line": 209,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "cd8201c468b892ab2bddfdd3aae5c70807109e68c7b197bdb5d41ade19bb8656",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mathoid-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "84a928ac0785b345b12c4045647c78a7a57a44c9a551c6f4782071dc9067fdf8",
					"line": 213,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "cd4dd87aa47dc81bdb64ac8b20fc1d5d4a75f20ef0461d4513b4107763e09d07",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name=mathoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=mathoid-release-name-service-checker has a security context",
					"actual_value": "spec.containers.name=mathoid-release-name-service-checker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "f75fa5ee4e91bfee340cf1b6c12c5dcc6a005189912735fa2a475d9b1aa950f6",
					"line": 215,
					"resource_type": "Pod",
					"resource_name": "mathoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mathoid-release-name-service-checker}}.spec.containers.name={{mathoid-release-name-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "d68f6bc4ce80999b762a545043b6aa3d73fa00d4a558d653a9b7a13c09063c2e",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "mathoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}",
					"search_line": 191,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.template.spec.containers.name={{mathoid-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "7cae0f3d66198eee89602ae6e4365413a44e6d6cbba65f3ee8eab37bdbf2a945",
					"line": 126,
					"resource_type": "Service",
					"resource_name": "mathoid-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mathoid-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{mathoid-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mathoid_template.yaml",
					"similarity_id": "26dc1eedf2460c829ff7b70b623bdeb97df2dd8efb0c78a14baefef5bd7ce7da",
					"line": 47,
					"resource_type": "Service",
					"resource_name": "mathoid-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mathoid-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
