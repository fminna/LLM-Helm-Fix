{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 128,
	"files_parsed": 1,
	"lines_parsed": 124,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:32:30.718391+02:00",
	"end": "2024-05-17T20:32:32.63194+02:00",
	"paths": [
		"templates/nginx-s3_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "a77407edbdedc2a7368b61207a95007ddcdead85ebcef55a74a2dd30181cb199",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "3a96b02cf78097e8a5eb75ac1675a46bb761bf3d124fcff422be35f041222e48",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "b02f05db401d79e7cc40e5725f679565a34ef7d5eb76e91247e9a0d56e3f5fbd",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "0e3773fd1b327a9d8062040f4678d4d3506d68de065f47d8531f39ba5c322fef",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "03d00909874b0d61420b38ea33706250dd84c37549bc60bcc8922c3320cc64d5",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "097f914bdfbcfc6e8031e90ff95c5705fc07955ddbeb5397ee0fb65bfca976d0",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "7432f3628082235b68eba5c2bba0b54f33bec6045b16c68e98810167accea386",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "1280bfd86a90c6fd22a717e42a5a4568a70239c2ce8e92708d43fd1e1e9c64a8",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "2e453f1cc615d41e52ac785479dd7039feb57468166ef1493ecde04a1f1694ae",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "9c592f61b0cb57a573795376f7568a941505935212c9ebbe35ffc4672881f757",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "903f7858800a10711a1c2fb23bb7bbf2fb6a9b58f1bceed1ffa2c4f10fa273a1",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "01812fcfdfc7539c0cf0cbac4d48bed0a7f47db9afe383c1320e4d24aacc9101",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "4080c082992e78445ca2441b7b94fe01be48b26c9cf8890f02716050da11804a",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "38ecc09bb778b662b3dc7a12f3f7e67ce2ee510154c0148c3d21428bd51c6a92",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "de3709f4aec7fd0d54579aa3c995eb65dc9cd451592dc362e4ea3558b3069337",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "47ac1155d6638e5a7a46bce5c566df3753ba34ae814a5b33b69136ec3771f5b3",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-nginx-s3-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-nginx-s3-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "8f41328b96dad627014003374e6c7b9fc18978e5b2946699e256074172ccce14",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "6fc71c9693ded915e0e60ee50acfb90a1c8ff103da33215a4567a4c086105848",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nginx-s3}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "9e5050f2a67d6268088c52133f106e9eabe030125fcae21fb3af575e8ffc7488",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-nginx-s3-test-connection}}",
					"search_line": 112,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-nginx-s3}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-nginx-s3}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "982734b115687e20b370e882c996b6364b3f8f15a2c8f50e3910622aca422f4b",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx-s3 has limits defined",
					"actual_value": "spec.template.spec.containers.name=nginx-s3 doesn't have limits defined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "7ccb055d81836392e9d0666f51b46dbb3528ce0d823d3666f9cb79c4a6ff0c2c",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "ddf186d903744a44e7a20dcac252dae40e5269a30abe972586eb7ae459b118c9",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx-s3.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=nginx-s3.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "336c068cc54103ef37cab200512e3e1071dc611661e5d861fd35a17b09a6ebf1",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "91f2a60f86ef3ab8433ff31dcd05b5e151cf2579950106b5d0afe440aff13109",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "eba8d72ea7cfd14ac72493946380a9b0b8f354523938b996cc6947430e033ffa",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "a2812cf1ab198d7e3d4009f5f3dc9a3918ec39f6a34f72e0c54fa6aa0d0a7527",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginx-s3}}",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginx-s3}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "15800638a451d32e0386e3b4396c19500f90cfdc436f8c7f73177056c4678734",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.containers.name={{nginx-s3}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.containers.name={{nginx-s3}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.containers.name={{nginx-s3}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "7377d6e5a3330730068eb852092299067c186ed65e5640f5d89c480067126509",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "64299ef6abbf823d1693334af1c19fdfbbc20e017cce6013a038c118a3adba05",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-s3}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "b69306400ca951bd7f5f792f23b1825849c6aeb631cb2c8bb9e31a15eee4cc1c",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "78782e97a34b8b1261a568955625e6eedf21d72df11daf95e7a39babf61b0fef",
					"line": 112,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "28fc2ec9461d50c8291b3fd689bfbccc625929f31a178822d2b31a169aa4dd5d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-s3}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "c1b8df6a3273e3428c5894d73ee74263c47dc546cec49cdac1b549e3d19c29bf",
					"line": 121,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "7a7dc5aed640d35c578e60c2b3a1bb5bddbe6b7a36b6c55409c81ff133c1727c",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "1bf49181a2d8bd8368e05b689d07ed05381ecea1043877f68a035aeb273d38ef",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-s3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx-s3}}.spec.template.spec.containers.name={{nginx-s3}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/nginx-s3_template.yaml",
					"similarity_id": "a7bcfd5d67c3148f156a022a133827f25df289a3f40402ad4036d8d22db1f5ef",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "release-name-nginx-s3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx-s3-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
