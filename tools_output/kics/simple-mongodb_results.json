{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 51,
	"files_parsed": 1,
	"lines_parsed": 49,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:10:25.471947+02:00",
	"end": "2024-06-26T02:10:27.638811+02:00",
	"paths": [
		"templates/simple-mongodb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "87220d9e2ae2bdf60a60aa9d6f41456d08e6e1239cefd3a5e5f0f452a94f7021",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "fbd0a4b459806bebcb5894c2b671feb56776846bf7e5309c9879d8f8644d2544",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "3f0807938dd952fe48a838c4386041b198d30c572be40257e03bddd00a96d0ac",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "1278b63602ba244e445359b9ea763b129594547f007ea73d8c543473eb4b5fcb",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "17e20a7a2346ba52920fc04fa1c3575053be4217880343aec3d18fff207907f1",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "9cf83ea0e82f48134e0e9a0e42be796b806b050a4a049b6a77dfb3e2ceb14889",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "c89cb9860fd5ee3648e8f3cae412cb5ac24aaf4f76b86e583cc9bda6be8ee4fb",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mongo}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mongo}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "0daaf0eb05b6d64949fe9b923f2affb0a36848271495ee5218beeb13310d89f1",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "159c431532e6fe4899e5630c6e9b8f3df62f32dccbcd536820294650e9538b41",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{simple-mongodb}}",
					"actual_value": "metadata.name={{mongo}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{simple-mongodb}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "8b7c5e34e32ce3cea8b0a0b6592f23447053ceef5e7d95eadc17fc90440b60ad",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.containers.name=simple-mongodb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.containers.name=simple-mongodb.securityContext should be set",
					"actual_value": "metadata.name={{mongo}}.spec.containers.name=simple-mongodb.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "44bcdd2c42ba2f5d5ae579029c41c4898b5e4bc464a1ae1ae88030a8f847e7fc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mongo}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "3c07ab23897c78d4f1760b154a99bf0399046fa7dd00a36dc34a30dac473d1e7",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mongo}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "e4fd7461376306de872c052ae659c8442fdb698377c246d2e66027b6f6b5cec7",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name=simple-mongodb",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=simple-mongodb has a security context",
					"actual_value": "spec.template.spec.containers.name=simple-mongodb does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/simple-mongodb_template.yaml",
					"similarity_id": "ef124081feb5662307aac48aaa1b30cdcc53a433f25c4527561d6190c1760529",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "mongo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mongo}}.spec.template.spec.containers.name={{simple-mongodb}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
