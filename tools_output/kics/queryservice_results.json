{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 140,
	"files_parsed": 1,
	"lines_parsed": 135,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 38,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:48:17.570974+02:00",
	"end": "2024-05-17T22:48:19.505938+02:00",
	"paths": [
		"templates/queryservice_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "c0ab153fbcd12cba94ed2f0f08310a312a0b306f32e94430bf21ce7d79d3a121",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "cc0b81d305921f7a209cba65d013f41276590dcc64da929a92ff72c13774e6c4",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "fb7adb0e339cd966d3d696e17c512badc11752805f3342284e21b9afe7e46ae3",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "b5a3dea88cab0860b493d3acc1c3abe0e2dbe37b65c9663fd2d84e2dd8115553",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "82011e2dda754afd3b0b36eb85e6092bece238111d89fab42ee0e4f412e10607",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "01b53461a38de4779774bcaddec353e83c525ad68b1528f54f12c7415e838d2f",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "b2daa2dfe38ec808fc9d533bdc9a9ea57f7c8bbc40b515b697591b9d70031d08",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "329d6c5be0af79cabff93c061d21c884d588f274ae3d76ae5d0c60935657d38d",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "67442120f08eeb58a14725f07f2d9db3b129a4a5e0b644e09ff3b68549e76e14",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "7e2d65c3f9e9386906e21a650b2cfe2f4eec18d13239a5c929bd537343c35410",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "6378f9a75caad22e8fc8b9f55d334cafa8714ce8c79ea65b2bbddfa12a744754",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "234a09020b1b2d4dd81bf9bccd00209bc72bac2af3645af51e96a511811dfefe",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "a8e4a5b8538e25ad47b0283c4edc3ed923e8dcfc59485416ff95c46817a864be",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "c146f65579500414855b76c51420b38ee465c373b9c30f4958d0b6c687c408b5",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-queryservice-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-queryservice-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "3bc16d30f565d009bb5e0a59cffe376e3ee11f0a9b295d2761a94bd100fb16f2",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "94d53c8715856819c4d4444a44ca7c994d309f22b904d1e2819bb726b35fb480",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-queryservice}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "592075fcd561b46ec2d9e2e789eadd62c226937d239b9fc744040edca24153cc",
					"line": 25,
					"resource_type": "Service",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-queryservice}}",
					"search_line": 25,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "d83478525ad9b105d7b4e1101708e440c27ee3347bc2f1be0d217f5416465cda",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-queryservice-test-connection}}",
					"search_line": 124,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "75d71a9490676479b60716e1a8915d3dc790ea8a594121f8ff98aca9009332e0",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "d58bc69a15c2fbd79c12bb6dca4487e76d6fee41993462d63d3ecd8e70849592",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "f371d6e0bccaf45bc75031564dd79acd4d5955907f1f4f113a178277fa9ceb93",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "b610a9ba6ee5a5e703972dc693839fa81b46e010c321ed338c3c705bb93eee6c",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "589a0a03bdffa6f69ee40ee14077c779a634e85587c84cb13e18ab3663174836",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "68f28c86a2dd37c3308b5d88780bcf23ddc9646d303dd1844dc01757ed3f3f59",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{queryservice}}",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{queryservice}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "9c1938b858412fc4bed4607785047d7400132be14ea10c52ac238bc2f2f96558",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "404985d2d94593b02c5555750485898ee520ec8f62a95623dbdfc8052ce048bc",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.containers.name=queryservice",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.containers.name=queryservice.securityContext should be set",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.containers.name=queryservice.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "c1b93e30d384ffb2bba6be347c42a7fe5cdf2b56f5ebddd7ef879780ea45fc71",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "97bb4054bf2403615689a47c08d22e606ecf057a1795da5d0c70eb3c6837da79",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "d6b3b9b662455394dc05832847f22778447de5eed41546faa6325795d3061c9d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "c244b888687eb6773757cee4832fda516f1cf9591de2c456c3dafdd28552dee1",
					"line": 124,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "8a24e7c70e2c31381d738a5a06ceace6b62c312f8e964631ddc9ca55b3a45509",
					"line": 133,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "6056ac8ec3bc6faa50e77f7851fbb83a1d7fdd5d9f6e9ee73d6fb01f17343315",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name=queryservice",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=queryservice has a security context",
					"actual_value": "spec.template.spec.containers.name=queryservice does not have a security context"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "4d1ff614a4d36bb5c7ea2f660b2e9a45884d1aa93567741eb3433154a49cbec5",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "e878acbd8441732a47a46a81b9388a3ef44ebbb43718dcd7dbb4db330c677bb0",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-queryservice",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-queryservice}}.spec.template.spec.containers.name={{queryservice}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/queryservice_template.yaml",
					"similarity_id": "f6b8f6633daa48e9c95332f585035fc9f5f75d72aadc4362b680f87765560c1f",
					"line": 135,
					"resource_type": "Pod",
					"resource_name": "release-name-queryservice-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-queryservice-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
