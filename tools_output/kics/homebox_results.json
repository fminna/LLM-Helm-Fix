{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 281,
	"files_parsed": 1,
	"lines_parsed": 277,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:52:13.15565+02:00",
	"end": "2024-05-17T22:52:15.0654+02:00",
	"paths": [
		"templates/homebox_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "ee4b563899ac31ff7155fe2e57b78eb26edd8ee1488950bc2020ff324b8f54d3",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "a0288e3b8fadfa14ae5e350b265c1ba42a1fc7dcfb4a4fc463ff096daeb17769",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "f38d3d16862728532d6ab719ba7d8ea47ada958684c78f7086450ea45f51dbed",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "04cc686e906ba97e5215001f054e2f7280a16ac7d2911e93237f4d64552aeeb4",
					"line": 234,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.namespace",
					"search_line": 57,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.namespace",
					"search_line": 86,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Secret",
					"resource_name": "release-name-homebox-homebox-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox-homebox-secret}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "6b0e4041aa511c8ec8b92aab0decd01bf3aec84128eb657eb51c882575cc45ab",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.metadata",
					"search_line": 119,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-homebox}}",
					"actual_value": "metadata.name={{release-name-homebox}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-homebox}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "8274d8f4d501ea3c3fff2c33e16f2d2bff5529b7f4dd08b5f69e5da5432faf64",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-homebox}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-homebox}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "d5cc2b67747ac0d6f1f8d23804d7f3033ff2a0a3d46f3d358c3d80bca830fef4",
					"line": 35,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-homebox-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-homebox-data}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox-data}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-homebox-data}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "5d73301cdc38a0250b41dd2778c5b28f8d573ca36c53d9e33f1f3528cfd28e82",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-homebox}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-homebox}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "df0ea77496b8681143e1281b7380a4fada9c6967cae5f644370b3fbb774e261d",
					"line": 35,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-homebox-data",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-homebox-data}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-homebox-data}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-homebox-data}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/homebox_template.yaml",
					"similarity_id": "c1f77725b40798986738ec3f9a69b4c33a8891cd5b3049ffc41f62a287597827",
					"line": 245,
					"resource_type": "Deployment",
					"resource_name": "release-name-homebox",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-homebox}}.spec.template.spec.containers.name={{release-name-homebox}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-homebox}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-homebox}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
