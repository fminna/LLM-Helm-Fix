{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 78,
	"files_parsed": 1,
	"lines_parsed": 75,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:39:59.624609+02:00",
	"end": "2024-05-17T21:40:01.527234+02:00",
	"paths": [
		"templates/code-server-go_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "56a784d52e85bd7e8047c87eafaf4e9f8499aca4b2d3a994737c0e37f927f091",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "62c730b68c8a7371e399385f4483a0c88593aaf07e01f6987d7c90b1c85b304d",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "40b0706878bf0dcb98f29b87c4a09615f7e98d5ad1d8692f503e053e69dd2731",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "7a364949b42567b8cec1bd366faa27f16262a94b9bc0e8532a116a4cd4826e81",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "529e6bf0fe741a646d80fb6f0cfd17e005f2fba34bb1ba0d06a898b5b9ad1463",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "995eca9a3d23c57be660010c8c52880cc59388cf4b815686ebda5396d1a90895",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "c4fbad4847574046532ecd839c2197ea315205b4e880d2dd2cbf51f65d7e0358",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "cc40a0a6873fc96f80b0b8d335b3985c82aea6c6e814bdb68749aa4a394b04ae",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "1e97b74ea2065857d06685f32088d3b2a82f2d41124238e5cd6b9cc7577aaf2b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "4a993c09c61a9a1c55d666c5682c023025b417ad60176310eb8b319e7767886d",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-code-server-go}}.namespace",
					"search_line": 51,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Service",
					"resource_name": "release-name-code-server-go",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-code-server-go}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "86eccc4e92ef8a4c1d52e243576ac637f2da647fe3b6946d9c3d4d38c3765b45",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name=code-server-go",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=code-server-go has resources defined",
					"actual_value": "spec.template.spec.containers.name=code-server-go doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "cf361480f158d8133398eb10106fafb9c8a707b2048e83a5cb99a7f785681330",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name=code-server-go",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=code-server-go should have resources defined",
					"actual_value": "spec.template.spec.containers.name=code-server-go doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "2ca987ab0fd11b876eb0ae7ceb123f6c9c81a4be335c1db381b0d2b2d48629b3",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "9dd7cf9f011564c6b85b57b530ef7c1996c842cc244bd3b96883469035858c38",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{code-server-go}}",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{code-server-go}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "e6773cfa2a7851aac12454b65a63e497de60b70103c06123180a0f1c6f71235f",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.containers.name=code-server-go",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.containers.name=code-server-go.securityContext should be set",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.containers.name=code-server-go.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-code-server-go}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "d7aff4256fc4a624bfcaad82ea9bd7d7bec9f074b05c7f4c8e9720684b715797",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-code-server-go}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "393d7156674085d95db1cbb8b9d5ee1ac2bdf3821c7757011fa2808788d1bb04",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-code-server-go}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-code-server-go}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "0158e1f0794829a9497ca555e86ea984c83303170d08272350816e8dd0444cd6",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name=code-server-go",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=code-server-go has a security context",
					"actual_value": "spec.template.spec.containers.name=code-server-go does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "4528e021c7e6a080cdeea6d76b34f40da1cd43f018ee72a10c4e66e31d53b512",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-code-server-go",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.template.spec.containers.name={{code-server-go}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/code-server-go_template.yaml",
					"similarity_id": "252a93cbd4bd527944518891f93654300ef48eeb786cfd0ae6168cc198c71a77",
					"line": 33,
					"resource_type": "Service",
					"resource_name": "release-name-code-server-go",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-code-server-go}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-code-server-go}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{release-name-code-server-go}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
