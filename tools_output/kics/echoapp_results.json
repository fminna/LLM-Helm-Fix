{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 44,
	"files_parsed": 1,
	"lines_parsed": 42,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:13:08.264247+02:00",
	"end": "2024-05-18T00:13:10.154607+02:00",
	"paths": [
		"templates/echoapp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "ec299a2c745f674cac955d49755bdc43de185cda3ae8fbb267f178b7ee64e5fb",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "b0f62e0060ed278fd71ea52d013afde38434fb427878edfeab0a3450e5ce601f",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "6a0a3329ebe6ede28cfec8743d8e3c2cfb9fbab0152fbecd3c356cb7b5dfbe92",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "bac5a64aa8a2a3434a33e8050bab513dbb56f7c6262bd563166180dd617e7f6e",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "cc935edaa95c0fb450469def327a4e90e66dbd26de69e5b7b089c19787f4cd8e",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "574cde3566e8290f4f09c8f4c344014ec81714f62525b32d74240682692ca125",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "dc26fdea70c2317a84c80f61f92e1e3347e547e3bb0f3ee25a5783439620fae7",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "dde069260c7c930da447290dddc885429c0cacf73fcbe4dfd5a6fdc9cd9a0108",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "5cf2ae1809aaa223302ab221c5960273f35f7b599bd54669f554dafdb2f9f0f7",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "c703c95546d8dcdafbbd4757ce7ba7c5d081a70eb59eeca1e37c2f1c4aa985ed",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{echoapp}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{echoapp}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "25980e029392bd44c17b8a86c807788d8029e8d796cba7247adedaac844b6ea8",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name=echoapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=echoapp-container has resources defined",
					"actual_value": "spec.template.spec.containers.name=echoapp-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "aae59881073e47a0f041797827d88feb9362b8af8e674d76178d148dc6fd58f9",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name=echoapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=echoapp-container should have resources defined",
					"actual_value": "spec.template.spec.containers.name=echoapp-container doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "fa049e4b80dcf91c12b1028a1ed80e47cf4d12fc66347232c74f66c4bc8776a6",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "02cfa63d2dbcc73a348e92d12a842f3aec13d5b0af7a9e35314510e6117a45aa",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{echoapp-container}}",
					"actual_value": "metadata.name={{echoapp}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{echoapp-container}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "d0e76f4d28e92de21ce02cebaded7a796cc1a3e942bbba977f6a26340541d9b9",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.containers.name=echoapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.containers.name=echoapp-container.securityContext should be set",
					"actual_value": "metadata.name={{echoapp}}.spec.containers.name=echoapp-container.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "870e0b25709be3405e0a63fb922f15bdb165674ccfd247801ba3563f9eb39f45",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{echoapp}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "8759fb2116bf06090c7370f91247ca20fcd1825c973a4eb6b0a6adb0ddafb172",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{echoapp}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "4e3c797ff9410c286ce6b75d72e42d8113d9e03a5f4fd5b1c88943a0dc10496b",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name=echoapp-container",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=echoapp-container has a security context",
					"actual_value": "spec.template.spec.containers.name=echoapp-container does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/echoapp_template.yaml",
					"similarity_id": "1f981c6f31e9276e45429f6bc082a3ce4df5a9de3b0f16e0fe27fcb7ce71b9c5",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "echoapp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{echoapp}}.spec.template.spec.containers.name={{echoapp-container}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
