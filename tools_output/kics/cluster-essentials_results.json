{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 235,
	"files_parsed": 1,
	"lines_parsed": 226,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:31:04.257773+02:00",
	"end": "2024-05-17T20:31:06.169915+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/cluster-essentials_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "5956e47e808bc390d11264dcf775d50dc8a428c1009c48cdf074b3e9d7e07f89",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "d717a9352ac4f5bf4094f3e0b70f73e6ca2f984b0bcc718afdbdeb577605e8a9",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "d8277c2f44c100659caece6546f3f0c790e940035c54d4846aaddde4e1d976bc",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "01728c38fa605167cb7c6b756454d843cb795edfe67558663543f66674f73366",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "15a01e9efaeb61a03de64d80b120789c7caca5f96c78cd69d6ae8add725033df",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "ed93db11f5910421de68fdeed96d59f2602069e608ed7bbf2d061185ce5033c0",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "53b603b5f16d62408db3d88be023ed899f5110a997331059bb89a46ec1dd89c2",
					"line": 109,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-metrics-server-auth-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-metrics-server-auth-reader}}.namespace",
					"search_line": 109,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-metrics-server}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "93142a03521798b0d9e1898ec808404e9e41923edf7e4823b4833e27caa335e6",
					"line": 129,
					"resource_type": "Service",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-metrics-server}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-metrics-server}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "4b8a85637048e2af67cb49238e4f5889d5b26c6072b7efe9344db1d334866d01",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name=metrics-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=metrics-server has resources defined",
					"actual_value": "spec.template.spec.containers.name=metrics-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "3c8d6ceef2cd37a4ca3c3abd9603716f83a1e109de93dc69ff491bc39cef33af",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name=metrics-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=metrics-server should have resources defined",
					"actual_value": "spec.template.spec.containers.name=metrics-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "819fe339ae3d5ed32aa099716cb218beedefad6b494f15baa9217aa34353e4e5",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "9d090e8178902c1f8670032c4c8976b61e9cd3e923863eb15d287d992c9094f1",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{metrics-server}}",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{metrics-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "01a8a2960d31b390a8e8a5be0f5a2197301b9f7d7d8f793eaff49e97ba918f28",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}.spec.containers.name={{metrics-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}}.spec.containers.name={{metrics-server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-metrics-server}}.spec.containers.name={{metrics-server}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "99cbf7a85bd6d15e74e99aaef5dee104223c9f840d5aecc0c75fdcadd0dedf72",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-metrics-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cluster-essentials_template.yaml",
					"similarity_id": "d7d592c8304b1bbcdfb0abd5f7b06fd131ff13e5d309f972684e73dae163f6bb",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-metrics-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-metrics-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
