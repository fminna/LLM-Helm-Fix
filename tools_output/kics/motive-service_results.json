{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 129,
	"files_parsed": 1,
	"lines_parsed": 125,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:07:31.740417+02:00",
	"end": "2024-06-26T02:07:33.865698+02:00",
	"paths": [
		"templates/motive-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "491a6e3641e66566aabef3be608d5d21d3cad647e410f89e9e1a577eab80cc76",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "a3a64bb235a4451a6ffe85a08a18d849b4b8749d96067cb6d1e9d5de1816f1fb",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "2600ba8b75c4c04b961e655ab1637ae6992282f3303d536d4ae00c94c3192e5d",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "ff23b942212bb2c3a71902b4e515265a15d5b11d86aa43bc4dabe402e0c546fc",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "7dca8d4226141f6daed8ddd48560fc45e100e4de325c9fa0f4ffbaef270df4d5",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "55b4b85908089cb1fb6516bab87788846fa3891431a2766cde76da38cd41d57d",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "fd0606d056e542d81b8eb4038121b45d5359f4bb8879ff65d044ce3f974d0177",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "92c66e9d48bc0bdc2047362928a6a6ec560a3b32d03d5107d7fb86a502b601c3",
					"line": 29,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-motive-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-motive-service}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-motive-service}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-motive-service}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-motive-service}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Service",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-motive-service}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "4010467e400c0bde42d6c8dea225a979e7be4e19c69219b3a71408d42da6ecc0",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=motive-service has CPU limits",
					"actual_value": "spec.template.spec.containers.name=motive-service doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "e89b6faaa6b4ff78d4f7da706f6d0377f2f6359a19bafc0643fdcdec1ba2faca",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "866a57c44e16b9ca7d6a8d50b4c8d1d8a546c5f71dca28e204f9097c8a54a95c",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{motive-service}}",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{motive-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "b594dcbcbbc38d08659b8ac30ec4781726361e67344972c3639327a1b74873b5",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.containers.name=motive-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.containers.name=motive-service.securityContext should be set",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.containers.name=motive-service.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "36d9b2a6999b13778b30c58a2c430b75762a3be4bebc91f9fdfaee3c090ef3a9",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-motive-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "651e93bd54542a4d11d989ec1a01b05ba1e0a4ae37e4dc87ce30ab396453708a",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-motive-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "1837231c4e773fddae547fac86448b73f4ce2fb0ef6b0cc0a18dd79f46ccaa4d",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name=motive-service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=motive-service has a security context",
					"actual_value": "spec.template.spec.containers.name=motive-service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/motive-service_template.yaml",
					"similarity_id": "e003562a6774350cc2682e76d72bc445f9ffbb354d8ba4b86cf5442f19cfb3d9",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-motive-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-motive-service}}.spec.template.spec.containers.name={{motive-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
