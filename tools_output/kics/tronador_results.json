{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 167,
	"files_parsed": 1,
	"lines_parsed": 159,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:24:33.720543+02:00",
	"end": "2024-06-26T01:24:35.868443+02:00",
	"paths": [
		"templates/tronador_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "2a5e807378d9a85231b7babe54a84265afe86bbcf18708064ec4e5db5298b297",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": 161,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "82070c66b192a35c09a6eb558618e3b34deee7e4039b561c7ef3220710ecb0af",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": 161,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "0c36297d3387df3c75394f431489e9e25601f07341e9e3970842644f7608cca1",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "8431dcf20ca9d69bd710db126e667989ef2978985d6736e822140d50362fe9da",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "8c1f42bb29f4aa5299a3cc09f4dd67d2874dec2f49068b15930fe9365937ad22",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "f9f17ab726d8584dde5a6a5b766226eec68a27e56fc8ee798e97fa29a8672e4b",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "9f85d8958b6102bb9b76918d2e035112f3af4d5d5b4d5a8327e4b1c9808cf3db",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "88c6083813aae68171eaad59c027b0a54ba59b9f2600e3cfb0bafc68cfbb40bf",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "2a4452f9a8ef9b1a5c0ac4bd480e5c68eb59738de7a6172b1ad0ba764e01c67b",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "93142a03521798b0d9e1898ec808404e9e41923edf7e4823b4833e27caa335e6",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tronador}}.namespace",
					"search_line": 129,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Role",
					"resource_name": "release-name-tronador-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-tronador-role}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-tronador}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "4e9aeb2c199e2ee054b61199ec2c628ab2303cd4dd67f0409aa7eabd6c234967",
					"line": 115,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-tronador-rolebinding",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-tronador-rolebinding}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "99e85204bd55c3dc9308326cfd5753be54f915f06fdd7f3c42206e028a7d084f",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tronador has limits defined",
					"actual_value": "spec.template.spec.containers.name=tronador doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "847649761ab8246eea69675c4662e5e78c5c4c6a837e62d468603e10e99254c4",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tronador.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=tronador.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "cc0871a46c66a4d693ad645403834344d7513ab0cdb8840df7c2d55cac62ef28",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "f0850c5aacb32d2c5447ed63b4c99b85ca5c19fe95851ded02d86e93f037e7e9",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tronador}}",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tronador}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "3caaa3ba7424cdb47432c621a7cbe474b7103ed44770866ae418cb36290b8cef",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.containers.name={{tronador}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.containers.name={{tronador}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.containers.name={{tronador}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "7546694c7882426c4446623e70feb538b5e615e312f1b99618bcf5663513a4b6",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tronador}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "1e2e6f26923d8d55df1ae411fb6d8dc7949961a0331a72b3b5427afb12008411",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tronador}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tronador_template.yaml",
					"similarity_id": "1333a78bb74eb1dc0105c5a7688e34f565b52556393d92dcf90b30187775fe75",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-tronador",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}",
					"search_line": 161,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-tronador}}.spec.template.spec.containers.name={{tronador}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
