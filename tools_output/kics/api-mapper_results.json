{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 132,
	"files_parsed": 1,
	"lines_parsed": 127,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:44:20.453762+02:00",
	"end": "2024-06-26T00:44:22.50924+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/api-mapper_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "7340af3afd551e71ac80d4b7f45d6e7daac63669b53b3eba4eee98edd976b2e1",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "49bd66db3db55cd41707c8a561cd57e45ed5e204a655c76ac5523ae1a93e54f5",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "c2865989911dee4bf891c862d4dcbc48f72a6e5eeea1b53ce52a7042e2d6aabc",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "8dc2d01fb3db19a6ec93ea05a0508d2dc6f439d97937312abc25ccbfb36a77eb",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "8a553bf4f3ebcb4cfaffe877593474bf8132b5681ee0b1d00037b0ec0a961b86",
					"line": 34,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-api-mapper}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Role",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-api-mapper}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "Service",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-api-mapper}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-api-mapper}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "07a23520c6c9a5fe6dac911140b60062bb98a2c39bc50d5c4f113fb164d59c80",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-api-mapper}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "02d1b9c15d7bba24d914607678b605f7520c92b39fdd36abde4fba2046c3bebc",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=api-mapper has CPU limits",
					"actual_value": "spec.template.spec.containers.name=api-mapper doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "6abd0ea8ca4c067009b1d9ccc17fa3831d0ffc03adb52a651ac2f7bf572c162d",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{api-mapper}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{api-mapper}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "538fa61d45b6913185d3db5547af98c9d2a83aba46e54a2494431cdbbabdf3bc",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.spec.containers.name={{api-mapper}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "09c150899ca4378b4ec43a50f522d7a9c21d7ce9c4e36982061adc6508994e86",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{api-mapper}}",
					"actual_value": "metadata.name={{release-name-api-mapper}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{api-mapper}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "a2405ff402e37f063a76c566f6b7fbe82d25b175505e3fcfb266876f57a63fe0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-api-mapper}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/api-mapper_template.yaml",
					"similarity_id": "2f496b26db16544c1ff65086f6534b6f3beec402ac216178d5bbdaedc1a07808",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-api-mapper",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-api-mapper}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-api-mapper}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-api-mapper}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
