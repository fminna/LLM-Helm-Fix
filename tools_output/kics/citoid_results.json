{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 205,
	"files_parsed": 1,
	"lines_parsed": 199,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:04:40.128801+02:00",
	"end": "2024-06-26T02:04:42.203605+02:00",
	"paths": [
		"templates/citoid_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "15af78e53884419ee7157c7d6baedfd940ab6a4385453d9aa9d1593345ba2020",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "aed92d754d1615e4cb918f8053d3627cbfb4d4d65ba82f7da0fb2557364b74b2",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "2a818b94da0de2e6c4c8fc03307653d1047f543da02f776e18423c99ba9edd70",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "3736fafd1d6a345cd04b12ebee99e0607be92a057368f435940645e6057769ad",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "95b5a48c566ac4a371c656fdad6595cff9c48a09f8771df18f28be5820defbac",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "c9dc3cbe4cb30ea6448c1d62f0f74be901f96f64729298a1a1092d52f89ae1d3",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "82881d9aa79646b25855981e0472d93bc33c6bb728df53a6c23806bf2bc985be",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "70e73a16655aa3b0847e8a9218f4e38cf8b80bceb97d8f439749a51e185a331f",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "b20d95cd8f84a4c3e57ef797c57a2c8ad0bfd02ac20be14c1760cfd902937311",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "4430f1f1d00a157267b2d56bfb7a3882c3a2d2c3dbbb40fb6db7c6118f08c5cf",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "aad166074a9d3c6d88ddc99b38d3bfd8c473adcf912022fc7a05cb5438459813",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "b44603109751b033f1b275f454d8f056ae44a19b957c8db6692eec6caa5b2ae0",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "ed35550362636d637dcfb0fe6fa2d80858e9bdf79c2acdc95268d84947f02505",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "09a95754946f159f107ce0500cdbfce2866cade127bc1e5e74605d4a7690f36b",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "588ea5fb7c9f9d0cfe103ee46a169879c2d4eb3373745d5d2b00643eaedadc92",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=citoid-release-name-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=citoid-release-name-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "8554c99c7cdef1859e6bde11e8e1e81857e25ac87df7745506786a9a27484685",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "54dc1fa91f06d9773e34db499d83c6532706284211115c131bda90ce210130b6",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "5e7a32a6628929093d428e7afb06026083c408bcd8ec038ffdeb30998b3682d4",
					"line": 110,
					"resource_type": "Service",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{citoid-release-name}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "751aefd41ef615bae9ed374e14b167035306d4ea950919823616db8eef3d7b21",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{citoid-release-name}}",
					"search_line": 131,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "fa378ff7e792ec575efe3f4ecf5ade5623e3d2876ff337bdb598d740d279f18b",
					"line": 193,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{citoid-release-name-service-checker}}",
					"search_line": 193,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{config-release-name}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "4da3612de620d364a0cd41cd8aa527b39facb7cbd1c09d17764555bb02dfebbf",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=citoid-release-name-service-checker has resources defined",
					"actual_value": "spec.containers.name=citoid-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "7548377d460c9dd072446ebdbe26f78e26bbba77b0dd7711c468d2a66677a369",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=citoid-release-name-service-checker should have resources defined",
					"actual_value": "spec.containers.name=citoid-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "1c4c80487d425a445d0a6d046aeed3af44e6c2c279da698af0b7ade1c0249a9e",
					"line": 200,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "168b96e3cb5cafda28979954b53ff0a8cddf728e323d54fc673c72762521581c",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "50f34f534d3577c3e69783072971d9561bc1babe63992080d997ff46827b19b8",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.metadata",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{citoid-release-name}}",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{citoid-release-name}}"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "7e12394576e5495f13e6f5fde3a7a1eeb0e6b5e6053e4fb3f06b3bc818920089",
					"line": 193,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.annotations should specify an AppArmor profile for container {{citoid-release-name-service-checker}}",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.annotations does not specify an AppArmor profile for container {{citoid-release-name-service-checker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "14e8b8aa8695e2c4b21e55e7fc4ca73e4ab80f587ccedb1457e6b4f27fc1fabc",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.containers.name=citoid-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.containers.name=citoid-release-name.securityContext should be set",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.containers.name=citoid-release-name.securityContext is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "9258a65088371f12120864a59125b9473efdba428eb0b3e627b821e69fedb338",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "390a5d9ed370cf09d7a84a1e192dc0bdb2a463d1124707663d706193e04074f0",
					"line": 193,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "c84c0dc2b854134a0a725ed07238ed51f02fcee70eeec0b733b5de9fdeade4e0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{citoid-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "483aa48240fdcaaea528da2d7459f8cde18fd6f641915a123e106ec00b04fccc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{citoid-release-name}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "ec97a300e1954105fed34653ceae9a0677ed9a4381f8274bb2cbf0609cabcd92",
					"line": 193,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "201cac0ef6f37bbc4846e5e3a676213b23469708cd9a0bb1b31e7a7b62281250",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name=citoid-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=citoid-release-name-service-checker has a security context",
					"actual_value": "spec.containers.name=citoid-release-name-service-checker does not have a security context"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "fe5bf2225a82053eaf8433b615773161cd543ab30029cf8f2fdb55567714380b",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name=citoid-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=citoid-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=citoid-release-name does not have a security context"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "495d57327d15a5a1d910ef0f7685223cc457d6d8ee88a7bf9d2be89a4b1b867a",
					"line": 197,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "62aa91ccaa87eef5df569d88fa7fc8d90f2600b8635daebd12fdec35fde254f0",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "citoid-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.template.spec.containers.name={{citoid-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "ac0b2120c87a9972f80607bf6ac4fc04e41dd1463718f9ff0d88e07c70280295",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "citoid-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{citoid-release-name-service-checker}}.spec.containers.name={{citoid-release-name-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "79b874b2bda3f4de5b799118eb18e6059279ee425ce930fb595e03c1b3dd2c44",
					"line": 118,
					"resource_type": "Service",
					"resource_name": "citoid-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{citoid-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{citoid-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{citoid-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/citoid_template.yaml",
					"similarity_id": "7708bc04bf14da83f4fa66465f14e48bc609318c7971c7e63c5991f471cb62a6",
					"line": 50,
					"resource_type": "Service",
					"resource_name": "citoid-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{citoid-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
