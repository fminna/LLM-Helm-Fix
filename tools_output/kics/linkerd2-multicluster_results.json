{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 218,
	"files_parsed": 1,
	"lines_parsed": 209,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:39:34.037684+02:00",
	"end": "2024-05-17T22:39:35.94628+02:00",
	"paths": [
		"templates/linkerd2-multicluster_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "98900133ee70ac2efda8c0627c6f2f0e67fd93c41cec2f166ce14cd1f145e7b0",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "7b9d4247163f87f64d73f187fae4b3c2f39a6f26559ef4b4b18a08daebd6b0df",
					"line": 208,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "decca7546dc88021c6c43398b6e10e5ef66f766bb19b5a47e7e66678b7eae17f",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "c16ca71ab464f2fe39ecabb215dcebce936f923651962e5de9ddeaacd99f603d",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "874cf1f6761f9cc7cca1ce0065eb91aa55ade7f26bdb4dc63adf0b67e6b3173f",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "1a9ff6d3b52bb845b187cc4ca282f700392da4406143909bcee6c79f0364c482",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "2b3a1d847f5f711cd35face7265885d126c61900c7fbbc5cea6f61df06056c67",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "16ddd2101b890ff784b8ff545ce38295c3bec965abd10960910a48118f8c9920",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "9f53f05000769681d67b47fb0bc4bf0834fa6b9fed93206bee13162cd8662ecb",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "linkerd-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{linkerd-gateway}}.annotations",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}} using an external Load Balancer provider by cloud provider",
					"actual_value": "metadata.name={{linkerd-gateway}} is exposing a workload, not using an external Load Balancer provider by cloud provider"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "d0a14fdfba9b55dc1a647ca54705c18cdb4d7d5249f99e6589992d00450cd744",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx has resources defined",
					"actual_value": "spec.template.spec.containers.name=nginx doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "97dcd6e0a2dd1fca24334520531035caf16fa0a2428424ca9522d5f6f1f60abb",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx should have resources defined",
					"actual_value": "spec.template.spec.containers.name=nginx doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "3234a76521b52c3ceed211655cd4aba651b8056d7016542662dfbb58a5b1a871",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "f47374ced4379d7964f0025776c2579690ed61fc760804bd6736f740df5bebd8",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.metadata",
					"search_line": 171,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginx}}",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginx}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "73faa2c39304d45535b999983346da77247e3d2b0120ec41316a75f833e67211",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.containers.name={{nginx}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.containers.name={{nginx}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.containers.name={{nginx}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "d54ef9f2486dafa97c78513a0909a57ede6df496583966d2c2ec1e6cba31f5fb",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{linkerd-gateway}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "6e6ce41116f56db9ec2f143a9db35f150a42dadd16ace563951153a2fcb36183",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{linkerd-gateway}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "6b5f3614505fe002a02a01609a681bd2ded08cd0bbc81d44914a1518d42ee410",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "linkerd-gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": 205,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/linkerd2-multicluster_template.yaml",
					"similarity_id": "eb28332302bcfde94a8b91a532897d190b7867cc517fcdfa749c71df5934f53b",
					"line": 141,
					"resource_type": "Service",
					"resource_name": "linkerd-gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{linkerd-gateway}}.spec.ports.port={{4143}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{linkerd-gateway}}.spec.ports.port={{4143}} has a Pod port",
					"actual_value": "metadata.name={{linkerd-gateway}}.spec.ports.port={{4143}} does not have a Pod port"
				}
			]
		}
	]
}
