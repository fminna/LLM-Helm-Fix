{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 85,
	"files_parsed": 1,
	"lines_parsed": 82,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:28:26.303787+02:00",
	"end": "2024-06-26T03:28:28.376123+02:00",
	"paths": [
		"templates/mychart3_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "7bd2e764b1f4bd9bc27ccf11b8ceeb26b76376b655bbebae5e0e531573f3f2fc",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "e587d21beee00c3d445d4abcbf14ede25d83aeda3c27673b49dfbb8b97aab309",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "f5a4ee9b9c780697e6d2a78d6c45ee4f5c5a2e4b2e046a3abd990ad5314d712a",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "3a03c04d0da7bfce2325bd8d282440c2e871fcf36b55f0c50d6564ee8dc530d4",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "d01badba57a8ea5aa61aa155a9b57012c259489bcb10d22feba3b34b3dd4e971",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "d12d8ac4e88005f1881d55ae226ff87d5a3bafee2540595a1af6b79ad7449da5",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "bb3c070a637774afd4c46c3f2ac739843df3e51a73fd349ba4568c779f27e25e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "b6a2d78ffa0f849afa0be5d23fe19f86cb3c190168e182addc39d1ac3fff3b32",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "56aee122a88a2068419142e588f25d47da4da59b2daba5d787c4c551d91f34dd",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "b087fc159c6d905cf7f0b1694e7905a1f6f97c6734a78164a46203a043e0f449",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "c92d0e904d5f1c81d7a5952aea3356e26253b2c65a4946f02a3d6677a2c5b72d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "03fdcaf397d7523375a3e05accecf87929ea1f1d9945c32f6597d4bba5ed20c1",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "7a613747621e4f9724245739544a7599080f439f5d07d6d506048895b53d8f6f",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "f0a3405d4ce0ddecf83682378f83282431a22e496b611caebd2534ac15e62005",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "78ff67e5fd778e8b0ed70902338b069f2705a2f75022227cbc85bd623f9486e1",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "8fcf9937049a2a653b77405083e1b76293393e0fe963b7eb5bef333f5dbd4fe5",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mychart3-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mychart3-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "bacc7db92ab473c4c0feb9d0c983fb6ed070c8891b7ced4cf045aec0ecee6a90",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "42fec35b72b69bd6092fb7f66f83a44f6e6745edf653efd59d184e5eaba95a5e",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mychart3}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mychart3}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mychart3-test-connection}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "c147d1291821c0085fd364be5e243bcb9f4edbcd90c7341a54b12587e6d99b97",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "8f9f5e2df33b53df84b62b07ddfb8f5b7e9ace8ea37d69695f0ef2529d8cd4f7",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name=mychart3",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart3 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart3 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "a520714c13e1ab0d2480d4a821310ad1822ed3295053d8e45dec6980fedc9693",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name=mychart3",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart3 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart3 doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "7b7b864828aa4c5906c979af74a93a264437990d5065c8086880aabb1716ec2a",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "ab596f20cc34cf7c292e9427177098f23428af9b237cc049383b645b5821bbc7",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "e899047df7b939b609b4130cfa3d87258fa81f4ee8a5d6a2ba5076d998ad9058",
					"line": 81,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "96eabbfe1575df0588111772c4edcc5f6b1f94995b48ec7f0a9e23bd097729e2",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "e1294ae011bef0e34f93ec49f61264485e906d89fcedfa6f9088473747fed93d",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mychart3}}",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mychart3}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "7e836caba8c3e4ab4353b779a0ca832660559f4d6ff1028796f72a94b396fdcf",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.containers.name=mychart3",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.containers.name=mychart3.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.containers.name=mychart3.securityContext is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "ade5786b928ee40b27a28dc2ac39fcac4756be9c9058843227a30878d696b490",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "59998540ebfa581eae55def10eb71e5a8a64dfcfc1ff066dc66674f89d32baef",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart3}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "10fc38c6197ef10865fad21f1fcd4e10fb83e12f7df7302a2d8b4dc7386ec88d",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "7c6c20795d0fb852827ce4e5074d95677423a6c34bd01dec5e72640f7ca4e2e8",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "18d6e1736475ff62da5963c801486cc9f827dd98e22065ed151a8905753fcf6c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart3}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "187bd3cd36fb9699d8dcb4adf3b89b41edefb6aae2564b9925cd5be4bd383bcb",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "623e272727bfdcfbf91bdbca042b495b9844b1a0dc5e3e8d29b9875dafa21cd0",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "e2d6cdb2952cea81f0167e0faf68f5a034b0dba19bcb023d41abdf997e3c494d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name=mychart3",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart3 has a security context",
					"actual_value": "spec.template.spec.containers.name=mychart3 does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "f04f0341d3d9593b156a5fa38a17b74e178c4dd20f7b90221e272e55293aadbf",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart3-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart3-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "5d21a7ced110176f24bc0df520048c875722d43695bf1a5d955c8773a8848811",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart3",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart3}}.spec.template.spec.containers.name={{mychart3}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mychart3_template.yaml",
					"similarity_id": "d3685f1581a62cb2d7d18cfa0cb84ed662a9a435b497ed2ccda30a59a06eb4a3",
					"line": 14,
					"resource_type": "Service",
					"resource_name": "release-name-mychart3",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart3}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
