{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 58,
	"files_parsed": 1,
	"lines_parsed": 55,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:07:09.415716+02:00",
	"end": "2024-06-26T03:07:11.565978+02:00",
	"paths": [
		"templates/ingressauthgenerator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "bf1dbb04d55bd5e4515c7135f5671036e326a7fff1b6efc6bac647e6f6c26dc1",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "87fcbaa702b76f1954ffeffae9967694ad0fb6cd8d8b17fbd2e0ff61f3e058dc",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "ab7d1fd31ff08d143db52af3474971c423f7f496e8bc84dc7fb961101afddf2e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "be5ae7ccae13faedeeb3cccd50af2eb2a9bf644c0bc3ee7c6aa57519d14dbed2",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "02387a44d196051b67ff63496a17fd591acd1f9dba2acca195c057bf8db8280c",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "99ae9251593f00e8f7e51956efd2cf6ba909e10a77c879a4ce96dacf8b61fbfa",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "4dec7412072ea20df3972a72e84cfff2d4620e1f7bcda3a30c68e3a797461be3",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "63a774be410e23cb3e0d83bb4ec3529c2d315b721e107a526aeccfce9d57d1e0",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ingressauthgenerator}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-ingressauthgenerator-rbac",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ingressauthgenerator-rbac}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "f5442a2d03f95abdc2d5f8ca1b470d653fc1e12664b43a4c72d9f877e718d558",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ingressauthgenerator has limits defined",
					"actual_value": "spec.template.spec.containers.name=ingressauthgenerator doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "ded7c88d5f94e08a4aa0770b58de4db454b5bfcfb417096304d1fe70f0a1bba1",
					"line": 20,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "release-name-ingressauthgenerator-rbac",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ingressauthgenerator-rbac}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-ingressauthgenerator-rbac' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'release-name-ingressauthgenerator-rbac' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "771f9fcff35f4b98c7744d6b4ec2cb79cd5407ca26e79133d067b66dafc3d43b",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "09ccb8b62c735d5cc1fe6147f34ab62c9c7fe5c7927f19c24159a9e637829b05",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ingressauthgenerator}}",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ingressauthgenerator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "c33bccc2f22eabd6bd6d9e8ab139c1bea50f5e944e59924f1b8dfec7d3476765",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.containers.name=ingressauthgenerator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.containers.name=ingressauthgenerator.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.containers.name=ingressauthgenerator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "821b2e095acb018cd84a40e026c7b0d6d8264fc9a48c05e97eb16a101c98f1ab",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "fadd03d5b1adc459bfb28fafe27fecbb47969a886ce263d9ef6c1680d76a36d8",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "d7adb68f433a2c7055ce84dc1da4323fe8a1fc546937b691a41cfc574578d99e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name=ingressauthgenerator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ingressauthgenerator has a security context",
					"actual_value": "spec.template.spec.containers.name=ingressauthgenerator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ingressauthgenerator_template.yaml",
					"similarity_id": "e0ae670688a744714b311cf6e60818d22be40240891902ad5278f1edbd5f89e1",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-ingressauthgenerator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ingressauthgenerator}}.spec.template.spec.containers.name={{ingressauthgenerator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
