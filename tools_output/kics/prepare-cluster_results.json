{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 63,
	"files_parsed": 1,
	"lines_parsed": 61,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:10:58.540661+02:00",
	"end": "2024-05-17T21:11:00.451735+02:00",
	"paths": [
		"templates/prepare-cluster_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "93e9e690543c0d60b8ed9fc5a47b1bffd212a604b6d31bc9a44b1d7901e11537",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "14ce37cf3a3a0ad184b65bbc8e5a44ef08cd1d0dc7077fec6e47143b4f43a838",
					"line": 59,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.volumes.name={{host-root}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-prepare-cluster' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/' mounted",
					"actual_value": "Resource name 'release-name-prepare-cluster' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "306b1a4205d11cd2e7de3fcf19aa534737f9ad5c4c0abd303ad8d206ecbf9d92",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "23487c7cf2a722e7cb6bfa0ee5a208feab65d8fcb24fd548233c62d68fcc6c7c",
					"line": 59,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.volumes.name={{host-root}}.hostPath.path",
					"search_line": 59,
					"search_value": "",
					"expected_value": "Workload name 'release-name-prepare-cluster' of kind 'DaemonSet' should not mount a host sensitive OS directory '/' with hostPath",
					"actual_value": "Workload name 'release-name-prepare-cluster' of kind 'DaemonSet' is mounting a host sensitive OS directory '/' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "1cea8c774fff05837e60aa2718fe8cb0d58581f44adbca8bc03daff9920ca4b1",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "a4c29fa1ed4c13a626f34f1269d52da46c7ac6b44201c2d7925665594312e9d6",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "bb933bd23d454519bbcd67d01dd41f92d5e79ae66f262a583e02d4fea477eb4f",
					"line": 42,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "4a60663f3e1c9fafda6a0b7f5819c1964e687ff5f74e58a11a348f9db1376cab",
					"line": 42,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "f532329196b097a72294bc092b1e9d6a1900776e2a17c6fb072344833215f95a",
					"line": 42,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "dfc0903b4d029db28c9754fd3881b3e39bd33ca41383cfda09928dfbb29a748e",
					"line": 42,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "5cddcd7a8c3555fc4e14a91f32ef7a6e03d30e544eac9d62c4221096fd0cf482",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "9b703c948a5edd2d54bf73b778d1caec5731c25d9741409775f402b416db21f5",
					"line": 37,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "16dbd6df219ed152fee86e7f9aa6a711e35e707561f1263636af3d9e3c80ec11",
					"line": 51,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=preparer has limits defined",
					"actual_value": "spec.template.spec.containers.name=preparer doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "e3a2bc5a381044793fcf57792d8205d119d7cbfc920a082fd2af140d58a87eaa",
					"line": 51,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=preparer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=preparer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "89622e9c4ec77a1424c4f281fa285e1ab1ac5edbcc0c328f2c0d65d7f4d28ee5",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "c8945059a558a88bdb5fc3f13f88165303faa3dde0142c79b6839b9236984431",
					"line": 33,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{preparer}}",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{preparer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "661263d4387a6327f573d224c4d89e5ffa7c8e1e0028d2409530bdc90bf1f8eb",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.containers.name={{preparer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.containers.name={{preparer}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.containers.name={{preparer}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "862ea9d93698618101f0110015d8182cf80a9f7e950ee097c0a8c04226718f71",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-prepare-cluster}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "aa6ae155240b773c81a02d4e42ff24f9497afe32281215bb8a70f45e8e958bac",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-prepare-cluster}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/prepare-cluster_template.yaml",
					"similarity_id": "cf8272eac47889b84c52dd46f18fd47f50ac16ec183c47fdabae68245bfb93b7",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-prepare-cluster",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-prepare-cluster}}.spec.template.spec.containers.name={{preparer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
