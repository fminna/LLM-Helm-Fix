{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 143,
	"files_parsed": 1,
	"lines_parsed": 137,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:06:29.239837+02:00",
	"end": "2024-05-18T00:06:31.15217+02:00",
	"paths": [
		"templates/multicluster-ingress-reader_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "d635e65bed7c208779f183040f06eecfe84a8e5f1d0ac81cfb798cc3570b57de",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "05ad048647201a2c1c47e8e37bf7fe751709609317112a9576a476581b9f594b",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "74dcb9091a2e659ca69c66f641ae08eb8a287fe6a7def68f313f4a9934e4afe2",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "7ba5cd3c5091e46e3bd91f907f93c73cd7d41f298388e0e2944253fd1bcc97a5",
					"line": 101,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "9f10d4c3977e1566f1bd6a91c6a31bf9ee78154738367c94ee2cb67251e677f8",
					"line": 101,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "d929aa540960cace56952fb6f27b44556b6b18bdf8e7f04829340a5ad61c7cf3",
					"line": 101,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "dbbd48826b02bce9a0162ea4ceafb03983c0004b309728afd1fd997332109058",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "47b4b3aec2c891179379e3adfc5921d7930b056057075ec77d691fea9289bc1e",
					"line": 13,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Role",
					"resource_name": "release-name-multicluster-ingress-reader:svc-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader:svc-reader}}.namespace",
					"search_line": 37,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.namespace",
					"search_line": 82,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "f900e9fdb5c8a0f1591d9299d9d8038e33eb35f626518c56b52602a5328fda49",
					"line": 67,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-multicluster-ingress-reader:svc-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader:svc-reader}}.namespace",
					"search_line": 67,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Role",
					"resource_name": "release-name-multicluster-ingress-reader:cm-creator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader:cm-creator}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "3ec9e9507de8e1a276ef545174a3bbab20b5593fedc5b64069a93205d1c175b6",
					"line": 52,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-multicluster-ingress-reader:cm-creator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader:cm-creator}}.namespace",
					"search_line": 52,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-multicluster-ingress-reader}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "2d64d8e71029313d44b796594d0383c6ee17385a9feb6866d5f893726a06c50b",
					"line": 140,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=multicluster-ingress-reader has limits defined",
					"actual_value": "spec.template.spec.containers.name=multicluster-ingress-reader doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "ad97ee31bbae911af7b19064507d531a89855f946d4d089ec38de8a2a54ab1d6",
					"line": 140,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=multicluster-ingress-reader.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=multicluster-ingress-reader.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "f67dd5da667473e7f2944af08de388a06a32455c369630836c29b2bfb3421b5b",
					"line": 105,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "cd337a7f56dce7989f7aceb7b0b4512cbf16980db036ab2710cc88e2973e6aea",
					"line": 6,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.annotations should specify an AppArmor profile for container {{multicluster-ingress-reader}}",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.annotations does not specify an AppArmor profile for container {{multicluster-ingress-reader}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "1bbb4b94cc81bda7f483206194588eb3df70ba88e8634a969a1b6ed2f730f1a9",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.containers.name={{multicluster-ingress-reader}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.containers.name={{multicluster-ingress-reader}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.containers.name={{multicluster-ingress-reader}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "bf484f4eefe3892d5a4da0b833b0f31a711b58a25bba6ad77d2f4ae97d46f196",
					"line": 82,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "d7e1f8c40a10667dfb9aca9fd48cd87e2b87942d6b14e5d4ea0dfd1c2661ae64",
					"line": 82,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/multicluster-ingress-reader_template.yaml",
					"similarity_id": "7822bf885a6e1dc2c16ca1dfbe5e7d827fd5d0c6373c07048626a3e20e9dd5c3",
					"line": 102,
					"resource_type": "Job",
					"resource_name": "release-name-multicluster-ingress-reader",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-multicluster-ingress-reader}}.spec.template.spec.containers.name={{multicluster-ingress-reader}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
