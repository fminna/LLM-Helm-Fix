{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:38:00.242285+02:00",
	"end": "2024-06-26T01:38:02.319465+02:00",
	"paths": [
		"templates/dega-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "0e094a3b652a47b57e197a8de08e5a95583d512b32da42d7c2f6b458a6ae64c4",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "c9a41a82a6ed30bd7918f2192e35402ce17a0d538ecf66373cbfb53386bf9a5d",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "cd71b3aeda5d3518e1b0ea771f0bde959a29411518ef5dfaa810b09f26df5572",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "a55618e67b6e45c2cf778311e26eb13e6683f7b9e104dc7d1e57e9daa5f48728",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "ddae339d5acea8b26712107a8cbec95e34df14728188b5bd1fef662a759ffb3a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "d0f52fe7efbcfba126531b7d5e518b647d2586f1e30a1a4ab67b2f1e6d7f7f16",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "dbc1cc32befb8aa98ae5d4c34957f37edc20341c942ebdba0abafed52e6989ab",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "ee94dae691405315e7dc08f8e6184ff06f22a6e43b80e2420972f0f683f87499",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "df2a6d85657d80d945375f946ab8c25fd0571ab44c9e39ed36da6051dd1d683f",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "932d417c9db27410da3e15b18089dc5ed556d99e560d4e80030f33227629a04e",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "4d576b548cf901518a8e2594c3283bd88fbefc314bf127972ed2738cad05b18a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "e4f20527fb5327ca1a9949c77980a9a686e6feda7bc041247b685b3032d74cda",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "b00c342be363b917675ebc2e84be0a6374f3cfe3bd3874f85f70aec54e326ffc",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "b2f54b11b71bbb51ecab898a8982838e2d4a5295267d9a5f569e21a67b140442",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-dega-server-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-dega-server-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "98670cf5f3ec82fd7cc6f2b3b91af402471e322300b26c284792bcdf2eee63f3",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "3f0d78c12c24007434750c6ebce54885ae829819ba46c0c195574be44814ae6e",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-dega-server}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-dega-server}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-dega-server}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-dega-server-test-connection}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "3fa3dc2024c13a4419edd415a59ce83e33a0e40de632ba76453ae153cf75ea0e",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dega-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=dega-server doesn't have limits defined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "438bc951caaa63faca69ca268ff67e33f45b58903f30187efea203f4d4a29c6c",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "38dc5e408e2489ed67ffb0a941621291543b1947554776f025871250e07a1b6a",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=dega-server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=dega-server.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "dcbd813841e9184ebc5616b81e4d3ef61b556ddff0da00efd5bd90358bf7dc7d",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "f088da1a5cb62504801fe70427e2c8f73b2a6f8b2db112319decca79bc9783b3",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "0b632123a0c6d039db5c02e45baf727c865f1e620b411e9728ed033c50eb92c0",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "153aafc4768ef78a360a5a12fc92e59ca8a608f17dffbb8ab7747439aba80130",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "9c7231b8889b0a0ede42fd01ab86e35d68f97926ecded71ca73970f99246b4e5",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{dega-server}}",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{dega-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "1739f2a9d7dd24e7011c320ec09e5a249185d9d8d8ccba64c9a6583fd1cace0a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "431a171c2809af515dbb1f9a24feb6e79a0bb13776e7dff8bce47d42ffe12cab",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.containers.name={{dega-server}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.containers.name={{dega-server}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.containers.name={{dega-server}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "8e41c0a572636874a4ecfd94bdc379dd767ef17b3d3aea7206ccdb69d3140a56",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "7cd29d5844dff1cca8bad39178f4a9c42469e16234915c7b45e056eb1745701b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-dega-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "2207895c4e1bae76f152f8bf0c81c5ed9ebe12484f015d53d335506303391d7e",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "a16f0d319cf798bde6260cf7d51eec8300240bc5a8c6e7c1fcaa5c2fc40677b0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-dega-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "5a1c01444b516d55346ed078fc0489c5b9f69e77cbf1b7b7348ced12e80d8ebf",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "2f33d36521c21f35120c36608004e033b85d9e2cb9fc694162b1440b3bfcba15",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "41b36d163e5a3b4ab23c423975380a8301031c2721ca8a978b4377b51dfa57b5",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-dega-server-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-dega-server-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/dega-server_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-dega-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-dega-server}}.spec.template.spec.containers.name={{dega-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
