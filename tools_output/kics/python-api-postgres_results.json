{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 177,
	"files_parsed": 1,
	"lines_parsed": 167,
	"lines_ignored": 10,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 22,
		"MEDIUM": 24,
		"TRACE": 0
	},
	"total_counter": 50,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:12:16.53744+02:00",
	"end": "2024-05-17T21:12:18.454721+02:00",
	"paths": [
		"templates/python-api-postgres_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "de551e003daa76b7a6a2441a61797e41a494f56692fbb3341d7e9acd495ae0be",
					"line": 74,
					"resource_type": "PersistentVolume",
					"resource_name": "postgres-pv-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-pv-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "PersistentVolume name 'postgres-pv-volume' of kind 'PersistentVolume' in non kube-system namespace 'default' should not mount a host sensitive OS directory '/mnt/data' with hostPath",
					"actual_value": "PersistentVolume name 'postgres-pv-volume' of kind 'PersistentVolume' in non kube-system namespace 'default' is mounting a host sensitive OS directory '/mnt/data' with hostPath"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "956071d79415e54ecedb33c3204eae23e6d705b3183ee267f6c0d6f86d29d7ba",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "933733ca66f539ba3483a421f3ce1b8cee04238fb46b6b2ebc936ef7969b4508",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "2f523aaab7097826304950f61f68ded1666f05f0b3f5ffde326dbd214ccec0da",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "9ec1280a9ea8656ce87f475cea4c25600390fda5c1cf8b6a21da14e23771cc5a",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "db8adeeb13dedf50c5e577e9c4a2f069372caa90e4de73a9073155370a95f35d",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "84f30974fe063c37e22ab282be2c9ce6cb8413b8aff81deabab04a3992c03121",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "2f1d905c0a3448c70bd813adaa62de66c9c40adda113a74dd3e00f413d52121d",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "1057b20764ecfde121b067267974fcb6662c29ee0c29e111f0b419e9791e371c",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "108f558669bacd8647987bec17171eb1d3602cd1ed3dc5b1fb72bb2357c49267",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "7f9114643b75c0904d2fd984d33e8dd5d198e16698c1a9e13abb0b43cf3457f9",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "4add2abfedc87f172b83ece370eff9d6bb98dd458093b89fb53b6bcaefd61775",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "e263ab6cfd3e03d9c9ecf17755c60f7bd7b22f4015aa36402dbe4e0018aee3dc",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "4d49df0caad74ec0ea6d78c233d605be6ad05f0b9fcd5ba96c628a487185b8da",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "8d05a6c0c3dd2bb3c03f6630cc174731245639ddd5dcdcb3785e12e9e8debf15",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "0ab3ebee2299b55f0b37575dd5b266794164c33e8f3887349adda3868e7f7e5d",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "7ba2fdf1c9e0643f2dda01c7d33794ef79da23edf58aed09fc1ad065d807349e",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "3a2d09856ee290966901084a751284d79b54f5f940dcf8adc26f1ec18bf4a2f7",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "2aa95b82cea03c7efa8e0b0e1615626de25fa60adb97dd77597d86744a5ac626",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "b531205b5cfa5e0009f824405994fabacde36d2a1363353c8ed4a03b5da99595",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "ConfigMap",
					"resource_name": "postgres-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{postgres-config}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{flaskapi-deployment}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Secret",
					"resource_name": "db-secrets",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{db-secrets}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "53b603b5f16d62408db3d88be023ed899f5110a997331059bb89a46ec1dd89c2",
					"line": 109,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{postgres}}",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "c01b9106dd4d8546bea6720a7f223c39b3a561eba0954e756a2de01f30d910f3",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{postgres}}",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "be1e691567e8224e57203781774773ceef1ff0ecc9563f16f096e4073f34a33a",
					"line": 95,
					"resource_type": "Service",
					"resource_name": "flask-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{flask-service}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "flaskapi-secrets",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{flaskapi-secrets}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "flaskapi-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{flaskapi-config}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "c8b0549ebdba92cc372a2ae424b32b8a9a615444d3b74e24e3af588ed474fefc",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "7eb64fd0c606b6a22c3cbfd972bdabe08cfa6f5d42376ab06937fb84a505ba68",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name=flaskapi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=flaskapi has resources defined",
					"actual_value": "spec.template.spec.containers.name=flaskapi doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "a7c97e25d3558867ffe74b447ca5ba14867a515e743f55ad7c975f74eb460f35",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name=flaskapi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=flaskapi should have resources defined",
					"actual_value": "spec.template.spec.containers.name=flaskapi doesn't have resources defined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "96a856d3f8a31120fefd23a7bb1cfa7e5ac5abdb7791ad1d9cdd685508ef1483",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "0dc4145b79c68ee08f693455cd4efa66f81a828b7e7d8d6fc99b5d360d6aca18",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "367d24b0576178dc6bdd7a4e49ff7879def4de65c0d7f0bc12ea8470e0c11233",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "c629d3a519dab760373b5d32725ed7d9540f3aac8277f4636b109766775a4dea",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{flaskapi}}",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{flaskapi}}"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "1c17ba62c5fc6c348c7a3687bf1d09f2b80418e71ba754df315926c904bdee31",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgres}}",
					"actual_value": "metadata.name={{postgres}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgres}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "8f9b2985b98ac8b2c301c947c021b1fe493d9edaf5b92b11ef0c02842712756b",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.containers.name=flaskapi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.containers.name=flaskapi.securityContext should be set",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.containers.name=flaskapi.securityContext is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "6d0f0c6557a854b9f15822e9d32c585f4d27fd48474ffa0c741762c875ac7e82",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.containers.name=postgres.securityContext should be set",
					"actual_value": "metadata.name={{postgres}}.spec.containers.name=postgres.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "59e229b4612b54eb037057d008fe738949c765bb6b1767ad9fbf1d7fd6875531",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{flaskapi-deployment}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "68e80eb50a74aa6f6614ade8dff569d5de85b9d0fa7896683b89242f8a0e1c4a",
					"line": 80,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-pv-claim}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "120f0d761c457e2c8550694829ae08257966ffe6467232806208d97217b359bc",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "6047e9e226b416e0fcb46ed0c6fc6329c6488033856b32d0dd21e6fcd1358583",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{flaskapi-deployment}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "b4a9587b0a0934e9b7bc6d9ef9e6c69498340c793c9418e1b6daf1ad752313f4",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "a18490676f1c09904686dbc6f73090d2d4b0edd4e1589a382ca06cafdd85e1f9",
					"line": 80,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-pv-claim}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "9809d3357d31101d21e9d63015a8ec1f6256c20a6097129b5f87e852670b750a",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name=flaskapi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=flaskapi has a security context",
					"actual_value": "spec.template.spec.containers.name=flaskapi does not have a security context"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "a51c12a3a20a36ce242f33b025e918910b2f7869f0142abcc1ba7444cf392ff5",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has a security context",
					"actual_value": "spec.template.spec.containers.name=postgres does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "94fa573f92b39ce41c41d1c850d0752add2a3283f161444dee58a428925d8011",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "a48b5c7752c1fb14aa4a2fe88db68b518b3f1f19b880d6fabe37b715869474d2",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "flaskapi-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{flaskapi-deployment}}.spec.template.spec.containers.name={{flaskapi}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "903ac0b6f3c07e4aec2d7f30defd189bcdfdf6293633ed8b1e15bf8cb410db33",
					"line": 113,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/python-api-postgres_template.yaml",
					"similarity_id": "2150890a2cc1225f31e9a99264951fd94d54df7e359f117a936d50c833db0a29",
					"line": 103,
					"resource_type": "Service",
					"resource_name": "flask-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{flask-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
