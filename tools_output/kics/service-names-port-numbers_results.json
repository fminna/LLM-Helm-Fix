{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 158,
	"files_parsed": 1,
	"lines_parsed": 151,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 33,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:16:57.638336+02:00",
	"end": "2024-06-26T02:16:59.655808+02:00",
	"paths": [
		"templates/service-names-port-numbers_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "1db3b55dec1c1f0eb8f4398017955e8a749d95c26c0f33acafd0ffc6efa1669f",
					"line": 148,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "3a96b02cf78097e8a5eb75ac1675a46bb761bf3d124fcff422be35f041222e48",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "2e7ebc326361db0e64f4ff9f5a291a492333b06a7e907a933e475b87143c21b6",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.volumeMounts.name={{release-name-service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.volumeMounts.name={{release-name-service-names-port-numbers}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.volumeMounts.name={{release-name-service-names-port-numbers}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "b02f05db401d79e7cc40e5725f679565a34ef7d5eb76e91247e9a0d56e3f5fbd",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "44dc365ae4552e8de3371c310ba5ea7ad9ead0de538a0d83b7970606dc26fd0d",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "ea52cc4e3c98d21a4ad802e6512e386024f7611b0a7344a21fb2315d3fbf681f",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "730b2e5121a6afe11551e904f265dc91b9fac5d048c3095f9030c68d3880ba35",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "ec65e77c4294afdef0143ca90b889e58b7a35207b848e971f0fbd9c7e6d0321a",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "f35efaa7d214734fcf055de3487bf650492c57f28c675224a4e29cb8969bee5c",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "0016526c7543dcff1c64dcc67c2e1e3161db6aa14f7272fb0f1289f7bdd2348f",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "9fe638ff3187fde4936b1b7a157af58828aefde09c8f47db6ecd1a5415eb4f56",
					"line": 148,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "b9d112028bc05ea041dab23da6d7ac42dc93d7488dc844db3cf410eb29047ce7",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "cba8d1463756cc6fc593f4501f32067c78d0a4cd8d94f0ba78f43069e43741ad",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-service-names-port-numbers-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-service-names-port-numbers-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "9c85f15917d553330a57f2506e987f1330d9c474aaf1695c5a8156f7595ec016",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "51d23c31d79e671feb9ffcf0a1c53c362fdb7cf12ea55ca513c6734cfa9812bb",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Service",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "a762c30bcf108857d0006871a31eb39da3f96bda188ede559396067c8c3cf5c1",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-service-names-port-numbers-test-connection}}",
					"search_line": 122,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": 57,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "10d44a256db2761882971d847d814e3ad8dd5c0996bb7152ba0c893eb9d5a340",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=service-names-port-numbers has limits defined",
					"actual_value": "spec.template.spec.containers.name=service-names-port-numbers doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "1b3a8c7537ca9e59ee66b17340adff978f5f893c3a2047f06500b9b4f9fcf50d",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=service-names-port-numbers.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=service-names-port-numbers.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "7780a6f27df46a96798cbef30f08ccb69f74bc4cb2e8cdb18ff85bc45e239611",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "a919386780ba4647f831d97fcacb447dd970d465b712271a634db665207f59cf",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "7eda7530764e2b78d8f339682e407f1dfa535a167536214cf8c3a02d46d54774",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "531eb8a3f0b0e21c402ed14e31aab1d12e4ef02fef92c4e73950a6c601896065",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.metadata",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{service-names-port-numbers}}",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{service-names-port-numbers}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "67ae1b885d16e2f7acead7f74fa9f5fcf0b38f210ba20d0c9dc073f113366cb7",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.containers.name={{service-names-port-numbers}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.containers.name={{service-names-port-numbers}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.containers.name={{service-names-port-numbers}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "b937b96e54051ec0bd6471263263ad6f41f75ca58cf37ef8a629ded52fc922d7",
					"line": 148,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "14e939c92cbb6c52a1ca32a1fe771fca6d02d2ee6089feb54ebb3eee32a0d80b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "dfdae1175ead1fb086b1cda4d406e1b0c915c6b7d7c04eeecfd5cfd49a3750f5",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "0e897abbbd42ec1121dbd80a26bebc746c2d35f329790bd2f49cb4a8649c399f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "5ad9593cd98b10605286e1dcf06200adcc64078a1da882ff02e695e971a9bf38",
					"line": 122,
					"resource_type": "Pod",
					"resource_name": "release-name-service-names-port-numbers-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/service-names-port-numbers_template.yaml",
					"similarity_id": "1bf49181a2d8bd8368e05b689d07ed05381ecea1043877f68a035aeb273d38ef",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-service-names-port-numbers",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-service-names-port-numbers}}.spec.template.spec.containers.name={{service-names-port-numbers}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
