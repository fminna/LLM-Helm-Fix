{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 197,
	"files_parsed": 1,
	"lines_parsed": 194,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:12:41.848698+02:00",
	"end": "2024-06-26T02:12:44.00446+02:00",
	"paths": [
		"templates/benthos_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "2aa189ec11b2a849dc3371fac0cedcb25c04346d1fdfd3a65cb37449bee16c27",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "961a1aa1617f696aa8b9290eb35a2639967bb289ce6193dc638c708a9fe1593d",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "4fc1efb62303777568897fe70093d74874821f228de2d8ede471f943de37e2da",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "a95831a003969375d4f72d72416e406a72cbc23c5d940ee5031692d9122723f8",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "da24b0ede4e9f6b4e9c30b2f2e8755912173c031c30268fa1876c9af0e3b54d1",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "adaed823c4f73460ace997bdabf34962c27da85dc63ebb1e1f469338a1283189",
					"line": 162,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{benthos-release-name}}",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "benthos-release-name-benthos-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{benthos-release-name-benthos-config}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "f2529a1a561a6f99248580c6def9234666f5167d1596d415e615fbc07902a22a",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "0f052e31effffa509f8ba085399e5c9364eccb44e2b5d2cb91f640aac1b876fa",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.metadata",
					"search_line": 158,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{benthos-release-name}}",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{benthos-release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "12d22e2f3163e93e22da6b8e9de9679bb3f0fff1246c01a98d44a5d38489fafc",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.containers.name=benthos-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.containers.name=benthos-release-name.securityContext should be set",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.containers.name=benthos-release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "69dff477057dfa9e9a2777b58cdfba71af16cd039f138bc6c1df4b4d3c6c7671",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{benthos-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "e0cdb2786d78c2eb8efdc893ad4877aafcb44241b23f82c9cc7baab1223484dd",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{benthos-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "9befc1ef4ba6d0d4cbfe398981457f77f604bd9010952ec90d4e1aca79b75528",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name=benthos-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=benthos-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=benthos-release-name does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/benthos_template.yaml",
					"similarity_id": "28c0e9e4e08be44c0f56b9c4b3ddce5e0daa1221da9044877cc5760d96071a35",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "benthos-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{benthos-release-name}}.spec.template.spec.containers.name={{benthos-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
