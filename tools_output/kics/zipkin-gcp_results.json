{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 56,
	"files_parsed": 1,
	"lines_parsed": 54,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:43:44.227107+02:00",
	"end": "2024-05-17T20:43:46.105169+02:00",
	"paths": [
		"templates/zipkin-gcp_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "a86dd495b50971fe2dbc8e6d89759e7b6983c1db319c1cbb500da5f9c8e9e718",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "25c41cd2f0c450540d2644aca723c31d6ab118aca699f2f13b093e2ca611a197",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "4eac4147d02cb7131d7a824324e07247297428b41d99fe1348d069a75598138a",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "8beead65b04e1e9e0eade6701769f4b10862c867acc9bd1ffb3f34843744adc3",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "d3d82d9c11f40e65d2f7663f5850cb8f9d33da921402d82227f30dc3d4d9c700",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "9893e84f5bf12888d18ed06394d10b0da0a0ba1797d1810200a3064ffcf857fb",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "bfeb4bfaf3bfecd56cecc0b168026d6e45fe76c204b97e95d6bbd86d7650d381",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "18c1fa7f695fef90dcc0b6e0b5f8eeb0af8ce8f07cbb50d5f572cf1a3a801fc4",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "ad0f00056b0dbc1b8f654d9092e44ecd99c047a9b25053db9f9e8caed10c4778",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-zipkin-gcp}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-zipkin-gcp}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "0a2db83c46bbd278e81a0958f7661a507accac742151604a70abbe390f79683d",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name=zipkin-gcp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zipkin-gcp has resources defined",
					"actual_value": "spec.template.spec.containers.name=zipkin-gcp doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "d08c1dd334fd8ea925f893b33cc138fbc4bc3b437ac92ad4afb5ff51b2cbcfea",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name=zipkin-gcp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zipkin-gcp should have resources defined",
					"actual_value": "spec.template.spec.containers.name=zipkin-gcp doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "d629c2fa1531ef056fefd5405cc45b101e33ae3d4cbb5a8d15a325336ab9ddfb",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "c746e2f7a0a6d9406019a32bc2826bbe3dab9741a4c72b5af28cb29b4bbf63d3",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{zipkin-gcp}}",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{zipkin-gcp}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "47a7c950336de565a335be2c12c2d94f9e4eaff68cf1f94f1830d4db84f1ce72",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.containers.name=zipkin-gcp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.containers.name=zipkin-gcp.securityContext should be set",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.containers.name=zipkin-gcp.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "d062691a070afea81677fbfa30e980bdeb85d988dc7bb2e1595516ae409b5ad3",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "57deff15f4cd4697e54696e45614cff5e62e5881d870732ea661a54e5df3f39d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "a98d9d919f4cb8e60a501aae8377ffc8b7a21a9128d7b76eba01607b2eba6cf9",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name=zipkin-gcp",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=zipkin-gcp has a security context",
					"actual_value": "spec.template.spec.containers.name=zipkin-gcp does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/zipkin-gcp_template.yaml",
					"similarity_id": "a7f140d17c500f1ebe2ce1cf2f482acc20c75c976868f5d67b6768b267b4d8e4",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-zipkin-gcp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-zipkin-gcp}}.spec.template.spec.containers.name={{zipkin-gcp}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
