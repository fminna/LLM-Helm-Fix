{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 120,
	"files_parsed": 1,
	"lines_parsed": 116,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:37:15.257733+02:00",
	"end": "2024-06-26T01:37:17.381294+02:00",
	"paths": [
		"templates/squad_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "154ba9d3356a1e2da9d8a394b3324d2941a656584eeab24bb97c30be7c4944db",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": 91,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "9499323333f13ed9ac0490690251ffce65870bbcc92dab7337c188aa6b5efe3a",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "dc2f700e4eebc1624e62f1bd9074030b37602a9275199c8ac7590c7a40b34180",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": 91,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "3fa934e9c4d20274096961afde0a289e757d0bd53d985e03d4acead765d1d9c5",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "e3e6382787734c36133274d99821d12c8454002f7c21fdeff9efd4a3e6dbd523",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "f8c629740f6a318fc397899ebfae8364a6c93c94077067432cf65e7d069f5eba",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "f0bedbd1d04429dc3f344d1c5d75233f8a1731febc233e74e94bd0b423dd61a6",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "7fa53a0a246681bac21718742926f503e3ce4e3e4359af1b4245cb422f833e2c",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "d8c9ac9e19d7b911a28f1d41403b9fd95a62d8fc7abd29e9298faa45a7772cc5",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "eea3a17f87fda960ec6710ae4ed2327dcb5bf2cb1a1bf614e492c89efc49b14f",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-squad}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-squad}}",
					"search_line": 38,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-squad}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "f4230d1834bd1e1b2b893d7388b2ade3f1e317fde4f95e6989cf514e80e9aa10",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=squad has limits defined",
					"actual_value": "spec.template.spec.containers.name=squad doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "4ed21aa0eaab6ab2a41fcd9e4b82f88293d1b321359e0488fa5d5d145f21d5fa",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=squad.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=squad.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "9d076f107eff8fa77626665bfead5dc844bb376051d347835cac5d89f7dd2053",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "c7842df955e700bed4a94313914a7595e9d073610b1211be667e06efe601ed54",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{squad}}",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{squad}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "d5224d1347ea09bf38b25115064cb1e24d15b98774abc193bd6232dc7644d2b3",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.containers.name={{squad}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.containers.name={{squad}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-squad}}.spec.containers.name={{squad}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "76f4888e5bba1ae6cb1a52f0977775e37f5adad8c5d6f4f7b711524b76037d48",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-squad}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "852d9d6b56e51541a9b4bfa4cd2a21a24d3035ec0a1c3952afbc6beacacebc93",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-squad}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "f98b7193a60d8fe59bd4de2a7263e65686accb2a13f630aa63d52a0410acf88c",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-squad",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}",
					"search_line": 91,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-squad}}.spec.template.spec.containers.name={{squad}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/squad_template.yaml",
					"similarity_id": "1dd2764884ab84fde6dba2932aff19b48408a47fe6774457e09164998059a614",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "release-name-squad",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-squad}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
