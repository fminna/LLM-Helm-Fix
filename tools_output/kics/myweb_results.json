{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 54,
	"files_parsed": 1,
	"lines_parsed": 51,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:23:58.881506+02:00",
	"end": "2024-06-26T03:24:01.001826+02:00",
	"paths": [
		"templates/myweb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "ec3d6af2f438a564246c3251fc395d5721b4981493d02ffb739d1974d8717d6f",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "b5165a7075aa49406b28dd5e7bd3cb1edd04689834aa35cb92d41b7c6aa0c11b",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "6a3f55400413c70f2092538f13595620d43a1638018e6426d473a95eecc56e00",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "2ecdc917f789b62ce1b07db2dbfbce36c70fcdcdc61fdefe79a214f07f9a1b83",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "c758ae7f603d1f4c0e49ac51bb0c608fcde1b2e88cd81681e783d08d463afaef",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "da5134952ee224dec4b642365d22405b3dc7aa98d6d3722fde71160c5121bbae",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "cb9589c0dce12654919f8e630631ab2bd3e5c780da7b878f1a2da050d8e1dffd",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "e3301758519dde654359dae25c100527793db8d03ebeb4a7c9466e4b93b3ed2c",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "9e7943ae4c828a4cb0234b54c40d55ba4d9fe3fb7ef4cf13798d95ff6ec18870",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{mydeploy}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "17292fab6d316bebaf6df62526cc19df530977a6c819db9eb867fb2d3c302bbb",
					"line": 9,
					"resource_type": "Service",
					"resource_name": "mysvc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{mysvc}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "46796a7f8268b5e73588b7c80bf53ae07876d7570190129ee427bee5252798d0",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webpage has limits defined",
					"actual_value": "spec.template.spec.containers.name=webpage doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "44070ef3887697a744e658289b57174e03abeeecd5b661d38ca5de598b43d151",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webpage.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=webpage.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "46371d4d6b51b0f23aa208a41873bc1062a797fdeff61dabddc2249213613c29",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=mydeploy is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=mydeploy is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "27c0fa5e7bbaaa122d110547e01e57ff75468fcaeeb6e1c877d8a41ab541aa78",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "3972afc72671fd028cedf7005d50cd89ebdbc027e4d7717cd1e472b0a784e09e",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{webpage}}",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{webpage}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "83ebf76a4c5eae11761c09b036a7f31681fb7f5584922b6a358031dd784419ef",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.containers.name=webpage",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.containers.name=webpage.securityContext should be set",
					"actual_value": "metadata.name={{mydeploy}}.spec.containers.name=webpage.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "5504240896e98cc508fbd14cd0c7541627d9da4e8421db75b56cde59ed3184c3",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mydeploy}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "4a777cc9534b7031a1c30033910246661f9d1c7e2b79ee2f820690ec6f71c80c",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mydeploy}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "88e4a2e4e7f43d4a5bcdacb0c93b5116967363629afa002730237bf1dbbda0c1",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name=webpage",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webpage has a security context",
					"actual_value": "spec.template.spec.containers.name=webpage does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "d2b2b5fb8c5d6dc1d1e4ad902afe44abc9ca327917307206cd566183d7326a4d",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "mydeploy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mydeploy}}.spec.template.spec.containers.name={{webpage}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "0a13011704a092da7d63e7c4c28a08478b8d8c7e192925b48a78c8c9993b5f4a",
					"line": 16,
					"resource_type": "Service",
					"resource_name": "mysvc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysvc}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysvc}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{mysvc}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/myweb_template.yaml",
					"similarity_id": "ed37a3e49abb4f0bbcb8d395fd6c6433d9790294b21b24ad8511898e69c91ced",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "mysvc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mysvc}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
