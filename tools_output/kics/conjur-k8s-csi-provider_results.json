{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 56,
	"files_parsed": 1,
	"lines_parsed": 54,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:14:58.540271+02:00",
	"end": "2024-06-26T03:15:00.605067+02:00",
	"paths": [
		"templates/conjur-k8s-csi-provider_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "f2e30fd71764fa6cc16394bd984324c68d0789325551b7d0ab613f1105678f3e",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.volumes.name={{provider-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'conjur-k8s-csi-provider' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/secrets-store-csi-providers' mounted",
					"actual_value": "Resource name 'conjur-k8s-csi-provider' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/secrets-store-csi-providers' mounted"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "70f770088c5aa59ea33cbeac41e2a75de445c6d8439cfa4c4d844acb9fdc29f9",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.volumeMounts.name={{provider-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.volumeMounts.name={{provider-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.volumeMounts.name={{provider-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "33e89733e571307570439579a6c27d33fe4a6bc364b9ba825cab9ad37eb2927b",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.volumes.name={{provider-volume}}.hostPath.path",
					"search_line": 55,
					"search_value": "",
					"expected_value": "Workload name 'conjur-k8s-csi-provider' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/secrets-store-csi-providers' with hostPath",
					"actual_value": "Workload name 'conjur-k8s-csi-provider' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/secrets-store-csi-providers' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "40ed9ef55dbd70cda1396bb84c764c1b19668b700f452edfd4a85077a035c125",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "d65044f308ccc9fa925fe777dc341efddf5e1c68b785650c40508d5753d4e203",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "22b79c5e78735bdaea68374e6cfbc98213e931f40648b216e860db41570d8413",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "603eec77c5d51a0a159d2166860984e15d8a7661a2cc66de64c3510ef0d71cb3",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "a36a960681e023ed79d3f97e5f4171727f8d1f785f89f309021749c76208c2a3",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "c4a87de4c6dc9399bac4d33d30144b2ddec2bd39d9b73535111153a4b9322022",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "9168646b8e5467ab36d34a637be884306f024dc7525aa28cc205e8fb55b31d40",
					"line": 23,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.namespace",
					"search_line": 14,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "383821fa95bfa5a7818262ff7994a0a64f5542def25d7e176a4668b172eeb937",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name=conjur-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=conjur-provider has resources defined",
					"actual_value": "spec.template.spec.containers.name=conjur-provider doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "c33a1072171db9e5e07b7ce5cfad54fbb351a6c0f8765231032aacd16f4053ec",
					"line": 26,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name=conjur-provider",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=conjur-provider should have resources defined",
					"actual_value": "spec.template.spec.containers.name=conjur-provider doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "45c664f80187f574fe15c75e6b0689de567a364a6dbe8ffcabf5aefe12de3fbb",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "0d036ffd7be1886860f6cbf56cf23c6578d81d5afcb8c71a8e46f9bd9f564205",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{conjur-provider}}",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{conjur-provider}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "5973a2694e1ab31299d8fa8735e8cf07fe40bc6bcb5a454da2d4abe2dec7e0c4",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.containers.name={{conjur-provider}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.containers.name={{conjur-provider}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.containers.name={{conjur-provider}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "47485bd2d523f0f24163afe7765e1be0ef41ec119de984f5b938d3e0ac23c195",
					"line": 14,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}",
					"search_line": 14,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "95b6aecfae95a90262e796ded0b2266c79edb0c140268616849c034d8e2b6c76",
					"line": 14,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}",
					"search_line": 14,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/conjur-k8s-csi-provider_template.yaml",
					"similarity_id": "dd92ddced0ed823e8fcf0662b31fd090b84b5fa5e531f7a6ae94745474b66f30",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "conjur-k8s-csi-provider",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{conjur-k8s-csi-provider}}.spec.template.spec.containers.name={{conjur-provider}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
