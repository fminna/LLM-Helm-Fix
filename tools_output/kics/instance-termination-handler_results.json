{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 150,
	"files_parsed": 1,
	"lines_parsed": 146,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:23:04.605043+02:00",
	"end": "2024-05-17T22:23:06.338886+02:00",
	"paths": [
		"templates/instance-termination-handler_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "1b9701d7fb9eb48fe9ab77d712b9949fda60289ee67a2879b18c70bcee703dda",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "b45c354d8d1a99968a7980002b9ebce639816c0fb2d11b284c6611a228a98f23",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "b9e10be95f3fb92feeda5b0537174f9673611b7c63f6c460743999215799b164",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "543fc11b802267986844c852a42037a53be349f24b3e968ca56fedfed2752826",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "27c5216ef0626a1243a7cf6166531a00e3184d8be3ab52cdfb2738ad28ee74da",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "ab54fa676ab8c7a1a739a0e6a3b1eeb0cf6549dd16c70d26439cb06f1695bf8d",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "faa8fbf11f2743af4bdce8afb37b51fb3df7752f80f440f5b30c588a345c341f",
					"line": 104,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "9c0f01409f583f223c569b3f1579695f958c78932cd1be2987a9a027acb83574",
					"line": 84,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-instance-termination-handler}}",
					"search_line": 84,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-instance-termination-handler}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "35320d5b7b0b8539e77f5a3a968e971f2f133053c37ca1b4079ee57115ae9869",
					"line": 137,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=instance-termination-handler has limits defined",
					"actual_value": "spec.template.spec.containers.name=instance-termination-handler doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "493e26b1e829a6a11c7f9a2b4084620ae628f299d786f6ecb3d7646c09fac947",
					"line": 78,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-instance-termination-handler' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'release-name-instance-termination-handler' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "a98787496a9611ca8d9c6a03eace5edf853d12750b1558df2e1c93e797e7ce63",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "101fc140411067d50088cc588d4bdf0c9069d54d6b1702ac4842a1ae50331b77",
					"line": 101,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.metadata",
					"search_line": 101,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{instance-termination-handler}}",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{instance-termination-handler}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "0b22f9f760c2fac8c157618f302280c6bbf4116c08611a8dd5a87e81aa17059b",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.containers.name=instance-termination-handler",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.containers.name=instance-termination-handler.securityContext should be set",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.containers.name=instance-termination-handler.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "4a0ddb0e93b1dfa76389e4deb4249b32e4dfe890cf9b225d528e2f9b6b5373e7",
					"line": 7,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "bdeee3a5ba53da4ae8aa28eaadf43802681b377134d9e0f9a7022067b05905fd",
					"line": 7,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "cfb12c4f280c6f4eba53b4c20d7333741d9ace5887678d10486dd81dd67a1eef",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name=instance-termination-handler",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=instance-termination-handler has a security context",
					"actual_value": "spec.template.spec.containers.name=instance-termination-handler does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/instance-termination-handler_template.yaml",
					"similarity_id": "a423e4c741c06bfde738f56899dfa7817e786d7e78895caec6e652bb96cd7db4",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-instance-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-instance-termination-handler}}.spec.template.spec.containers.name={{instance-termination-handler}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
