{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 250,
	"files_parsed": 1,
	"lines_parsed": 248,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:00:49.966589+02:00",
	"end": "2024-05-17T23:00:51.924245+02:00",
	"paths": [
		"templates/recyclarr_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "9555ddb4906e2fe18966ec946dfdae230f4171c1e89a16f8d307976749264fd0",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "575eda7d54989886daf6722ba2d5ef07bf9140c75dd5b0b5d87d807ee7fb365d",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "3183e6489ce765be0337bc7693f4f20735db7f967bed2592a03130ff7ae6c4ff",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "7318db61df20fda57dadedc5e7ab65d24d7fe25096c9a55f9cb70d44779d87e4",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varrun}}.readOnly is false"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "059b158151a047cad3840abe15ff5bfe5f162b2eb42268c6c95f7f0c69d5b150",
					"line": 183,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "03df6626d7536f96ea8af126ddf6f6d9e4ad2f5759cc7a3ace9b54a025e6293c",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.volumeMounts.name={{varlogs}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "22c770c70fbee758c647b5971b715f43f5f28af285a24365ad1ebc955693946b",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.initContainers.name={{release-name-recyclarr-install-initconfig}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "c30aa0ed7447ed25e49d4fb6c28a3d4eceb233ca72020187336d52cd0d0b39bc",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "592e947041a659f69837981e98b8ba8aa5d5b627300a2960fecf47abb3da8502",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.spec.containers.name={{release-name-recyclarr}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-recyclarr}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "4f3bce1c4994c35d2f80ff175d0c8ce4639bfe802b81cb3107a0e68a55135910",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.metadata",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-recyclarr-install-initconfig}}",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-recyclarr-install-initconfig}}"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "4f3bce1c4994c35d2f80ff175d0c8ce4639bfe802b81cb3107a0e68a55135910",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr}}.spec.template.metadata",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-recyclarr}}",
					"actual_value": "metadata.name={{release-name-recyclarr}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-recyclarr}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "d4fe9bcda79c5ab184b647fa45201ef01c3793b72c3c38c220c6e5523e0a9dcc",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-recyclarr-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr-config}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-recyclarr-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "a4305b96d70af5ffaa6e7daffed7e70af5b0c66690e31ad5b1137ee964ba4cec",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-recyclarr}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "696e4d4f6e8ebaf8017bb0710fc1dedb1fcd43aabf2280d90ec3a0452c8ac974",
					"line": 7,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-recyclarr-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr-config}}",
					"search_line": 7,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-recyclarr-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/recyclarr_template.yaml",
					"similarity_id": "613d091d1f6caaadfa1e389b9645940437a381b2a5e2d7d0ee659bf99b469322",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-recyclarr",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-recyclarr}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-recyclarr}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-recyclarr}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
