{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 86,
	"files_parsed": 1,
	"lines_parsed": 81,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:21:12.498809+02:00",
	"end": "2024-06-26T00:21:14.409107+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/autonodelabel_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "961c70924c8b0add4c070ea5c64e1c682b4c944b48991bd5ed16d6800c28ecaa",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "aa00d52db503473977082a396146c19ab0d4239ba0a7d901cc26c16bba8e4020",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "52cc1dc4d471a9bcb87d54de1de089c319d0dbbf3c50a5d0fe810e784e184fe7",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "30693c1a2aac359ae6f3375b945425dedfd7e58289fa08b28a48d5c6bbbedc89",
					"line": 65,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "89d5ad34f4464c94fb508071936b4cddbcaffcda47c55a5e3cd759f585b5f51f",
					"line": 65,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "d8fca0ae126c48c691ca3f85bfd2846c43af64fec94db9cc1efc7fc011585d47",
					"line": 65,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "ffee4e5c1925c9d79d44ef306b6b63ad96b85112bb176d9fe4de17ca800b61cb",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "e119c65dd05d7dd96cc24dc37dbf838fcd6f879aec6256457bf94de7f1b69a76",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-autonodelabel}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-autonodelabel}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "17ff0a9e785e6777de600f8b802d6ef9e7cffd7c8713fd261c1677560bb6067d",
					"line": 75,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=autonodelabel has limits defined",
					"actual_value": "spec.template.spec.containers.name=autonodelabel doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "7dd72feaf531ca7733dadee439717905ffb9c0dc19f8c5165bbe72d84be7bf96",
					"line": 69,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "c0243823f285cd67f4eaa1ff3b485e1e0e30904a958cbccda78106bfabf54bbe",
					"line": 56,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{autonodelabel}}",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{autonodelabel}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "678cf422f84d71d1122447883666e856bc541b20b8931c8e3cfbb81991b28369",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.containers.name={{autonodelabel}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.containers.name={{autonodelabel}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.containers.name={{autonodelabel}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "7ed4c4cb8537074208280a24ca3565a5dbabc2fedd58ffe61fcf452227430344",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-autonodelabel}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "00e5d9787409077fdabca7e9ce89e6c65e624e5c4d97845ccfc902a17de301ca",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-autonodelabel}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/autonodelabel_template.yaml",
					"similarity_id": "64cd59633c0f2fc37f309c3a91ca3192d91fbb794ead33a1aeddc2db7d85e257",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-autonodelabel",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}",
					"search_line": 66,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-autonodelabel}}.spec.template.spec.containers.name={{autonodelabel}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
