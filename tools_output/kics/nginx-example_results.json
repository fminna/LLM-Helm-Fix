{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 76,
	"files_parsed": 1,
	"lines_parsed": 72,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:30:34.491948+02:00",
	"end": "2024-06-26T00:30:36.440698+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/nginx-example_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "b346462b15258de8fad0c16ccd634e59af710139cb254cc5062db489b5d8b702",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "da4b8305960d01bd6634bddce3973ad7754aefaf736ad9d753ca1d76b08d360b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "aec95f52984d900ff00e60c2fcd64c349a7790293933a1a296ff7220fe6ff252",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "9918c13bd61f867d7cc38322bd5bceef69f8853f10f4dbe3accf314e402cfe0f",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "97f2c3cf3e15b49bfad2bd1244f2781b152771c48eed74bc731bf03832494bce",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "0cde44c975404deb02c5dd9743c52b1da22b310dfd279f720912273b32533f77",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "7aa722f6c75a6526348dc53d05d35f673d3acff793a11393ef12bfa57ec27e19",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "f14a8f2016483adb73880de0c21c0bce09aae971c804908f8bfc0628ea52759c",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "68eb1c3ff42b805bbca27642bb111fb27fedcb91095236fe0fe5c4073748f4b9",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "e99f1c5620a72bcbe46a9a745c9a4a3690799bab7e90d43a9388f609eb6389d4",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "5de5e2e34761141d60e66897babfb9fda5d07b7387a8dbf676cc6298887e9570",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "d51b3b1e6f1d7af5d9f5883eb7b03f61b1957106c400950e37193b394860e4d4",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "b5f04297c71f5e4584b1d4962030292be4658b7b76ad6100d6a589bf314cc005",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "4f49e5249426f45087fac38911150576eda90a9eb291d8499d4cc05242974a19",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "f2ec1882f244bfd1b6da3b2c0eefc24d0f4f8ce4eb4b094814b44fa7b9b409d7",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "819275a8b837dbfddee6084cb22de4a6cf5c49954ba4f002bc51404205e0f34b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "d739c6c8de78e8d00ed2b9e78376c24fc5908f7da1aa2a5bf9cb82c0bb048ed9",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "34a124489078ae81eca4ee4e31d34ae4d9f5ed274389b1481b539a397ae431b0",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "nginx-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{nginx-service}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nginx-example}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-ngrok-ingress}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ngrok-ingress}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "8e9a1a354d8a08e63ca26183ed178adedd9bfaa21d1c2238469cd1991fb09d02",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name=release-name-nginx-example",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-nginx-example has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-nginx-example doesn't have resources defined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "451c1c6da03bc774ec1b5d1aa480e9924cb7f311fe96917985c860bf04224525",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name=release-name-ngrok-ingress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-ngrok-ingress has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-ngrok-ingress doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "e3f867207689524560f7611275320e468eb6523e8a5db5810030dbb8f8da1c75",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name=release-name-ngrok-ingress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-ngrok-ingress should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-ngrok-ingress doesn't have resources defined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "6604fac0d3106fc806cc46a708cfc997eec41fcd1b9414c8e0a7d913e0dd059d",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name=release-name-nginx-example",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-nginx-example should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-nginx-example doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "1b37b8d8dd275ccb21a2dd97f601e747294ed2bfe317c5013633dd54fd12832e",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "a8a293b958b7b4416f98ba527f7d86e5691739a3dbea34f11afd06219bf66489",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "7f6c6011daebd6bd6c90821ae243e18e6f6dd2286a389577d286f40bae08571a",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-nginx-example}}",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-nginx-example}}"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "d8d49b0997bb9c7dd78e67178da85c54fbf55b5712c57491e3e895b73e48e2d5",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-ngrok-ingress}}",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-ngrok-ingress}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "becbf689a1d49ed4409d89965cef837ff0a0ed4dd27f5d431391e96c79dbc88b",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.containers.name=release-name-ngrok-ingress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.containers.name=release-name-ngrok-ingress.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.containers.name=release-name-ngrok-ingress.securityContext is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "203d6f338f1812eaaaa059a001f66e9f559348b363e3135c459b63731c8ec45f",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.containers.name=release-name-nginx-example",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.containers.name=release-name-nginx-example.securityContext should be set",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.containers.name=release-name-nginx-example.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "a998bd0ed7e2501ff1b2fe4bb074073cc4005545484a4d47170dbd4cc7ee4f73",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-example}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "ac3ed6a3366195d3d0eab25e926235218ddc20efea835eacc7a695c2ae585ffe",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "f33549dc12dd315751bcc76f6c9cf09166176881cf85325561ac2c986e91f907",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "d7cb4a4ee13b6ab9196c39337c8d2b2863d5d04fb54b57530e603cadd1b871c9",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nginx-example}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "3a12ff58fe77c56985a1dd12553d4ff5295f4465bcc74727e691e03d8f9669bc",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name=release-name-nginx-example",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-nginx-example has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-nginx-example does not have a security context"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "4962bb20583510909884a7bc0fe6e2cb7843e075eb020a5dbe1eabe83d46c6c0",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name=release-name-ngrok-ingress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-ngrok-ingress has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-ngrok-ingress does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "bca08d93e39869c7708964a2d48e3e3737d572906048fbd539b5c4e4a1376048",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-nginx-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nginx-example}}.spec.template.spec.containers.name={{release-name-nginx-example}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "13752d820d17f77890674e2c3e8a9e78f537bcc74f587943bce3d3f38a3bb087",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ngrok-ingress}}.spec.template.spec.containers.name={{release-name-ngrok-ingress}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/nginx-example_template.yaml",
					"similarity_id": "b29e1c1bb893b6f123955eddc3c065ba1279266244028b7444fde86134e07dce",
					"line": 8,
					"resource_type": "Service",
					"resource_name": "release-name-ngrok-ingress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ngrok-ingress}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
