{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 143,
	"files_parsed": 1,
	"lines_parsed": 138,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:59:24.847907+02:00",
	"end": "2024-06-26T01:59:26.910925+02:00",
	"paths": [
		"templates/geo-checker_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "fe388e4538a20f48f9bb69e7fbbfc68536975d716468018d8c79b4138da90cdf",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": 83,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "e19e19a29f4bc19242707e05620160f394ab1aa9301ba569818f802d45f2e9a0",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "6e94e75d17c6f962b6b9cc234ee9fbe2d2ae938c0bce40fbc8c2232fba78a927",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": 83,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "f86490670c93f49cffdeaf81932adc0fdb1f8be5e05273bd88c2768a87e6de39",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "575e02dd0f9d35c7351618b81f4d474e708e01ab219e20cdb4d83bd8f6549ddf",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "d5c4c8cfcb3eb4f3a278601c26fea99a7e6c62163d2ec766d4102d420417b089",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "d96ca113089861643d45167d5087f81ee483ed535d78d53aa9afce3d0bcaddfe",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "6a075cf99b28af13db1da3a17420874e87bc1ff6686f623b4082a23c478002b2",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "f72a93a339642d3b5990e6185bb92a49017f576df85e0d86eb29768ac58d4887",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "7126250a0fc6c59d2cab9b2aed16b5cb901ef684d0c13acbd30efc7084be93ee",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "577654c34833cc532b46cfde3d28d201011f3c5f0b3dab12a174095ddf160dda",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "498524405e73cda351c0c97a4ee9150ae19dd11cea810a07e64203607ea23d5a",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "1ec393bb3264f90ef2922ff7be671a097be74bfc6a4bc611a817054eb29d0192",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "62de34f4f2b47d9c0e635b8054f44abd0b36aba08d3c811002b98e02e7c2a642",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "7878414d981b1bce554efb2019e18b343af229e12b16d53921b341b36e6c8c8c",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "13198271fdc84230100c95a204d9b6c74f178e604ce10e4c6cc08f598e325ff5",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-geo-checker-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-geo-checker-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "dcaa687565d7b69a94c352ca9f1c4de2fb8f8a9dbb0f130021d106c7a22041b2",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "230b86e57561228af84c139bd6a9cddf4b3f68f10761ad0ccd035c6f6095ad01",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "Secret",
					"resource_name": "release-name-geo-checker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geo-checker}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-geo-checker}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "96ae0a2e02eeb7312809398cf571513369d723a69eeb385b026b0247469a83a2",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-geo-checker-test-connection}}",
					"search_line": 127,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-geo-checker}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "8a553bf4f3ebcb4cfaffe877593474bf8132b5681ee0b1d00037b0ec0a961b86",
					"line": 34,
					"resource_type": "Service",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-geo-checker}}",
					"search_line": 34,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "f965d19f224b8ba7d8a0a7dace66ce3edb3db06caf4fd41b8cdc99cc46c5edce",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "79a42ca2db5596729d0909e245f44797e3209959d88438cacf0e4e9b6e031c80",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=geo-checker has limits defined",
					"actual_value": "spec.template.spec.containers.name=geo-checker doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "19aac345fd939d032af197acc56f6d9d8c8170bcafe939ca226339f4c23ebeff",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "2ac45299d6fbe5b9f8ff99403b07e6011b4fb5819cdc6045f6acc07206a3d30c",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=geo-checker.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=geo-checker.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "49d4f278446f07a60522cf0fc766e9e6826c2a863363df63d7aa471267f92cb8",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "8c62ac37e954319f8b91c20cbe7fbe41c2b61e255cf954b3f846542e1ce1670e",
					"line": 139,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "92d4f2983488e3bb82db2241a308dc21cb9a4bb0883971efebf74d4789bc4465",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.metadata",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{geo-checker}}",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{geo-checker}}"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "0400d13e23f7a0c80d25902088c0ca08ae32404313dfc927fbdd2d96a7b7a40c",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "d3f12610996094f2775b9f421afb401c0e2ac14359de1d1f307823ea3440db9c",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.containers.name={{geo-checker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.containers.name={{geo-checker}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.containers.name={{geo-checker}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "ba4d08900d3a8ccc8e62e50e78534458279790122056d97c6425555167b15234",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "04494fc27a3236fbaf165862d12353db19b17e7202b4191f5ded9315559b2bc3",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "bb0337f4da4546f4a06afd0b40bd0e598b130be90329fa914d75a75e6c12c485",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-geo-checker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "f5f4d559444356b240bd845d3972fac509dfb0257d5e0758de714fc451bb5d2a",
					"line": 127,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "d0a42869e500d59b7540f48d68c3685fbcd06a9a1957479a19eba0e742a05763",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-geo-checker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "80ffa63cff9b8e9746f6277f95cce98bccc676dffa294d48091add55cb98a6dc",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "86f5ff7564e3dac839dc6f657929bc9e788f0ada2ffdb7a2f9ae5799cc99b052",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "70fac067683d0dee1480185e40b9f3566dbc9adab56122a39b602817647a6f74",
					"line": 138,
					"resource_type": "Pod",
					"resource_name": "release-name-geo-checker-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-geo-checker-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "1aff2c50c1339a050cd0b6f158bc90cdf0ef487662df895a57dc9bdf92822e0c",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}",
					"search_line": 83,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.name={{geo-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/geo-checker_template.yaml",
					"similarity_id": "f741fc35f4569efe27570481f4db68b44a598f68fec13fe51b76e1fa31badb5d",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-geo-checker",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-geo-checker}}.spec.template.spec.containers.env.name={{GEOIP_LICENSEKEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{geo-checker}}.env.name={{GEOIP_LICENSEKEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{geo-checker}}.env.name={{GEOIP_LICENSEKEY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
