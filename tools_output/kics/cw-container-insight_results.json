{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 168,
	"files_parsed": 1,
	"lines_parsed": 159,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 14,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 30,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:46:41.746682+02:00",
	"end": "2024-06-26T00:46:43.814104+02:00",
	"paths": [
		"templates/cw-container-insight_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "7f5191e0e19819a00e58dd4cf3ba52cee10854ffbadb4c1430a234589fbb1458",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{devdisk}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/dev/disk/' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/dev/disk/' mounted"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "6ff369ab30633d9c16bfb6daa5a1c43b34d697d8e21998b064b85a344f94ee6d",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{containerdsock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/run/containerd/containerd.sock' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/run/containerd/containerd.sock' mounted"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "0cdaa00de5b6f0e2f827fa68b95d30add890712968d20d64dcce7c294da14de1",
					"line": 162,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{sys}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys' mounted"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "3b0e4b1d894c3746a2c7db33ee570e8f2e8c6902ceab48d509d2f79c202c26e1",
					"line": 156,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{varlibdocker}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/docker' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/docker' mounted"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "131513a67514adc45b53ce251fbc096d6ed39efa4e291669271d8474cfe60c3f",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/' mounted"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "1fb37ae5eb448a35da6087eee636a35f0405c86febc5e76cfdbaf858c7a9558e",
					"line": 153,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'cw-container-insight' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "b3cde6881bfc3b35dd8f2eaa53bbd8129162621f1ab321a4183606944d8cce0b",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "d24e5140be9b31e55fe42fb99c3e28a6ec441d82786ba8e0717b73d73aa4182a",
					"line": 124,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.volumeMounts.name={{cwagentconfig}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.volumeMounts.name={{cwagentconfig}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.volumeMounts.name={{cwagentconfig}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "ebdfa48f6ba8cb8f9c6549f277cb98192b8d83406d9f66fa356af37ecd3e30f9",
					"line": 153,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": 153,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "d946310f56900a7049872921a8dcd256edfa6ac0f1d6652e7343c7614ffeee28",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{containerdsock}}.hostPath.path",
					"search_line": 159,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/containerd/containerd.sock' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/containerd/containerd.sock' with hostPath"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "468e5af6660b2ccc06be17011f10bbaf2691446741edbfeadf8e35dc13b9b72d",
					"line": 156,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{varlibdocker}}.hostPath.path",
					"search_line": 156,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/docker' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/docker' with hostPath"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "c166f866e9e168492eec9a8ed0bf1156ee19056200095b1647b7d629a9f4d38d",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": 150,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/' with hostPath"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "f32edea0719546fc88690594c3dc6016f699e8558ed566f6003936024b51beba",
					"line": 165,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{devdisk}}.hostPath.path",
					"search_line": 165,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev/disk/' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev/disk/' with hostPath"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "5351a8200af2679469560875cb5786be40f984586a077192d5179e8639a28071",
					"line": 162,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{sys}}.hostPath.path",
					"search_line": 162,
					"search_value": "",
					"expected_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'cw-container-insight' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "99fbb70fd9aa003fe92abcf68077452ad3b4163be392529a4a75fbc230d45e2a",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "4216a062ada288c78907035ce9c7bd815fca5c82506cfd07a5e4bdd24b77d4e9",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "af06dcebb2264426bcdcda2b377c329294d840d4e4e73de0bb9c50195eb076bf",
					"line": 153,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "03a868f44050ec2b13c70d7dbe81838fd59985b87f52e66f1d3dd90ca003e56b",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "1d39e2148b9092f9e7de501c333cf6c055c2e99ebadac74e021f2de84cf46848",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "9b80bbdaad037ae6f28f6cbb8e15a3f7d41c67d6acaf12e529b0dde3cd10a81d",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "128802d9312d6a6f268351d076a950aef1f6fbeab595d9f4e0d51f5b44ccaa14",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{cw-container-insight}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{cw-container-insight}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "ConfigMap",
					"resource_name": "cwagentconfig",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{cwagentconfig}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "2a0a3cfca0dcccd71de5ccd386bd6b631322d049b1e18d4c2d1368b4737a41fc",
					"line": 88,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cw-container-insights}}",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cw-container-insights}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "74ea30249ce55aec376d67c25359d275ff31d3129cb45b171804ec2893f09203",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.containers.name=cw-container-insights",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.containers.name=cw-container-insights.securityContext should be set",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.containers.name=cw-container-insights.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "ad7645c1d6740d46f83a22ae3ed61218812dc50c93c4ee672bf2da757893e59c",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{cw-container-insight}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "91d84fe6dda50f7951aeb42528bd2aea8f763b426c0e106374edf01d052d2d42",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{cw-container-insight}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "b3a1b1dbbbfc7f73352826a4ba036edacb0849818509733b69ce5bb38e66579e",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name=cw-container-insights",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cw-container-insights has a security context",
					"actual_value": "spec.template.spec.containers.name=cw-container-insights does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cw-container-insight_template.yaml",
					"similarity_id": "d1bf1dc0b3bd6895ff6211b9c82c18db0a265efbb5920ad841dcc1ccd33450a9",
					"line": 93,
					"resource_type": "DaemonSet",
					"resource_name": "cw-container-insight",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{cw-container-insight}}.spec.template.spec.containers.name={{cw-container-insights}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
