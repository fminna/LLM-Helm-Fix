{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 45,
	"files_parsed": 1,
	"lines_parsed": 44,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:20:56.659564+02:00",
	"end": "2024-06-26T01:20:58.736692+02:00",
	"paths": [
		"templates/spark-shuffle_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "849d5cf9092ad014be11c5fa57411bab26be252b1a13d62405adb0384a0dd88a",
					"line": 25,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.volumes.name={{temp-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-spark-shuffle' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/tmp/spark-local' mounted",
					"actual_value": "Resource name 'release-name-spark-shuffle' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/tmp/spark-local' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "bc2dc346e2318f5d7b601919fd960aea3d04ede17ef2e80a50f8c4a45532f49e",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "cbaf5925c47b8b0efb0e542f2ae8bbe66ac8eb2d8de8f7d36ea858070e85e98b",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "01b0fe4c8275bebb7ee416a9430d44d12f357ccaeddeb4e72ec5d1eadba87c32",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "58b091973830083bb11c5fdd7e13c80366053d2b597aa8e0e35a56efdcce4dae",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "fdc370cf09c7acd57267e1943a1b96fae4dd8784b7af38187b070e6403ef6873",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "7808e403d273e6211d34b4b74960cfb960bf93c81e93b59c42efd7e245a38e71",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "456ffe00d6ed030c4c5df04e8936796c041cf4c6d80d6371ed0ebca88fb3fb04",
					"line": 21,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "69e13d7c5e1a9d07a57a9f92f7c5af4bd53adf776e2512e3522cd59d61e20d0f",
					"line": 10,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.namespace",
					"search_line": 10,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "dc91ee627e64f49191cb58af1f3008bd49b5849e28ed588e32d247570da591d0",
					"line": 29,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "b3062dc5aae8b13dc850f097a4681f1ece3d9c8af49d3007659bae6bf07da359",
					"line": 17,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{spark-shuffle}}",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{spark-shuffle}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "645068b8f01997593b25f73bc574ba06b6eb2c1f44c8ebdbfbb669098af2eea3",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.containers.name=spark-shuffle",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.containers.name=spark-shuffle.securityContext should be set",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.containers.name=spark-shuffle.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "92aa1e04eacb57eb8fffe34e8b19f34a50a0eabbc469f16829a7d76dcd45d872",
					"line": 10,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-spark-shuffle}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "c5c8c66e27f6ff77db2659614d39e901ef6ed81bb96c5614c7b092a6226c5619",
					"line": 10,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-spark-shuffle}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "508da7e764c7d12434c684713c1ee8e7b498ca8e4d167016ab490fedead56504",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name=spark-shuffle",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spark-shuffle has a security context",
					"actual_value": "spec.template.spec.containers.name=spark-shuffle does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/spark-shuffle_template.yaml",
					"similarity_id": "6fe42bcb31e266f5c7f0113bf04e82a9bde641fe132327cbf30733119b1ac171",
					"line": 27,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-spark-shuffle",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-spark-shuffle}}.spec.template.spec.containers.name={{spark-shuffle}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
