{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 381,
	"files_parsed": 1,
	"lines_parsed": 352,
	"lines_ignored": 29,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:56:53.011022+02:00",
	"end": "2024-06-26T01:56:55.178871+02:00",
	"paths": [
		"templates/tdengine_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "7d78d97958879f03486aa6254107d083e811519373247ea5a1fc1c20c8ecd450",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}",
					"search_line": 337,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "3054dfad23051913ff5a38a6c5e09afd111afc470072a6ba3da63507868870d6",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "a771a8c6709c1f859b6bd798094af5d86e14dd03fae2c5c4c9ba5514002c30c8",
					"line": 318,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taosdata}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taosdata}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taosdata}}.readOnly is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "101e6210b41814f33b77397e581c811499c7eeb71ef7ea0480ff201ad183bd2b",
					"line": 320,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taoslog}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taoslog}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.volumeMounts.name={{tdengine-taoslog}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "834703460ee569d5e62e8f368ed63f9c33e36925bcb264475fb6d0015eabba5a",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}",
					"search_line": 337,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "524981ee4d63d485076217a10a7f50ee029a14b10cb8914cb6f253583e8f1ec8",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "3f36fcd1021290de85b4252fc2eab9a4e25189b1e344c38c119f0860330668ba",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "8776875674b653b67861218d53eb1e27b38c87b5f11c78f1253f237af4ef80a4",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "3878dc92-8e5d-47cf-9cdd-7590f71d21b9",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "f4e48914",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "bd3fb5e9673894df5336e2b494c6f982ab612a2ead6f3a20b0a0a994ee1d529e",
					"line": 362,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name=tdengine.spec.volumeClaimTemplates",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=tdengine.spec.volumeClaimTemplates has only one template with a 'ReadWriteOnce'",
					"actual_value": "metadata.name=tdengine.spec.volumeClaimTemplates has multiple templates with 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "bb2a50330862cd256ce9a07c78cb54a520980cd53b5b4ebd0831f854f9d91905",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "396d6aeff258555111fb56f8a4739a81b500553dbd83c64cb89e116ce6175deb",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "022bea78b459ccb6a504aa12d23746dbe1eb2a78fab2f49dccbb244cb5330497",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "f5c56e146eaf52a3f0507c5a17625f7d1fbfdc06a6efa7e351b578434246f4b3",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "9062d451c9af535b260cefb3214bfb234082fae4eabfc282564e384122cc6c24",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "d919591c6c2824774b2f47dc558cb44f3d68c12c7590f2b41588b7958c81889b",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "b559bcbf8786c9b64b570671f238bccce4764117aba43795649eda083b6ff1cc",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "e34b418db086a326b7bf8dacc39711f8385be1d5f278c7b943e044a6a71d1418",
					"line": 158,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{tdengine-arbitrator}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "d7d0d0da0fdaf32a1e09f1b19b8fa96bab291b3ace77b69d2f91d60f51aad8ec",
					"line": 41,
					"resource_type": "Service",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{tdengine}}",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "0f369133f0db9f9250578bcd8187c997fb1b5f84bfa90e2c7c74da573f351095",
					"line": 172,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{tdengine}}",
					"search_line": 172,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "tdengine-taoscfg",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{tdengine-taoscfg}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{tdengine-arbitrator}}",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "2b7d67bf39c1dd27dec06e4b300fc6f090a29ce6f4b3452359a2b593c42fdbce",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name=arbitrator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=arbitrator has resources defined",
					"actual_value": "spec.template.spec.containers.name=arbitrator doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "f9c48f0f884bdcb03604e4b2faf77fb2cacea0d53e0da0926a7f5162f4c5034e",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name=arbitrator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=arbitrator should have resources defined",
					"actual_value": "spec.template.spec.containers.name=arbitrator doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "58ba318bd785e69fc671d571c22efed7daff42321dfea7bb3192cf78737876ca",
					"line": 196,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "7607523c9021f567299484a970f7c678a9f358457ed0a4ec1d52c8294ba34dca",
					"line": 196,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "9087e6d71a2488f60f5f723849410d15d28da8f7dde33193c25ef0bd580e5478",
					"line": 154,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{tdengine}}",
					"actual_value": "metadata.name={{tdengine}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{tdengine}}"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "792c0f4f8acbbe69c41652c1828deea7ebdc769f562b3c7c93455cbe7149c405",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{arbitrator}}",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{arbitrator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "70708445dbf5c27e44467fe317c9c860e30f308c0d17431fe536a170e7f09e6d",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.containers.name=arbitrator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.containers.name=arbitrator.securityContext should be set",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.containers.name=arbitrator.securityContext is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "c941f5a721596a7fc11c91a1c3698887bd0dccf000f2894a9a8bfb8db0f092d2",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.containers.name={{tdengine}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.containers.name={{tdengine}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{tdengine}}.spec.containers.name={{tdengine}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "2b85c234555962c601834b307ef63c74bef4e7cd11506685c9f9fdeba4b9f9a0",
					"line": 172,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.containers.name=tdengine",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.containers.name=tdengine.securityContext should be set",
					"actual_value": "metadata.name={{tdengine}}.spec.containers.name=tdengine.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "64c3bf54ad2538c8b6f6da2b25130ea7b5cd4f57fc8da91a275104fc63e537a9",
					"line": 41,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{tdengine}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "ba58e2077eca90b0089d7045198bdcd0c20cea44cc06e45b8dedc591ca99b555",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{tdengine-arbitrator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "256b41f43a0f6f4ee762e7def4fa22da66ee1713f7448787d8b3095a234403fa",
					"line": 41,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{tdengine}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "d20543ae7e9759203cf2da187e9e1aebe17f205f6da6e6d5b23c29e1d2f97e0c",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{tdengine-arbitrator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "12f54bebb50593aeac5c85162760309f893effe28f4f1089cbbad2491b8a046f",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name=arbitrator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=arbitrator has a security context",
					"actual_value": "spec.template.spec.containers.name=arbitrator does not have a security context"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "0315dab4f2313eb32dd3dbfa989819b2d9c5515ff68635b5c6f7758a24f9e7c5",
					"line": 172,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name=tdengine",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=tdengine has a security context",
					"actual_value": "spec.template.spec.containers.name=tdengine does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "aa6a5a2a03f685d2b4f2982c084c5c0e753cae0d4b1a6899c9a829d54a8bd4b2",
					"line": 337,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}",
					"search_line": 337,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{tdengine}}.spec.template.spec.containers.name={{tdengine}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "59221f389e775a5b3ce04cd5d37369d1bf0223c0f425276e4b7b23b7160270d5",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "tdengine-arbitrator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{tdengine-arbitrator}}.spec.template.spec.containers.name={{arbitrator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "f9d72a0a1960b6624416f45f68413c820c96bba1a8dd6f714ca781832321e501",
					"line": 371,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage=100Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 100Gi"
				},
				{
					"file_name": "templates/tdengine_template.yaml",
					"similarity_id": "b5a071965548feca7654e0c22e5e8adc1dd2e59cd827011571cb03c2192f4d87",
					"line": 380,
					"resource_type": "StatefulSet",
					"resource_name": "tdengine",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{tdengine}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		}
	]
}
