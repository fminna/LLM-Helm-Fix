{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 27,
	"files_parsed": 1,
	"lines_parsed": 26,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:12:13.759063+02:00",
	"end": "2024-06-26T02:12:15.893388+02:00",
	"paths": [
		"templates/ansible_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "114ecbd1a219cc862dda011f7987aca569490131fd9ceaa99bc48cd471339dfc",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "4fd69ac793ee5b133e6ad2d91ee4ebf151d1ef8e0cbcb1043b01a41cb15b803e",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "18f671bd4bd028f452e4784c5bf0a92ea6696f0525d82f1aa204caf3e807e8fc",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "9ea990798cd771fae882c5df5551fe18dac38c5c721b780cccff7e03f81bd2cc",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "c396d65189b756082ee6f3cdbad0a1ce443bc8af341379ddf22c8271e176affb",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "8de80d99efd6975d952015632af5ffe075d637708e4867127d673b75f57b0996",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "4dd67c2881c1c06501e41390f6d4a41806c28ff60f04089a4b0d79cbb1ecbf1b",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "9e52fb9e1f460bafd760daa0716c89cd08607b8203c703606815500ce6d57373",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "2132b4bd13d6dc7bb00e2e7980309a8d0aed45e1be7c2d9406d124cdcec3c3d0",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "17292fab6d316bebaf6df62526cc19df530977a6c819db9eb867fb2d3c302bbb",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{ansible}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "ba7212490b873c12d92a9d4865fab50893d43533476314e86320bd8c3e6320b9",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ansible-centos has limits defined",
					"actual_value": "spec.template.spec.containers.name=ansible-centos doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "18743f3f5e0a22908f17e7f8ede982d370bbff35f4c533a127c3e72cc4571d41",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ansible-centos.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=ansible-centos.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "b1f41681e7c1284125e24320303b875ce8e767554eb66ba964d623d03939f52f",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "d85d52f4828a6c626d12e2bc723c59562ec154d4630cb3844aa62c2b51b88b49",
					"line": 17,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ansible-centos}}",
					"actual_value": "metadata.name={{ansible}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ansible-centos}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "aa98c4ed4e96d981ede672edcfd8187fff781e1e93495ad14324fe41c49a656c",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.containers.name=ansible-centos",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.containers.name=ansible-centos.securityContext should be set",
					"actual_value": "metadata.name={{ansible}}.spec.containers.name=ansible-centos.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "070a33696ba981beb02c6f97b4094753cc11409d311d52aadc64a54ea0feb8b5",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{ansible}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "a505bae67e3d46218bdf9841612517bf72e3b7f96f684e694084567dff9ebe2c",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{ansible}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "9d9bf03d2e20ef604bcd9b28977052af36b476e154cd717c02feb8ec8475037e",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name=ansible-centos",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ansible-centos has a security context",
					"actual_value": "spec.template.spec.containers.name=ansible-centos does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ansible_template.yaml",
					"similarity_id": "e57ff6182bd4484e72ee009b829e177dc5377e5a397f5363a554a321cdb52a43",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "ansible",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{ansible}}.spec.template.spec.containers.name={{ansible-centos}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
