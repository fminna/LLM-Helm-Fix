{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 77,
	"files_parsed": 1,
	"lines_parsed": 73,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:36:45.325349+02:00",
	"end": "2024-05-17T21:36:47.296844+02:00",
	"paths": [
		"templates/klum_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "332499cc77dd3239bde6531c273da25cff3640d625b229c1239796e2cc49f03b",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "2085b0428eb1cc4d8bb262bb0b2f3818a92995bbcb067b7e8588b14958be006a",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "1cf9740190ff4ba0a37551c702dcbd1b545b25194bb2d794b501c9ba56b35ec6",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "4893927e465e9c19a02688d277d7c9e326c14bc65703f9549f25eace4d02edff",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "5656f0b0754f281409eb8bf8ee37bfbd74b3a73f458e46c7a1b79357dd7faac2",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "fa822e44ef966e25fc24410f4b69d18eabc73901d4e2dce61a477f7e58f66694",
					"line": 56,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "313e0d72c863c06d621a9a53448b4595f7a1a2ae246ba6ba7cbef33998fc2ba6",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "d7d0d0da0fdaf32a1e09f1b19b8fa96bab291b3ace77b69d2f91d60f51aad8ec",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{klum}}",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{klum}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{klum}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "a3bfbcf465dee023275e28d0da12e0833a4181e65fcb359d277df26cb70108a0",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name=klum",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=klum has resources defined",
					"actual_value": "spec.template.spec.containers.name=klum doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "aa98ce5d75e8894c1f52ccfafa2d15cade6dbc0efb73a698391dcade3471811d",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name=klum",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=klum should have resources defined",
					"actual_value": "spec.template.spec.containers.name=klum doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "505c631214b65b6d97687ce67353efbe0f27329368cd39af2b0e03db5c970895",
					"line": 16,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "klum-cluster-admin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{klum-cluster-admin}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'klum-cluster-admin' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'klum-cluster-admin' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "97f6ee3a027ea0d36643f985a39ee28292042ddeda4f8844d3203f8a2d631020",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{klum}}.spec.template.spec.containers.name={{klum}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "ba61ef8d5c5749cc146b4aef13ed58c5fa5b9da9900ca20c695e3c00c6351346",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{klum}}",
					"actual_value": "metadata.name={{klum}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{klum}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "d620059d7f6624cef33d1a60d9a4b32523e587ea1767a997c9d9caed8691f2fc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{klum}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/klum_template.yaml",
					"similarity_id": "a30d5840ff31f8f2a757b6c6c6f0ca4649a4e2ddfa0035d2aded798d5110e427",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "klum",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{klum}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{klum}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{klum}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
