{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 116,
	"files_parsed": 1,
	"lines_parsed": 112,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:51:57.563504+02:00",
	"end": "2024-06-26T00:51:59.601187+02:00",
	"paths": [
		"templates/389ds_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "561d3e6cf6a6a324208013daf8d6275026116c82ad7763b5f7d1d9bcb532c252",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "daa19240b67d94063234d8dace5cfe79b5dbe69d6b127d169a11d994648036bf",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "091e0c85f7dc653500c29646fdc6e432e5f2270b6961a6896eab9977757594a0",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "fc6b2fb4f21f6809264042224125d62d8a3ed2548b822d957df9beaa978582b9",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "50bb117a7315078c93c6cb3be24e8a34ec1df75005ea12d01c4e06b826e62a00",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "bc30d74e4f03218209d8123e37abde9f570f2d32f3b65e9bc63b2778dd01f3a7",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "ae457840d2890351e322bfb1b086f4f7f89f62051ab6ed70a629aa150ebbb290",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "09947f50e43f66d81bfc1d7750b5b9618568edb6e3fb85c987440703e4f158f6",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{fedora389ds}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "fedora389ds-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{fedora389ds-env}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Service",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{fedora389ds}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{fedora389ds}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "24732286972a7908f53cf6049a9096c8602c4252557cd135463b787f57345f83",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=389ds has limits defined",
					"actual_value": "spec.template.spec.containers.name=389ds doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "f9dd6578f7767a522a27d3bbb48662881b794a3a43b7e90b1eb6be60486880c0",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=389ds.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=389ds.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "937eb3c6f5585d6138a2fd1cb0082c95b183054aea22017fd07399ecf1c2f90b",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "8578dcfb2d762aecf20bcbfce6f15453e9addfbc625c610bc9bae20389a19599",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.metadata",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{389ds}}",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{389ds}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "98f046d19373335dd0e68f755319f0bc4fe6ba7440bb00aaee071b9a7d084e99",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.containers.name={{389ds}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.containers.name={{389ds}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{fedora389ds}}.spec.containers.name={{389ds}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "156d66a0990c69778b72c5c8dd9c12ef1beae14b3c1a9f4ad7dc012481096c2a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{fedora389ds}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "53ab2571f16f998f2288a9fa3a22fd6b59c3ce238e22e52ded2c1b0def0830bb",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{fedora389ds}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "6abe3d37cc3e55cdf5f1df5dc6bc8c3e896ffba6eb0c40c1d39034d823ed1409",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/389ds_template.yaml",
					"similarity_id": "a49f44441a9b89ee0b5307ff979d664146b332f517d6cf6f6cbd28bb90a5841c",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "fedora389ds",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{fedora389ds}}.spec.template.spec.containers.name={{389ds}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{389ds}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{389ds}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
