{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 112,
	"files_parsed": 1,
	"lines_parsed": 101,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 12,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 32,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:24:05.233483+02:00",
	"end": "2024-05-17T22:24:07.217915+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/cloudwatch-agent_template.yaml"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "63f9b2c8b713e9b84c859d4e15a3ca5a0262f6d7963988645308fd72bef1d220",
					"line": 106,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{sys}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys' mounted",
					"actual_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys' mounted"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "c782f2f329d9858c337be504eb0644761b372956feaf2f9bd353c57a02ba9bcb",
					"line": 97,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/' mounted",
					"actual_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/' mounted"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "54f2d0296b3576c690c571f26232a795b931525c4b1b1f623e6f60301234748e",
					"line": 103,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{varlibdocker}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/docker' mounted",
					"actual_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/docker' mounted"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "2a695bdaf2c840eef8657d8d896de47a074a71ff97a0055ac50fef05f5cd8550",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{devdisk}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/dev/disk/' mounted",
					"actual_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/dev/disk/' mounted"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "ee390f97c5be1d81aa7f16223418fae7cf03734707822b36a2ded921c0f5c5df",
					"line": 100,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'cloudwatch-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "32158ea4c9fa2ae797bd4d111bead4f63cd6d23b9e14d683f2f419cff7b989c6",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "24301ab694f69b32732b55b8a00d88b58a8bb46440883afd11dd93e5cd0a8328",
					"line": 74,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.volumeMounts.name={{cwagentconfig}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.volumeMounts.name={{cwagentconfig}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.volumeMounts.name={{cwagentconfig}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "3a74757424fc20df70e5328832a0260ed7ed04d71926c13332f26bab1a76d277",
					"line": 106,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{sys}}.hostPath.path",
					"search_line": 106,
					"search_value": "",
					"expected_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys' with hostPath",
					"actual_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys' with hostPath"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "8f8c100f5e4d1ef7378fd0a6947344f892d1af4d561a2ef2214a62cf1de27b4b",
					"line": 97,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{rootfs}}.hostPath.path",
					"search_line": 97,
					"search_value": "",
					"expected_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/' with hostPath",
					"actual_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/' with hostPath"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "8fc031fd281d4e204de1b13731a766b9f5534a7e63ba52be9e3504f081379b50",
					"line": 109,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{devdisk}}.hostPath.path",
					"search_line": 109,
					"search_value": "",
					"expected_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/dev/disk/' with hostPath",
					"actual_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/dev/disk/' with hostPath"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "bf78eb67fa8651c9e54500537f83d5dfef71857f8b8855820a1dd278eb96da08",
					"line": 103,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{varlibdocker}}.hostPath.path",
					"search_line": 103,
					"search_value": "",
					"expected_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/docker' with hostPath",
					"actual_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/docker' with hostPath"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "28f4ac4e3da3458f35c510c818532f7ccbdb88d03fb6183b7f6c3e8304a46cee",
					"line": 100,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": 100,
					"search_value": "",
					"expected_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'cloudwatch-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "6840fa8d8a4064beae54696a21fca9c62e96f2abced5bb28ad8de56c6243ff16",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "7de2f2179e6058a94cf9165d6148bf9cbcd0b6e4458d3100c1df679dca4d2e73",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "12b2bed87809fa83bfc1009a7e09e04eab8a6ce0d236c23e871b5a0194270f6e",
					"line": 100,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.volumes.name={{dockersock}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "714fd8a7bb66767dcaf8cfd3da5490562d50e7f41a9e36d5c80822d14d4dc762",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "3a154f04ce23a0623cafb0efb8f5d5432a3e35304589d10cfc076f0cf696c9f2",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "71b67cbc82871adddb42f108fa33dd06567f35fd3e535870b01a814cf7c42486",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "78f1467f8c70a349b0f56edbc627b25fe9eede1058a351eabc674f7b489ba65c",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "c2ccc3eb172c12ffe36583d9a658f642251b22399e41c3a2fc3bc15213c99123",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "fbf19a45ce7cc7141a3a36a90b4334e371d80b50d802d208aa579191bd27341f",
					"line": 45,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "cwagentconfig",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{cwagentconfig}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{cloudwatch-agent}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "af3ff340304109b8daca8b8139dc4aa3d39a76959ce8badd641fb44736540659",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name=cloudwatch-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cloudwatch-agent has resources defined",
					"actual_value": "spec.template.spec.containers.name=cloudwatch-agent doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "606b9c49ba3e544764ac6c039446e927b0b411d0a3c24f008b96f9782fbb902d",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name=cloudwatch-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cloudwatch-agent should have resources defined",
					"actual_value": "spec.template.spec.containers.name=cloudwatch-agent doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "d40b55c95613dfa4751ccf4d87890bb46b1ea6834f199e66f1bfeae4d6e1812c",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "e9cf9123ea7b5817eabc92a056238a4126bc6263704f850f7dedf66d63db8700",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.metadata",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cloudwatch-agent}}",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cloudwatch-agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "79b89f246d147ecbc8998ff04732c48998789d358b73d2f890278a3a02229324",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.containers.name=cloudwatch-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.containers.name=cloudwatch-agent.securityContext should be set",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.containers.name=cloudwatch-agent.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "deb42df664b1ba6f297d186938c270bd0f0b0bd5b29a8d8a8c015935e4c83df9",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{cloudwatch-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "39c388235468ecceb410ae47a2e6a32ae0d444dace404b03aa5a5a5fed626e16",
					"line": 28,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{cloudwatch-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "17c7fa925d8b94309d7c62a1e0cf65c7efe4a8b71a6bfe3fa8ab376c0e54b1b7",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name=cloudwatch-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cloudwatch-agent has a security context",
					"actual_value": "spec.template.spec.containers.name=cloudwatch-agent does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cloudwatch-agent_template.yaml",
					"similarity_id": "91066b3bb8e163d2d641a02a501b172418485f79fca611d82807ae80fb1ff441",
					"line": 49,
					"resource_type": "DaemonSet",
					"resource_name": "cloudwatch-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{cloudwatch-agent}}.spec.template.spec.containers.name={{cloudwatch-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
