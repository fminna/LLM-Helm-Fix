{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 127,
	"files_parsed": 1,
	"lines_parsed": 124,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:45:22.779391+02:00",
	"end": "2024-05-17T21:45:24.70175+02:00",
	"paths": [
		"templates/opsgenie-marid_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "12646ac152312899e97cff14104f75f333db0bba16d9b4564ebc3bfb7d828330",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "b5711e5cf77e25f28f367c2c04bf7f559c4e6832d6d192cb000dbaca80aeb4a8",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.runAsUser=999",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "adfb39d61b7507c8cc80520880c21b10cc6a422652c23d79b75cadcefff0e64a",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "1dd5531142378422e01c54344709adde8204e60274de8e1c83c333c63877a1e1",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "fa52262b15847fe198fb2cc1495e902d6713f1c1870ba1215a89dae5e541cef2",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "44c682c8fe973ec0acfa655743c3d8df7ad8f85c9a996362f6adbfdcf4472e69",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "f6eca8d2b9f0b7080c97f3d6eab3a4ce85b14889810e6ae58aef56dbd64d1875",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "1c270a56b54d22716d0425257158c386ab2755a7c2ea8ba8b657173c9455bad2",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "9c0f01409f583f223c569b3f1579695f958c78932cd1be2987a9a027acb83574",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-opsgenie-marid}}",
					"search_line": 84,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "9b85d122c5c8f4b877a9185274e7f47797b50d2ce07cc848f8b53694cc3a3b77",
					"line": 62,
					"resource_type": "Service",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-opsgenie-marid}}",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-opsgenie-marid}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "4a0940f9e5e9bbc150b9717bde0a546d0a3ed8816aff509120d3a83f5592f062",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=opsgenie-marid has limits defined",
					"actual_value": "spec.template.spec.containers.name=opsgenie-marid doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "413b1ec2228f6ae00937699b5ce62f845ae6cc190f7c011086e578a820899c3f",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=opsgenie-marid.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=opsgenie-marid.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "6438f6a4ec1ef1002b7683d4c0139cdbee0879c07cd125f984cbba1efb412aeb",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "2452346e0b95319f471401671e10a829b2996add00689926598fb2f62cb0db49",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{opsgenie-marid}}",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{opsgenie-marid}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "bc35cb4996b5691286a49192818e210755180cc7b76c078811398a93fb7d39c4",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.containers.name={{opsgenie-marid}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.containers.name={{opsgenie-marid}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.containers.name={{opsgenie-marid}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "502569199fc1d17d51e73bad73192a69522438d08eb8d9511c700314ea5e02f0",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "66eed558fab56483a3f6002f3c5448a9ada0efdfd5d0bb0e3ef1740b0932a14b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/opsgenie-marid_template.yaml",
					"similarity_id": "0790dc17465f8cf128efda4796d4a2980a88416484c0cf91ccd8517a052b9b59",
					"line": 107,
					"resource_type": "Deployment",
					"resource_name": "release-name-opsgenie-marid",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-opsgenie-marid}}.spec.template.spec.containers.name={{opsgenie-marid}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
