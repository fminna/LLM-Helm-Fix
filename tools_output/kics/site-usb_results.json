{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:33:33.947655+02:00",
	"end": "2024-06-26T00:33:35.942482+02:00",
	"paths": [
		"templates/site-usb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "59c46b0dc9dea5950e199e9830b4f4aa036e60bcb8e150618af05be179849202",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "d4926f4db6e0ebd51157450d5c587222f3830667d802c55450286b8177de87fe",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "2d91ccd3d9c471a2dfeeae11a265d644b20337f61d6b37f94de17196cabfbefd",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "de6f79739596303f1bbd0cc3a363de643725e611d4aeac5e6154d95bd07b466a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "fde4a573eef86aaff5e52600f158a6663ab8a3f4a6274159c05b8f4c092f1848",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "447fa2aa8ec9da3e2b6ff4444884fa0abdf0d95bb2a0348bb29e1b126d9a52e9",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "1def1a11b9059ea32413cd282bfc60b59220c540c0f142089baadcd8898811ee",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "93a5a870f07191aad9ec9bdf891868f4b9e8a38b705275abc046c018c71c9816",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "f1c20e22ca2a32dd24667d5ac0ab9df95cbc940700aae5f73d77d4bea1c34911",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "c40ce3585a75e442a2a1c82b9bfe1c7569f2b72026d10c79fa19ca3c3f0d42c9",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "7d9360c4e1c854d5d11c64e254ff43cd2434ee9aa31520d059bf86d68cff6c1b",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "063fda35b70012cc273e59ebb8ac4762a7381674ffdcc1b58dfe1378f9ad8b6b",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "ccb5a0f2e94eecc586d196c28e4cb6fe189afb6e9b78c34a4e13ec0d5610e52d",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "e070a5e1bd35208ec6d91f6aca192992f95fd3edd975be2b2dbd032c67492208",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-site-usb-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-site-usb-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "c7d9be1f368d272ec910c69fd162722fd136740d90d66f608009f8b3a9cdc488",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "75b44f05db5d0e7c19df97b339e28bb835566d286a5686035e523d510a4af7e9",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-site-usb}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-site-usb-test-connection}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-site-usb}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-site-usb}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "49249d134bce88faa3ec6f6ae818ec9bc4d330f74a0d477c4642fdfb144db82f",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "8d89e82b357c87c67a444d5e11e95f04d71ae9e617f4cdb0a4cb01a0c2e78a29",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=site-usb has limits defined",
					"actual_value": "spec.template.spec.containers.name=site-usb doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "0aabb3a6e79908c1c2ee69efbcdff90ae8cd6357a5df71c89533c805d2959fa9",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "29f281afb83059338101e3b91e4ce100c699c1f18e28e0974e599d09c531afb3",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=site-usb.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=site-usb.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "09e640d47e351864fb02b2a4709a07de3ed4871efd9bd74d857b8d70f40f1197",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-site-usb is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-site-usb is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "7db867b6af3d78283d263bbe8dcb4a9c0ef40ffe58a8c1ae4b4a012171c51299",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "cffccec853f5e86651b0cba5872334babde684a9283bbff685f913cc3400456b",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "7ab071f00794601f9cad8cce07553da65e75cdd03409c061a99bee6b7ac794c2",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{site-usb}}",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{site-usb}}"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "4c83fbf631f74cff326a0faa7775face5ddf9ba95a20a5bff79ac8e3c0a3758f",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "9158fde0db8fb787ebf0aded7eead36ed6d931b76da1367d6eb066ea3ad0e7a9",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "7affcf733ae98dec4f06dcb6561f074833ae52072a33a0318e7ee1983f601005",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.containers.name={{site-usb}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.containers.name={{site-usb}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.containers.name={{site-usb}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "93d460f507ef9dbd6bb9a80281cff76f020b08f461c1d734dbaa3e51ba71266c",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "65208c3a92ea2d5e8964881a84837e871e3bb5d91f86f97530d94348507e1612",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-site-usb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "9a555efb191a727802e20ce24de2f758d6d24022e60dd4ca47827b0efa0b2b7f",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "2cc04c76cf00e74b757473fcb8349a69a6bad8b5536f67180a3886ca0bf5f244",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-site-usb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "ea7dcbf880a76116a5c7846e195010057c0aaea9d1fb065da8c4c3d86f0f022b",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "81a2e736fe9278d2468764519fcbe4e9d8616460aedd3ba76c389f64d9d907a8",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-site-usb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-site-usb}}.spec.template.spec.containers.name={{site-usb}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/site-usb_template.yaml",
					"similarity_id": "2746db3016228f71fd50c9eee4b90e506ae7e7cd946ed321911faba212ea527c",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-site-usb-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-site-usb-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
