{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 108,
	"files_parsed": 1,
	"lines_parsed": 100,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:37:43.710857+02:00",
	"end": "2024-05-17T20:37:45.599769+02:00",
	"paths": [
		"templates/qoin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "36de21bd465e5db708de5423c979420105b41e1f84b1f69b5d3322115a9e4d40",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.volumes.name={{tz-config}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'devops-be-sample-manager' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/usr/share/zoneinfo/Asia/Jakarta' mounted",
					"actual_value": "Resource name 'devops-be-sample-manager' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/usr/share/zoneinfo/Asia/Jakarta' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "c05d6c00ae4b7fc5154a8c6a0409d06410c72e34ef28378aa67e05c2acbed686",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.volumeMounts.name={{tz-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.volumeMounts.name={{tz-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.volumeMounts.name={{tz-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "8f8c100f5e4d1ef7378fd0a6947344f892d1af4d561a2ef2214a62cf1de27b4b",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.volumes.name={{tz-config}}.hostPath.path",
					"search_line": 97,
					"search_value": "",
					"expected_value": "Workload name 'devops-be-sample-manager' of kind 'Deployment' should not mount a host sensitive OS directory '/usr/share/zoneinfo/Asia/Jakarta' with hostPath",
					"actual_value": "Workload name 'devops-be-sample-manager' of kind 'Deployment' is mounting a host sensitive OS directory '/usr/share/zoneinfo/Asia/Jakarta' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "378e88cec2dbe5f91176a5708c7947ca1fc7cc8a39eb22323f3775c3917969b0",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "41bc8a37beb3d80c5c4c54b17a052e62e87050edc57e2fc07a30f501c41b4dcb",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "2309218b7d1d7c342963a5ffcdd48e875dbc0a234e96f70c0bbef0705624b811",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "a9e0b68a082b7d1911e8c355db46568462d62978b144ecb1cf814901afa03845",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "902d7a5fb840f6eb428bbd89f6133a6b56023d767e5b47ab4ff7ce5e5560caee",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "c58043b6afb509967aace9825c499b4dd4b1c8713fe0464a77a91392113d03c2",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "c58b0967287085001be30c93df9f1ff7b31530adebc0bd55a7512a9eb7b9277f",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{devops-be-sample-manager}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{devops-be-sample-manager}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "473386595735d0f2d2343487533e6805a422b250b3fe8ae8346c0bb9b0ad193e",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=devops-be-sample-manager has limits defined",
					"actual_value": "spec.template.spec.containers.name=devops-be-sample-manager doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "71c4779833d6f8f5bbb4351a053f22a197e13a2fecd36ff4967157e79c617953",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=devops-be-sample-manager.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=devops-be-sample-manager.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "ced57cc5736b71021a46d16e7e771884fd49b8a07dfc90fe526ec99c1f9fcaf1",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "1a58f0a53cbfd2774017b12e2ea86f699a78b03e74e4f760d2413c0922b5c841",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{devops-be-sample-manager}}",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{devops-be-sample-manager}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "31c7b52e0a43711813820d1a672da6cfa0afcd55a282cd0b617322f787cf862d",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.containers.name={{devops-be-sample-manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.containers.name={{devops-be-sample-manager}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.containers.name={{devops-be-sample-manager}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "7dafdb00445825f2bb412f9fd3470d032f5524015130ccfeb43295edb4b461e4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{devops-be-sample-manager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "b622be1c19d359a6f5dd7baab3f89d98de1f4c103b2b58419584417c7ca6fb31",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{devops-be-sample-manager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/qoin_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "devops-be-sample-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{devops-be-sample-manager}}.spec.template.spec.containers.name={{devops-be-sample-manager}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
