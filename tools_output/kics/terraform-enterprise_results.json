{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 165,
	"files_parsed": 1,
	"lines_parsed": 157,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-03T16:33:21.257844+02:00",
	"end": "2024-05-03T16:33:23.174389+02:00",
	"paths": [
		"templates/terraform-enterprise_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "4b346112e3e8233ef57f5196fcc576b9c1579c5a57b43949230e10db4d04fc6e",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}",
					"search_line": 135,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "a77c88f266570920929b1a7f9de1b73a1b82b88032eae2b38316b2d323e5908c",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.volumeMounts.name={{certificates}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.volumeMounts.name={{certificates}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.volumeMounts.name={{certificates}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "17a744ed46d653d5d5ccdea22556081f54b391a4704ff9944c0c0fe1e1ea263e",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}",
					"search_line": 135,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "f72794f259b7b58e1c65a6b5171e7e8a1195d32eee64ba80b5d0a2a00bc2b255",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "f32a67ca6b67514952ed7a42580b4aa8935429f80001dd40728287f4000805f4",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "e89b519671a60b5bb01e78565499cd0de141369818c903383fc3688bbcba5405",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "33e05b5c1d8d3ca2fe1e589b028849aa26b428cb3b819c5372e54cf98a75e504",
					"line": 56,
					"resource_type": "Role",
					"resource_name": "default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{default}}.rules.verbs.create",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.name=default.rules.verbs should not contain the value 'create' when metadata.name=default.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=default.rules.verbs contains the value 'create' and metadata.name=default.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Role Binding To Default Service Account",
			"query_id": "1e749bc9-fde8-471c-af0c-8254efd2dee5",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "No role nor cluster role should bind to a default service account",
			"description_id": "9879e8c2",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "9f803a9e68a435f5bd22ba819bd26a2d7923d18ee4ae9a4122f05abf2d60e5fe",
					"line": 76,
					"resource_type": "RoleBinding",
					"resource_name": "default-agents",
					"issue_type": "IncorrectValue",
					"search_key": "subjects.name=default",
					"search_line": -1,
					"search_value": "",
					"expected_value": "subjects.kind=ServiceAccount.name should not be default",
					"actual_value": "subjects.kind=ServiceAccount.name is default"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "fa4b58725bb0196f82a15f15293132bf6656429fbf07cf1a6f87be912f669798",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "2c587d73fc24746c14c895e2fcaefa06b34ec7bab9048a63f1df6002e5334a9d",
					"line": 13,
					"resource_type": "ServiceAccount",
					"resource_name": "default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{default}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{default}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{default}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "ada1a7f8ac91258fc44af4e7471593688d17249d1a71ea2bed37078e98afc747",
					"line": 83,
					"resource_type": "Service",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{default}}.namespace",
					"search_line": 14,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "d7d43356ede8b82924bd47e626921c1594c852944e24bb1b2346e689dec45e93",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{terraform-enterprise}}.namespace",
					"search_line": 99,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "9c0f01409f583f223c569b3f1579695f958c78932cd1be2987a9a027acb83574",
					"line": 84,
					"resource_type": "Service",
					"resource_name": "terraform-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{terraform-enterprise}}.namespace",
					"search_line": 84,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "ConfigMap",
					"resource_name": "terraform-enterprise-env-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{terraform-enterprise-env-config}}.namespace",
					"search_line": 30,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Secret",
					"resource_name": "terraform-enterprise-env-secrets",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{terraform-enterprise-env-secrets}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "41cb93ee5ad7c6db4ab66d8fb1f21f18990a298d75ad21bc5d08305f7438fa68",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=terraform-enterprise has limits defined",
					"actual_value": "spec.template.spec.containers.name=terraform-enterprise doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "713886030abb41d8b2ce06b9977bfe1ba8e9da06bac7f00dcb9e3c337260b1a2",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.metadata",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{terraform-enterprise}}",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{terraform-enterprise}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "7b7503c3777572593bf74f66905b2fbf249ed7395d315b99df3cf6d639359798",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.containers.name={{terraform-enterprise}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.containers.name={{terraform-enterprise}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.containers.name={{terraform-enterprise}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "8e93444a9cb6a04cb8b18af0bc380f86d2403392b15020d9401ba33c0f22b86b",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{terraform-enterprise}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "027a54d84d7256ba2b9f2c802af09434bff9fdd22404ae2a22851ba874bf9876",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}",
					"search_line": 99,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{terraform-enterprise}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "fcbaceeea4e8c4f962c02fcb4c4d3cc1cba09b27d455804ec097c9c83578536e",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}",
					"search_line": 135,
					"search_value": "",
					"expected_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/terraform-enterprise_template.yaml",
					"similarity_id": "92f882d1eb451eba0971cdc402c498ed40817e6ed5224f3d5894c3c55de3ebc2",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "terraform-enterprise",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{terraform-enterprise}}.spec.template.spec.containers.name={{terraform-enterprise}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{terraform-enterprise}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{terraform-enterprise}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
