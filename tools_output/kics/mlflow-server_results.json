{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 57,
	"files_parsed": 1,
	"lines_parsed": 55,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:23:46.853159+02:00",
	"end": "2024-05-17T23:23:48.795581+02:00",
	"paths": [
		"templates/mlflow-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "e5924fa95408443cc8997b855e5bb190251ca32f5e93c694986de293fb1a0c62",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "0bb8d307ede7551e39e8406298ae4003f90e19e898a2b2b1495e05b78938a154",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "abc901154ea103961d1c3cd7ba73b6517ba50c6871ffc823c22a63fe853691bf",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "a0fb55b385c3e993189017ddb2d52c484dbab06fcd8b6b2fe0334e1daa7814bf",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "77611aae89e6e0161d4560a0e1f507c5204f54eb1ad6636c43ecb04143091687",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "d4769cb96551b0234a5b1234f00cfa02c57aee060ea0b498f8df14742b16d959",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "d3efa576bf7486b27215010d6b549ac15d23c0f411ec73a60d5778d4a7dc64dd",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "f6dcaae34c8281ad04cfd00011079f2ccfd11c4a62a8d5656e5212200246ccb0",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "a7a95464ffaa552f4b291bb4e994c36ad420c1c650dd7a42049da8d5ab918369",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "mlflow-server-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mlflow-server-service}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mlflow-server}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "d12f47cc7d5e53370ea6e56e06d31f8b99968bca9c7e7fead4ccc6030aacf38f",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mlflow-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=mlflow-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "9207d21db7fd42aaf990314691cdb862255946d193a64ff1a04b84f4062d0337",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mlflow-server.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mlflow-server.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "32384a23e775e9fc5eb7888fd8b33654b8d007dbbaaecc19ac33e3afed7b9420",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "8fa4bbaf9a46b6a4d236f6c62f9034ba72eb286bceebbd3d92be87987ceaa278",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mlflow-server}}",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mlflow-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "e0b9a60c0df66388331ba42e9df3eb0bc00766a62c77433389e97cbb9d25bf37",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.containers.name=mlflow-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.containers.name=mlflow-server.securityContext should be set",
					"actual_value": "metadata.name={{mlflow-server}}.spec.containers.name=mlflow-server.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "862ea9d93698618101f0110015d8182cf80a9f7e950ee097c0a8c04226718f71",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mlflow-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "aa6ae155240b773c81a02d4e42ff24f9497afe32281215bb8a70f45e8e958bac",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mlflow-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "8815ffa54e0826301652f1845c8f22885d9a33dd89c53c7f387b51c5e9ed857c",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name=mlflow-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mlflow-server has a security context",
					"actual_value": "spec.template.spec.containers.name=mlflow-server does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mlflow-server_template.yaml",
					"similarity_id": "db31889444c61b483d24a0d264d580e91e3f9e7ecb178522ee7340a2135fd813",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "mlflow-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{mlflow-server}}.spec.template.spec.containers.name={{mlflow-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
