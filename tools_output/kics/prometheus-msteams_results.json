{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 106,
	"files_parsed": 1,
	"lines_parsed": 102,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:19:43.76864+02:00",
	"end": "2024-05-17T22:19:45.673635+02:00",
	"paths": [
		"templates/prometheus-msteams_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "f8e8dc51299e3082942cbbec47659bc9d4b1401bd593cc450117b5ce4c824304",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "c2e75d427e073596ff081f55d13d3b8b109b76efa399144c43230bc253bdac3a",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{card-template-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{card-template-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{card-template-volume}}.readOnly is undefined"
				},
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "089c586067f2f473057783b6763888a621771d9f762ae98880d3d37deadeef02",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "22574bfd473e07310430818a335f35d82ddcaaaeda877396777e8191a438705e",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "97f4b72d9dec79ed10fd1341c3ed49674b299a74930604f898d9277f51fea10d",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "caa39a38abb4fe064ee56d248c808459152cb0a9971856a42bedc23b49e93b6b",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "76d668ebde9fae847344f19a0d49c2ce71a09cfff1f3fe4f9f46927a7994f2a6",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "de152ae2f6257d5d71d2b098a24d0045c7f909d63f68a69faf337eb92c61d6d1",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "3e162816021edf898b55f394cd15ca2674b8c0bf6dc857ba717bfee620e2097e",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "Service",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{prometheus-msteams}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{prometheus-msteams}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "8e1990abd57522304df4a851d0f9f0e0a2b0824b2e0a5def642be0e1dea35442",
					"line": 15,
					"resource_type": "ConfigMap",
					"resource_name": "prometheus-msteams-card-template",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{prometheus-msteams-card-template}}",
					"search_line": 15,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "prometheus-msteams-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{prometheus-msteams-config}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "e0ede363cbe40233c70a70e68298ca81b1b319041878325b11bcc031e7987417",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=prometheus-msteams has limits defined",
					"actual_value": "spec.template.spec.containers.name=prometheus-msteams doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "c89d5e9d47c49f50feebc4f35341deb8d92010d2ba095c11bc8e1c1cfca70a56",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=prometheus-msteams.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=prometheus-msteams.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "6acf97bdc5c8bd7046b173d00a2db7d1d629e844118ec6b35a2aa654c436e353",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.metadata",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{prometheus-msteams}}",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{prometheus-msteams}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "3b8037e413ae4c48caf688a8cc74ace58f65e21724574e32429a28c8bf7b9aac",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.containers.name=prometheus-msteams",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.containers.name=prometheus-msteams.securityContext should be set",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.containers.name=prometheus-msteams.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "d871c88e10f156f4d11ec801ed47fdfa34696894a68f51e8efb964415120acaf",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{prometheus-msteams}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "7bb1ef96b02477cbfb1841a41d5f9b78ab91983d3591dfdfaffd4be75c4a95c6",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{prometheus-msteams}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "98f38cf41dba0d18262141e69aea2202a80a9ec7c72b38183de5b6fd5991b180",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name=prometheus-msteams",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=prometheus-msteams has a security context",
					"actual_value": "spec.template.spec.containers.name=prometheus-msteams does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/prometheus-msteams_template.yaml",
					"similarity_id": "1b36434a92076ff7e460b33610ecccf7a68788e46be54cda234d8c584e9634a3",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "prometheus-msteams",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{prometheus-msteams}}.spec.template.spec.containers.name={{prometheus-msteams}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
