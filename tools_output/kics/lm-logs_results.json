{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 196,
	"files_parsed": 1,
	"lines_parsed": 191,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:41:18.892459+02:00",
	"end": "2024-06-26T01:41:20.933247+02:00",
	"paths": [
		"templates/lm-logs_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "8dcc855d81096b5d2e4cd46ef004e87e2ff0ceedf299cc01cd418bdf25137bfd",
					"line": 192,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.volumes.name={{varlog}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-lm-logs' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/log' mounted",
					"actual_value": "Resource name 'release-name-lm-logs' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/log' mounted"
				},
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "efcb3e48285a406cc46a93d76e136e6bef7546816a4e187b63192f18babd8c64",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.volumes.name={{varlibdockercontainers}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-lm-logs' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/var/lib/docker/containers' mounted",
					"actual_value": "Resource name 'release-name-lm-logs' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/var/lib/docker/containers' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "2c92c5d643c308a2aa6178533d4b4265dc3bfd9d7dfa10a729c59e6e13f2baa1",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}",
					"search_line": 160,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "a83b501742d64426502522bc07c80f2c7e52371455287248d3ad69f4e4eaaf89",
					"line": 180,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.volumeMounts.name={{varlog}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.volumeMounts.name={{varlog}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.volumeMounts.name={{varlog}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "5ebbe43e4c9933190e6f6a9fd94c63e7c86add8137566573c56027cbb4a122d2",
					"line": 189,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.volumes.name={{varlog}}.hostPath.path",
					"search_line": 189,
					"search_value": "",
					"expected_value": "Workload name 'release-name-lm-logs' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/log' with hostPath",
					"actual_value": "Workload name 'release-name-lm-logs' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/log' with hostPath"
				},
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "7fce4d26d7f3a295ba6ac3d00a7d22d8945bcac320d3e7e0c32bfe18524bb780",
					"line": 192,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.volumes.name={{varlibdockercontainers}}.hostPath.path",
					"search_line": 192,
					"search_value": "",
					"expected_value": "Workload name 'release-name-lm-logs' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/lib/docker/containers' with hostPath",
					"actual_value": "Workload name 'release-name-lm-logs' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/lib/docker/containers' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "335201092fd23fc6c8be51aac1d59cf7272c6d8168435a1e68f87d5a07c01702",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}",
					"search_line": 160,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "f72d2334d8dd01c340f03b889278beb6ce4c5a76bb361cfa4dd1141905a973b4",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "d2f0e732a5a77c6ca3ba72c08a880a168c2ab8b7dcee8672798676506b17c4ca",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "2ffff1ed2ae6c9f379ff76a39f7378b92d3e900294bdddb910fa82f04fe0c296",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "7f5597ed96534989773aebe608fc679be17d58fe109d1f4bef7518c5a66931e7",
					"line": 156,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "ConfigMap",
					"resource_name": "lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{lm-logs}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-lm-logs}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-lm-logs}}",
					"search_line": 140,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "3b2f6d4e30bfd2fccd9561d5ecbceefed30cf84de364bde3c78a46efbabaed83",
					"line": 171,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lm-logs has CPU limits",
					"actual_value": "spec.template.spec.containers.name=lm-logs doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "0c13f91a093a49d35e4aef54ff92e564546161d4d38fc3897d7cad6198d21dde",
					"line": 152,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{lm-logs}}",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{lm-logs}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "a4f4282efc4759825bd2a3d80303e1ba32973d742e45d96d5414e0b89e08530c",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.containers.name=lm-logs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.containers.name=lm-logs.securityContext should be set",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.containers.name=lm-logs.securityContext is undefined"
				},
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "f4ff56a70bf39aae30de2d1600c2a040a0effb8a72c30455472680acd5eca542",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.containers.name={{lm-logs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.containers.name={{lm-logs}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.containers.name={{lm-logs}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "58ed6b92715cce6ed39fda1218fa78bf6fe6231e2a8d9738e5a019387b637e56",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-lm-logs}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "bc8eedc68630541b87be515cf9aa9a7420d1d70dbcc401aa94f90f12b179afb0",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-lm-logs}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "d390fbca27c05a159793b842811011747bbecce49e47a57eebc18d230e5b32a8",
					"line": 159,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name=lm-logs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lm-logs has a security context",
					"actual_value": "spec.template.spec.containers.name=lm-logs does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/lm-logs_template.yaml",
					"similarity_id": "d3e8646810e7e087496a40151e921cb30d6e344c84c573a29ea7f9ca2c068f7a",
					"line": 160,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-lm-logs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}",
					"search_line": 160,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-lm-logs}}.spec.template.spec.containers.name={{lm-logs}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
