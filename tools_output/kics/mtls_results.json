{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 170,
	"files_parsed": 1,
	"lines_parsed": 165,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:44:46.661895+02:00",
	"end": "2024-06-26T01:44:48.709756+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/mtls_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "5c7ecbb23fa9f7b6abd74105d05fb77437ea3d69f9d003e065bc0eab269af39a",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "cea94384590a5479e2f3087de62f352c1276a92e0bc21cda15108d24b35cd60d",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{persistence}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{persistence}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{persistence}}.readOnly is false"
				},
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "86955829b0616dbdcee43f5668e1d94783a35f2c83b0186bf77bf9c78b997451",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{ca-creds}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{ca-creds}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{ca-creds}}.readOnly is false"
				},
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "7e05f367c0c52ae71146cec9223b53a2f2a499ce3b111c1f5b83ed91d25a08cf",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "ebb7ef96b7dd1c4eeba464ad08e9369453b9f8f70be527c8c1d34d782ed55e41",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "e81ee474c82daa8aa7610899bd78d410040fed57a3c6ab4b445be5152b9f3aca",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "93ddc060bd94f56d758b89b682286c394cdf303fff8b1ad0e74136a48330874c",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "a44606c0bb996d257fc8eba61504f38266bf5a25e3f8df31dadf9aec28e63c28",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "29a4e03b81489033313774d3bff021a44335e17bd66ece9334fd169ae0f04463",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "6ad40428e4350b8a2427aef65d0da15641463063425540eea481442ed7b0e446",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "9f1c7b4a3da948dc42126b64f37fe90d9c2c8b37bc8eb56d6035df361f7d45f4",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mtls}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-mtls}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Service",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mtls}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-mtls-certs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-mtls-certs}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "d7e0aef5e52ba4a1e4347809f8e0377395df0e2b829a048a0713452f7048c7e9",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mtls has limits defined",
					"actual_value": "spec.template.spec.containers.name=mtls doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "79d8964785b952cd75975e1edc00b75012a483ee136a3e1e971b46acbc4b43ea",
					"line": 150,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mtls.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=mtls.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "c9084dda4642ea2ca6f234d393a5426e3dffd1fae92a695678fb339c017df88b",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "6d600a78967d655c1f468f6322469b732f9fd59ff3714ef1f7a4b7626a3df8d0",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mtls}}",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mtls}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "e68bc8febdef940358cd4e1a18766125ff7e383fdcfcb7d3352f7b4fc40563e5",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.containers.name=mtls",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.containers.name=mtls.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.containers.name=mtls.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "0bb983a003916d05eb7b4bca4fb4e89e302a2cfd8ff8701df381dc5b642a6ba4",
					"line": 22,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mtls}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "d6874fa41118f4b1d5b82254b7c2fd4d48362ac9f1a9118926c4931331a44479",
					"line": 22,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mtls}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "27f996a70ef005082b2b1a7d9e676615c90ea30d376da9f61f1e86868d98a2eb",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name=mtls",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mtls has a security context",
					"actual_value": "spec.template.spec.containers.name=mtls does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mtls_template.yaml",
					"similarity_id": "0c9dd92892d324861cc0f7cea0aebf3f310ae9e24fac1c86c7c2733dff899480",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-mtls",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mtls}}.spec.template.spec.containers.name={{mtls}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
