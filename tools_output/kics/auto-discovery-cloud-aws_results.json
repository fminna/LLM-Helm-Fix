{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 175,
	"files_parsed": 1,
	"lines_parsed": 169,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:46:16.912935+02:00",
	"end": "2024-05-17T23:46:18.844075+02:00",
	"paths": [
		"templates/auto-discovery-cloud-aws_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "3b290537593ab1dba386dc8064f9ca1ce0c99fa618e87019ff6339e404e9d721",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "37641456abfa40b9c4dfac3584cc4e945ad51a8d5b8c27d89c72f6bf2f20f408",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "e9f777eb7a7ca7833b325908cddd924ddd6b54c644fec041e6107b1292cb0bbd",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "23ff8eebdf25ed27361a0201e4823385e08d1fc5b1374578c57003faeb7348a8",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Role",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "69e13d7c5e1a9d07a57a9f92f7c5af4bd53adf776e2512e3522cd59d61e20d0f",
					"line": 10,
					"resource_type": "ServiceAccount",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": 10,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "0c98c17de0216d9d06cd49849d55474aad0aec3f6da76c5ec070cdd5282ac7ff",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "RoleBinding",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.namespace",
					"search_line": 82,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "5cd8a53af746b9db38da1528cc212d4ae0d9214d42fe5446c2dc056362c67cd3",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "43d8b59a22dbe63a3b36374d6cf4175988aa9378a42422ecfd7878c8d2d4aeaa",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{auto-discovery-cloud-aws}}",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{auto-discovery-cloud-aws}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "8e7c1a78cf71564e66289dd8808510431d5c2b837df64460824906e374bf4b69",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "f5bbc4f2d406c15faea679e3f39467882c463efb2d931b6049a25fe685120acc",
					"line": 10,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{auto-discovery-cloud-aws}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{auto-discovery-cloud-aws}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "d5db350bd89e6176d04dc9d550b7728cdc40b850e3e35820409ca08ee9c93342",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "f1fd7eb5b5544218c534f83113968928e64fcd889bab3eb51ab99a59fd4d0b58",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.env.name={{AWS_SESSION_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_SESSION_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_SESSION_TOKEN}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/auto-discovery-cloud-aws_template.yaml",
					"similarity_id": "f927dcd70f9ee24460340362a10df608c17099af1d7824c1fa53f8e8a13d72af",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "auto-discovery-cloud-aws",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{auto-discovery-cloud-aws}}.spec.template.spec.containers.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{auto-discovery-cloud-aws}}.env.name={{AWS_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
