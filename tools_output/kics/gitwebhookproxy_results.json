{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 161,
	"files_parsed": 1,
	"lines_parsed": 157,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:35:32.468843+02:00",
	"end": "2024-06-26T02:35:34.530328+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/gitwebhookproxy_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "80776f10f3d75622f052485451d47556043eff20f4f5ff5bc65a73a11aa31e89",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "8f13f2112c307699b138cb4d98ed6812d4e4ac16f3a60188c789e9da4902abaf",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "39a51ad5e65b54d18747e98fcda450b7e0a771b8ab4f5c8d13426ffba5565b34",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "14a0852a93241bab352a3bc077a80009976585d0475a061a58d5741cf5e131b2",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "2b96cf5ebf9ae2f4ba061280e288d0a43aa18b0fa00dfb12759bc5dccf1141e5",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "e773087b884cd8571d9bd49b3f41b37d5cb85a9754c2fdc3bb5f9c856e567673",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "Secret",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{gitwebhookproxy}}",
					"search_line": 14,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{gitwebhookproxy}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "Service",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{gitwebhookproxy}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{gitwebhookproxy}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "444d2b41f1cfbab07ecaa07d6c92eda6a435e422214ce242f667fc761c2f57b9",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name=gitwebhookproxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=gitwebhookproxy has resources defined",
					"actual_value": "spec.template.spec.containers.name=gitwebhookproxy doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "c62fc2b243b805a5cb282ffaf94d5707d52bf9212182eadf74e125e14beb5cba",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name=gitwebhookproxy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=gitwebhookproxy should have resources defined",
					"actual_value": "spec.template.spec.containers.name=gitwebhookproxy doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "348df374444a58773db435e0ac92c5fb698b1f66d38a3b7c2f94950365face76",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.name={{gitwebhookproxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "34fb852bedf4a35d8523c3e29d63cd110d76268b516db7c2aeb151dc33e5faae",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{gitwebhookproxy}}",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{gitwebhookproxy}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "9d6bcec82aa6203d156d4086332f100a3a4cc5e6f69f558128772842303521a9",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.containers.name={{gitwebhookproxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.containers.name={{gitwebhookproxy}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.containers.name={{gitwebhookproxy}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "a0675591686246810cf0bae2ac7d37826e5a05a9a131c0f70bbb32e7aeacb4b3",
					"line": 14,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{gitwebhookproxy}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "9b38750a98093bb8fe914067981cc33746369b93148769569f0dae5c18feee3e",
					"line": 14,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gitwebhookproxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{gitwebhookproxy}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "50ad099e2d2da47c2c71d8c36d8e42f73a531df28983df7e2df500ff857db1e7",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "gitwebhookproxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.template.spec.containers.env.name={{GWP_SECRET}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{gitwebhookproxy}}.env.name={{GWP_SECRET}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{gitwebhookproxy}}.env.name={{GWP_SECRET}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/gitwebhookproxy_template.yaml",
					"similarity_id": "a2b4ed872edac2466adc508755ebf07b2655d6c2c13b9f4d1205ccfba59a81e5",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "gitwebhookproxy",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gitwebhookproxy}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gitwebhookproxy}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{gitwebhookproxy}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		}
	]
}
