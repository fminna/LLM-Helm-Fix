{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 245,
	"files_parsed": 1,
	"lines_parsed": 238,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:34:50.139443+02:00",
	"end": "2024-06-26T03:34:52.27853+02:00",
	"paths": [
		"templates/imagepullsecrets_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "RBAC Wildcard In Rule",
			"query_id": "6b896afb-ca07-467a-b256-1a0077a1c08e",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles and ClusterRoles with wildcard RBAC permissions provide excessive rights to the Kubernetes API and should be avoided. The principle of least privilege recommends to specify only the set of needed objects and actions",
			"description_id": "ccf4e279",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "276ebe327a84d7849b044b7a1427624f9294b7c0e0913e80e31236a8f339a91b",
					"line": 36,
					"resource_type": "ClusterRole",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.rules",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.rules[0].resources should list the minimal set of needed objects or actions",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.rules[0].resources uses wildcards to specify objects or actions"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "9b76039c362787b6107cb9b86c3fc0c35a25d54a5b1fc51688a6af70ac59b9d4",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Read Secrets Permissions",
			"query_id": "b7bca5c4-1dab-4c2c-8cbe-3050b9d59b14",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles and ClusterRoles with get/watch/list RBAC permissions on Kubernetes secrets are dangerous and should be avoided. In case of compromise, attackers could abuse these roles to access sensitive data, such as passwords, tokens and keys",
			"description_id": "ca97f029",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "58dbed61b67249232014d0630f3562b8f1989ed3a30f5fbecbf267855c505769",
					"line": 47,
					"resource_type": "ClusterRole",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.rules",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.rules[1] should not be granted read access to Secrets objects",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.rules[1] is granted read access (verbs: get, list, watch, create, update, delete, patch) to Secrets objects"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "2711cfd90f72d7241f7f234c0d550f29b331272fd874cfa057db448bfb9bf970",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "ServiceAccount Allows Access Secrets",
			"query_id": "056ac60e-fe07-4acc-9b34-8e1d51716ab9",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Roles and ClusterRoles when binded, should not use get, list or watch as verbs",
			"description_id": "79619280",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "f16f4e71ed93117714923157dfdb7d94dfe6554d18db12d3e28faaa3c3f7771d",
					"line": 47,
					"resource_type": "ClusterRole",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.rules",
					"search_line": 47,
					"search_value": "",
					"expected_value": "The metadata.name={{release-name-imagepullsecrets-controller}}.rules.verbs should not contain the following verbs: [[\"get\", \"list\", \"watch\", \"create\", \"update\", \"delete\", \"patch\"]]",
					"actual_value": "The metadata.name={{release-name-imagepullsecrets-controller}}.rules.verbs contain the following verbs: [[\"get\", \"list\", \"watch\", \"create\", \"update\", \"delete\", \"patch\"]]"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "4d2a64feb3aa95bbd7708f5e4991ef9d4b0284dbe81cd8bcc7f96892f28420d3",
					"line": 93,
					"resource_type": "Role",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.namespace",
					"search_line": 93,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "7db2ca57d8d39ec6c0f97339eb9c24cb9d4d957b862672706c40d69878de263e",
					"line": 121,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.namespace",
					"search_line": 121,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "e335b40fb3daa1e1d3ddf21ed216af4213e7bf62d39edea1f0bccd27fe753438",
					"line": 146,
					"resource_type": "Service",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.namespace",
					"search_line": 146,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "8b935422372c8e1da9d1d020a8e895f1b7e0711cefb11171b8415ab6c85cb5d4",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.namespace",
					"search_line": 173,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "28ab96982b11f02ef4e259f39f4f9b30532f80d4ebb6db7095f6e8c94885fe00",
					"line": 224,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "daa39e00512de313357097d5dc0e1a9ee9b6d94f8ff318e20ae78cd2e4d572be",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.metadata",
					"search_line": 192,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{controller}}",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{controller}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "de6a7c272d301b761a6fef65a0fb8a05cc5e2baa08949ba82e4cb588043ee53e",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}",
					"search_line": 173,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "d0f7414c39b1dc18e8804a8b349b148fac84999912af53ea5ee7b5d46f5f0aee",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}",
					"search_line": 173,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/imagepullsecrets_template.yaml",
					"similarity_id": "1f08aef8583802f503d980cddb1c2a58a4d1d491dff87402480f91ec8ab5b409",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-imagepullsecrets-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}",
					"search_line": 218,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-imagepullsecrets-controller}}.spec.template.spec.containers.name={{controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
