{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 111,
	"files_parsed": 1,
	"lines_parsed": 108,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:33:50.872133+02:00",
	"end": "2024-06-26T03:33:53.005742+02:00",
	"paths": [
		"templates/demo-backend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "3abe0a30dcd1349a361cbf68673059fcc68cc690ed7a253a3a36b16b0202fc95",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "ce29e2f6b3b7ee146cd7e84f06d26e271c2eb4eeed8e0dbb1210e14e277648da",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "3daa91ee9c9150dcca36f1bcab66f81caafd786d847878a1eef58934e1f1b2b6",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "c2a6399db9fa18c5e53a2468ea128b2ac874ab40bc2b7f4372897a39206347a3",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "e46b10e5dc90dbff87af060de31e56bb58aa0a6d46bb2c5a065ad704be2054f6",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "4f5757c6d2d7b812f353525d70f7df9665eb3f041ea4cec218a502da71cf9778",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "8a6c6c58aed95b404051d11900c28efc8a605bbe71dd2302559df3558b0b25c2",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "fe75e80ac049e94ff248e516ee1ad571b8514c38fdde7727b9ca63feca36e664",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.metadata",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "49b72c150d7adb2e0e0ff4ef57cd4cd10fef7a70bf51b4e17af862b021e55b53",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.containers.name=main.securityContext should be set",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.containers.name=main.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "2cf892416e87b9c897297ec3bf8347e427c4f290a8822a0b90ede79c44a82d8c",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-demo-backend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "a0b8e9d14072b512c2dff52652e8dcc13b920c26437becedbc5496edb727f5d3",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-demo-backend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "8f3c53e34dd6da7272e929461c5a1e54d46697b225f97761c344ea09130a0bf5",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main has a security context",
					"actual_value": "spec.template.spec.containers.name=main does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/demo-backend_template.yaml",
					"similarity_id": "79de99ea5192408a5adb1717dfb8e367448594b7144e98acaa157180132e1af0",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-backend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-demo-backend}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
