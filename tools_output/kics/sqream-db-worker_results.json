{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 298,
	"files_parsed": 1,
	"lines_parsed": 290,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:11:54.81208+02:00",
	"end": "2024-05-18T00:11:56.748507+02:00",
	"paths": [
		"templates/sqream-db-worker_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "d39a412e440d1de09a09835efcf1385f0213e135c5ea4719548157f96c26f18c",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "e0abce3d3ce69921ff55c22eb3a83237ac8d7cd979222ea9b004b8d867ac2f5f",
					"line": 186,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "123d17c361c3ebd7d841fc1c796728fa01b0517dd3fe8ee7d84c92259418fb20",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{license}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{license}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{license}}.readOnly is undefined"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "8c6cea1a2caea1e5ec3cfd75f3463f47c9cd23bb7be5f5bad263c78c06b98ffc",
					"line": 204,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{sqreamd-log-properties}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{sqreamd-log-properties}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{sqreamd-log-properties}}.readOnly is undefined"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "d437cfa8b7ab3e88d3bb4c96fb80063b0017fb92126e5a7b692f19566735f387",
					"line": 202,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "f4e96fbba284f400477f4cc454fe4f8bf3f9096c9ca89f563396c8c47de2fac1",
					"line": 185,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "7f0ebded67ee6ec2c16778c192095d698cf7ae0e8ca9af77825444074b2c18e5",
					"line": 192,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "aed6ccbeba7cd72233a35457e36bfa4ec6de8e3dea671b158cf50337aa6ab7c3",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}",
					"search_line": 191,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "ca8a3676b0390f8e8a109b28a33023c265fe3fece47300da22ffc9aba8f6a256",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "d753bbb94d30b891a1979e07e7b4f014f4ce8be21045307fd7cfdb539fbabe54",
					"line": 179,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "751aefd41ef615bae9ed374e14b167035306d4ea950919823616db8eef3d7b21",
					"line": 131,
					"resource_type": "Service",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{sqream-worker-0}}",
					"search_line": 131,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "sqreamd-log-properties",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{sqreamd-log-properties}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "license",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{license}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "7f01e1975ebd68af2a3b7f7dba9e6515ca8fb27d74f88506d74a171fa8d856cf",
					"line": 197,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sqream-db-worker has CPU limits",
					"actual_value": "spec.template.spec.containers.name=sqream-db-worker doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "3e584c899f7eaa10d5dca565bc590dc8593cda54ea8866bf55a67952a969f4f9",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{sqream-db-worker}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{sqream-db-worker}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "8c285875be6bd8093ed7f3fb6d069dd168faf1e2d2bc5ad8f403a1550c11dbee",
					"line": 188,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "4a1d69997c6a71f99cf4fbed258b291497c9dfe027f068152eb8198d0ab6d448",
					"line": 175,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sqream-db-worker}}",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sqream-db-worker}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "077d48d41c3819ed01336864da11a40785e9d2a48c89233e7e9fc0b5dd04e322",
					"line": 191,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.containers.name={{sqream-db-worker}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[sqream-db-worker].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[sqream-db-worker].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "62c56a82977e85bd710865c280f76f7af7fb67db19417f91e0b9e641680c57aa",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}",
					"search_line": 160,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{sqream-worker-0}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "ddc2907a4a6bd6f24f0876b2f7bd8c6bc4c8df3a4a2aa6c5df9bc4d81a452fc1",
					"line": 117,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "nfs-temp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-temp}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-temp}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nfs-temp}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "58dac09b3e3f3c92f9e90d554a6bedfe45f7327f2b889ae4d8974fcc5aa217b6",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}",
					"search_line": 160,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{sqream-worker-0}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "7965b048ce56301e9003a74967e6048ca2017d5235d18dfdee97ba1a567e9dcb",
					"line": 117,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "nfs-temp",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nfs-temp}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{nfs-temp}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nfs-temp}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "e9c6d27029fc17889d82d236ce510f1387eacc4ea5574858395fb968402b2f1c",
					"line": 190,
					"resource_type": "Deployment",
					"resource_name": "sqream-worker-0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.template.spec.containers.name={{sqream-db-worker}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/sqream-db-worker_template.yaml",
					"similarity_id": "8685862d957f17f0a868e4e1d64aea574aec9568103eac525f566ee951bd85fb",
					"line": 141,
					"resource_type": "Service",
					"resource_name": "sqream-worker-0",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}} has a Pod port",
					"actual_value": "metadata.name={{sqream-worker-0}}.spec.ports.port={{5000}} does not have a Pod port"
				}
			]
		}
	]
}
