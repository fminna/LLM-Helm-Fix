{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 554,
	"files_parsed": 1,
	"lines_parsed": 530,
	"lines_ignored": 24,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 23,
		"INFO": 0,
		"LOW": 32,
		"MEDIUM": 34,
		"TRACE": 0
	},
	"total_counter": 89,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:29:04.300384+02:00",
	"end": "2024-05-17T22:29:06.333194+02:00",
	"paths": [
		"templates/neuvector_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "762da0fcbcde1bed839ca57a03cc7b8d8f9acbb476722de717c657ea5e89ef47",
					"line": 467,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.privileged is true"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "58f934e27f18dc9d8a8fffa82c49338a2b737afa3e0fb2e1adfad69c0c8e84f7",
					"line": 381,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "e3eb2408127ef5eb8b4db162260077f28953d6d5edaf7b9bbeb24a9b74c3068f",
					"line": 419,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{cgroup-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/sys/fs/cgroup' mounted",
					"actual_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/sys/fs/cgroup' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "3c063479e8e47423b5dfb32689f91c158540f1ae9d9e46344bde98d7cd39ad02",
					"line": 413,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "5e9543b0d7c728b4017873ce4c5742633b965efe9fa5b262d0f7888675dce4a5",
					"line": 512,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "ff78ffdf42d4a3006012327ec3ad83a23d702fadbcd2fba42e9b484e984c2a0a",
					"line": 416,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{proc-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/proc' mounted",
					"actual_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/proc' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "dca2a4e3b585b52e758277be99057e3408a47f93359373aef0f5f0bd281c1642",
					"line": 518,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{cgroup-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/sys/fs/cgroup' mounted",
					"actual_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/sys/fs/cgroup' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "6cfe6a8fe3acc8bf8d26e35f0b3c29c866d14478938993d06b380cee0817b422",
					"line": 515,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{proc-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/proc' mounted",
					"actual_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/proc' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "28193f7ef83aa2162775e10f060bb13fff43eecba61a0b8c6117579a83a109d3",
					"line": 422,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{modules-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/lib/modules' mounted",
					"actual_value": "Resource name 'neuvector-enforcer-pod' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/lib/modules' mounted"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "3a7bf71292cd555a3eca0c8e3f120e302576eddad53a77b12749bd460252d6cc",
					"line": 509,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{nv-share}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' should not have hostPath '/var/neuvector' mounted",
					"actual_value": "Resource name 'neuvector-controller-pod' of kind 'Deployment' in non kube-system namespace 'default' has a hostPath '/var/neuvector' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "8ce9bce35eefb05d14796b476e1108ee8a2eacf565c57ac18a5bc3f846f4b55b",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": 466,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "c21bd7a08bed13cb13ef0b7c4c02f42c1cfaaa9697d1b0c415474f36b0f68558",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": 380,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "c3a6d8997065045270def00d33dbfdacd693ed65036532b7fbea94baea1d0c93",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "76831eaf96c2977a0928c25294938d9624f3c78dcac6a8b484061cbdb87b9c02",
					"line": 376,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "b1e2e52db3903a893eebf1d545ce8c4d8b1149aa175c4e95a62d01ce9a402f44",
					"line": 491,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.volumeMounts.name={{nv-share}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.volumeMounts.name={{nv-share}}.readOnly is true",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.volumeMounts.name={{nv-share}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "d395e5877ca46f68182b340874d2292e7925c32a89f82b536e098af73f30dd15",
					"line": 518,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{cgroup-vol}}.hostPath.path",
					"search_line": 518,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' should not mount a host sensitive OS directory '/sys/fs/cgroup' with hostPath",
					"actual_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' is mounting a host sensitive OS directory '/sys/fs/cgroup' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "ca92748ea88e49a28da9cc46e9f8ba153bae28e1e7c24e57950f1920cbbe7687",
					"line": 422,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{modules-vol}}.hostPath.path",
					"search_line": 422,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' should not mount a host sensitive OS directory '/lib/modules' with hostPath",
					"actual_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' is mounting a host sensitive OS directory '/lib/modules' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "1358185835ef580cf486a957979df162191176c4a358c2d09d8889b43aecccbb",
					"line": 416,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{proc-vol}}.hostPath.path",
					"search_line": 416,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' should not mount a host sensitive OS directory '/proc' with hostPath",
					"actual_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' is mounting a host sensitive OS directory '/proc' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "df813bc1d0f5e85ce8fca860e8e0d02ab2f302df9bb90ca2dbabba6c32911415",
					"line": 515,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{proc-vol}}.hostPath.path",
					"search_line": 515,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' should not mount a host sensitive OS directory '/proc' with hostPath",
					"actual_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' is mounting a host sensitive OS directory '/proc' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "2407d4f95b9116276bd307bebe6e503d22bf5f47d322c4eb0b98d52028d0935c",
					"line": 512,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": 512,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "90475b910de139ada05f50fe5fb0256d636bdcb477370f5469c2085eb13c483f",
					"line": 419,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{cgroup-vol}}.hostPath.path",
					"search_line": 419,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/fs/cgroup' with hostPath",
					"actual_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/fs/cgroup' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "12544b230d2817f7099db2b38de52578138fc781154aa89eeaeeaf11969757b5",
					"line": 413,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": 413,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'neuvector-enforcer-pod' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "434c4884f2d786e336380312b48f943cebaadddd1b161548cf9b963990248316",
					"line": 509,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{nv-share}}.hostPath.path",
					"search_line": 509,
					"search_value": "",
					"expected_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' should not mount a host sensitive OS directory '/var/neuvector' with hostPath",
					"actual_value": "Workload name 'neuvector-controller-pod' of kind 'Deployment' is mounting a host sensitive OS directory '/var/neuvector' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "eaab3ec646b2f4e8574bfd3f9684d1791b29f0fa0426b8f796709478af6116ff",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": 466,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "678c543b1e025e72cd1f6b938ebe06d797e4870e85d968d5b5de40306363f81b",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "840744d995378b0b2fcc92e1fac6640c5ce221c2d6725daef93ae6469eaefc68",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": 380,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "9dc53093445b4d1b25e695141cef926e1f4bbf6258dfb6e9cd525848eaf18068",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "2dbd3ab9abd9406feba15540a74e51b578aa4fcca2b8b9e8e1f13682d8a36582",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "4947cad8df63565d196e5ca70f6a7367859e3673ff8e4e94dacf47ef6cf414ea",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "0d0edb20a73aafa97411a1cc80134a972678f53b887666ba144e0347fd8af44a",
					"line": 512,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path is '/var/run/docker.sock'"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "70749507acb85fe38deb4e56355352136b680add49ba3ec18103853b68edf838",
					"line": 413,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.volumes.name={{runtime-sock}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "75441c523ade817f67664840673dbba4466b460c10841b570c39f836dabc753c",
					"line": 378,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "dad0e4b50ee58105f7920da9f89eef2354f4a46162a6bb439a52245fe6dc2716",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "b9b7c24acdac04066a7442772d63d3c0b3a91d36f5e8869af306db49403c6674",
					"line": 464,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "9ca57a28147d917a9b5e30a643b193b9219ba9bbcbe4b6ae1f566448eb93afac",
					"line": 378,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "1e779c53739eaecbba099635e03cbd46197235b36489929e81e54e1db7b27988",
					"line": 464,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "03178c48a6444a073f8e9233e673dd795faa24ea275e3ced285ae7e03014effa",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "bad366df214332589e6faa3798177a49df9a1cc475f8dfb79240d13625f95dc0",
					"line": 464,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "b976ab3b8cb992954bb73ac06def7f309bbb8f83319a9b7176ec8e412eb1f1bf",
					"line": 378,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "d017c806f8c174cee730f6982032e613f4c8feadad0690b8422481e05925ee0e",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "6bc94e57f8c9826c42938e9491adea7766cfaa3ccebcebaf9352215bfc37c721",
					"line": 378,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "a3dafda6ab2f4d158b147afd0c839977babef8eb5fbc837098740a7dc1243972",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Role Binding To Default Service Account",
			"query_id": "1e749bc9-fde8-471c-af0c-8254efd2dee5",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "No role nor cluster role should bind to a default service account",
			"description_id": "9879e8c2",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "9f803a9e68a435f5bd22ba819bd26a2d7923d18ee4ae9a4122f05abf2d60e5fe",
					"line": 171,
					"resource_type": "RoleBinding",
					"resource_name": "neuvector-admin",
					"issue_type": "IncorrectValue",
					"search_key": "subjects.name=default",
					"search_line": -1,
					"search_value": "",
					"expected_value": "subjects.kind=ServiceAccount.name should not be default",
					"actual_value": "subjects.kind=ServiceAccount.name is default"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "a4dec2ec9f713334668ff9a2ea132bac5872551a774bce32d87a702df4a2b2c3",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "58cbcabcfa429805d549908489fa457e36d7e06584fe954d337e86e5b315afd9",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "feba800cb37d13640c9b6fbf8ef8bab2f46aa02296517951bd0ca865f49e886f",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "01a4e2692189de8934c2c7dcf51bdd99829d5ed7c6cd8e494100a90cae4f61da",
					"line": 544,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "00ba59d5f3365cb6cfc423efce70320312df2f48c1b6722c3cf2f773259ea67e",
					"line": 450,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "cafe76d7180e9c6e4e6b7885547821fcceebded14213f7ca2e83b80fcde0f0b8",
					"line": 372,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "329b8ae6d363448aaa1ef766047bec940ea9189eb28d733f4551151b1184082c",
					"line": 317,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-crd-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-crd-webhook}}.namespace",
					"search_line": 317,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "b591e14bf6f7039823b3add16bda6885f4dda5329c66cf388b439d60e094cd72",
					"line": 253,
					"resource_type": "RoleBinding",
					"resource_name": "neuvector-admin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-admin}}.namespace",
					"search_line": 253,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "7d74a6ce23eaebf698333e93d3c877fd0b51f81e8339301a4ce797f447c1969b",
					"line": 292,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-controller}}.namespace",
					"search_line": 292,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "99b712a67fbe6fcd1d7db05a7c125675026f755191441404eb5cdc76512b4861",
					"line": 429,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.namespace",
					"search_line": 429,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "6520089cef731b2727566fdbf6685c79bd7fd07a6684278229d546f1ef0490ca",
					"line": 272,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-admission-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-admission-webhook}}.namespace",
					"search_line": 272,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "eef0af26f9d8f56efe6811309e62fedbab222d35982bf220bb4543bfdde5224e",
					"line": 356,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.namespace",
					"search_line": 356,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "ced4a25f926f785dfd38d0ec86dfc94da252ad00632d85d18f20ad7e4f79f7ee",
					"line": 337,
					"resource_type": "Service",
					"resource_name": "neuvector-service-webui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-service-webui}}.namespace",
					"search_line": 337,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "16b9af5180f79ae458ecfcfa3c648ca80d9f5c68a5b0c1b67c0e13eed65379d4",
					"line": 529,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-manager-pod}}.namespace",
					"search_line": 529,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "248c14985ec2a7499c7759d80a4a703cba7c2d335efe7bbc257b72f3bee83878",
					"line": 382,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-enforcer-pod has limits defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-enforcer-pod doesn't have limits defined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "d8737f8cdaa5dcb818b8afe708fa412ab738e29076cc98864190bde2c2e5dffb",
					"line": 468,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-controller-pod has limits defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-controller-pod doesn't have limits defined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "699959c28854e9e648d7abc54c6e4cdb33c088af5f5b0312caac27dfa8657ba4",
					"line": 551,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-manager-pod has limits defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-manager-pod doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "aab28bab3fcc673e1ad03d36b9d477878f1b87ecdea8b5216a27039b72d1b879",
					"line": 551,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-manager-pod.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-manager-pod.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "a3a71ad237aba800bc50d297ed1953dc20ac18ef5468bc76f3775b6ef169e157",
					"line": 468,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-controller-pod.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-controller-pod.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "90898ea05691bf498e9555616747753f8d89934ae0c02610aea30606c9188a33",
					"line": 382,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-enforcer-pod.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-enforcer-pod.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "8c56d91735f65b39487ed4a685c46a3e9e46fe25ff00a73668d78f316b464f93",
					"line": 443,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=neuvector-controller-pod is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=neuvector-controller-pod is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "cd54ee2646f4c8289e829eb9d1aee301091dc7a07dffa83aef678005b761dd45",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "5b6b87a8ac13056c4c70e256db2e557160832cb6cb55f0111d0840c0548a4a77",
					"line": 378,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "c824baae4e8c8ae52e4f11caf1372ad78309feffa427b1c1366983423679a149",
					"line": 464,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "6ed25a84239bc95c53dd7e4d1abd5ebf15491edf11901216bd30b209b1c54805",
					"line": 368,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{neuvector-enforcer-pod}}",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{neuvector-enforcer-pod}}"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "f4e3d8f1705771838d3338ed9cc7f850e9e2162c1612b69633e13ec8dd3911f1",
					"line": 446,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{neuvector-controller-pod}}",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{neuvector-controller-pod}}"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "eebbcb597094d2434b9b8bc1eaafb7b0c98ff78b447db8c7d2d1254395fbd3ee",
					"line": 540,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{neuvector-manager-pod}}",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{neuvector-manager-pod}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "3cd553f1247f57f1612fe9d731ffd05b48815b96a7ca4e7cfec3bdd8c1672a01",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.containers.name={{neuvector-controller-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.containers.name={{neuvector-controller-pod}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.containers.name={{neuvector-controller-pod}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "dc9576eae085ccfac15f945b5006bc68158d2cb670d38c22789228f10f591333",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.containers.name=neuvector-manager-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.containers.name=neuvector-manager-pod.securityContext should be set",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.containers.name=neuvector-manager-pod.securityContext is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "ce9fad21c1be48172dea44e208771e8c96ed130a1760c53a9a79ed94f401a1d6",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.containers.name={{neuvector-enforcer-pod}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "d11f0b9ac233b0ab9ec8785e76f1cd94dffdc750565b42acd623a97877fc8ea8",
					"line": 429,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}",
					"search_line": 429,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{neuvector-controller-pod}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "4dc92b3ce19cae49537c22d99e4550d5beacfc2eb79aaddf31593c6587045def",
					"line": 529,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}",
					"search_line": 529,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{neuvector-manager-pod}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "c456ffc5a37b2f86e3835b7135d54421deb38d595e3bdd5c1e2f938fdebf8392",
					"line": 356,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}",
					"search_line": 356,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "672e4056ce2462a8f24a5153ed56570e9cd047121abccc0b38fc303d21d5796f",
					"line": 429,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}",
					"search_line": 429,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{neuvector-controller-pod}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "52240e5a2e493cdb1002d0661bc98b99d5845f29c6c90deed075880c85b363fa",
					"line": 356,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}",
					"search_line": 356,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "1d23efad98cf53ea6f5297f0095f8c04de4b74bb82dd23238cc3911da564e9ee",
					"line": 529,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}",
					"search_line": 529,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{neuvector-manager-pod}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "ae2759362bb559a9bbe0bdf5b0add21645dfad067124f1706555d6d135e5f53e",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name=neuvector-manager-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-manager-pod has a security context",
					"actual_value": "spec.template.spec.containers.name=neuvector-manager-pod does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "b5815ebad5e15215c3cc26fed4f0b61b80460b42c1f5ae69f760ffc09b15f46d",
					"line": 466,
					"resource_type": "Deployment",
					"resource_name": "neuvector-controller-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}",
					"search_line": 466,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{neuvector-controller-pod}}.spec.template.spec.containers.name={{neuvector-controller-pod}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "65d81f6b9de9d18516b8ba20b9591f769c677bc7a50dbfb40a8c1e9eecdda628",
					"line": 380,
					"resource_type": "DaemonSet",
					"resource_name": "neuvector-enforcer-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}",
					"search_line": 380,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{neuvector-enforcer-pod}}.spec.template.spec.containers.name={{neuvector-enforcer-pod}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "fd483f39c4d60f65f57399890429d43e8d865de8945662627dc03b423571d80c",
					"line": 546,
					"resource_type": "Deployment",
					"resource_name": "neuvector-manager-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{neuvector-manager-pod}}.spec.template.spec.containers.name={{neuvector-manager-pod}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "e6bddca70c94c3dc30816bcf6d35e04d152ccfeddb17ea45eda357cf6178315e",
					"line": 279,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-admission-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-admission-webhook}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-svc-admission-webhook}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-svc-admission-webhook}}.spec.ports.port={{443}} does not have a Pod port"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "38fb3be3f91950fff79976c676fd2c3586f03dee13aea2cc153af819cc81bfc4",
					"line": 345,
					"resource_type": "Service",
					"resource_name": "neuvector-service-webui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-service-webui}}.spec.ports.port={{8443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-service-webui}}.spec.ports.port={{8443}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-service-webui}}.spec.ports.port={{8443}} does not have a Pod port"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "93466dd25868dae6100e717e3bb1d069ddf892b1079d37ea37aae06cafd5b147",
					"line": 303,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18301}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18301}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18301}} does not have a Pod port"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "a1f43a98b9098786521c30c0b590f2fa58c3287e402d30f4923c82b3ee4f071e",
					"line": 300,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18300}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18300}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-svc-controller}}.spec.ports.port={{18300}} does not have a Pod port"
				},
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "d5b10f2bc7f9f2ed5e81374bdf633915c544a8ba9953da64b1ff38153a0d8403",
					"line": 324,
					"resource_type": "Service",
					"resource_name": "neuvector-svc-crd-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-svc-crd-webhook}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-svc-crd-webhook}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-svc-crd-webhook}}.spec.ports.port={{443}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/neuvector_template.yaml",
					"similarity_id": "fbdab171e6a5c83d4fa1bf1420d7a70a715bbecfef135c013eec3b3f9c7007c2",
					"line": 343,
					"resource_type": "Service",
					"resource_name": "neuvector-service-webui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-service-webui}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
