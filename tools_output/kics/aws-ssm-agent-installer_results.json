{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 60,
	"files_parsed": 1,
	"lines_parsed": 59,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:00:04.044488+02:00",
	"end": "2024-06-26T01:00:06.239542+02:00",
	"paths": [
		"templates/aws-ssm-agent-installer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "1e8cd5d0cbf95ca476aaf617a1cf2c5bae860ae127f80edcb44850145eb1cea0",
					"line": 48,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.volumes.name={{cronfile}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/etc/cron.d' mounted",
					"actual_value": "Resource name 'release-name' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/etc/cron.d' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "6930f929620ceb20aa50ad52253e6fd2ca3fc3ac55561123d756c62c5b7e158a",
					"line": 33,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.allowPrivilegeEscalation",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.allowPrivilegeEscalation should be set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.allowPrivilegeEscalation is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "829a089c0cf35072b387860d31c9dc09ca0189a4cd522eed4891f3c4cbac06a6",
					"line": 38,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.volumeMounts.name={{cronfile}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.volumeMounts.name={{cronfile}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.volumeMounts.name={{cronfile}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "2dcc1111495852d47b96f1457d780605667b1f14cec42bde9654bf44a6be6e77",
					"line": 46,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.volumes.name={{cronfile}}.hostPath.path",
					"search_line": 46,
					"search_value": "",
					"expected_value": "Workload name 'release-name' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/cron.d' with hostPath",
					"actual_value": "Workload name 'release-name' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/cron.d' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "9611b5dc4abadd9d1fee569360742e2bd6949f3703fd2b8e30e6d08ec90eaa52",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "4fefba3c960d65b73f01cd2a033d648e029883af2f0bd133c5c015cba92cfa56",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "2f2b415688414c8895848ef60587d4c23d6374bb3116042d445530214649c7bf",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "85db5309117e3ecdf03b493ad60c4c6a6b590ae04cd4950c29e714180241e96b",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "267f3796756e12fda2545b05224eadc8566d3c240689192c0f2bf0f8d5cdc368",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "49caec5191735c8eac726023f8715d336df45a5610e1fee006e4d353b9e690f2",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "fa8ab7d531c0e4104f06882cecf4d8c2f81d9c8a185c3f48f72f5d68aa266eec",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "ef3a2bc2543879fe0c32eb4cc189b3b7e8c3d3fa1261a079d4ff172339da8235",
					"line": 20,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "17292fab6d316bebaf6df62526cc19df530977a6c819db9eb867fb2d3c302bbb",
					"line": 9,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.namespace",
					"search_line": 9,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "bf5546a4392ddd892eba5fb981a5075b4642d9b921c2a34893f286b0ee553267",
					"line": 31,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ssm has limits defined",
					"actual_value": "spec.template.spec.containers.name=ssm doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "ac3f4d62255281b4dffe032f5907615c2b5e2ad92dd2a844236bac80611b6c25",
					"line": 31,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ssm.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=ssm.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "b2b550ff4d4ea19b9882a2b504bae97aa06dc6b94b6635824a19645412d636a8",
					"line": 30,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "05f5250a5c279f67a89918fe224071e86f73cce87d49bfcd78b5ba50461ff929",
					"line": 16,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ssm}}",
					"actual_value": "metadata.name={{release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ssm}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "287748607719480072378d2eff81005dbd7b069a40b3ad09d141cf8b3c68b332",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.containers.name={{ssm}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.containers.name={{ssm}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name}}.spec.containers.name={{ssm}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "d6842946118e843b51cec1f2725949005bddaebd8f46dffdd6f509cc052a88da",
					"line": 9,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "dad8e9c29874f769d72b613590036fc0f3f9cb9c310b896145c51a47a8f7bb0f",
					"line": 9,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/aws-ssm-agent-installer_template.yaml",
					"similarity_id": "c4e1e6b23b84df25b38bc3278d7628d0ebf0b60226631df7119fffb1d4bf36ee",
					"line": 32,
					"resource_type": "DaemonSet",
					"resource_name": "release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name}}.spec.template.spec.containers.name={{ssm}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
