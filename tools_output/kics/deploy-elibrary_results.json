{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 42,
	"files_parsed": 1,
	"lines_parsed": 40,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-03T16:32:00.35223+02:00",
	"end": "2024-05-03T16:32:02.251085+02:00",
	"paths": [
		"templates/deploy-elibrary_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "950afee14398360833b708429d0b6e462795742b15391da104d8a277661c2d0c",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "79a6ff4caa9593d7f97cbbf5479a90d25a42ddd7bc7557571cf707fc71fc57b1",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "387163585a55c54134ebedef2075c61f27b3076d16de5b3fcedd06fe9253f1e1",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "49b3eb6e890a99ca28a728d8fd60b6df5de96661584e8f227a5086dfd5bcc031",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "0644f6695626717759d184555c946e6bd76ceacf388bac7171cc7936735ac8e7",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "2eb541e1ea0796ee19ce63f472b815704527f3e22536ac30b79f2c1f9d9df869",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "a3029df0b9e36b45dced9dc3eb6f6fc8a0b807307a1c159be4191a4501bb0a9e",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "cfd0855c0eceb426807c3a1592918f04bd5ea9f9a4778d470b6ceeb5afe98e2f",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "264f2900a5c539e5606514308d68026ca658ca6ef13e78b95d378065bac10fe1",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-deployment}}",
					"search_line": 23,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "fb0988bc10127a3c63efbf654b53584abb7c5639703c1c192aeb92f9b938bc7b",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name=application",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=application has resources defined",
					"actual_value": "spec.template.spec.containers.name=application doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "d969f97ee352447e1a4f1e3d0662412f5f61bfa2c46fd939b5d7b58efab163df",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name=application",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=application should have resources defined",
					"actual_value": "spec.template.spec.containers.name=application doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "f21304a64b6a82e25f966ead0b92478116a0a11d49de971ddabd753d66b794d9",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{application}}",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{application}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "072816200a009839c17de8e35f54e4d4c1b2a8bdcdaf8c99326239b4335e7e60",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.containers.name=application",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.containers.name=application.securityContext should be set",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.containers.name=application.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "aaa09b3be38344468a6732ddc2d0a5fab5cfed839a7dbb44f8409616d61e9528",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "d119863d12a0b930ca09f9c079547636e4b6492484971f94c0b27e9981374f26",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "33c2b0dd1cc1f6fa39cd3dc407c80638a11b1fd7bd19bdccb866ba795575d829",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name=application",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=application has a security context",
					"actual_value": "spec.template.spec.containers.name=application does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "12ef32eaeb806006fa16982af8dabfc769062f138830f212c46cf490d3516b8b",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{application}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/deploy-elibrary_template.yaml",
					"similarity_id": "8fee9a053cb4d305ca8feceaf7bbb3aaf7fbec40b7956f699bee4e8bee34d65a",
					"line": 8,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
