{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 152,
	"files_parsed": 1,
	"lines_parsed": 145,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 27,
		"MEDIUM": 21,
		"TRACE": 0
	},
	"total_counter": 52,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:49:21.16062+02:00",
	"end": "2024-05-17T20:49:23.074532+02:00",
	"paths": [
		"templates/Wordress_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "e695329872db17211eb0313b60f42719d4cdb66087805d95d3c2a37e4cbc4556",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "d69f48148a4b28e0a5a9d2ef965824be7f87e905bd02cc1f6f330c6090658932",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "3883bd55b0199d7fafa2cc3210ca2c608d73e0e8a1c292cd449c7d8635fdbe04",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-persistent-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-persistent-storage}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.volumeMounts.name={{mysql-persistent-storage}}.readOnly is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c82344fcaa79d2bc5722bcfb93982196d9bb0d12783603819a083fcd377a17cd",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{wordpress-persistent-storage}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{wordpress-persistent-storage}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.volumeMounts.name={{wordpress-persistent-storage}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "7331092e6a9df473064befe47365bd441a197b237e988acb6b8610e3249b5151",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "bd91483b85099896b343dce292200e9efa73294d8b2a350c719e16f48d60c9a3",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "cb1012704632f06a4fc7f892207f19ff2efd0df5eeab23d0a5101b299be632cf",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "b8f19d7d482bd608ccb50051c659cef8a3932060d74732a12a62581792f7b9cf",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "d4369405d5eeff34eb30a9b8d2c3861262485b49fc2bbfe55bbd1c085d9300f4",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "1104cf1d4bfa7588c32f0554e1c2baa66c38bac788f48567de6360fb9d1458bd",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "867987744ad6983ddfc4133b16994cdb5bd2852eb5c9d814324d4acf4fb62444",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "b334d120edef08c228b3d224fa6a2436ce9c4282eb469ab9f239a6f9792429ab",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c7f5b7e7683524d635d56b6448ba192421da053adb9b0641cf37c35a7398d5b0",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "d3c34277ba8d10881e5320772fbb2561efcfeba9e43a14a3d9837aa88084192c",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "2823ee8436cecabeecf17be1df9c877997d2638e2f1b6b1b94ff6e902806007e",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c9092c0deb58004b72aa239131dc089d0ecca48c28bfec5b5f6d9ea355a2ea77",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "305793272ca31fc17fdc21af4a5ec8b5f9b344ad983962cd9a6b2e500c778e45",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "bce54bf147f6870249f55603bead9390f0e8ee5dd03d8c228491d33323a97009",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "4d831e3181ae7a534f3a01084069650baf33087ace14017b6a4e436bea0f0bfc",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "32a04acda91b0276c7ab4ac2d637c8bbf4a6b16a931c092e9c04379deb4fa657",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{wordpress}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Service",
					"resource_name": "wordpress-mysqlsvc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{wordpress-mysqlsvc}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "secret-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{secret-demo}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "88a1943e5d9fef661231d3f9373fd37bb57d19505dcda706718c8f305e1ccb22",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{wordpress}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{wordpress-mysql}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c4a072e98b0e20029d188714446d630e7d16968e0c007f147168e270552e10fe",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql has resources defined",
					"actual_value": "spec.template.spec.containers.name=mysql doesn't have resources defined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "e84d776e1345e15580aec0e00371f66ed6d81205cb0805870b386fb76ebddb2a",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "fbe54856c06de2b9a5586ec5c159ab03e2d6281381a684c1b501c25620c70150",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mysql doesn't have resources defined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "04fa088b38bb321830a8734a4e24853882169fa8ce75eb7d57e84b8e81718bf0",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress should have resources defined",
					"actual_value": "spec.template.spec.containers.name=wordpress doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c85fd0dc7b35a164fbb58e36119725db4dd0083804e311750887c06bbc429684",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "9b5a6966f8b7b71e5f2084f9465c56a2d12ad0ceaef94de638f17db583c757f5",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=wordpress is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=wordpress is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "7b2e2809cc2b306fae5ef37e9d002296ff15816456e03eda4231b54360ad6ae2",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c0114fa918b800afce61f2dc1cc93c3f727694392fa9063361b362b2455a1512",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "289a128bde771382f0afaa3a96b1ba2938f2f17b148382d8ec90c59f39f44a9c",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{wordpress}}",
					"actual_value": "metadata.name={{wordpress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{wordpress}}"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "24c1fa5aa0584747ae83978f56e7cbe34c7c25f68a46f6a7a99626961bffebee",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mysql}}",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mysql}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "e049be715e2ca6886f05304705795ff4168fc132e46975f2473c7affa31aa033",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.containers.name=mysql.securityContext should be set",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.containers.name=mysql.securityContext is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "c47b6426a05043cbcb9965df422ddf6c81bf0ece8a2db2a41a66f2a6c8d41a4a",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext should be set",
					"actual_value": "metadata.name={{wordpress}}.spec.containers.name=wordpress.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "f8c4d46ff760a33ae8bf39abb516fe43a08e8eede86588b0a57b57d4438dfd2b",
					"line": 15,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "mysql-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql-pv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{mysql-pv-claim}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "34f454cfb8b912f7345c6a2e69a4f3259291919955527f5d399e143e1af728b2",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "wp-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wp-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wp-pv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wp-pv-claim}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "7f1a9a11d3fc7edf79e1c5f390e4a1559aeaab8b8e9e9ba04a42fbc62d9bd017",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wordpress-mysql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "3166dec868b24da669c2886537dd821b743c074c0fe29b459235ce02ef48bacc",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "a659dfbd039debf765608c1098882c29fa9a1417b4070fcaf0214e19188bf3d9",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wordpress-mysql}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "9b457848e1d2ad91d4328be3b433c0cc5b3ae01d3e8c5d3368117bbfb4aedd8c",
					"line": 15,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "mysql-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{mysql-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{mysql-pv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{mysql-pv-claim}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "2e73c4592b8fde796af82bc46eac1cf87a1b422a903851ddd37fa4d60f8fec12",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wordpress}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "58a2c8d4268d9bc44a17d0022bbdecab222d067205389e2ee2baba64d630e25e",
					"line": 29,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "wp-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wp-pv-claim}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wp-pv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{wp-pv-claim}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "2d2a56a5553d004c3c392bb00ce782a1bf4b50137cc47a5f443f77cfb39348b6",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name=mysql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mysql has a security context",
					"actual_value": "spec.template.spec.containers.name=mysql does not have a security context"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "f5edf6c964bebd48a2e8a984e42ec84f31a498ba93d619a51ea35a058bf1d632",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name=wordpress",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=wordpress has a security context",
					"actual_value": "spec.template.spec.containers.name=wordpress does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "176a9a64e6a63a92ddbac7581118862b1f75758f17846a02dbd8138755ef88dc",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.name={{mysql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "35d37428e64017903aeb6c8144ac2d8e6fd8d9300681747a699d7c71c83e01d9",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{wordpress}}.spec.template.spec.containers.name={{wordpress}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "9ac574d75b0e7ec3a8394374aaeb22596769dc0a5c7453c5d52c253624a720e4",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "wordpress-mysql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress-mysql}}.spec.template.spec.containers.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{mysql}}.env.name={{MYSQL_ROOT_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "4d7d800b7664a953d9453e53c9e909adf6e1bd2e10753cfad7dcb7177a7ded0a",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.template.spec.containers.env.name={{WORDPRESS_DB_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{wordpress}}.env.name={{WORDPRESS_DB_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{wordpress}}.env.name={{WORDPRESS_DB_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/Wordress_template.yaml",
					"similarity_id": "5b0a723ca31c22aad6b512c0fff860ceab6cc2a534a2aeb70c24aff56bbb39d2",
					"line": 68,
					"resource_type": "Service",
					"resource_name": "wordpress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{wordpress}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
