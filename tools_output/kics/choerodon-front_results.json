{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 185,
	"files_parsed": 1,
	"lines_parsed": 183,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 27,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:10:32.894394+02:00",
	"end": "2024-05-17T22:10:34.881166+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/choerodon-front_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "30b7994c161a12722f16ec70f37c163cca4f1c20936fcad9deeccd2dfcf3cf78",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "561d3e6cf6a6a324208013daf8d6275026116c82ad7763b5f7d1d9bcb532c252",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "059042b0c5dd488fc60faf7bb957c69ddd574c38e2360ed7b0d34b8d2dffe477",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.volumeMounts.name={{volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.volumeMounts.name={{volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.volumeMounts.name={{volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "72916c082c991144f1f44d18fd58c66a44b444505af54947f00197e46de71a2b",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.runAsUser=101",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "32198818c1dde0f52ec13de8c684e2f79d9d619208ef3e226e70bbb6d22d4b7b",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.runAsUser=101",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "a1611eb52b2579b00e892528f3d1f516177dbbde29bb4c6b013ba70974b51aad",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "eada0030493f7a00c8adf5970c8da234c4796ed831d100209d7e0be6305fd77d",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "a78c5d6597a66183da33b724e3ec83bce339fe17acad67b19105a0e1533ba5ed",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "2a58878b325b423244a6bff75c5d59132563a2159aecbfb7e67b9e920c3056cc",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "d891f1eb0d11cd2dcff7a286769ebbfa47e63088c142c54610c71626b051f3a1",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "31e01e41acb1cf28db7844eb8bcd85ff51d01f0ea98483b285ef1be15314a282",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.namespace",
					"search_line": 30,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "4ea3e1337ca49d170eaef837e7df7175c9c272e5524a47015ce5fc87f47916ee",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=choerodon-front has CPU limits",
					"actual_value": "spec.template.spec.containers.name=choerodon-front doesn't have CPU limits"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "110a08c01ea212214f6839826fefea3adc42524b57d076220de849e74a7ad6d6",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name=server-volume",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=server-volume has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=server-volume doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "370305bec6dbf570d5303d9e3f0e903d7f8461b732a90c7207a0e3ce1fae771e",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{choerodon-front}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{choerodon-front}}.resources.requests doesn't have CPU requests"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "27e11794c2f3beeda54e72958a4c2070d875b7fe05752879a8a83ad5ead71d95",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name=server-volume",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=server-volume should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=server-volume doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "091f58268d90e594ef42d7d94f88c5f70cf4a6de1e207d8de8216f8aff425bc2",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "af84e225a2a508bbbb8797e935acf873d4d8383a7687412dc9ce366b20826770",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "f220ebf0c2ead4f0bce62713974111fe017d7da64f20ac5e24bd773e0f5793ff",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{server-volume}}",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{server-volume}}"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "f220ebf0c2ead4f0bce62713974111fe017d7da64f20ac5e24bd773e0f5793ff",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{choerodon-front}}",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{choerodon-front}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "6ee809388450876394e71faa04ed274fc2c77102cff1172274bcf20542162c51",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.containers.name={{choerodon-front}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.containers.name={{choerodon-front}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.containers.name={{choerodon-front}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "c1c649b38dbedbcea8e12482341616a213d8480b86720221e1597f6e2b320fbe",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.initContainers.name={{server-volume}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.initContainers.name={{server-volume}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.initContainers.name={{server-volume}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-choerodon-front}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-choerodon-front}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "6abe3d37cc3e55cdf5f1df5dc6bc8c3e896ffba6eb0c40c1d39034d823ed1409",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.initContainers.name={{server-volume}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/choerodon-front_template.yaml",
					"similarity_id": "54f87fb2c184ec66b1a65e6f320305607ac699d02096f26befb2f2a9df127688",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-choerodon-front",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}",
					"search_line": 97,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-choerodon-front}}.spec.template.spec.containers.name={{choerodon-front}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
