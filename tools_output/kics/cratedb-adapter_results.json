{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 99,
	"files_parsed": 1,
	"lines_parsed": 96,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:59:26.998088+02:00",
	"end": "2024-06-26T01:59:29.047169+02:00",
	"paths": [
		"templates/cratedb-adapter_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "f1848f44a50e59e62c6f9b0c461960c88954f8732572905b5aae4cf212297709",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "5dea5fd02c4169353a16cd5b65359fa69e91d433b5da2b42c1ca81376a22de4d",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.volumeMounts.name={{release-name-cratedb-adapter-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.volumeMounts.name={{release-name-cratedb-adapter-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.volumeMounts.name={{release-name-cratedb-adapter-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "86794cdfb218461a29db36fbb9ea9a0871ad4a988d59ed721b6a758f27840812",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "3dfed04c258d7d115e16b8134c605c21c5bfd8ce72dd5c3c5d1041d852e2e68d",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "effee6d1dd6c54e197ca64f4be810ba5cffa0fb19fc8c63aee99e3a713932c89",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "00bb8d656185cab09a08866b746d594a3e946ee4a9c65c5328994f2aea572594",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "7c8654e476de1956d4cea1da4d3e4b3e10d0e2cf2d50beaa09b1cb2ad4f5c896",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "0ffcbd5950e3dc0de56b0ec9782a4dac0e9e9121c3e860c74c1a3976beee785b",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "2732400311b5ae8b0adb106914839d0c4f00b0c7851bbbb61179667d4352d094",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-cratedb-adapter-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cratedb-adapter-config}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "6feb64159adfaa35819a55c3918f57b6da70382d77117cb187b05d3cbe3125a5",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.namespace",
					"search_line": 49,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "release-name-cratedb-adapter-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cratedb-adapter-service}}.namespace",
					"search_line": 26,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "6fa208a23ed998a28291a662e82df3f25580901378a45d7098b04a290cadd6d3",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cratedb-adapter has limits defined",
					"actual_value": "spec.template.spec.containers.name=cratedb-adapter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "7e350da9967033c3c53b0bd4c8cf6917879f2e6432da5ea5bee4f405926fcb04",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cratedb-adapter.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=cratedb-adapter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "e004c99c97b40e3ff1a13c93abb313be9e7de0ff48148c225a8959b8f1f16334",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "41da9e1223f42f4c9bfff3afb1cf8957babea3e763502b22e3e4b18d647c5c69",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cratedb-adapter}}",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cratedb-adapter}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "40d20ec2fddd78015a214de9d825147bf10cbff9fabcd3d56552eccb37e05afa",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.containers.name=cratedb-adapter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.containers.name=cratedb-adapter.securityContext should be set",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.containers.name=cratedb-adapter.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "a4d8464600cb9e2008e534d6ae0a3c5bfdf4908f806d48d5e55ab2c0241c177e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "f8dae1269652e6ecc85e101c80dc2d983c8c3d64521eaf1733c24f149d65013e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "b1ae2f298cad3bd901dcac634b2216e9ff320de61523fe721cd588589600805c",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name=cratedb-adapter",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cratedb-adapter has a security context",
					"actual_value": "spec.template.spec.containers.name=cratedb-adapter does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cratedb-adapter_template.yaml",
					"similarity_id": "53de92f23ef0af25218576110145775d565ba6901ac65e00116a8dacc3f25574",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-cratedb-adapter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cratedb-adapter}}.spec.template.spec.containers.name={{cratedb-adapter}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
