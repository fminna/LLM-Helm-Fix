{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 186,
	"files_parsed": 1,
	"lines_parsed": 170,
	"lines_ignored": 16,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:53:02.769221+02:00",
	"end": "2024-06-26T01:53:04.932086+02:00",
	"paths": [
		"templates/influxdb2_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "a4c1c886ef655e2f7929e593921281f2fdd51e3db6f5c3cd17f8d94cc553e593",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "1d646fc11e02424ccdc8d22208398bb8d19c6b13c2b0480bce226e69b7edafa9",
					"line": 181,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "6c8ae6065f76a817de099f20640527d33d113723b5b79fdc9a7b55f4ecc8d3d6",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "43428112184f5b97dcc9f1a8ddf316af4798b26b16dbbd9b803512e5f8e9b237",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "d51a6593065a31890544d78c4c197735acd8143abf1f1ede8da9b07dc003a2df",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "d06c1b6d4f858084521085db84e6b891c7612bc5a36d6b1b1d2e4cf21703358b",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "5f25449bc4493879120c64b8bdc7d0d9cf1189924502365adab8dbc76c885b15",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "d665008a9d8c12bde9a5ddeac70cb9a5e06023dc288b10dc86436649644cc2ae",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "c1be9e99c13c257f20983af3dc9be3d346f4e9f853ae57ce54403d40615207f2",
					"line": 112,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "cd056504dcccdf788dd9dea8fb840520ae19d1c9cd7b93c84491d36fa0a7bb02",
					"line": 42,
					"resource_type": "Secret",
					"resource_name": "release-name-influxdb2-auth",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-influxdb2-auth}}",
					"search_line": 42,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "4d2a64feb3aa95bbd7708f5e4991ef9d4b0284dbe81cd8bcc7f96892f28420d3",
					"line": 93,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-influxdb2}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-influxdb2}}",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "c60cc3aff40f4972fbfd7a093e1cf2d86ae004d86bb755e4d03cbb86834d79cc",
					"line": 71,
					"resource_type": "Service",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-influxdb2}}",
					"search_line": 71,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "74297616e682bcdcf047969b30fe2ecc580f5cef2ca0eb21f45440875c0bfcbf",
					"line": 184,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=influxdb2 has limits defined",
					"actual_value": "spec.template.spec.containers.name=influxdb2 doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "86b59695d50eaaf546663973a4e812cf5a271133cbf9e0dc96a56d1080af133f",
					"line": 184,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=influxdb2.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=influxdb2.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "b05b022612dc2961eecd43471fa8b571ecd480ca0c433f4a30ea76b519b5e956",
					"line": 121,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "5564f53d2482565e9ca8bc8a4d46af9e59b39d3bcb94912e23b367bc99e28f11",
					"line": 108,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{influxdb2}}",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{influxdb2}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "5ef9c41dd5147c9030bb17b4a06b48d1fde7b06edf2015c1426fb4aba7040192",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.containers.name=influxdb2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.containers.name=influxdb2.securityContext should be set",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.containers.name=influxdb2.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "91c8abe3487095ff600bc92ac7c89c01636f53fd3079b2af2b098a2cd67c9ee8",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-influxdb2}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "e57e48d3ffdb928f5b0a16a0c737ed4a76ca600becf435430fee0064cdb6503b",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-influxdb2}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "cca38881e81cb89fe8e3f630d263f21688f4432c2992de99a3c8c4d0e0626d63",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name=influxdb2",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=influxdb2 has a security context",
					"actual_value": "spec.template.spec.containers.name=influxdb2 does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "85222d2503827d980c54ce20d2942bd5c665396ee2e695a8879108213556d20a",
					"line": 119,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.name={{influxdb2}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "ad1739044bc12fc99d9831fff8ff900b27daef0244efb0364119f1645e0911e5",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.env.name={{DOCKER_INFLUXDB_INIT_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{influxdb2}}.env.name={{DOCKER_INFLUXDB_INIT_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{influxdb2}}.env.name={{DOCKER_INFLUXDB_INIT_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/influxdb2_template.yaml",
					"similarity_id": "ed9676e0e73455f2ce9c7e5ebc2e53c9c41d26b001b8c134b2d9e16514504208",
					"line": 152,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-influxdb2",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-influxdb2}}.spec.template.spec.containers.env.name={{DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{influxdb2}}.env.name={{DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{influxdb2}}.env.name={{DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
