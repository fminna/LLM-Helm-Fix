{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 190,
	"files_parsed": 1,
	"lines_parsed": 183,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:57:51.12064+02:00",
	"end": "2024-06-26T01:57:53.192633+02:00",
	"paths": [
		"templates/kubegems-installer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "6b186aa4d3f7e74c54c72afcc6d0dfb53ddc21de607604c2398f0afccd0eb6f7",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "cde5ad409d2c97558649ae428844291e4073a86c28852988083d90fc4330fea1",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "e082962674e7548f5791aae701b591a6ebe81ce7d871cd143c1faf59ea43cc99",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "820b3d7cb30cb015cc05ca2fad7bd76e5f98cace5ca48de255ef2bbf5439db85",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "dc6fc05c084f18154d757055afede49a04159f30a57132a4b7d8ee171320fb71",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": 164,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "052a30a2d1b5ce90a7c4a6fd4b9ed3f268863251f30dae961a1b155033d24974",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "7748765fb5c3e2678871bd20e2cc05180c3eac20d518b7a8cb0ab5c4f517b29e",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "c8a05595757660b4148a2a00d5a44d445ddea2ab81777d39cd1f6227ababcd9e",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "4d2a64feb3aa95bbd7708f5e4991ef9d4b0284dbe81cd8bcc7f96892f28420d3",
					"line": 93,
					"resource_type": "Service",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.namespace",
					"search_line": 93,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Secret",
					"resource_name": "plugin-repository-kubegems",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{plugin-repository-kubegems}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "d83478525ad9b105d7b4e1101708e440c27ee3347bc2f1be0d217f5416465cda",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.namespace",
					"search_line": 124,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "94cd5fe034614f334f71a6afbf680c9bdae3c7b13c45d07840bd93a84a11cc9a",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=installer has CPU limits",
					"actual_value": "spec.template.spec.containers.name=installer doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "072549030cb66fdfc4a6598793bf164a7d8325539ec469bb17fe10ac0cc691d5",
					"line": 164,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{installer}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{installer}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "d9d9d736dfe1e94d704ebc74338c9e235193d26ef59156ce8a5e353dd648f89d",
					"line": 82,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-kubegems-installer' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'release-name-kubegems-installer' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "1ed3eebe573d0882fc399aa5a18d26fbbf4423fd4dc5b2198945d9dc5bf61316",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "1b8c427a665d3f68fffca2b33d87277831d188444a2eee6699c404145a7fa0f6",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{installer}}",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{installer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "fb58b446c84e1629629e14df2ba376c2e950aebb093047b5247cd1b83e135e1f",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.containers.name=installer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.containers.name=installer.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.containers.name=installer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "936891fcc0cc95c1ee83ea7c806b95cfb71960003b468bca91baecf1d2547aff",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}",
					"search_line": 124,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kubegems-installer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "17c671ba680b67e4c232a2e085ee5c076dbe5c8c0216792dfdedec817ca59bb5",
					"line": 124,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}",
					"search_line": 124,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kubegems-installer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "3553007255189a9558638378614e6179f70569b9b10732e9bf63ad2e3d83dda9",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name=installer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=installer has a security context",
					"actual_value": "spec.template.spec.containers.name=installer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kubegems-installer_template.yaml",
					"similarity_id": "5b66b513f0f5b10c2c03f8bba0892ad67432dd33b9b7e705be7bbe43d9c4fa79",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "release-name-kubegems-installer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kubegems-installer}}.spec.template.spec.containers.name={{installer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
