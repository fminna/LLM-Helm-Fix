{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 217,
	"files_parsed": 1,
	"lines_parsed": 213,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:20:38.494715+02:00",
	"end": "2024-06-26T03:20:40.577757+02:00",
	"paths": [
		"templates/aws-node-termination-handler_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "0296229d8c9cc9c7637b8dd16affdc3b19ace559752c0cd2aece9f3b2b775613",
					"line": 203,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.volumes.name={{uptime}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-aws-node-termination-handler' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/proc/uptime' mounted",
					"actual_value": "Resource name 'release-name-aws-node-termination-handler' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/proc/uptime' mounted"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "74f3a543c2e9c5d09087dd85808e71275f4ae4a2206c3ffc572fb1f89df37fe0",
					"line": 203,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.volumes.name={{uptime}}.hostPath.path",
					"search_line": 203,
					"search_value": "",
					"expected_value": "Workload name 'release-name-aws-node-termination-handler' of kind 'DaemonSet' should not mount a host sensitive OS directory '/proc/uptime' with hostPath",
					"actual_value": "Workload name 'release-name-aws-node-termination-handler' of kind 'DaemonSet' is mounting a host sensitive OS directory '/proc/uptime' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "1c986ada80e0841a5831a4d83b61bc013d502646b72dfe5e947b61bd460fe971",
					"line": 132,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "1736a25d60c7d47a88928e295028fcae67ee29df2f01b4d2d7c518bb32482284",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "873225c0229b6f04c87f45d9f49e1cfc11ebe45cdb39f72b16625cc7c1731384",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "c94c08bf2ae62b6c15fc1787a35ab64604f0a9bf0dd7e201d0ccc7fba3c787cb",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "65a8dfc9dd62c5d99f946b5a456ec4ab4bb6f871a3986b9a7b6fd81f03fcc22d",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "91fcfd84b9335364011a46c7bd432d9486b69881e2bfab07e57242e5090db7c1",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "092c693dfd119104ec9c8b7d71a116b8a8fd0af1cd2a629c0489a1d96221a8c7",
					"line": 118,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "3753a4e462cc6b49de22b546ed0674249ea7afda8c03abf450c18305f6d1ec5a",
					"line": 123,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.namespace",
					"search_line": 90,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "d2759d1c20a8d2a6a042ed31d7f8c5f53951997e52aeaf6d7a4acff4d349ea13",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name=aws-node-termination-handler",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=aws-node-termination-handler has resources defined",
					"actual_value": "spec.template.spec.containers.name=aws-node-termination-handler doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "866e4c2bd2a2b1f481f331cf68aa7a8ab58c8c46a9cc9ac3cda37ccde7b6eef6",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name=aws-node-termination-handler",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=aws-node-termination-handler should have resources defined",
					"actual_value": "spec.template.spec.containers.name=aws-node-termination-handler doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "7688cd7c89970f88b1a0f524b44af4482e15fc5cdf723dac7e77ec95be7d07ce",
					"line": 134,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.spec.containers.name={{aws-node-termination-handler}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "495be1b0d37fa166e2315f684070021b8f334069ba8b63b2ac915e64c63ccec5",
					"line": 111,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{aws-node-termination-handler}}",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{aws-node-termination-handler}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "49e6a3632836b1f80c10f95c5f7992dcd20b518065a81f1366ae1570f7f7608d",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}.spec.containers.name={{aws-node-termination-handler}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.containers.name={{aws-node-termination-handler}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}}.spec.containers.name={{aws-node-termination-handler}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "df594d060a64cd3e7ad59e9194a69d4cc5392af813bb3b776cd57a63f8f27385",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/aws-node-termination-handler_template.yaml",
					"similarity_id": "dbfc00663ffe2b3cc2310bd90afa5703561912ca9dd527bbb30c0186a0b04bf0",
					"line": 90,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-aws-node-termination-handler",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-aws-node-termination-handler}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-aws-node-termination-handler}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-aws-node-termination-handler}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
