{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 87,
	"files_parsed": 1,
	"lines_parsed": 85,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:21:59.521424+02:00",
	"end": "2024-06-26T01:22:01.737107+02:00",
	"paths": [
		"templates/controller_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "12d8f7cfb2c402a842cc90288b0f0dc10614e90e20e92e75d003b71a1bdf2316",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "d84652a3696ff9222b5f8da246d104d03b40b248dedc0b8bf29ebcbae8fd80e1",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.securityContext.runAsUser=5000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "23e0d01dc1804d2a60cdcb5c9f9855f3711d2f86027febb34ed3b85b5d5f6a8e",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "e5549742612477bb32fb90a15c81266bdf3cb8c50f917bb2c6608733c20063e2",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "25f1f9be5ed5651ec37cb4e8ead7fec64e0ec4ad68eb59b959aaaaa6a9d543d1",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "09af184e47e3d3e3099de8e6a40c3d9771682d02771dde8bd047cfc94705ac35",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-controller}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "e09c083f8e506b27e383a361ab315c6381ef93ad7e2295b9db4c1988ba39f090",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-controller}}",
					"search_line": 27,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "a17dc0af5d2f320530b3bb307874429059b1389f8c23793a95be08654cdee913",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "a8694f7e59c1b0df7dbfc3520fe92415ce768d78845812d7fabb2df8fe382559",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-controller}}",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-controller}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "4dbe6f64c657d55af181a54bedd28307b48a6d209f7756e253919042a1965512",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.containers.name=release-name-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.containers.name=release-name-controller.securityContext should be set",
					"actual_value": "metadata.name={{release-name-controller}}.spec.containers.name=release-name-controller.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "5a47e566b1f863818a56ce9711cedb7fe72608a9b7b0eda0a0b2f714c674b259",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "5cc864d600dba27cc6b7d125ad98368cf5df77647153c9e6ec5db4064186d5a3",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "6fdc436af79ca720cadc0e88f2ea63be2bd8906baf818f14e782c9e644bed2c6",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name=release-name-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-controller has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-controller does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "de6ab47bc3e973d468a5d4e9fcf3c3375cdd181686afabfee6a332acfd7a5742",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-controller}}.spec.template.spec.containers.name={{release-name-controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/controller_template.yaml",
					"similarity_id": "04d431ac192aef04b2f60e3a81ec7fb8a43fb97a801528bac0ed2456bf8fa7c4",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-controller}}.spec.template.spec.containers.env.name={{ROOKOUT_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{release-name-controller}}.env.name={{ROOKOUT_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{release-name-controller}}.env.name={{ROOKOUT_TOKEN}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
