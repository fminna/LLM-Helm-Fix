{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 261,
	"files_parsed": 1,
	"lines_parsed": 239,
	"lines_ignored": 22,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 15,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:22:04.221638+02:00",
	"end": "2024-05-17T23:22:06.183136+02:00",
	"paths": [
		"templates/karb_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "5d6af2a06c7fa5310261524b5d559da3ace5dce83e44bec183f0bb7c55371660",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "7dc877e1f95f3072404688b7f3754c56a715542bd89a9cf9283d5b76f5ee1d90",
					"line": 145,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "081d741de99b7b2305efac4868cb1277628b7f642530f37ddc0741045c4716e4",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-karb}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "RoleBinding",
					"resource_name": "karb-rolebinding-namespaced",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{karb-rolebinding-namespaced}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "karb-operator-account",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{karb-operator-account}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Service",
					"resource_name": "karb-admission-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{karb-admission-svc}}.namespace",
					"search_line": 86,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "18bd6d5b1eb240c27528b15e6a79fbde6d5dbed88a41f781c9a219b06448cff8",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-karb}}.namespace",
					"search_line": 120,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "b328e955de1487ff68819ef14f7aae608a075f08c7af77f3f24b59e8e35fa90a",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=karb has limits defined",
					"actual_value": "spec.template.spec.containers.name=karb doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "4f2b82f221dfff844930f14a22570d50f5cc198bf825b7da63c801b3bc64c360",
					"line": 178,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=karb.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=karb.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "ede2085b9a57caff19c55e3b05a518e5843e46ce2fc5e0539644cf846311b80b",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-karb}}.spec.template.spec.containers.name={{karb}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "2a9f599697d6b9020f50f89018473046da180d18ec840c77cf83bc4f30f3851e",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{karb}}",
					"actual_value": "metadata.name={{release-name-karb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{karb}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "6cd11ce5443cffb4e84d4a3d8892164be91470d857cfbf9b11bd780e827fc2fc",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-karb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "63adb6b6eea2210a8d8c431995807d5cbf0d67c1ffc657713cf1aad30a4ce195",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-karb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-karb}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-karb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-karb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "d16476479b95d64552368b0860a5cd1917cd9c8b2c08f83ccb423ecaeb9e4aad",
					"line": 98,
					"resource_type": "Service",
					"resource_name": "karb-admission-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{karb-admission-svc}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{karb-admission-svc}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{karb-admission-svc}}.spec.ports.port={{443}} does not have a Pod port"
				},
				{
					"file_name": "templates/karb_template.yaml",
					"similarity_id": "0817917be213bac876d79cda553d135596ce7bb43e3251209f1aa5251d5e59dd",
					"line": 101,
					"resource_type": "Service",
					"resource_name": "karb-admission-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{karb-admission-svc}}.spec.ports.port={{9090}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{karb-admission-svc}}.spec.ports.port={{9090}} has a Pod port",
					"actual_value": "metadata.name={{karb-admission-svc}}.spec.ports.port={{9090}} does not have a Pod port"
				}
			]
		}
	]
}
