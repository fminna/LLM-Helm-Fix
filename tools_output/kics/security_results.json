{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 104,
	"files_parsed": 1,
	"lines_parsed": 100,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:50:56.950378+02:00",
	"end": "2024-06-26T01:50:59.075036+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/security_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "594aa1448f72971dd93044328dc673e7c91ac9ff1dbb71ce742530d752c0462c",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "96425668628c6989f3f8674041799edfd6213d836f8cca49fd919d4962761bb1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "52e55d61b502e1c3871812eacb66c4eeb995f650f775a6763de29bbf40893d1c",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "5975e19450ffa0e1dbf68ad6a75abcb94a1f0643e3fb9d118e8ee422d0962af1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "429598121d413c25a947614ead25e25496f338e725d7c0ff453559f599f76c4d",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "4e28fcddca7124cce874bf07c31600619fde1737a8b99f7bb323e27a9a0b0689",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "c606850b710b227a96dc901ddae0c1876db95ddcc3c32e5b7e533d1b28397f20",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "242c2da78a4dccbd188595fbf8158d74e271b8001ce44ee6969ce5b62ea290d8",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "7e8f97606fdd4cadb40bee495238baa4d216b47bbc898b75c1ff7afb6807437f",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "ConfigMap",
					"resource_name": "image-scanner-cm",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{image-scanner-cm}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "image-scanner-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{image-scanner-secret}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{image-scanner}}",
					"search_line": 57,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Service",
					"resource_name": "image-scanner-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{image-scanner-service}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "1d5a7f2fe25fb43ca50b0cf7238566acb7b01793d884aa6075da0e7904a3b906",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name=image-scanner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=image-scanner has resources defined",
					"actual_value": "spec.template.spec.containers.name=image-scanner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "1d374ecc27cae3fd7445307dccaec31f88d5b7a55d8df73def5de2e4b2c2bcd1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name=image-scanner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=image-scanner should have resources defined",
					"actual_value": "spec.template.spec.containers.name=image-scanner doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "4d55b16f7d6f5c0e1b3689d964701ba38aaf06beb2f27a3baf10c06b8b637d01",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "6aff73ba237f93fd8806009a8009e8ebf060826f796496a2a1d30a7887a0d53b",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{image-scanner}}",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{image-scanner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "f00f5051c245ef908cd9f46314ca85fdfa7592a94877a6b02bc421fa71383c2f",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.containers.name=image-scanner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.containers.name=image-scanner.securityContext should be set",
					"actual_value": "metadata.name={{image-scanner}}.spec.containers.name=image-scanner.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "5813986b9a85fd35b541b6ef7bc948b3d831267e681820272560a9a67473c2eb",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{image-scanner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "4df10240257e561d74051cdb638dfc52a7e87a0eec4655e4c5cb01706ec94d41",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{image-scanner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "dc5d2fc600dded2abd4b23a76301235e54afd47c0880f685081513bcfef30765",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name=image-scanner",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=image-scanner has a security context",
					"actual_value": "spec.template.spec.containers.name=image-scanner does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "2539a1ed50baf875797e70165b24405d84e5c980a3160cf29812e1660ab32a0e",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "a79016cfec5345966cf0c9125c115981e25f331c7f94b825791fcf1e5079fc6f",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.name={{image-scanner}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{image-scanner}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{image-scanner}}.envFrom.secretRef' is defined"
				},
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "fc01cbbd17adae133a56601c8e58b18f790a7bed3c0bbe65a7486bb7c086c6ec",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "image-scanner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{image-scanner}}.spec.template.spec.containers.env.name={{PG_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{image-scanner}}.env.name={{PG_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{image-scanner}}.env.name={{PG_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/security_template.yaml",
					"similarity_id": "2ef035be6183c474cb5130b4c92b071b8a61c6c2ba64b2e574fbe63985595fbc",
					"line": 48,
					"resource_type": "Service",
					"resource_name": "image-scanner-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{image-scanner-service}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{image-scanner-service}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{image-scanner-service}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
