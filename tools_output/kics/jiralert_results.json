{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 144,
	"files_parsed": 1,
	"lines_parsed": 140,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 9,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:36:16.781916+02:00",
	"end": "2024-05-17T20:36:18.580091+02:00",
	"paths": [
		"templates/jiralert_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "349ce32b022a6575bc15188413b7ae6f308f544c45e19e8463cd836e71fc18bc",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "Secret",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.namespace",
					"search_line": 24,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Service",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "ec3fef10f548c18266b481162f78a19b41c18ebdbcaf244e7e9c5bc79f00a928",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.namespace",
					"search_line": 70,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "d224c1a3e9da7ea44da2c016fd80b210b281a8104947a651c7b49e98bd627211",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-jiralert}}.spec.template.spec.containers.name={{jiralert}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "8a8f65b8d82c42db4bab419275e899e42dd30dc235e484583ee798123e474eb3",
					"line": 89,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jiralert}}.spec.template.metadata",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jiralert}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{jiralert}}",
					"actual_value": "metadata.name={{release-name-jiralert}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{jiralert}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "faa86da708589c9bc83170fd3c3531856852e94605faaad13c667582c6d55213",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jiralert}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jiralert}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-jiralert}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/jiralert_template.yaml",
					"similarity_id": "008607919ecb73c3c9fb1b79705f09ab32f8ad8a970023f639cfc57df74f387d",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-jiralert",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-jiralert}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-jiralert}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-jiralert}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
