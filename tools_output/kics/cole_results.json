{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 138,
	"files_parsed": 1,
	"lines_parsed": 132,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:26:11.709401+02:00",
	"end": "2024-06-26T01:26:13.729981+02:00",
	"paths": [
		"templates/cole_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "e2f93155b493aa218930b6795e5d7471e9f70f709d8c7c2cb45302c181a63123",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "97f5d4926048968915d29d65780bfb573fad7b43741a65a0881f67aef42e83e2",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}",
					"search_line": 113,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "6b7cc2dea6d9ecfc011c180c13f25243172517cf8d191f8c20cadfbbf7865743",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "d8ddb75d412dfe5ef8f4043d768c910d4a2d91b758b4ae281d91187f01fefe12",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "a381bf7d22253cbe21b40c4a922c6e787a3c9da13e2f374db552c09a532be375",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "5ca1cf6c4d8e2a1ef1dcb479bc2682a23c96885599d5acbaafb0fd9736faa8e4",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "ae0bb9b967c1af0c20a7e89305158bd3f63710171db3ba927c152761411f6a3b",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "de6e3bf48710675a905b9dc529989a9447988bcc2ca3620128cdf5b85fe2b44a",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-cole}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-cole}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-cole}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-cole-grafana-api",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-cole-grafana-api}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "d4bf4a47423d85d16c973b3505028b22bd7a2847a49c4975e9510a7cdafefff7",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cole has limits defined",
					"actual_value": "spec.template.spec.containers.name=cole doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "7be1dcc93717b6d87b0219f21c80bb35ee2b7441e0f2d897b62a7d7a3704ac72",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cole.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=cole.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "2d14971b1c3a13da7cccd56ffb87e761bbf5879170d63e48716ce459e01eef23",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.spec.containers.name={{cole}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "f811c8661fd71c8aa44d9c1767f3b75f6515c609b8c100e8346cb31644ae3421",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{cole}}",
					"actual_value": "metadata.name={{release-name-cole}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{cole}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "d47dceca617726078112409ccf106741e6852aa53cd7e226bb13949143cc5264",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}.spec.containers.name={{cole}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}}.spec.containers.name={{cole}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-cole}}.spec.containers.name={{cole}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "6506b30c7828d48102559f7840e8ca8f2f9023624a0454018f2654c10379903e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cole}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cole_template.yaml",
					"similarity_id": "6e93f5a6e8fbb4924e6c8bf64262bd4c5af6aedd5cf3c73e1bfcfe8e7670da9b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-cole",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cole}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cole}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cole}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
