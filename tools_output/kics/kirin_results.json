{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 135,
	"files_parsed": 1,
	"lines_parsed": 130,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:29:18.99942+02:00",
	"end": "2024-06-26T02:29:21.055551+02:00",
	"paths": [
		"templates/kirin_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "046643a189f98e80320ea0a24db5a421c9d852d5a2f735ace74c2c1225da7da2",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "6c515633c3cfb0549b76579050788d0f30623b616f5662fbf75594da4859d697",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "48194a262214783b40240be74d91297d59d8593d443fe23ee05e32a9a9769b44",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "4aeddf5b352634de4aaaab43460952984030a30161dd79156c0b3e017c221a8d",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "7a34874e63e84c158f26c5ef31c1be58bc213b7a1bcc4aafdf136f42b72ac613",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "ac49afc23939df67dcc71038944ef5c5bb01335211da0018d929716db0a4084b",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "ddc10c9a59451aa651c8538d107ca43a6abe7721dc560421c7d025fdb2c44905",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kirin}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kirin}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kirin}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Secret",
					"resource_name": "release-name-kirin-oidc-client-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-kirin-oidc-client-secret}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-kirin-database-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-kirin-database-secret}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "9cdc723ad896d901aefc8be561735ad4552b9087a7f9825daadd78d7005e8344",
					"line": 131,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kirin.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kirin.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "ea66031a78cb54e5e4cbcbaf28f2b787610eeabd2cd2ef09754514a98c44d3f7",
					"line": 78,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-kirin is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-kirin is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "d176b0f064042754530244286af2573558b6b7fe16ada9919a43ddac12e81a0e",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "4d3bd2a29db6edf00920387b7dc90be60792908dd6874f75935d04789f102219",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kirin}}",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kirin}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "b0b059ccc621c2d5de282b0ba2611b65cd308289c64d47b1bc50a130e06778b8",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.containers.name={{kirin}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.containers.name={{kirin}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.containers.name={{kirin}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "bfe8709d364d4bdedc2cf288fd00a92bf5de1f1f6c4bce5ff229d269aa2ba908",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kirin}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "c05ea48d35c317613c7f1a26e72082d3f655517eb2df6a9265cc89692f3c1cb3",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kirin}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "fbc0515da583b2a5f57013ee79bb925860fb0daf208f4d091330c576f17ddaba",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.name={{kirin}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "9dbb8d15b829a2e39d708232a4d0e7a783548fa13d4a68b790b489cafd204e23",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.env.name={{quarkus.datasource.password}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kirin}}.env.name={{quarkus.datasource.password}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kirin}}.env.name={{quarkus.datasource.password}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/kirin_template.yaml",
					"similarity_id": "2e1a7e3ab99eba5b35c5072c333867a4e232c6aa3d3aafdff291580573284643",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-kirin",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kirin}}.spec.template.spec.containers.env.name={{quarkus.oidc-client.credentials.secret}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kirin}}.env.name={{quarkus.oidc-client.credentials.secret}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kirin}}.env.name={{quarkus.oidc-client.credentials.secret}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
