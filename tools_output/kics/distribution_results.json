{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 167,
	"files_parsed": 1,
	"lines_parsed": 159,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:30:38.353449+02:00",
	"end": "2024-06-26T01:30:40.514598+02:00",
	"paths": [
		"templates/distribution_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "eb8e197add0d29d02f57c340390ecfdcca26204aeef55caa2c870a72e7a50749",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}",
					"search_line": 143,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "44eb419a1ddbd02704cb55a4d8efd68b76e1c6382dc6e80a303247e38545e964",
					"line": 158,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{registry}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{registry}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{registry}}.readOnly is undefined"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "3b058db469b74603cbac1c1015f74e27b5f617fd06e9bacae0cab2640d2fc170",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{etc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{etc}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{etc}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "c34662622e173930037512f0b3e683ac6eb1827dcfd246c5fc0235d94e65bb37",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "c8ff5126d8bd24df84a1935c956d174ca0d9aefba3196105ba8128fd43d3cfa4",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "4cec69c1636699bc79030b583327867549c362de6a8a2afc6703b52870835622",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "ed6bc139ac8dcb4edddceb54cc3bcd995714565dcaebecd0d573da6b1a96abb2",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "239ad79d90ae480009d51e9c3ebdcf33ed654d68c68576def0e684758ddee162",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "98cdd42d5818fc066d18e3e78a3c1cc4f815fac42cd78b20174ca674f2882f94",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "37dfa8b9ff814f26b7f47ebcd73919d49ba23bf2c36dd8cd3b6605d12126e095",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-distribution}}.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Service",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.namespace",
					"search_line": 68,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.namespace",
					"search_line": 21,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "fd3b7afd157d4532561cf995a7d723691e96f31f8acf53d702ec461bdc420a78",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.namespace",
					"search_line": 96,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "e5c9fdb7c0679cff70212cb613b93dceb356e66733b5e2f8d34f087c91e95640",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main has resources defined",
					"actual_value": "spec.template.spec.containers.name=main doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "deff4996dff4326e6cbbad1529d665b64005533100cfe25f7719e58fff207740",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main should have resources defined",
					"actual_value": "spec.template.spec.containers.name=main doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "06ee3962a95b06ab704ee6d570497abbbd954c99c040087123107106607e1a8a",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "e090933ea1e159923949303a575bdc9edd91dd3214c38f2afa28c75150f5eed2",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.metadata",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "974bd85c7c25b151239328360afaf7396ae1d2881c5051b7ac8c1a8edfa1ed3d",
					"line": 143,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}.spec.containers.name={{main}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.containers.name={{main}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.containers.name={{main}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "28e9e289c283cd61bed4dff609dc516a67617205d8d7d1d3261747f8c5a03220",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-distribution}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "a4d8464600cb9e2008e534d6ae0a3c5bfdf4908f806d48d5e55ab2c0241c177e",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-distribution}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "a335a9feb04df8fd144d23393ed27624e055280b223fc3e7d602b4e620abea08",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-distribution}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "f8dae1269652e6ecc85e101c80dc2d983c8c3d64521eaf1733c24f149d65013e",
					"line": 49,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-distribution",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-distribution}}",
					"search_line": 49,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-distribution}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "e08f2708c1247f8c892802626ce065e0c6a6e05d1db772aa37929834398cf0c1",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/distribution_template.yaml",
					"similarity_id": "5d66b311e6d66a49202365821fdca53ae960588b6b38619d9786c037bb060ff3",
					"line": 84,
					"resource_type": "Service",
					"resource_name": "release-name-distribution",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-distribution}}.spec.ports.port={{5001}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-distribution}}.spec.ports.port={{5001}} has a Pod port",
					"actual_value": "metadata.name={{release-name-distribution}}.spec.ports.port={{5001}} does not have a Pod port"
				}
			]
		}
	]
}
