{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 105,
	"files_parsed": 1,
	"lines_parsed": 101,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:21:43.895285+02:00",
	"end": "2024-06-26T01:21:45.936619+02:00",
	"paths": [
		"templates/powershelluniversal_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "2cb30a03ca274647d3e651c670114f0413baa25d9e230df570e7b69e4dbabb83",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "6ab2f8a8a3508cfbbcdda135bd015c48d98b6be545126b5c6467e0eef3c69be4",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "cc2936089a02d711613d122cfb249858590a08bede419c786477f810a370bf8a",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "98c510f5d5e5a323181983fbb16cf6d945b38f41d1c68888591bffb0aef07a0c",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "b35ca3986f19a8f4f398a584209eda0d9cc394d71b6a28e7635d090f855dff22",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "f9db3e5deca7aa7e187b07619dfba4809b814e09c1b4ab30edc61db6d7a34b56",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "312d3c3733a18287901d2eb1def1838b904158aef85b250f36c7bc38743a300e",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "0ced162c8d7e80f97bead3f0d2afd9d446bd3c545700a7e97532cc2e4a747bf3",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "7e19901a402ea24984dcfb8ccc3daab068de747560c1eb5e8ce584c2534dc0ef",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "2b2b0824aa471070a9a3528c3b55701b478feb6344417ff4698ff16cfb78e032",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "7911d27ca8ae3a8710bd469a2dcb040abba41525beaf08bda700de3d2322558d",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "d41550ab079c23f7f70b344652b26ef4c5fbe8a16c12babd9bf6e74459f02fa2",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "8aab58f8860687a3ba974a5e6a06aad58aa80a504c68ec47ddc309fd567fc377",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "d8134206a4ee3e737d6be083e3e02d56e265a33d7ceae42c8774671e83b10157",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-powershelluniversal-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-powershelluniversal-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "1eb43915e850e1207699b61fdff5cc0e0fe02f34040f439d66cc119ddd020c8d",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "5459f0b59d9526b346dfda6def577c8a59ab16eca68794164e969ff47c227d0a",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-powershelluniversal}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-powershelluniversal}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-powershelluniversal}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "9f1c7b4a3da948dc42126b64f37fe90d9c2c8b37bc8eb56d6035df361f7d45f4",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-powershelluniversal-test-connection}}",
					"search_line": 89,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "db824163b0ae998a8a0ec9bfb9471261aaf29dcf732aff83710a9a0d669a9603",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "04d5b0f57e26f51b432a69adbbbbcf21f09add6c684d54090a6b46ca89a93cec",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=powershelluniversal has limits defined",
					"actual_value": "spec.template.spec.containers.name=powershelluniversal doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "a0fbc80fe647e3d6860434f73b5306253f3f9fdf98b38ce782b6ee4c2bd89e53",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=powershelluniversal.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=powershelluniversal.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "b1885ca56c33ed1cf5513e6d4be5b73095b0437627320e87f94f41ceb4aa9777",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "80f7f390c2566fe37a5264b262724a4db093045e2eede7c06f1c5f4848a443ca",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "d456f5c5edd492ec2418a1c7974bbc9650f276370a4c4129f68bd008c61144ab",
					"line": 101,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "c411c512cedb71cdc0478e5a5f54fb7b05a1454d74740e082d783860d1f1b482",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{powershelluniversal}}",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{powershelluniversal}}"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "84527c7f13277e275c509ef331f2306003048a421d289be0b0b08c9735bf1247",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "254e361c8fbb47262776dbddb54e82437bfb9625d1c0e2317f40309f2c47424c",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.containers.name={{powershelluniversal}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.containers.name={{powershelluniversal}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.containers.name={{powershelluniversal}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "d072ee4784b6a17f54c59e84a69e5df02ee0974fac014b8cf9c8ae20ddf044f5",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "89f839ec968bed193b790146cc56202ebe5798bb2f0902a90958c50b96cd577f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-powershelluniversal}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "8a14397feb88a28900e6d5ec087e035b69fc574b7d7ac122fd9825efff4a0f13",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "3c59db118f172be11c154d43a0e1306e4ff7da3d99a68960a8804449481e44f4",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-powershelluniversal}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "bfee354368b88360c62363b8a1dedd929da2be94fc187d888642979daa110023",
					"line": 89,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "135f7c44e3fce74d77960be3789240980ded25b05520525bc98dae3a617ad31c",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "50aea3bcc09bf42ee7c35c87218de86fe30fa7f69369ee17ccbd7c57cfde61f4",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "d8aa17493a9641c333179cfe19144769ba54de715b5dd86c5ecfc65e1ea9fcdc",
					"line": 100,
					"resource_type": "Pod",
					"resource_name": "release-name-powershelluniversal-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-powershelluniversal-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/powershelluniversal_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-powershelluniversal",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-powershelluniversal}}.spec.template.spec.containers.name={{powershelluniversal}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
