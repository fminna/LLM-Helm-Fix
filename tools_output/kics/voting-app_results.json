{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 17,
	"files_parsed": 1,
	"lines_parsed": 16,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:32:02.029668+02:00",
	"end": "2024-05-17T21:32:04.018149+02:00",
	"paths": [
		"templates/voting-app_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "2c6447fd38e2a21e8311ebc6441dd2519afc52691834abd844bbc10b9b505fa0",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "58c8ffc0bdb4b4351e7b2c3bfb0b333da40f7c685e173335d964ffcfec6facc7",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "70aed98af272ac48c8aee6fc68e96d339bf0191aa6519bbc2e198030a512156d",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "0aa22c88119465821204d66c76e14f7aec70e8a9a342c7df392d8c843d858dce",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "850fd3fbb868b5e3d0eaf825e8967c026b592b571f3a484b685cde79fbc6e531",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "f1915cf769e4528fc9ba9650458f4327ec8223cb86d3f9041f60fa639d44ea0d",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "217d000cb03aa52954dfee2fd9e4f1573a13d2840f27b0935ec2828a06a77585",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "15ceca095e7c816da669858ab2fc7f5d3699251f847578cb3c77c203800d02df",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "44b6f9ac201e0db7ef540537328aa27a53149b53e684b89f83e03712bb0d2923",
					"line": 11,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=voting-app-pod.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=voting-app-pod.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "42ce85bf7215b61988efce555aec5456abad4138e338fbd114c39b6d31587a83",
					"line": 11,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{voting-app-pod}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "4ae53e8cb4cc3ddc907b275763705d287c0e534e5025a45b351683ab5b508452",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=voting-app has resources defined",
					"actual_value": "spec.containers.name=voting-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "456bf4633114934bea5b273fd0c4f6cd81049198d7fa04d42849f6f5ac05b0f9",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=voting-app should have resources defined",
					"actual_value": "spec.containers.name=voting-app doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "dda7046dc6a2f0a50fa2ddc8e78d8f8976201b959179bd3705bdbb1d04c5bb5b",
					"line": 14,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "114aaa676546fc463ebfdd26400fa9bafbbccc47bb987f9d645a0c9b1b3f254b",
					"line": 7,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.annotations should specify an AppArmor profile for container {{voting-app}}",
					"actual_value": "metadata.name={{voting-app-pod}}.annotations does not specify an AppArmor profile for container {{voting-app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "e86160bea4a39d079408cabd5c723b9dec819e10fec41c4dd18d72975d2a68c6",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app.securityContext should be set",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "78d425f5f41a3c708190dc454834218ba5c3d853efd486627c63135a90061847",
					"line": 6,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{voting-app-pod}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "71fa79872c3a542d9af0692fe7aacb9f0c190cf92f66820e73627716fa6bcc12",
					"line": 6,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{voting-app-pod}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "4c12b8d490f41dd7c15cfc8d80ca946db459f200fb822b413f4ef4d3a8ebcaa8",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name=voting-app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=voting-app has a security context",
					"actual_value": "spec.containers.name=voting-app does not have a security context"
				},
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "7f0dfb369aa86367580887a207e0597f6dc5fc43195ae83d9291924e75f177c3",
					"line": 11,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec has a security context",
					"actual_value": "metadata.name={{voting-app-pod}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/voting-app_template.yaml",
					"similarity_id": "b044c649637655666d11c550ad052b6287b8598273f85b7b23d0ad074f672fcb",
					"line": 13,
					"resource_type": "Pod",
					"resource_name": "voting-app-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{voting-app-pod}}.spec.containers.name={{voting-app}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
