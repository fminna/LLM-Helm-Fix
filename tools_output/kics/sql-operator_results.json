{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 379,
	"files_parsed": 1,
	"lines_parsed": 360,
	"lines_ignored": 19,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 18,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:42:49.513355+02:00",
	"end": "2024-05-17T22:42:51.438463+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/sql-operator_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "8de633cf220a94c90e7126486c87da75388dbf5b7f98d20fbb82ff65347e1e3e",
					"line": 267,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "21b60b93772c57bdf5cb56077083c56e2942cdfd95efb6f6e6dd5af3945d761a",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "08a1616c8f3313142659902d630efa41407ef306b9f198b85a5abcb75182ce7b",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "67b8b4360a93a16dacffd2571d916340963859ea7452509c1ed00e59d7c40565",
					"line": 247,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "150c52923320c26c242b0e3f938e03a3424237f24d057a10f282451b45ef93b1",
					"line": 267,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "ad69f6be6636e6663e75c69455bb99cd3c892461d5c1569a11a4266bf3fdb18c",
					"line": 242,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "3aa3fbb5c3e64159c483c555145e89bbd0566545687f1ce5e239344dd0b5fc6f",
					"line": 199,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-sql-operator-leader-election-rolebinding",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-sql-operator-leader-election-rolebinding}}",
					"search_line": 199,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-sql-operator}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "dc8a6841dd1a9469724892d11c2d7df26e3d3e0875bdb86df99004242b83caeb",
					"line": 227,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-sql-operator}}",
					"search_line": 227,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "ead7fa8ce1d8ad132434e1e6f131240ef6edcbfb47871906ce74dd1c60abb920",
					"line": 161,
					"resource_type": "Role",
					"resource_name": "release-name-sql-operator-leader-election-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-sql-operator-leader-election-role}}",
					"search_line": 161,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "341fab8bbec6094e2b4b1418dc3b6f09cf082c205fa210a07b4db7f901b05407",
					"line": 282,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sql-operator has limits defined",
					"actual_value": "spec.template.spec.containers.name=sql-operator doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "a7e21488505f870710079e1763721444cae4f994b058f76b7f12b33d4336679c",
					"line": 282,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=sql-operator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=sql-operator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "b54e1280402eeaccce1ab2658460638edead3bfdcd006532573d53d97a1221f4",
					"line": 249,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "39b77b9c6b7e3b306676429e88ee1612c588633b24bee2d97f1eb31161c19973",
					"line": 238,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.metadata",
					"search_line": 238,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{sql-operator}}",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{sql-operator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "1905ab2a4ab4be522b83d41e8919677d13db85ffd21357e4d426b60031880f9a",
					"line": 267,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.containers.name={{sql-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.containers.name={{sql-operator}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.containers.name={{sql-operator}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "998141e78cd90f046721cd051adde2a15afa6697379b4fdefbd16c90d1812e08",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-sql-operator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "1bfb13adf00818d9027aa1e592332e9a6a817554151dda4d90480562e85a97d9",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-sql-operator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sql-operator_template.yaml",
					"similarity_id": "71cf0654645e2cf76037f961b6eb2a1fd739b52ae74c7b627d422fd320dc67cd",
					"line": 267,
					"resource_type": "Deployment",
					"resource_name": "release-name-sql-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}",
					"search_line": 267,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-sql-operator}}.spec.template.spec.containers.name={{sql-operator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
