{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 43,
	"files_parsed": 1,
	"lines_parsed": 42,
	"lines_ignored": 1,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:58:49.789985+02:00",
	"end": "2024-06-26T02:58:51.905664+02:00",
	"paths": [
		"templates/newrelic-private-minion_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "cbdafc108415d0c6c43c911c154e76dc643ef9f45615baa9d729cb0863119cf5",
					"line": 39,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-tmp}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-newrelic-private-minion' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/tmp' mounted",
					"actual_value": "Resource name 'release-name-newrelic-private-minion' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/tmp' mounted"
				},
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "45c896c6cf95141444fcd2331f01b9d0c8e6fc2fcd3f276a0723f797bb4946c1",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-docker-socket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-newrelic-private-minion' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'release-name-newrelic-private-minion' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "209865b241b64d2cdbd0c9302bd4c8307b9e51c99267618de79400183aa78abf",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "3be566e45723d5410929e3cc34d7dc602e5f6554e27ac84f09a6b0aa3e40f682",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.volumeMounts.name={{host-docker-socket}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.volumeMounts.name={{host-docker-socket}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.volumeMounts.name={{host-docker-socket}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "1c70c9bdbc7d835713c7def9b109f04adc5efb2e01d750817b65f1d53c89470a",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-docker-socket}}.hostPath.path",
					"search_line": 42,
					"search_value": "",
					"expected_value": "Workload name 'release-name-newrelic-private-minion' of kind 'Deployment' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'release-name-newrelic-private-minion' of kind 'Deployment' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "d6de44ea713e44328b613836bd96dfb41a2253945e452f1f936c571d98e3409b",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "d151fe04345bd3873c6e226226247faeb7727f588b10153fb151923fbb780a54",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "2ec30c3090593080d037793df69fa8801f433ce85fa4ad3b87bdaccd55444d59",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-docker-socket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-docker-socket}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.volumes.name={{host-docker-socket}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "4aff59f208d2cda5ccbf139400f589a1f7034b3ce9abb03c758f20378ca3fb37",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "365992285b521986d29a69576d0aba979d1a9cdbb7600d50d4b81d8f1aa15936",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "657bf8190bbd6cf456e52cd0f00df29c507f4b6fbe94f7810d46290e1cb8c5dc",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "2d959d8369600130b25d2d10f233a3827f2629c691cd69648d9cbe743d2af940",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "f15befee20dda27c5facecdfacf74db9d9807366cc886a0af7d5f51dc8da636f",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "3e9af76c7da753286b2fa60edd53ed3f3231f868acd9d3ef02f8c7f17b1fb959",
					"line": 23,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-newrelic-private-minion}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "a33a619e9bb6b339d63e286d320dd7351f20bb6814fc50b891716db75fb67eec",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=newrelic-private-minion has limits defined",
					"actual_value": "spec.template.spec.containers.name=newrelic-private-minion doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "7a1ec4bff712dbdab319a748d418baeebd70b83cf4ab8dc530be7d88f3eff0d5",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=newrelic-private-minion.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=newrelic-private-minion.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "0a6a811b8bbc41b60aa6a22628536e3f37eb1ed414d991e4cc8dff1e1741ee51",
					"line": 27,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "1baf7508376c3620aaa10b6f3399ed80ebf6b3c1e0a8116b692430ee3a80f165",
					"line": 19,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{newrelic-private-minion}}",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{newrelic-private-minion}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "e2c91dffddf5ca82f908aa2fbd6d603088bd001c7ded3a38981c0100b14d04cb",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.containers.name=newrelic-private-minion",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.containers.name=newrelic-private-minion.securityContext should be set",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.containers.name=newrelic-private-minion.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "f60f149f07a74910e713cf8bfecaf4cd8b9538f82d43a14d76b3e86fd87b8ecc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "09cd4f5c38db8093d92b483fd11b0988fc272a62a67f3dc774358161c4846d97",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "e50a241390844c517b56223600e0d0f99b1efab71e65cb7f0d23fd3b01a445ef",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name=newrelic-private-minion",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=newrelic-private-minion has a security context",
					"actual_value": "spec.template.spec.containers.name=newrelic-private-minion does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/newrelic-private-minion_template.yaml",
					"similarity_id": "677f7b1b92d69eaf8d624c9bc63032f52654125013b391fcfce9c9f4885c9fb4",
					"line": 25,
					"resource_type": "Deployment",
					"resource_name": "release-name-newrelic-private-minion",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-newrelic-private-minion}}.spec.template.spec.containers.name={{newrelic-private-minion}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
