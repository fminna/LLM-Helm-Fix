{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 54,
	"files_parsed": 1,
	"lines_parsed": 52,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:38:26.782725+02:00",
	"end": "2024-05-17T23:38:28.689875+02:00",
	"paths": [
		"templates/base_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "9883ceee8ce9378b31ca4fb14995083135b58d2510655d123b61099d6e4ff901",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "775d88de552d8c9b441694d77af72d86ef0f3d9a2abaef75d6780a4ffd14194d",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "b44d7297b98e7611b8334db82d2e3607bdbe3ace775cbc8a052ee8a938bcacbd",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "2e3d0578c56723f195752a246ff5f48f59a17c0f067aabf4e088af19c6cd5595",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "21f58969df158ea58c8993bce33893191b2711e8f3e3056d878bc9b07c2510a5",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "d4c7a8965c2d8da87ff8f4aaaef3e9f434441e6024137711e24c80ef3ea19777",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "3bad36c14f97f0016b90eab5cea3454166692bd00b7b00e4572320a4ef54a708",
					"line": 41,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "1d38f3bf136afa1aeff5ab397d0edee5bd02ae237bbc8af90e681750de5e2ca5",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "4fb58fef4e4897ff41242d9fc61105f072f5452c18010f28a02609f2479e8e8b",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{first-page}}",
					"actual_value": "metadata.name={{first-page}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{first-page}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "4ad26ec1146f0999af3cfeec1d2d94f103764a70c83a79e2991d8157e31fd139",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.containers.name=first-page",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.containers.name=first-page.securityContext should be set",
					"actual_value": "metadata.name={{first-page}}.spec.containers.name=first-page.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "2b59bd4db412dcace59688a91561460d1e22175b66ce1abe95571165cf99c36d",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{first-page}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "ea9b7ccec396e515be2b56849fa9d9975332860489a9d134545a26fa355c70d2",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{first-page}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "04765424d6ecb1ec3feca2270d14a6a33e3a0d413624fc0238722f3a8d430eee",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name=first-page",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=first-page has a security context",
					"actual_value": "spec.template.spec.containers.name=first-page does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/base_template.yaml",
					"similarity_id": "98c37835bc7cebbd782659fa08e35ab28b5822ad2ab55e73679b2d4c2e7a6e37",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "first-page",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{first-page}}.spec.template.spec.containers.name={{first-page}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
