{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 199,
	"files_parsed": 1,
	"lines_parsed": 195,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:26:40.724807+02:00",
	"end": "2024-06-26T00:26:42.639794+02:00",
	"paths": [
		"templates/verdaccio_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "60654b69b083a394b5d7c80f621ebcf04f772e64bef17848bda2d750fa76f8aa",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "99082a3e8f9f88c434a41cbfde0b97c73a58e263eba1744be0dd86add1b64244",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "77a08b188dce4181e81a3ac93d313c4b4dbd81e0e474ed6d6640fd8d1f77eba2",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "ce22fb58dc01b6871ee723c3b2a52a6a2211191c7fb01c60c2058a3128a49469",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "aa6cc95110db52fadca7a487498c08f18f6d637c3c46d187e666d9f9f1bd65fe",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "9889403cc33e9dd9b9b3624a44938171e07cc5a05ac2fb45e95a90417dd5e867",
					"line": 160,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-verdaccio}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "93142a03521798b0d9e1898ec808404e9e41923edf7e4823b4833e27caa335e6",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-verdaccio}}",
					"search_line": 129,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "30ea57df4850f53f43dcefc40a2ed4aff867807e52067802b252127e38ee890a",
					"line": 106,
					"resource_type": "Service",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-verdaccio}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "9daf63652e3c281b36ce0b659033edb559fce485bd610712fafebd66e2f2291d",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name=verdaccio",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=verdaccio has resources defined",
					"actual_value": "spec.template.spec.containers.name=verdaccio doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "dbd2f57cbdc9524be30e2c011fba758fe2941d8b02f2a083ef932ef18441591c",
					"line": 166,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name=verdaccio",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=verdaccio should have resources defined",
					"actual_value": "spec.template.spec.containers.name=verdaccio doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "ddfaa2ecbdf6a497cc27f53e002e3834c4fdf9b6e4d5e5cfc728195043af3529",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "50f34f534d3577c3e69783072971d9561bc1babe63992080d997ff46827b19b8",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.metadata",
					"search_line": 149,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{verdaccio}}",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{verdaccio}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "eccb47477cb2eb7b40ec875f11ef077e58b88dd14686505aa0d92714c58182f8",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.containers.name={{verdaccio}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.containers.name={{verdaccio}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.containers.name={{verdaccio}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "7d7c4b47e6f206b04de1d1089994f036e4012f80b1eb7288df8a748a3c54eeb3",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-verdaccio}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "a1bbd71100706bbecf0e51b3b4fab85f239650fff4d4d9e26288fd1864b33450",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-verdaccio}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/verdaccio_template.yaml",
					"similarity_id": "3856ccccedfad80e1680c1fbf086315bd5b67d293b1498d9f5a2dabeba84ead6",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "release-name-verdaccio",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-verdaccio}}.spec.template.spec.containers.name={{verdaccio}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
