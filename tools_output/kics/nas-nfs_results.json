{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 159,
	"files_parsed": 1,
	"lines_parsed": 152,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:23:41.664075+02:00",
	"end": "2024-05-17T20:23:43.558206+02:00",
	"paths": [
		"templates/nas-nfs_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "5b3c131555570573b2c8d6597154eed4e17572ce7533ec0ae19187c2ce3e7a9e",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": 142,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "58b69d03d01a45841c20f3318d515f79fe31487904f921b61052f33bd4c334f3",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": 142,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "af09107b2b3d46b56fa5d9b8e29cbe1a3cc59dbfe7c2e2ce40b87fc21a14d102",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "08ff26727067eaa0f6356a2038d039b7483ca4a7d726e094b095ce7bae9e6ac2",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "d5d841533b6da5cb9cff8ec85a98d268f0f14ffb42f7d0aa0b369eaae9ad5c67",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "2238547cf99345f214acfad27c712eabfeac39c7b38079453634450bc4f4af0f",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "cb353360ca16dbdf9c18761482ed14f864dcec0f7efedd7539653c40e0432e10",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "c0ebf51ea4a81e16c313c86fc254c67ed3bdf01d0af0f4b9792d53d3bce1ae93",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "2a919d88bddf8bece8dcd6d3bc0bbc3222ec10affe3d2d86abd856fd66fedf8c",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "0c98c17de0216d9d06cd49849d55474aad0aec3f6da76c5ec070cdd5282ac7ff",
					"line": 100,
					"resource_type": "RoleBinding",
					"resource_name": "leader-locking-release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{leader-locking-release-name-nas-nfs}}",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "88a1943e5d9fef661231d3f9373fd37bb57d19505dcda706718c8f305e1ccb22",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-nas-nfs}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "10e4c519fdaf84f913cff96cc5a20a45427aede4da64fa0e250766ae9a37ca24",
					"line": 85,
					"resource_type": "Role",
					"resource_name": "leader-locking-release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{leader-locking-release-name-nas-nfs}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "ab84076330460b372b2682b7bba6bc848eba65c25d5a0e29291c858cd5c64ada",
					"line": 11,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-nas-nfs}}",
					"search_line": 11,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "3922e94acb9e0ab576fd66e3e6021a8555982111e57f1b6654a6b032e385997b",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name=nas-nfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nas-nfs has resources defined",
					"actual_value": "spec.template.spec.containers.name=nas-nfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "9467444d5560d9d84f0bdc7e1f2c2bffb6614ecf4eee4775fe0673eb7c3f18ea",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name=nas-nfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nas-nfs should have resources defined",
					"actual_value": "spec.template.spec.containers.name=nas-nfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "001e148f562e3e84dd98d476683152a47e419efa382b3521865d50cf473a094a",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "ad5a89342559d19cd5f68cc42ff941c06afd6c88a794d846c32e2e1d39cd45a4",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.metadata",
					"search_line": 130,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nas-nfs}}",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nas-nfs}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "39c79b190b2880c74696c4080b13f418e4f51f609c8d7649e86651328b70c3f6",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.containers.name={{nas-nfs}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.containers.name={{nas-nfs}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.containers.name={{nas-nfs}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "d57029238d196e84e5fad9c41dae004de4326809491fc2a1f55633325b99bd50",
					"line": 11,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nas-nfs}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "05e20d50b73fe57b205dc1af9305e6a6bc52d16994675d7c3c64559a84c5c9fe",
					"line": 11,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nas-nfs}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nas-nfs_template.yaml",
					"similarity_id": "bdf52b935a98cea1a05bcf4877e93d5a7c300931f302fe622ea8cb5ebdaaf3e3",
					"line": 142,
					"resource_type": "Deployment",
					"resource_name": "release-name-nas-nfs",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}",
					"search_line": 142,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nas-nfs}}.spec.template.spec.containers.name={{nas-nfs}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
