{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 151,
	"files_parsed": 1,
	"lines_parsed": 145,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:54:05.508748+02:00",
	"end": "2024-06-26T00:54:07.669276+02:00",
	"paths": [
		"templates/kask_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "49081f611484ee0501d46dae5106c76ea2b5b6c6f194c925e3190d7adcfa7e73",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "d632214eed349988ad5b3443ba6fbe002706e55d84dcaa1c9ae76ad947aa88ed",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "7c0bf1a118c252bb46337e0479ae956c66cec5ae41bc0593c9ae3b18321dba22",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.volumeMounts.name={{config-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.volumeMounts.name={{config-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.volumeMounts.name={{config-volume}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "784e130674e1cb8b8a112fd05d3bd9496203d371a7c24066baa86e0a8a0641b4",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "4081eb1eea84d1c571a0e7072947ab30c92afe9f67ba82cfa5d4c6325c6faa9b",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "c99e41b404784db0450144588761b89935e38d03f55336530ed44d7385b7f0c1",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "5a3fe434ea68ad0f5284b74028400eaac4b539705278524f9d52a53242be0c20",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "15c902b421f3ca4836adc1a9cabc0c62da87eb8d4539aaa1a9d3f6a861b60aac",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "2ffe4c3fc09b45af33e25a0f7a7dfcde19f62fd886e6e37500208b0bb2d8c947",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "b4dac2f9e214045156903da1e8fc92a32a3a656f61ba0eb55bc9aa3589251c46",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "c18bf06197184d3ff190cc159eac270930b3bc40428ce956be9f20996772e1c7",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "418968c82d1c8981aef3d2b888dbbcce5c0c2ef6d86d37cb8ab748835f3023d9",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "eda08ac322b2af5c2701523de4f9ed8d08295ec1edc625a7ea722d1254164962",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "14a754dcd4d9175bd08707717d34da9a47b4c5b5264506ce7bcb307852585b08",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "d514d8a260c71115e46b7c74ec65b10d2634d0e452c4c712faa6cd8fa99aa10e",
					"line": 143,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=kask-release-name-service-checker.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=kask-release-name-service-checker.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "d335897fcc7f54dded0e01a3ce27288826df72090e4a6b7338438c8c90c8d67b",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "4a50654d9d0916eb6092ff34ead287e16929b609161a39e8686a20d01850a6d2",
					"line": 143,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "a355988771e7fcb244dd4e85d01a719034da28c7731631885f598954082b1435",
					"line": 139,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{kask-release-name-service-checker}}",
					"search_line": 139,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{config-release-name}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{kask-release-name}}",
					"search_line": 77,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "b981e200d0349480c47e09ace6009816f97ba69776f9eff7aa1919fc47724f2c",
					"line": 56,
					"resource_type": "Service",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{kask-release-name}}",
					"search_line": 56,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "6f30525553918c43db28fe9175b5af1b97573e32f58aabc53d4fe61fbaa1d35f",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=kask-release-name-service-checker has resources defined",
					"actual_value": "spec.containers.name=kask-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "b5dba7bc3891ab14f8c7de4d67df9038a45c295e09978bfcbfb1ab11d89f6dc7",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=kask-release-name-service-checker should have resources defined",
					"actual_value": "spec.containers.name=kask-release-name-service-checker doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "8d3d356f396f8e6c723d2337aaf7c7f702585b71aaa39dbf1564e747f3442cc5",
					"line": 146,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "6eac08e23ab672dd4ba146fdd945ce1776758c5eb07af9ab2910a5dd55d2d265",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "92acf846ae43f7e337e0f8c2b467f6db3a44bd8a668450708c08b0e8fac4334a",
					"line": 139,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.annotations should specify an AppArmor profile for container {{kask-release-name-service-checker}}",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.annotations does not specify an AppArmor profile for container {{kask-release-name-service-checker}}"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "27f52233c6f6f0798b66a7ad27dc105918efd4d10745a46a2a73a9c24a6df79c",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.metadata",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kask-release-name}}",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kask-release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "33f4466575bfd383e959144435a57d3c7839e089aa77302eb7879d6acbabcdbe",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker.securityContext should be set",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker.securityContext is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "216290308fa1e7831d7af20b17320fd6b1b885737a828355c4a285d1bcd0d3af",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.containers.name=kask-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.containers.name=kask-release-name.securityContext should be set",
					"actual_value": "metadata.name={{kask-release-name}}.spec.containers.name=kask-release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "d3eff530c20848d0492c28324bb99f4f89e6f7211ca42daee41cd40c2e419f85",
					"line": 139,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kask-release-name-service-checker}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "aba7cbc2d82162cc6957e62252f509fcda28efdcc9e486974392769755ed4a65",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kask-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "6ab5df750b7daf3416dfd5646fb0b5ac75a29f38ecad06ee9fbca9c526ef1817",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kask-release-name}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "99a5a433c6a48e84a0e0271481458e0af798390bdcd99acb3a9ab66b6e127718",
					"line": 139,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kask-release-name-service-checker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "89e2e3e9cbdb5c871e79afecde9d06499ff34b54f1f10c2d15fe2d999bd7f465",
					"line": 143,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec has a security context",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec does not have a security context"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "3206f0982c22a344e8a75bddca893041e1d823512519b80d1d633f49e858484f",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name=kask-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kask-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=kask-release-name does not have a security context"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "b7cea687155618baa218bc19fbd0a13f4a4d4e08d5eea63e6b44c11c9c4cced2",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name=kask-release-name-service-checker",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=kask-release-name-service-checker has a security context",
					"actual_value": "spec.containers.name=kask-release-name-service-checker does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "79efe675064e1698baf4a941954d6b925690a656ee5d5bcbf62eae9ae618f838",
					"line": 145,
					"resource_type": "Pod",
					"resource_name": "kask-release-name-service-checker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kask-release-name-service-checker}}.spec.containers.name={{kask-release-name-service-checker}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "20c5d4a9e19950f54c612535c9283bb240f107e68dc361e04ebe9591c7c39770",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "kask-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kask-release-name}}.spec.template.spec.containers.name={{kask-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "7c40654523f3a297f1d0a7c37f725c416825267f9b295d024bd251f514eedc24",
					"line": 64,
					"resource_type": "Service",
					"resource_name": "kask-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kask-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kask-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{kask-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/kask_template.yaml",
					"similarity_id": "f6f63e79a875162dab1a404a11595333223e8edd01874aaf9569cea470eab78e",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "kask-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kask-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
