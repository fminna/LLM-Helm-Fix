{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 140,
	"files_parsed": 1,
	"lines_parsed": 136,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:36:07.654847+02:00",
	"end": "2024-06-26T00:36:09.783842+02:00",
	"paths": [
		"templates/external-monitoring_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "ccf3b14f9c61bef05e214b3533cb12bb7a7d709873fb25fa6b5f12efe29daecb",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "8fff24eb3252e0b4faf1e566363c77a1645d7868dcfb74c9f8052a661bbf8053",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "85ebd6bf955df3b4988ba284523761c8282ace18ef33d0abc8c07336753993ee",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "bbfcf8afa8fcfd0860e34c1b5abc5c62690b822ac13bcf452258e361d68eb78d",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "bb60de2a5a5b885836243c36da03ab4487e7efcc442020c73f2179da4a37094a",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.namespace",
					"search_line": 68,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "1e2fecfabd03cc171a80882de84ca792c2a9dc5b7a6f0d167b5b466735a2e02c",
					"line": 45,
					"resource_type": "Service",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.namespace",
					"search_line": 45,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "5480b309b4fecca0d73a4a66ab5e4f9b315743330655da28ccd97893f23b6bbb",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=blackbox-exporter has limits defined",
					"actual_value": "spec.template.spec.containers.name=blackbox-exporter doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "8809407ddeccdbad45c9347f7bb14c1c8a15899635c31c3003a66bbd9f90ab08",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=blackbox-exporter.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=blackbox-exporter.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "a2b1c3014df785b11f19ddfb77c6243b299e646a86204d0aefb916119dda77ca",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.spec.containers.name={{blackbox-exporter}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "918fee757869b46072f14c0c171a8a050df0fa0656757bf0181967f56ce20b47",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.metadata",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{blackbox-exporter}}",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{blackbox-exporter}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "86e2e97590c9ef8b7512ddc09ec230aa4edc1c4616f07c1f5552a9de9b68180d",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/external-monitoring_template.yaml",
					"similarity_id": "e4f145355b6dabdba588223e7c3addecae3570bd11c09822436164f192bb7c15",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-prometheus-blackbox-exporter",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-prometheus-blackbox-exporter}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-prometheus-blackbox-exporter}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-prometheus-blackbox-exporter}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
