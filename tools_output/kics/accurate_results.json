{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 660,
	"files_parsed": 1,
	"lines_parsed": 642,
	"lines_ignored": 18,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:15:50.757781+02:00",
	"end": "2024-06-26T03:15:52.918066+02:00",
	"paths": [
		"templates/accurate_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "e08c1327e11ebcff3feaecd5e078e2f6a68add80b61055bef7cb90514ac7b0f4",
					"line": 521,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "2106977bf82c3a7eb6506a26636a63d33b2bd272b19aea2798831a69badd7414",
					"line": 496,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "5d98c1f87fb6bc60960f6eec24fc4c8bc049c14eeee672fa559962b002982a66",
					"line": 480,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "b747e13ca62e9510a84b1e333e5e5ebdd31b61fbf93a9f9b2ac20a08b7abc156",
					"line": 480,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "6fe549800610853c4cd7744cba8648d54eb72288ffdd7962ec870fead6ede259",
					"line": 496,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "0d06d633c4569c0ad34a5f5f234681c66c71b9805d7e0b9e3fdaf782c2696def",
					"line": 478,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "e19b9c498fba53c77713c9c324d345b54bc81ee9db8c2c34c574b82d81b54d10",
					"line": 458,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.namespace",
					"search_line": 458,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "8ee75a8b29cf955426b002a46db1d07841e369a296c15ff3ac7697dd712c76d2",
					"line": 380,
					"resource_type": "Role",
					"resource_name": "release-name-accurate-leader-election-role",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-leader-election-role}}.namespace",
					"search_line": 380,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-accurate-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-config}}.namespace",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "255d11ccd5c0f4d168aa2fd190485f63a208109e9093927a3c8787ee4499d196",
					"line": 424,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-accurate-leader-election-rolebinding",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-leader-election-rolebinding}}.namespace",
					"search_line": 424,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "b18b61b158f5590b519ba5acfb81754e754c84dec86b5fda7b207815540726f0",
					"line": 12,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.namespace",
					"search_line": 12,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "4ec2af1115bd67adb91f8c0425f33659894d337240b5d899c5cdec1af263cc78",
					"line": 444,
					"resource_type": "Service",
					"resource_name": "release-name-accurate-webhook-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-webhook-service}}.namespace",
					"search_line": 444,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "4b10b99b0c06789695dc08ffee04017574aa976931b69202de546dc610c2573c",
					"line": 492,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=manager has limits defined",
					"actual_value": "spec.template.spec.containers.name=manager doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "6ebcdf7b48b2f78eb129fcd53126d2dd2f157b0ff07e8c6da68e3fbd30887c1a",
					"line": 468,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-accurate-controller-manager is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-accurate-controller-manager is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "cf7fe2d28cd5c531074a368acf5216b5fd7ca1968ac9391719b80fdfe166c0f5",
					"line": 480,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "ecd5d455a2d3b149ddbf49735007c107d34af04c25297ab730ca1fe67b2f18ef",
					"line": 473,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.metadata",
					"search_line": 473,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{manager}}",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{manager}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "98baf998d1781f0effb1231cf0169ad7bdff037fa3c2a56e3e69a6dded30363e",
					"line": 496,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.containers.name={{manager}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}}.spec.containers.name={{manager}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "df1e7c63fcf861eb241ed53401b3744fe2de4081d1614fef163a30da1a0a5f06",
					"line": 458,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}",
					"search_line": 458,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/accurate_template.yaml",
					"similarity_id": "91d72bfee166590decffde361b3dd540a117afdbfc119af7203eedeba9d31d0f",
					"line": 458,
					"resource_type": "Deployment",
					"resource_name": "release-name-accurate-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-accurate-controller-manager}}",
					"search_line": 458,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-accurate-controller-manager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-accurate-controller-manager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
