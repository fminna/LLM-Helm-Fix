{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 889,
	"files_parsed": 1,
	"lines_parsed": 876,
	"lines_ignored": 13,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:04:53.888765+02:00",
	"end": "2024-06-26T01:04:55.957358+02:00",
	"paths": [
		"templates/eclipse-che_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "6b8123a576f28959ce8feb9edfcb85a1f62a3f9190bb180543beac13679a03fd",
					"line": 729,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.spec.template.spec.securityContext.runAsUser=1724",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{che-operator}}.spec.template.spec.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "a9088489aed65b781467b68d1521db60c5c411ef1b07c2f358dace6f92c26e4d",
					"line": 226,
					"resource_type": "ClusterRole",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.rules.verbs.create",
					"search_line": 226,
					"search_value": "",
					"expected_value": "metadata.name=che-operator.rules.verbs should not contain the value 'create' when metadata.name=che-operator.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=che-operator.rules.verbs contains the value 'create' and metadata.name=che-operator.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Exec Permission",
			"query_id": "c589f42c-7924-4871-aee2-1cede9bc7cbc",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles or ClusterRoles with RBAC permissions to run commands in containers via 'kubectl exec' could be abused by attackers to execute malicious code in case of compromise. To prevent this, the 'pods/exec' verb should not be used in production environments",
			"description_id": "c589f42c",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "bc730dfd781e15eafeaa6eff8a06d9b5c95bd879724eeccdffda19f3c3ff550e",
					"line": 296,
					"resource_type": "ClusterRole",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.rules",
					"search_line": 296,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.rules[25].resources should not include the 'pods/exec' resource",
					"actual_value": "metadata.name={{che-operator}}.rules[25].resources includes the 'pods/exec' resource"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Port-Forwarding Permission",
			"query_id": "38fa11ef-dbcc-4da8-9680-7e1fd855b6fb",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles or ClusterRoles with RBAC permissions to port-forward into pods can open socket-level communication channels to containers. In case of compromise, attackers may abuse this for direct communication that bypasses network security restrictions",
			"description_id": "38fa11ef",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "3e5625272b984e15d9003e26fff8930e177d583989d1cf3b8a7a04f16f723a27",
					"line": 288,
					"resource_type": "ClusterRole",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.rules",
					"search_line": 288,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.rules[24].resources should not include the 'pods/portforward' resource",
					"actual_value": "metadata.name={{che-operator}}.rules[24].resources includes the 'pods/portforward' resource"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Read Secrets Permissions",
			"query_id": "b7bca5c4-1dab-4c2c-8cbe-3050b9d59b14",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles and ClusterRoles with get/watch/list RBAC permissions on Kubernetes secrets are dangerous and should be avoided. In case of compromise, attackers could abuse these roles to access sensitive data, such as passwords, tokens and keys",
			"description_id": "ca97f029",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "9703604a2cce8781eabbc0882286f9c1c51fa22bfa38d22db1e131a1b5753181",
					"line": 226,
					"resource_type": "ClusterRole",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.rules",
					"search_line": 226,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.rules[17] should not be granted read access to Secrets objects",
					"actual_value": "metadata.name={{che-operator}}.rules[17] is granted read access (verbs: create, delete, get, update, patch, watch, list) to Secrets objects"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "76d6d61eaae39b36e8b61b8ba017a0c873f8acdf13faebf34d75e4f49f44d5de",
					"line": 712,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "8713e6426ade0b6edd054d1c838794f792a0dd727b6e4ef076a202973d9f17b9",
					"line": 564,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{che-operator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{che-operator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "ServiceAccount Allows Access Secrets",
			"query_id": "056ac60e-fe07-4acc-9b34-8e1d51716ab9",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Roles and ClusterRoles when binded, should not use get, list or watch as verbs",
			"description_id": "79619280",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "cecb9855f3d55944386bedeadde0de07408780a955d521fb2bf970370e7fe267",
					"line": 226,
					"resource_type": "ClusterRole",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.rules",
					"search_line": 226,
					"search_value": "",
					"expected_value": "The metadata.name={{che-operator}}.rules.verbs should not contain the following verbs: [[\"create\", \"delete\", \"get\", \"update\", \"patch\", \"watch\", \"list\"]]",
					"actual_value": "The metadata.name={{che-operator}}.rules.verbs contain the following verbs: [[\"create\", \"delete\", \"get\", \"update\", \"patch\", \"watch\", \"list\"]]"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "bfe94d7f6129271c82f836544a5514469258783b4f602c8b22517594566c13ae",
					"line": 557,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{che-operator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{che-operator}}",
					"actual_value": "metadata.name={{che-operator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{che-operator}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "6c393a694c55cd03ac9e5fd0e19020b39b72d7ebd74583d2a748f3223953376a",
					"line": 548,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{che-operator}}",
					"search_line": 548,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{che-operator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "385194aaec9ab350f4daf1187cb678c819193acfa876e0196dc9141ba09b8664",
					"line": 548,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{che-operator}}",
					"search_line": 548,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{che-operator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/eclipse-che_template.yaml",
					"similarity_id": "349957f45eb9b2f8eb1b4e8e19516603be674b394a38440fe1c0ad6625a7c555",
					"line": 718,
					"resource_type": "Deployment",
					"resource_name": "che-operator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{che-operator}}.spec.template.spec.containers.name={{che-operator}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
