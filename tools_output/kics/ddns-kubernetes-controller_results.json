{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 82,
	"files_parsed": 1,
	"lines_parsed": 79,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:58:26.564495+02:00",
	"end": "2024-06-26T01:58:28.625263+02:00",
	"paths": [
		"templates/ddns-kubernetes-controller_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "5347cf451fefd7960ed9e7fd868b8a92080214aecb5ed42dd99861cee329a4cf",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "da983d66d9b22771fc9d804534ec54e5de7c7ac14d8ecc18777c3c72c7c63167",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "15856b1979060d7d82915543c0e00f6241e879e900f3471c7face6ad4fddfa8f",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "7dcda54493d190c5b25317bc20890acef9ed4e07875f771792373084e54d1326",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "805b96ff9d4c6434db945ee9546cdbeac0bbf899ed6b6edffb57f3c02a160ce3",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "2fadd866efcb20beac7fc8819b7a52142cd77d8417d73493a63890b54b2c3ba9",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-ddns-kubernetes-controller}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ddns-kubernetes-controller}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-ddns-kubernetes-controller}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "519e0857edaefc98a968e4a2153bd4638a5e56e514d3b8abda3581f4c203378c",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ddns-kubernetes-controller has limits defined",
					"actual_value": "spec.template.spec.containers.name=ddns-kubernetes-controller doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "26db1277806f7058e6841f0a596d89991c3970a48be1f26c4db27964a7a15210",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ddns-kubernetes-controller.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=ddns-kubernetes-controller.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "6f20cb1d2430b71231de9c6cb0221492a7e03c56f0a1da5c5250db041c57afe9",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-ddns-kubernetes-controller is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-ddns-kubernetes-controller is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "67328c6cc35a15d5a1608a284ee14ab5fa1616b93847dae15bcdf479f9c591a5",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "ca9e5bb293128ca09fd5f72553af1029c0c75399800834575e7a2a16fa4d5f70",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ddns-kubernetes-controller}}",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ddns-kubernetes-controller}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "c5d1c316327c59927533ff5e0a172c0477dab0b840553e9603c0c5b3c9d43c82",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.containers.name={{ddns-kubernetes-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "6e2993d6af03be93311eeff16828c12cc73ca75d073ef14027b8fe0ea169b046",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "f73ddbca9b236f71e2c0786b399a141708b7c9deb87ac1ad9a8dadacb3ef998e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ddns-kubernetes-controller_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-ddns-kubernetes-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ddns-kubernetes-controller}}.spec.template.spec.containers.name={{ddns-kubernetes-controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
