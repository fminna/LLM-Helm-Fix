{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 210,
	"files_parsed": 1,
	"lines_parsed": 206,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 34,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:30:01.803019+02:00",
	"end": "2024-06-26T02:30:03.88972+02:00",
	"paths": [
		"templates/sophora-importer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "86fe4ca8e06ea2d77a5ed76e670951f98d440357097e802682eb0055fa67d708",
					"line": 195,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.privileged is true"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "7ae998cb09e7068b6440d0e22bd14fd887e61d1a38bb3c37a2509ec6a5270e37",
					"line": 149,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "58b66820d86f280e0a82ade35d934c3bd59360cadfecb6661705fb841b77c162",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}",
					"search_line": 194,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "1db3b55dec1c1f0eb8f4398017955e8a749d95c26c0f33acafd0ffc6efa1669f",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "bb759c1981cb0bff463f6e0ea128c20f44697fd338ab3479132f39477ed05b5d",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}",
					"search_line": 194,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "9e55ffd5973e8c983c7eee15e1683280d3ba36c9152a33a3ae1aea04e7e9ad1f",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "b32062eb786843062494c2d2fe09be4c6f096f22d6ca6fad5f3936cd0437fa53",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "031552562e59c31a0254eacb51a2cffa13abbfa8e1fe0409a9f63ab07ed4aa91",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "d0c3bbd64cc7d414193ec9c0c7292c4503f5550f4aed7461767606584e4041df",
					"line": 99,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "d07024c317238f9970c50f4a3f12d8609221cb01113a91eeb6961c0405b4da13",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "a65653d0eb760042ab3c03fe133a4ad5673092b32fa5e6f1edbbc21ff8677553",
					"line": 99,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "fb354b02a7692896ab53eb07741196376ec7d515bc11c85ce65c7275b5b3c149",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "1da550334c8ce4e8a0a14e1586d5b057c684faf798a95d0c48f5e0988241d6bc",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "9b3cb33a5371e5872995e0ce0b1a3e6a045897b555e5f36b74dce9a6e121b1ae",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "151dbe99d33af198c93d602f498853210ed869cc776bc83814772d784cdc7a69",
					"line": 97,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Service",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-sophora-importer}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-sophora-importer}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-sophora-importer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "11d4ba88fd45ade6236734cae5b29120aca3cfdf7582f639a6bdcda504188147",
					"line": 137,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=bucket-mount has CPU limits",
					"actual_value": "spec.template.spec.containers.name=bucket-mount doesn't have CPU limits"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "caa6aa3b19f9aa933e12e941071131307ffdb572c5005c8927d2d7be3fe39d09",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=importer has CPU limits",
					"actual_value": "spec.template.spec.containers.name=importer doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "2402e76a14968b65ada19588d2f1d731ac74e764008573b2ef4c7a413d47626d",
					"line": 152,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "983b670f990774b6db7ceb2ba741175e00e3525e3bc231b85cab1d8f95d5de14",
					"line": 122,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "17601b35f7a81983000550a30e2bd7b8764ea6eff27be364da2ed8e39be06b8f",
					"line": 90,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{importer}}",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{importer}}"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "17601b35f7a81983000550a30e2bd7b8764ea6eff27be364da2ed8e39be06b8f",
					"line": 90,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{bucket-mount}}",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{bucket-mount}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "e4b3a9aa7a2682f4338d0d1bc27866bcf32ceadf21205aa199a59008f758bdcd",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{importer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{importer}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{importer}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "a38542f91810773c981a58c2b273d3c5dd2c7e36b22e9af80823e500255d2db6",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{bucket-mount}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{bucket-mount}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.containers.name={{bucket-mount}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "bc319178d2710a5b0e2fa2c11bb800adc908cd0a3d3e389cf8010164e857a518",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-sophora-importer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "5e73498de761e6049d10af1b01ae37c4606d8e5806d6b573eaf01ae3217b9ddd",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-sophora-importer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "0b7079cefa21238cf6efcfef67a19e3e00f37a877978158a4c61d8b94ce08c8b",
					"line": 148,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{bucket-mount}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "d4c2927c99cbebd5c955c4decef33a9e0f1a9c66e8f12378da7aacdd704742a2",
					"line": 194,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}",
					"search_line": 194,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.name={{importer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "8bcc3148e2c5171faa08ccb5f8e08251f769e45a786be3cbbfbe34a79ca9b881",
					"line": 116,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.env.name={{AWS_S3_ACCESS_KEY_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bucket-mount}}.env.name={{AWS_S3_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bucket-mount}}.env.name={{AWS_S3_ACCESS_KEY_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "f8e0d381181af4013692b8e253ba2281bcd8288b1b44dfd49afe2f131b9692da",
					"line": 163,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{importer}}.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{importer}}.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "a2d12f785422997beb7e4841090fe8f261d2e96fd3cfa380335c78e1402c8b6a",
					"line": 158,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{importer}}.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{importer}}.env.name={{SOPHORA_CLIENT_SERVERCONNECTION_USERNAME}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/sophora-importer_template.yaml",
					"similarity_id": "1476ca6741971df63e17ba42d5633019488db07324059d8942b29c5179b89b38",
					"line": 110,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-sophora-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-sophora-importer}}.spec.template.spec.containers.env.name={{AWS_S3_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{bucket-mount}}.env.name={{AWS_S3_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{bucket-mount}}.env.name={{AWS_S3_SECRET_ACCESS_KEY}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
