{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 87,
	"files_parsed": 1,
	"lines_parsed": 73,
	"lines_ignored": 14,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:45:35.664208+02:00",
	"end": "2024-06-26T02:45:37.703377+02:00",
	"paths": [
		"templates/cluster-importer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "2db0e24f4bd7654343649f2d420a79913466ea90070b735304ad6f00cd436b38",
					"line": 77,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.volumeMounts.name={{aceconfig}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.volumeMounts.name={{aceconfig}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.volumeMounts.name={{aceconfig}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "583808401495b6e2ecff85e808de38a08fc998c5ed987a17ac5525116690d683",
					"line": 45,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "834f204472d35536c8a3b69e41a2c0e54389c1fe1af36ee89644153442f1015a",
					"line": 44,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "e166be314de7d8959368f547d866d30cf2b30a1d746a187a7c748146d815ca0a",
					"line": 44,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "b28f2ba83993d79dc1a7a829af654436804d9f4b793be16db4629ea304467f23",
					"line": 39,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-cluster-importer-aceconfig",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cluster-importer-aceconfig}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-cluster-importer}}.namespace",
					"search_line": 28,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "8ac5aa374459e43d6e77ccb67f0dfd5203b8e1056467034c2a41cb2b074e02f5",
					"line": 69,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cluster-importer has limits defined",
					"actual_value": "spec.template.spec.containers.name=cluster-importer doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "3e0a5b8d094832d60b5c7b0e92f293e52cc73f1efbe1f5c6fd934adc3b752e98",
					"line": 69,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=cluster-importer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=cluster-importer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "5da7d837b9bbf170530af59c1a44a7833e46ca6de602ebe7eee7d8e9f59d5a31",
					"line": 28,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-cluster-importer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "9cefa8aab4870fa98085fca1de7a540e22af6c41eefbbd1c49cc5903cfae9b65",
					"line": 28,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-cluster-importer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/cluster-importer_template.yaml",
					"similarity_id": "6b2043a436fb8b78988fb0a157334fbe3fc2bba2654ad07f8c6df967de5e1c70",
					"line": 45,
					"resource_type": "Job",
					"resource_name": "release-name-cluster-importer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-cluster-importer}}.spec.template.spec.containers.name={{cluster-importer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
