{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 79,
	"files_parsed": 1,
	"lines_parsed": 76,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:00:14.536322+02:00",
	"end": "2024-06-26T03:00:16.646041+02:00",
	"paths": [
		"templates/minetest_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "d38efc1f93d09223e9d7010aabfb0b07c0c0e5a2d373bf70610f8335602dd8ca",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "e15c7df852fa280de2ceab0406e9d444d34d75a7218ccf93c53967aa7dc9e658",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "0e42cfaa7cd0888ab9dc0ed05f3a6899141ce1948c59d1f2b8ad4aa7e8c5167e",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "aac425eab1e075bcab21a3e32421ed8a967af78c45d839c89c34d6f9a7555ff9",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "c9e7b7cbbbe2df66e6f8ab7e116ed33c143e9d298dfd178375664a558873207c",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "51b44f3503275f69586d5c1dfd11f4900ea3c24e09a5a52556fc19c7279a03ad",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "2f1bad4cf5b48e21e62b57db248da3927147e6ed813bcc908bca418bffdde78f",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "24ebc9be319e5ef498ca1f6429ddda0be3d74647e3902f7cd1eb7d1ac1a143fd",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "c00dcf66308af601d40e7de19ff1bae5331c3336f5fd09338dbe41099a02439f",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-minetest}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-minetest}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "eea5e8bf79864d35150b36068d1e11a0793b5331bac1e27b6fa5897f82bbbeab",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=minetest has CPU limits",
					"actual_value": "spec.template.spec.containers.name=minetest doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "c18b56f754c6530d95b8d9efb92e9aab1929b9f82f92b7c7441e3987e7208f22",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.resources.requests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name={{minetest}}.resources.requests should have CPU requests",
					"actual_value": "spec.template.spec.containers.name={{minetest}}.resources.requests doesn't have CPU requests"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "f57b8a51efc19ba0591a17cd740dce4f94141ddbce3cc6d9a70abcc1e48e6241",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "bdce24ce7a29b35c50c83be491cd48afcbbe225d7ae962503c10cb3276b7a706",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{minetest}}",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{minetest}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "d5d885b6e1ab5bf6a229ce603171483a736db87c20f314d0158a486a5aee722c",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.containers.name=minetest",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.containers.name=minetest.securityContext should be set",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.containers.name=minetest.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "0ad9f5e294c1b8eade811c17d0d33fdaa2d604ad1f17fac2269e412b0a13853c",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-minetest-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-minetest-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "8db9f058499c853b9e8ac51d06cb126ca207ea0caa9e71a6a1eb6aecc6912588",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-minetest}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "fc874856488b28fbcde0de6cc57083fa0161e1cc3cb2e32661b440235f03fafd",
					"line": 18,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-minetest}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "3aaf1af0778ba3a8aab4d57d47e50eb53bd94b367cb1c50abad6e65c28390e31",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-minetest-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-minetest-config}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "2cc284b5be14f616a223e404ce6395b5cde70cdafec1207c688618ef2f9a1cc5",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name=minetest",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=minetest has a security context",
					"actual_value": "spec.template.spec.containers.name=minetest does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/minetest_template.yaml",
					"similarity_id": "4e03d110b590c5afa6702acd9107d56218f953d71bb93f98da8e713b6a45c056",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-minetest",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-minetest}}.spec.template.spec.containers.name={{minetest}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
