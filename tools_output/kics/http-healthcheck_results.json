{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 160,
	"files_parsed": 1,
	"lines_parsed": 155,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:35:09.214223+02:00",
	"end": "2024-06-26T00:35:11.271895+02:00",
	"paths": [
		"templates/http-healthcheck_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "b2a8c556d51f408f75bcb46d5f647b00050e6ea7e981b67224068264f293f293",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "5706cc5219028457747c1150f5ecc6b21a3b786ac1d768759dfc6bc50482d5c8",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "5ff6f45ae3a637a72316818ee96a4c850e936b106e7e58161127c43e6f370ab2",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.volumeMounts.name={{configmap-nginx-conf}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.volumeMounts.name={{configmap-nginx-conf}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.volumeMounts.name={{configmap-nginx-conf}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "ca228396f50671b423bf6295bcdffdc8f14d8e649c0825dd1946e972425bfb63",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "462df646a7f067a211e46bed6ab95b6b70e79bbc124a38d355c0c7356a2c7ff3",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "0fe4eed09c2f11c8c5df1590c5280a98400c2c62f15d8793e5be8506e55dfd48",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.runAsUser=101",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "6eed6499090c63694fe92f22f6953665c5717ddb69f166cf21f7fa4d5f75bd1b",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "9ac913dd5c975221ee00bbe6fe33dd4f30fd4c12ca90bb3375f75f5ee4fad820",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "0da1bc6c6e885e12b8674f6e836ac89275b8a2ee90a1c180b15fb3565c50b5b6",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "2ec68a3ac3bc98dec23106e27bee81a27c4b2f7edc8f307c445015ba0bd843f5",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "cd0348fb2feb6789b2b3319723a5334454236252eef9d80c47305e41decd4b49",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "ea1e4b57b380cc23a2e1653c1e60e91b9096ad8f383347f0fa1189ea0c721d68",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "e697a1ffd7f82d0867eb7a7e72af6fcca8dd52b7c63c29ff4f838b3af7a7942a",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "7e42ad183a05721671b8be88010a0315863ed96e35b90853f052c47bb5b9e5ef",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "5f79c8d2cdd75aa041c0e0c3f87e3a84cc5038ad29881a0b5b0d81efaa64bdb7",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "08205bf39aa480cbc307fbaad71e9a38d9418ede3f85b1262d6c82bdc0d47de6",
					"line": 153,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-http-healthcheck-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-http-healthcheck-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "990f9271c47e0c1093aac281bf7ffbd493079f478bf554a9826d148481dde325",
					"line": 153,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "07a9094d2e96edeee0215affc593853a708abe9753d7e96acffeffbd3a739dd4",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "dcb3bf33d51c44d56beb342059a2c016976cb29db5b95340ca8d47f663f99ac8",
					"line": 65,
					"resource_type": "Service",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-http-healthcheck}}",
					"search_line": 65,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-http-healthcheck}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-http-healthcheck}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-http-healthcheck}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "9e39bddcb99942570e02c2130aa13a7edf772230471fa5fde71db4d79bca9e43",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-http-healthcheck-test-connection}}",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "88a4618b13b3f498e8be7974a722dd825723f174de576b169349da23a84cb9fb",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=http-healthcheck has limits defined",
					"actual_value": "spec.template.spec.containers.name=http-healthcheck doesn't have limits defined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "4293b1583a83cdf043cd13f835d24e979fdd5f96782515ea032709d2fc8b03e0",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "c17e9dbe9dc8181e00c06fcf77fe3d264bc3e9da057030d4ed0eb8e3c0e03751",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=http-healthcheck.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=http-healthcheck.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "0169bf221689552431d5b70e846470ff2a2e7efcf46dafead31ba4aa142965ef",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "1b42379968b0dc1684e035ae1c02559fa6334ee655edbd1d35b59473595dbf6d",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "52799d017a9008ce92135edb821d1f33a5be37877a53df85057fac80c7eeac79",
					"line": 156,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "62013c1712633ddf07e55ed6880e72a1f6d06206f386a06ef4bb294dacf5ae02",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{http-healthcheck}}",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{http-healthcheck}}"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "492958622609ebcd03132b87e45339ad58fe21488a6aa70bea486012cbfb7f4a",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "adcd3821d76fd096dc29f7a80ea181cc7292596ea809d69a53b77881bd3e6335",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "5b5bba12acf7f17f0d056f848fe3674b49834babd4d3c66644b675743ba38bbf",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.containers.name={{http-healthcheck}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.containers.name={{http-healthcheck}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.containers.name={{http-healthcheck}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "4380793c7c57200e82da25a7eed998a3b0c6666d1dcbf88eed0a71fd14b7ef8e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-http-healthcheck}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "d65d3831670c3ef82abea3e85f75862640a6b5a7faf5aeace9c5d9a0a849a625",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "751b8dfeab87f32536c2fcda15608911da7bcca37838374e3f285565b33bfee2",
					"line": 144,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "2d1ae3bbde8ca0c7edd7ffcde6173090951edf3e133640786ea8bec5063c8eb1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-http-healthcheck}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "45974cf22551910e87f7850d86a60205cace3ad3626390c818bb47d3eac2e077",
					"line": 153,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "18fe7db07517ad96736d37c9179c6bbadb88b12bcaa9ed7c9ee045400c7112dc",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "e61b70355b15e3eb6a6d873af891c8c60ae546dbe36770becdf79a88307f0390",
					"line": 155,
					"resource_type": "Pod",
					"resource_name": "release-name-http-healthcheck-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-http-healthcheck-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/http-healthcheck_template.yaml",
					"similarity_id": "4040caeaa531996bda6058ae88c952e9a77d3163ae47807cbce645220313572d",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-http-healthcheck",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}",
					"search_line": 111,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-http-healthcheck}}.spec.template.spec.containers.name={{http-healthcheck}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
