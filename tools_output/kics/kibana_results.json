{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 123,
	"files_parsed": 1,
	"lines_parsed": 121,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 13,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:02:28.560622+02:00",
	"end": "2024-06-26T03:02:30.698975+02:00",
	"paths": [
		"templates/kibana_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "379523f5edbbc2d167c8b99aa5f138df5a728d4dbfb259f097956a8fe74aebc7",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "3be2a44c70693f7601e8ee6cbcaed8ba5b8826b5d5f65a97f00816ef8aa3ebcc",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "7f7dd4d0de43fdfb1a905c8cbeaf50bebbc2542ec493139a5b64c9236c0624af",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "3329580bf5882c3fd0060aad75b04ba487dacb115f4a7a1797a579b4f27d75d1",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kibana}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kibana}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "03ac5e5004ccea7d45d21bbdb03f6cccd3ec169265a3755121faebfe560bb191",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "81ab17fed1f29e7f397a97e30045447d84a77acb142ad9a19f48d3a8d36b0d61",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.metadata",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kibana}}",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kibana}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "bf3e2d81886656aa0492b534748de18a71531f157deb7d3fc52763b3acd3e02e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kibana}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "d37165081cf60b190e2b14b18beb7213a357f7d66f175b0a7487e942e1cc4cca",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kibana}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "031758f0ae704ea2269b142fd629fb2ae87d674cd133ec27e426a5afb11ea655",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.name={{kibana}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "e725d7a3f58ca6807ff0910b82bc58e76ad5c0e0a475d1bda04fc4f22105823d",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.env.name={{ELASTICSEARCH_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kibana}}.env.name={{ELASTICSEARCH_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kibana}}.env.name={{ELASTICSEARCH_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/kibana_template.yaml",
					"similarity_id": "6552cf6511d8927c414021a0d840f66f015f3fee3dc5d2ddb47c5196cd3d1d1c",
					"line": 70,
					"resource_type": "Deployment",
					"resource_name": "release-name-kibana",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kibana}}.spec.template.spec.containers.env.name={{ELASTICSEARCH_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kibana}}.env.name={{ELASTICSEARCH_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kibana}}.env.name={{ELASTICSEARCH_USERNAME}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
