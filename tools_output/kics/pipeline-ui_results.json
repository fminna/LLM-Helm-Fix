{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 138,
	"files_parsed": 1,
	"lines_parsed": 134,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:17:06.25287+02:00",
	"end": "2024-05-17T22:17:08.204975+02:00",
	"paths": [
		"templates/pipeline-ui_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "6c4e03a2880d4488a3fce19882a862a89fc08ead20f62e13d2d7a75fac9e4857",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "d42adea581bda0d88edf37161abbcc5abd6e53164f86779e65d257f5446eaa28",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{nginx-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{nginx-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{nginx-config}}.readOnly is undefined"
				},
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "41b26540c21a3ce564e93b6c9c93e2861b9ad30559592f38d00f47d8784e348f",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{ui-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{ui-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.volumeMounts.name={{ui-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "b99982aabeafd9faf80552ead46a4ebf58f32bc8aa4a48a0365e677e779347a7",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "a26e47a0af045d0921a8c1dfbfa8211ab5f0a5fceaf2f4133e533ddc57d12d07",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "33266da3d0aa522eb27f40920da12cb70c7b4e780f0eca3c2a852537bf391217",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "2087a5a521f83b63d0232211ba8f36e6c57531a3262c227f67d69f3bf3de82da",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "22f79df2a582e3129b5de57d3c7e8c0e493e24669ccc5a4568a0500d4141d9ad",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "b7af863a50bb34bd769813b2b2d3294f25f8c68af3f73e74f536794ab1bb8d09",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-pipeline-ui}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "1e2fecfabd03cc171a80882de84ca792c2a9dc5b7a6f0d167b5b466735a2e02c",
					"line": 45,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-pipeline-ui-ui",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-pipeline-ui-ui}}",
					"search_line": 45,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-pipeline-ui-nginx",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-pipeline-ui-nginx}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-pipeline-ui}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "cfd2862e247a9bfe1764d19246085ab830af5998644596c6503d2e365964cb63",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pipeline-ui has limits defined",
					"actual_value": "spec.template.spec.containers.name=pipeline-ui doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "cc3de47ea63a0891d1b6297329263de10e0d351ddd5c6b50d7ee33e4bbfe2379",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "27f52233c6f6f0798b66a7ad27dc105918efd4d10745a46a2a73a9c24a6df79c",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.metadata",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{pipeline-ui}}",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{pipeline-ui}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "4e250cf8802ca29b50142181080d50f27fedd20f79760a0b8ba716df69595029",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.containers.name=pipeline-ui",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.containers.name=pipeline-ui.securityContext should be set",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.containers.name=pipeline-ui.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "b850f1826df08055d50dd0c5f905a4f98bab761966c4dd14a8b8012474758d61",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-pipeline-ui}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "23929621a1cf6a63f5fe4fed3f2b8380ab7b96059110bfd9424dd3c83f41d07a",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-pipeline-ui}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "a2a4fcc19f13cc8d8d597dbfb8eb74528c95d3453ba7702a8fdbae3b58583021",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name=pipeline-ui",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=pipeline-ui has a security context",
					"actual_value": "spec.template.spec.containers.name=pipeline-ui does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/pipeline-ui_template.yaml",
					"similarity_id": "a5c1357db4e68010a8dfdeee77c81221e3e376ecdd7facfe5c0d0f0312265c02",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-pipeline-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-pipeline-ui}}.spec.template.spec.containers.name={{pipeline-ui}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
