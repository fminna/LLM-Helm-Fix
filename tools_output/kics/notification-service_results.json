{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 91,
	"files_parsed": 1,
	"lines_parsed": 89,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:59:48.313629+02:00",
	"end": "2024-05-17T22:59:50.293381+02:00",
	"paths": [
		"templates/notification-service_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "a10f4cb611e2cf8d4677ac5eab47acea7099c0e1ef0116a63185290eeaf81ca5",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "9977ff9de28466e1871f2b308287bf1656a675f9afc492d052dd341004ad7a18",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "e09b7832bf79bdfe2a013e421d654020e0a4f03c8b52ed67f704ff202444f97f",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "1527f358399b6da781f75beff227a1d367cfa9a51ebb3f77df9901ba29389de2",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "f78d154fd366fa5af2dd8b7abeb088676b27f24f765b45c8cb745f3ece7c0509",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{notification-service}}.namespace",
					"search_line": 30,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "d6b93fdd59627ff747ea080e16ed5dc72af92af2c72f847dcfad15f48aea8f41",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "7b3a0f0202340642713a9221e532e7a1d384f270c21d163418089199a28f654a",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{notification-service}}",
					"actual_value": "metadata.name={{notification-service}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{notification-service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "2a5d26d92cfb622c00cffa23866a2c6ed8f730224d405ba55148bb6c2f9cc41b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.containers.name={{notification-service}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.containers.name={{notification-service}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{notification-service}}.spec.containers.name={{notification-service}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{notification-service}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{notification-service}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/notification-service_template.yaml",
					"similarity_id": "f0e3db3b9c10e822972f282c035a94153f4bb43c508ac191911faca1bfb0ea57",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "notification-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{notification-service}}.spec.template.spec.containers.name={{notification-service}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{notification-service}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{notification-service}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
