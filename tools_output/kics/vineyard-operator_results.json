{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 5603,
	"files_parsed": 1,
	"lines_parsed": 5577,
	"lines_ignored": 26,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 28,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:10:33.435848+02:00",
	"end": "2024-06-26T03:10:36.002183+02:00",
	"paths": [
		"templates/vineyard-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "a2c962707cef9d56fb4baaed3b66bd23a5d961cd1820a10802bd61e0ebeea7c2",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "fae20968d62633fea17619a9f1f38c79e702b612e7fddd43e27640a62b2ee561",
					"line": 5195,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}",
					"search_line": 5195,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "f864684dbaacb4190b1ff4986e4cc48e23a33703d510d745e17539c76c34869e",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "abcebd7121e0b0ab5a552991c28d56ae58f7e4d41a94435e5c25c8c9c9d5497f",
					"line": 5195,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "b96cf148b02ebfdd84c22622f018ad718c6519a54b3d951b58e8cebef38eece2",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "5b7aafb52451c2ab2959064df0819db58fb68fe2ab6e154e37f87dee859185d1",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "e856f6f224be98b58b0017aba8d1596d5e361eb9cbf2d6a1cceaeefb0977a159",
					"line": 4420,
					"resource_type": "ClusterRole",
					"resource_name": "vineyard-manager-role",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vineyard-manager-role}}.rules.verbs.create",
					"search_line": 4420,
					"search_value": "",
					"expected_value": "metadata.name=vineyard-manager-role.rules.verbs should not contain the value 'create' when metadata.name=vineyard-manager-role.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=vineyard-manager-role.rules.verbs contains the value 'create' and metadata.name=vineyard-manager-role.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "f4a1f9286d11ad82f5b9b279ce06b49dd6298550395cc9d3b1ee78462e9b21b7",
					"line": 5183,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Role Binding To Default Service Account",
			"query_id": "1e749bc9-fde8-471c-af0c-8254efd2dee5",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "No role nor cluster role should bind to a default service account",
			"description_id": "9879e8c2",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "9f803a9e68a435f5bd22ba819bd26a2d7923d18ee4ae9a4122f05abf2d60e5fe",
					"line": 4918,
					"resource_type": "RoleBinding",
					"resource_name": "vineyard-leader-election-rolebinding",
					"issue_type": "IncorrectValue",
					"search_key": "subjects.name=default",
					"search_line": -1,
					"search_value": "",
					"expected_value": "subjects.kind=ServiceAccount.name should not be default",
					"actual_value": "subjects.kind=ServiceAccount.name is default"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "e6de04248e4b8286d53a4c55f3a16b98504ba0f7741ebc9f044e6d2a6accf7c3",
					"line": 5195,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "c6670ee1dbda51900bd70f8c5a95973888d60624f101d1a6ed9a9238f94c2240",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "313107efdc37d03fe547b6502d35098769443e67e89c99761542c4451d9759d5",
					"line": 5135,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "b122fbf8af200dbb04b2221d1c95bb3f3da997191a399af1b62c9ba44a918033",
					"line": 5088,
					"resource_type": "Service",
					"resource_name": "vineyard-webhook-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{vineyard-webhook-service}}",
					"search_line": 5088,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "388aba2971fa51b31831e2a886d918dddad9b938ad17cde74bb8fcec44e68f2a",
					"line": 5065,
					"resource_type": "Service",
					"resource_name": "vineyard-controller-manager-metrics-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{vineyard-controller-manager-metrics-service}}",
					"search_line": 5065,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "vineyard-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{vineyard-manager}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "67dba06813ab52fbf9c7bc6a7820f264f15ea5a32ee54b5dc4dec9cbf3faabd8",
					"line": 5045,
					"resource_type": "RoleBinding",
					"resource_name": "vineyard-leader-election-rolebinding",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{vineyard-leader-election-rolebinding}}",
					"search_line": 5045,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "51c6327fab9698eda05159e2f2d58b5628b28462b0584e9fde1f6c7af98d1494",
					"line": 5110,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{vineyard-controller-manager}}",
					"search_line": 5110,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "f028f68795e3a48d363d7b74254c8ff47d693b1078b0c08818c56da10c180c26",
					"line": 5005,
					"resource_type": "Role",
					"resource_name": "vineyard-leader-election-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{vineyard-leader-election-role}}",
					"search_line": 5005,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "44f4b3340cb78e9aba6266a8fcba838e422e64c2fc5b23f0dc157d71861afff9",
					"line": 5183,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "a3cd93df0428d1bc67c6cc05a02702975c0d92e13e1b3cd8269c6ac7bcae053f",
					"line": 5182,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "bf44982833336881e217dc4e732b89c0b8fb852669eac6595052e3f38d92807c",
					"line": 5132,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata",
					"search_line": 5132,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-rbac-proxy}}",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-rbac-proxy}}"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "bf44982833336881e217dc4e732b89c0b8fb852669eac6595052e3f38d92807c",
					"line": 5132,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata",
					"search_line": 5132,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{manager}}",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{manager}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "dd79ab6ea880c76d78172f170eb0fef245724e5d669a8538fb604c91388bb6dc",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.containers.name=manager",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.containers.name=manager.securityContext should be set",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.containers.name=manager.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "759f17ecc15862542d8bdaed323448a9181a0c0090ba2d9c582ebf3de5644b8a",
					"line": 5110,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{vineyard-controller-manager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "7850c9d21456df9a05e422eda7c8ed8a1725674c5dc470e172eb2792d3cd474e",
					"line": 5110,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{vineyard-controller-manager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "0e90195b3e5795c1ae95fbd66115dccc7ecebe1a9249beed28e355dd1e46d844",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name=manager",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=manager has a security context",
					"actual_value": "spec.template.spec.containers.name=manager does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "3ee49f7682a2f673f8745cf00d6bc7c87770497aeeb7cfc0735129b28f515376",
					"line": 5195,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}",
					"search_line": 5195,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/vineyard-operator_template.yaml",
					"similarity_id": "b0f3a1020336d510d1e87994460c4784a2904a0da981aa7ee3096d9a484bc9c5",
					"line": 5156,
					"resource_type": "Deployment",
					"resource_name": "vineyard-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{vineyard-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
