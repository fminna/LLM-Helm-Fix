{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 192,
	"files_parsed": 1,
	"lines_parsed": 186,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 26,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:16:01.322855+02:00",
	"end": "2024-06-26T02:16:03.433313+02:00",
	"paths": [
		"templates/marblerun-coordinator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "74c77d89c205689a58535ea51d3e8b976503602907775218df6df708b27ce851",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "a60d7cf585a8a7e999c3556c549aef15d1c802e53878e714289af2f4204b30a1",
					"line": 180,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.volumeMounts.name={{dcap-conf}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.volumeMounts.name={{dcap-conf}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.volumeMounts.name={{dcap-conf}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "65d35ec13c8b3ebec41076f6b9e4678e593b31a7f623ee660154c14775a16e14",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "86fee6be2d1c627d0e0074ffb7b9d50b78d7dc0bf4baf12b4a0025f139ae9c06",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "c09fca6f6d325deb8028d36cc3f8fb6d4e4aab26d6074ec16a9569dee8791bfd",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": 174,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "cf9c0d8bf653daef7928cfe084255b492264b595dfb7331e3ad8c643249e0536",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "d0b9e6dc0fde35c247dc39a39f6b363fed5bc353b32086fba8f2ff39a8864bd4",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "56b13cf7ac5e38341d35a60de6561b5cd9f583633f5a3f5b535d060062e7e6ad",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "c4df5bf7ad2f706524ade50eeeabe2da761506d57848ca613146ebf66a64451a",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "7f1f8526b118da1d11a1d2dc99ffed6111d8545d3e3a457ec4d75052f4982963",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "coordinator-client-api",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coordinator-client-api}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "marblerun-coordinator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{marblerun-coordinator}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "coordinator-dcap-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coordinator-dcap-config}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "Service",
					"resource_name": "coordinator-client-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coordinator-client-api}}.namespace",
					"search_line": 60,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{marblerun-coordinator}}.namespace",
					"search_line": 105,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Service",
					"resource_name": "coordinator-mesh-api",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coordinator-mesh-api}}.namespace",
					"search_line": 82,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "14fb1eb6c6930be3e510484af1d044b81d3f78ed5158217b9c21e6b652347e31",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coordinator has CPU limits",
					"actual_value": "spec.template.spec.containers.name=coordinator doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "d0975b7819cb1519e304a781154b13d3eb1cd51d32054fb226227b2591af377f",
					"line": 173,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coordinator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=coordinator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "6b6e4bba203c6743721e2899913d3ce418cfffd9b48a1a861db6347aca7bb518",
					"line": 154,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "93b5ed098769d7c5c1a4ab4efdf3e8a592c2f2558b45607eb0cade19afaaa05e",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{coordinator}}",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{coordinator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "2a9b675b534830fc2432979182f289eba8717773c59b49cd531d8ed14c96414a",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.containers.name=coordinator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.containers.name=coordinator.securityContext should be set",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.containers.name=coordinator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "85a714684def9b9fa7a4d789d51ff84c9da1a038c75787e63692a518438f049c",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{marblerun-coordinator}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "bc9153e6732afd3fb122bad47118d73938ac0a3614ceb352c6b82a30bc6257a2",
					"line": 41,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "coordinator-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coordinator-pv-claim}}",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.name={{coordinator-pv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{coordinator-pv-claim}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "efae28efab1438446204d0a56d560aef01d7b49173b1240ab577965effe298a3",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{marblerun-coordinator}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "26e72922485b1f6f2b6b5c7662e46b4903a37f9739b33087584172908382b482",
					"line": 41,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "coordinator-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coordinator-pv-claim}}",
					"search_line": 41,
					"search_value": "",
					"expected_value": "metadata.name={{coordinator-pv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{coordinator-pv-claim}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "8115cdc46bae624a7acfd08c561ebaeca14e184bebb86adbe51b5bef21ee13ae",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name=coordinator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coordinator has a security context",
					"actual_value": "spec.template.spec.containers.name=coordinator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/marblerun-coordinator_template.yaml",
					"similarity_id": "d2599e4bcb456786bef2aa2596a80fda61dd2b3caf886fd8d387c6897a070e9d",
					"line": 152,
					"resource_type": "Deployment",
					"resource_name": "marblerun-coordinator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{marblerun-coordinator}}.spec.template.spec.containers.name={{coordinator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
