{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 96,
	"files_parsed": 1,
	"lines_parsed": 92,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 8,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:20:29.617744+02:00",
	"end": "2024-06-26T02:20:31.752363+02:00",
	"paths": [
		"templates/k8s-event-logger_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "6d73e6e79728109e1918cb63ab487eb2f57020ce2e746c3e1d86618e7a9f968d",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "9027c48d8784526872286a3aed81370b018f45ce7ac3f477f025d38d1c93a91a",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-k8s-event-logger}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-k8s-event-logger}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "f879843e965d0a0642a031b439c1f4a43c308cb9c82d3ee90f49d56dc2cce9bb",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.spec.containers.name={{k8s-event-logger}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "debc3f90a2891f76e3e21e6e4eee2ad8b2f852fee1e08b67f5a23e7587064e16",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{k8s-event-logger}}",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{k8s-event-logger}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "e03d2f7370b2b531f04323f88c499cdb5793744931303f4cf6dbd0d9961b6d17",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/k8s-event-logger_template.yaml",
					"similarity_id": "4e4d4cc30b8b1570d6c74fd16f969c999466d2f2e9d997f2b39462197b0d5979",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-k8s-event-logger",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-k8s-event-logger}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-k8s-event-logger}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-k8s-event-logger}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
