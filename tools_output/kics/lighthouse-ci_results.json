{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 215,
	"files_parsed": 1,
	"lines_parsed": 208,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 23,
		"TRACE": 0
	},
	"total_counter": 44,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:49:01.955061+02:00",
	"end": "2024-05-17T22:49:03.869206+02:00",
	"paths": [
		"templates/lighthouse-ci_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "905fa4ed756e3aa6d9143811b43f6b0b5cc7f75bb668d4fd4cda266c4b72ad9a",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "0a2e28139aadf77db68eccd69fb5e7a310dc09b7ebb0840954b66ecff9faf0fd",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "3bea59fd050a0390fe9a064c46470a406532735eb740e5ce857292c7f76d123e",
					"line": 147,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "f4fde9fdfb34baa970dc7eb220d639a81b62bdbe52a8491c684478504f4b3e1d",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "b4dc573e7bc5ced7b39a19962fbe2ef7cc79dda90ad4f1514a3cc10abd559d29",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "f8280e336a19badf8b904f828275725332dd537d936b1186ab8e7c5b3c453d58",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "cf281f965aaa2b084801432689f34cd711803939ab2ac650307216bf1a6fb708",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "3f69d4d50adf828abbf358c13ef0beb1ce0d2c5d418780b0fb14366526f6f866",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "ac0b204d1d803d0615288b532c85210fd9e542ce7f5077c00933d44293ce1ef4",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "87c91e00ba88586bd2d7aa1a1fcd2a8f43c4a17ada08b5eb13bf645db5ba6380",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "6e89bb9430eb01936e179027135b9953c7f44d9317d151c2f457abf15b9d8658",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "b3786e5ff7d58766715029c8ec77c680cac95a7c4542ab57cea819df7fb6c0ff",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "b7896609ebd841c223a1b1f58e9067beaf40df340874278221268e1cf8a80dfc",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "ef67b6bdf653d9601334579c53238e9bcf8320a3d9c88432fc231413841604e2",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "0e4eeb2c9f5de80bc4295729a7c03a4a7bd3e5fc1730349488536cd594455c15",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "d80b1c080fc020897bfb479aec114490185c1410c6bef4f7fea5c47f1467c722",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "9aab9f60899852259214246736598f92b9578a6ab31a4c52510a882f1d71576b",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-lighthouse-ci-tests.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-lighthouse-ci-tests.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "aeffdad99f5e933254acc1ea6e9fd9edc14249a6431b10475eef2a8a16801629",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "ec60f9f3f4807b73ce88034c3c40c5790086bf22c338bc63aad6d9762b64ef51",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "9e5ff785eeae3443d9eea5394f7d81d07d41bad190f7ddde26f3af1ebb53b112",
					"line": 163,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-lighthouse-ci-tests}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-lighthouse-ci}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-lighthouse-ci}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "10e4c519fdaf84f913cff96cc5a20a45427aede4da64fa0e250766ae9a37ca24",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-lighthouse-ci}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-lighthouse-ci}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-lighthouse-ci}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "37c42ad761059dfcce6944d8c0ad33fa309b10f6d0474a59e455548176b510a6",
					"line": 189,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-lighthouse-ci-tests}}",
					"search_line": 189,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "707d224b21cdfae84092a3b134e7dc3ec998dc08c4f347aaaf06f0c4e102dc60",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=tests has resources defined",
					"actual_value": "spec.containers.name=tests doesn't have resources defined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "1bb903084616ce418a7a8be391cd9b738cbef8fa4b335cb2f37f4e35a1375530",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lighthouse-ci has limits defined",
					"actual_value": "spec.template.spec.containers.name=lighthouse-ci doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "4a609ddd625cc3aa95e4f66ea59154939da3927508b604e890a3957c8d60bc02",
					"line": 144,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lighthouse-ci.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=lighthouse-ci.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "dadc1292eead1f4e23995082e71d2dd000d893e18df3f2170e64ca44bc5f1213",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=tests should have resources defined",
					"actual_value": "spec.containers.name=tests doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "41a49ce1fe3f0c2434ffdd9f8afbcd0ec1b8c87553bbf765b2298887318feedd",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "d25731e5bca2c49a10e7f569b032cf8e6f48cd1ec0412f67f3be2c5b21b1cfc4",
					"line": 204,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "fcfde57acdff61049a90acaebd74d21bfadb59efd2f691d92dbbe0385c173282",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.annotations should specify an AppArmor profile for container {{tests}}",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.annotations does not specify an AppArmor profile for container {{tests}}"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "cf6f77b29b9b51478a652bbe4f7e171c6de955d1f7761a369fbe06e7ae676325",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.metadata",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{lighthouse-ci}}",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{lighthouse-ci}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "95ebfb46fb978b6358217ebafb88864d6f50d5639e989833a193e977a38172e2",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests.securityContext should be set",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests.securityContext is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "e53286b88468f3db47ac5aea40db88fac3f4781b4823da56abf211bc32a2ecd2",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.containers.name={{lighthouse-ci}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.containers.name={{lighthouse-ci}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.containers.name={{lighthouse-ci}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "83a06368430c5a056a7281025eebc331c3908b20c0691810fb42eb3e0712dd4f",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "91bfde297419a3626f4619a4266a9daac60a1abb739af70946207d17af54e475",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "e762166caf1227af6c14ec0524f63013005d6c1eb34cc2462c0e1161a274bdcd",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "563ed077dbabebe3ee20861c0f38842504e145644b13a901a40797077077510d",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "2efbe8ac03adeee681ba671023d9d0846a7f0ac11a99b8ace59b1b07669831d8",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name=tests",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=tests has a security context",
					"actual_value": "spec.containers.name=tests does not have a security context"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "e949b089c11ab3f94787872b5a97c09cd546fbd9381ffdeabb13dea4589058e9",
					"line": 199,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "9f12cf56441eae84e961da984753df6b6938cfce9e4bd115026918e6fe856417",
					"line": 202,
					"resource_type": "Pod",
					"resource_name": "release-name-lighthouse-ci-tests",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-lighthouse-ci-tests}}.spec.containers.name={{tests}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/lighthouse-ci_template.yaml",
					"similarity_id": "c43ca40601b6dc96a2d0966cc3175aa5517426857086d3ca052796472fc94157",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-lighthouse-ci",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-lighthouse-ci}}.spec.template.spec.containers.name={{lighthouse-ci}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
