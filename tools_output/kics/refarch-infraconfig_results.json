{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 143,
	"files_parsed": 1,
	"lines_parsed": 140,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 28,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:27:14.73785+02:00",
	"end": "2024-06-26T03:27:16.814693+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/refarch-infraconfig_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "7d0867433c834ad0a171b5d18f72e31786694d8d5dad4c7f07397defc6a8e8a2",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "f4f3211d4236b4368dbae8633c0e119056bd051ac4c2b76de076209b599ca4ce",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "d7f3c5fe2da87d3d8d6d9f8931a204afd18f8b1c669cbdd09c9698664b92ea0f",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "2fb1e4ce0c8b1cbabda22f9a15b77025c7aea56db9a9c2834f3293450d5b7c55",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "f8784fc962606021118ba0dd8ff3dfec4931370337a93f34e603be97d3bf36a1",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "7a82d3317f49eb8bd83c43aee1574367a0a6f035746977fb12ecccec04c8fd68",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "163a2bb97d2e85a6ec637746f42cd7ea87a6f5e11fc32630f1b0290138e03f8f",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "9352c1592e6406c9e9237132393faa5efab1226cf8793cbd5b49fdff2c2520bb",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "ebff802f4bea56457f1551c1b5f76cea35d4a1ac01d239044b2087184aa3dea7",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "2a3f9faefbe050eab08e505b96c2bbc6e78460490c285d4307295488edaca610",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "694a9a8e536a6ccccce0bc11462f3a2da54481ab5f59059da45de3113b124e5c",
					"line": 120,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "0ecff33a161149bd769191bd050d0eac94506a6c463509f96c287f19fbc79f15",
					"line": 87,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "2589d3f9d0a6cd1d37dc7b6213dd727db1e1b4e19254607d79b6a0eb32875121",
					"line": 141,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "e9de79d8e058e789942fbedaf21c872d227b2c8ba9a2401073f15790069a885e",
					"line": 106,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "ad1818af00efb2695c27aaaf79033619e9f990c1c827f671b5069e80a95cb0c2",
					"line": 123,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "06d8bd4733437c4a303b8472c5fb268210bc6d2ffc4bb3a207959221590e37ef",
					"line": 90,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "8b49b7f7208b472994136049e1b8801ebfa4e2633ca12489149790cf612140c1",
					"line": 81,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.annotations should specify an AppArmor profile for container {{config}}",
					"actual_value": "metadata.name={{imageregistry-config}}.annotations does not specify an AppArmor profile for container {{config}}"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "21aa75b762cf9e177943dacba2a0a4a0350cca314ecb5c680dbdd07b5a6301e4",
					"line": 113,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.annotations should specify an AppArmor profile for container {{config}}",
					"actual_value": "metadata.name={{ingresscontroller-config}}.annotations does not specify an AppArmor profile for container {{config}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "3df7aad5ad017a46cb463b5ef872696f0e248421d668827001741b775dd1a037",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.containers.name=config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.containers.name=config.securityContext should be set",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.containers.name=config.securityContext is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "28ae81cea39be95d2c2c5c0533220bf03569b043bbe04d6b545eef71448846b3",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.containers.name=config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.containers.name=config.securityContext should be set",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.containers.name=config.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "42647d01a259dbef9506c3940f3955375510cc331639e20e7108a73febf9e742",
					"line": 114,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{ingresscontroller-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "bf484f4eefe3892d5a4da0b833b0f31a711b58a25bba6ad77d2f4ae97d46f196",
					"line": 82,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{imageregistry-config}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "68266c1557a8db28991f87ee1b9066f3e55a17fb955c26de527d55dc8a90d3ac",
					"line": 114,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{ingresscontroller-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "d7e1f8c40a10667dfb9aca9fd48cd87e2b87942d6b14e5d4ea0dfd1c2661ae64",
					"line": 82,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{imageregistry-config}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "0e96dbf2af04a293e4f1dd26c9bbaac32f23546ffbfc89851cee186072569483",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name=config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=config has a security context",
					"actual_value": "spec.template.spec.containers.name=config does not have a security context"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "0c68b79dbd48cff8075c0ac4b3bc6fd0194f78614fb7a1a518ea43d97da4e570",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name=config",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=config has a security context",
					"actual_value": "spec.template.spec.containers.name=config does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "93e9bd49bd6e4099df6bba77105c5b610c647ac6f6fff830011e9dec459c9f68",
					"line": 122,
					"resource_type": "Job",
					"resource_name": "ingresscontroller-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{ingresscontroller-config}}.spec.template.spec.containers.name={{config}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/refarch-infraconfig_template.yaml",
					"similarity_id": "89968b9dd96d098941a948677e595a9286b6b63e9e492911e14c60ca865630a4",
					"line": 89,
					"resource_type": "Job",
					"resource_name": "imageregistry-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{imageregistry-config}}.spec.template.spec.containers.name={{config}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
