{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 99,
	"files_parsed": 1,
	"lines_parsed": 95,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:00:58.029779+02:00",
	"end": "2024-05-17T23:00:59.947779+02:00",
	"paths": [
		"templates/gateboard-discovery_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "7be345b154f8423cbb77c259a8064165a56c2682adfb87738f5ebe60bc27e465",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "4cc630b10686c61514504b03dad51bce647739cc7cafaf743bad372e4b3b782c",
					"line": 83,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{accounts}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{accounts}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.volumeMounts.name={{accounts}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "55c28d2451bb8342765acb714e6a99e2db7185eaa4e059f5e76717f525256023",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "79dd4c50a16f07d581c6f0cf983ee447072e4cc0f885c13080341a066c3be5f9",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "dcbf365d2e3ccb6948ff4360d71371a51bf769a3f667522a46d000953f6cab49",
					"line": 74,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "f726d293d382247feee9bb8c456fc070e034c54e69c9062eb94c5b7ae935223c",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "6ca67af6920e8cebccad9a4db95bfa298a232c00dd54de1d2894e2c1b0b76ec0",
					"line": 69,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "0e667173d8438ef37dbca8a46e1b4705a26eb64d998482b8193984930761bacc",
					"line": 53,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{CronJob}}.metadata.name={{release-name-gateboard-discovery}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-gateboard-discovery}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-gateboard-discovery-accounts",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-gateboard-discovery-accounts}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-gateboard-discovery}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "c2e6487a0fbe2226f3c141d87da5cdeb06be85a29bfdd153deba872e12585a55",
					"line": 78,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "e33ca6d5ed01a5e1d819046e269dec4c7cc64f2c4688146a321273c5e58052ed",
					"line": 67,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.metadata",
					"search_line": 67,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name}}",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "3af864bfec523e79aa24037a5cd1518d1f22e7e82c65af1abfc922f014a7cb4b",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.containers.name={{release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.containers.name={{release-name}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.containers.name={{release-name}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "c8b990f8691d37f52587cee8a76df5c47f2b7b9f6285751daa5f629706816fbe",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "fc765b9775c4bc43bc1262138e2ab825b6bc9693c6de95f9bd6ad8975e8b3443",
					"line": 6,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/gateboard-discovery_template.yaml",
					"similarity_id": "b884e7f61cc60be70b367aa86a02b6450ed3ddc4e63fbf51745131b51bf385a9",
					"line": 75,
					"resource_type": "CronJob",
					"resource_name": "release-name-gateboard-discovery",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}",
					"search_line": 75,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-gateboard-discovery}}.spec.jobTemplate.spec.template.spec.containers.name={{release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
