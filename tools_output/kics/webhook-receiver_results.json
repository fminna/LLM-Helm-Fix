{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 182,
	"files_parsed": 1,
	"lines_parsed": 176,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 23,
		"TRACE": 0
	},
	"total_counter": 44,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:12:55.575492+02:00",
	"end": "2024-05-17T23:12:57.564411+02:00",
	"paths": [
		"templates/webhook-receiver_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "673f26d1f5bb3c421bfc0481cb126f6df72c92842c21f7b65362ad8849bc6223",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "83cf640ec631cfac4a077b6c2e7ae6a6fc2cb965f538a2a7a7c00c4b47e664e5",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "52bcb647b7d671d0bcffdcab87add3b6ef572bea5cb388b9469462f459e99925",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.volumeMounts.name={{configs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.volumeMounts.name={{configs}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.volumeMounts.name={{configs}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "ed530dff2c12310bbc9c7fed1c16844e77ea2e92db895dc77c95012c546eac5b",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "0d9a67f46be8cd8e0a7e93d9724f46b501c05f7a8be01ffc49825b4d5d1bdc02",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "b4a9b0d87b0e64bf905b3806690790d235c4f23d4ff8d67b7c7187a1e8b9f38d",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "a7f1fb6dffe7b08096ca60e8a23660d80bf28b12d8ea725c310402f1e87157a6",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "243550c5a6899a1d8cd5a07bb7bec7b1c930dcb129c7513a01bcdf2e7b14919a",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "cf48c98f6803b24a9d93d6939b0be4279da13a95c745938b6be5840827167c1f",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "f802032a742fff6f7e21a5602f2a9a0732223658a3f2a1e58ec222fe31dd7e52",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "2203517a544497352c664590d49c18693f7b136376dccd053baf07c8bb99c049",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "2024b60985223287c83589580c6d4c7c6520912a3f4f592974156366b0ac54c6",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "9a7d86e6e0f37f1a9b71341a00e25b550bac16113e5901c90d4a69fb2a938f59",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "c07cc07e4ab495a73097944b88dbf4dcb1f825cc070b76f8db0486bbc291dece",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "75fcd9ca9e3567a01aadb126b4ce974debaf1ff33cc7e547bb992e24c44bd3d2",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "e7f35fa23a3fe5ca9abf28e4544e32f3f90b5a4b56d54300d52be179a653da63",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "bb2adb86db1d8b406ca8200a493f21f8516656f7e8f1b731bd12b2c467ebfc5f",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "58f073f9345918ac62fd3496d2f032aae6a973df8ab7babf559f62a7ea7d66ef",
					"line": 175,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-webhook-receiver-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-webhook-receiver-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "011a068bee2116d92d52c68ecc71dea126127e1b65f3eafe43ab0961d601c24b",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "9d514a83f38fc6fbec07e79d0cbb7f5ce1f492db748129c5cdf9f74f6627ed56",
					"line": 175,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-webhook-receiver}}",
					"search_line": 57,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-webhook-receiver}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "e2ad6dec461a5cc37186db89fac4907c389dc736a4cf457493a2287fca9adfde",
					"line": 166,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-webhook-receiver-test-connection}}",
					"search_line": 166,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-webhook-receiver}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "d552be17a6727a6816c17083c489f633f27ef2e89a2be164fae47616900d5773",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-webhook-receiver}}",
					"search_line": 79,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "b51bc26680b78435560610f1a96c1d68c8c0514b5c25545dcd9153028c69dac1",
					"line": 141,
					"resource_type": "Ingress",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-webhook-receiver}}",
					"search_line": 141,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "9cc3ea9420da2f179ed185c91345cc7f25c9eb3b2ed7c7d0ad7e943ac56a599e",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "4ef34c8a352c2c06c506e4d033ed24ef06667f9426bcd9d0f2c0f1779832ede3",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webhook-receiver has limits defined",
					"actual_value": "spec.template.spec.containers.name=webhook-receiver doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "c0b605b82a5cc601670759ebc6ef699769209485cd1eee7205a71a9a1a47a23b",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "c0749cfe9fed4e33a8649a21f85eb6457c5c729cc370c05a6cce1539dd75b0e6",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webhook-receiver.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=webhook-receiver.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "26cf70fbaa9ce2212b0a86f7ed578105a8e8c49c62a448b231eeb3de1a154682",
					"line": 113,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "9cb0786cf85b4791c01902cc8c34a4bb4e20ddb0720d741ac20576ef778e84e9",
					"line": 178,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "b8e793bea19760f4015b07f0d7c0f88aae92484be9d01c7cecccd8c29bf3f26b",
					"line": 166,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "58281af661ec605bf4766cb80d63c960e536daf74096f77d0c4c17e9796ec22e",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{webhook-receiver}}",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{webhook-receiver}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "1128a50a8fe5c96aa9c58abb2548191b6614eb6b7d55d3c623ebb56ea959c7e4",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "a8d195cafd6d97930743664636591c7b7ec347a77849cf5edcb26659ef821315",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.containers.name={{webhook-receiver}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.containers.name={{webhook-receiver}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.containers.name={{webhook-receiver}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "8d49e484f2e9cbd35e64375aaf2a17eb0edc71283e2aa128e2412c5bab5d3a9f",
					"line": 166,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "f230df7bf62bb8602a8e555653da28c186235f32260770ac58c8b9947e7f8fa2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-webhook-receiver}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "b482df1f18cd702833037f1d09ef9c378e5d7e0dba0df37c6b4bbd49b95225ee",
					"line": 166,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "7e2b78cb4ff127747eaffa2172134e543419b8f0fd6e7f85cbfb4392b5706c91",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-webhook-receiver}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "100e242733b21db345baf2ac5084a87ffb1cdfa98735b67ca70ee9723cd3ea41",
					"line": 175,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "642e0e974df37749f29517d32f3dc03d6ee726933e94fb01d2f3b701245c1ea5",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "abcce0e73349959eb8b39c2fca19af23bdd1cc217819a19906c945717e462b59",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-webhook-receiver-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-webhook-receiver-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/webhook-receiver_template.yaml",
					"similarity_id": "9193116631b27cdf00e8ee39b444c175dfd698f26e80f2009f28d18f9f7d82d6",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-webhook-receiver",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-webhook-receiver}}.spec.template.spec.containers.name={{webhook-receiver}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
