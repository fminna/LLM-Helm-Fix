{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 133,
	"files_parsed": 1,
	"lines_parsed": 131,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 11,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 27,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:09:00.140019+02:00",
	"end": "2024-06-26T02:09:02.16715+02:00",
	"paths": [
		"templates/nri-memtierd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "00d0fafa8468d6f149944ff2d365b0b50349be96a4ef02aca9637d69a9601631",
					"line": 108,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "0b72a856c7a156e3c13354a3f256f117d91f96d9176a6aad612c43a4e86bd0c1",
					"line": 131,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{cgroups-vol}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/sys/fs/cgroup' mounted",
					"actual_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/sys/fs/cgroup' mounted"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "03e9104d57390ea1e963511c27dbf4c211d231552a6884f1e097a48c995d3c0c",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{host-bitmap}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/sys/kernel/mm/page_idle/bitmap' mounted",
					"actual_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/sys/kernel/mm/page_idle/bitmap' mounted"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "023ff2ce198b3e71f76450a30506945c8577ea6cadec4de4b0ede4ebfa1ada5b",
					"line": 124,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{nrisockets}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/var/run/nri' mounted",
					"actual_value": "Resource name 'nri-memtierd' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/var/run/nri' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "c0ab5cde6364e025943a587b188dc4b120d85cbf2ef2a397b5894f0e31a5e56a",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "d6f51b3831af17448dc115e5044c5a814a17d3dedf485c95211958a06ff0a8ae",
					"line": 89,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "01ba99ede8394209fd2e197674cf0ca9081ec56f41475ef312960db8eda23791",
					"line": 110,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{memtierd-config-vol}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{memtierd-config-vol}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{memtierd-config-vol}}.readOnly is undefined"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "4b41398f9351fcc25d51f77af646a3919b63440a9000c09bf8b2f2903d814b1c",
					"line": 112,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{nrisockets}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{nrisockets}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.volumeMounts.name={{nrisockets}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "f14ed09d089379341ea7c1cbbc02e4aa7244ffa2c66a6dcbc43105057febdea3",
					"line": 131,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{cgroups-vol}}.hostPath.path",
					"search_line": 131,
					"search_value": "",
					"expected_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/fs/cgroup' with hostPath",
					"actual_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/fs/cgroup' with hostPath"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "d51d7dbce54b5f3f11461c79a358d7ea10d1edd25e4acd61cc1bf33fcbb03a83",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{host-bitmap}}.hostPath.path",
					"search_line": 128,
					"search_value": "",
					"expected_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/kernel/mm/page_idle/bitmap' with hostPath",
					"actual_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/kernel/mm/page_idle/bitmap' with hostPath"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "e57819b250e27fbd69549cf32440bcf91dacfe753b79a9240c0de7db3c302d81",
					"line": 124,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.volumes.name={{nrisockets}}.hostPath.path",
					"search_line": 124,
					"search_value": "",
					"expected_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' should not mount a host sensitive OS directory '/var/run/nri' with hostPath",
					"actual_value": "Workload name 'nri-memtierd' of kind 'DaemonSet' is mounting a host sensitive OS directory '/var/run/nri' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "fdff81af4633fe6c8f9a33d11bb880a02cd7a3f3bab43794a8e0abe48d0665a0",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "bd84fe303aa5263bb855618580e9830f2664a224fbd9d054b58869a9ce4d6e75",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "527436dc1e623c51eb73e6ac764459507c9b21eaa37814ae1b7aed9034a26e33",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "42affb7a6d6a713de16a146d1cb8e7d6e0f57a7c4eccedd7000cec9a157af494",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "6eefab8c59715cac88c9b61afa4b747bf6e9b3980cb5de02dda051563280897d",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "13b70d87efa08aad73ccad0eeebb8736e173a101d57695de50c022b4d99cbb65",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "ca77774f4ad13b001f4d06108a3d5d3e94154a84746fb070cf2f53630e4c6f41",
					"line": 86,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "nri-memtierd-config.default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd-config.default}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "94d1e151e77bdd9b6002e991f0d6cbc6f33cb948fcdfe8b7bc582d3886a8abdd",
					"line": 73,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.namespace",
					"search_line": 73,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "7a68d07944593990cc23c260bf6b2d856c018923e4c5e6845e2c799b51ad4c66",
					"line": 103,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nri-memtierd has limits defined",
					"actual_value": "spec.template.spec.containers.name=nri-memtierd doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "584e8ea8e45990deb6dec7bd2491e47551244154c8f323778e1ef88c8eca1b4e",
					"line": 102,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "06eb46498253267bb42b9436f3c677bebbecde3c57f9c6b90b334dca3723f917",
					"line": 80,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nri-memtierd}}",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nri-memtierd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "8bc932198f94cc72ee8b44a5618e85472ac2c69645a8504c684b0371c83b0412",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.containers.name={{nri-memtierd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.containers.name={{nri-memtierd}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.containers.name={{nri-memtierd}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "daf6f9c2c300b54a76637597f8ed9a91014320706f549416da281f74fe5f850c",
					"line": 73,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nri-memtierd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "85258a33c9ecdad67471a98c5037bdc01ca2258455adf8d9ef44600856ee211d",
					"line": 73,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nri-memtierd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nri-memtierd_template.yaml",
					"similarity_id": "0790dc17465f8cf128efda4796d4a2980a88416484c0cf91ccd8517a052b9b59",
					"line": 107,
					"resource_type": "DaemonSet",
					"resource_name": "nri-memtierd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}",
					"search_line": 107,
					"search_value": "",
					"expected_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{nri-memtierd}}.spec.template.spec.containers.name={{nri-memtierd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
