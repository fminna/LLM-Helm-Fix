{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 375,
	"files_parsed": 1,
	"lines_parsed": 352,
	"lines_ignored": 23,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 26,
		"MEDIUM": 30,
		"TRACE": 0
	},
	"total_counter": 60,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:43:50.255367+02:00",
	"end": "2024-06-26T00:43:52.384154+02:00",
	"paths": [
		"templates/reviewboard_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "71208987b2e3c1ae5c20c2a2842c4f26bc6a9c184146512d5c812319379b6e93",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "b7e6529534f39fee194ee18e9d5c5aaddbb6992a5257fbad0dc43b19da835811",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "372daa4bc28193c01f39f10f2c6efac38758ea9552144581b0d97f40561e7cb3",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "6cf33d2fefdc2dc7bdfbe09a7b896e097159009a38bc1822e33c15901d4eb0c2",
					"line": 217,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{sitedir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{sitedir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.volumeMounts.name={{sitedir}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "6d72617909d45fb221c197ec7f39084b9690dfc18132640abda6f162e0d233fd",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "1b4aa89e17fefeb099c19930c25f742f3d11355f89da66ee741c83f135cb346e",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "fc26ad7a3cbc75ddf4af64a5ad9e26dcdb1d018b013033aa889267102666214a",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "1c67882b69f40bd6f065e2fe0d7010e487ab95dfdca9d6a5ceaad6c4f01c187b",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "8166c53bac9dc1328afee4ae77f5d787c67d3356164a78cd0c622580f81a2110",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "7011bd03b526dc195a5068dcdef2be101a3192e5fa46a815b18650776f93d9b5",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "716f75533967662c6a6356fb6f4dcfb8f28170f0e596402f4444fb646420a764",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "2dcea08f82818f89f6e1cfc337186052443776a923ff0a9d3922c929e907a048",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "530a50d787f5beb877abc4669b10d3df3ecf077377f467e5a59a2742c36977a3",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "16e48e2079d9a237529ccfbb5fccd7d87ae6dd6d15d87fc763ab0fce4128353a",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "cf540ce4a4b0f72d3b23a82d2551a48abeb2ac7f3441564e16481dfd11cb8120",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "86a2368250c802735d2c58c14a9701f0e855eaacb8403334f4b0ed62e240c8b3",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "0a909fe020d55c445e8fd8f347907caf20ca2ad115a1cb4103e3e2e524aa7a50",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "40926c7240064466e264e9028509eeda8dd01b25b4f56cc519b0c940e0b42969",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "5acc38eced1d554a7572475cd851a69be24cce1b57c0cd6c3aeb468360e26cd0",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "cc67033767a80afec9a621fd30f8bc1a621ea3f19645327a56969f9ca2ce1118",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "e2279fc349cf7301e5e2e81608c0c5a763d96361205b65186ec911205a44f355",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "e6a0138cece4fca83c68e0aa1bb1494eeabaae72cc2bd05f22b0e3911dfc2d5f",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "d46a95ec609e5b5703a58f50834d88df184673ad48d2167fd54bbcb3cdf51fb6",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "0722883f281707628184d7faeead7d781fd92619aed7bade17cdd03b627fccd4",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "Service",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{reviewboard}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "eef0af26f9d8f56efe6811309e62fedbab222d35982bf220bb4543bfdde5224e",
					"line": 356,
					"resource_type": "Ingress",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{reviewboard}}",
					"search_line": 356,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{nginx}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "96426ae76b6b666a9cde7b60d0ba0ed46bf6793e9e2b58e4bb7a5465799046fa",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{nginx}}",
					"search_line": 181,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "607ef89c4ff9d355577fafa80ec668db8499ea5b5e1b48b03c220fe810bf08b2",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{memcached}}",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "9f599a5fc2ea0f58faaf2c15b6b2239057570c4d84087cfa8286044b02cb6bd3",
					"line": 108,
					"resource_type": "Service",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{nginx}}",
					"search_line": 108,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "61a35fa328c63e176bb8ca12b312509e8d8273dc3b5e41139c8bbe012bda198c",
					"line": 88,
					"resource_type": "Service",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{memcached}}",
					"search_line": 88,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "e444a317c4047021e46bdf3f3d0e0a591b709fbeffb6c0b473c7fd8d4411f66b",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{reviewboard}}",
					"search_line": 232,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "e35476f508b4db1bd68b6ec5d54f511e75304b07c948eb5a9d2fff7436c400d3",
					"line": 326,
					"resource_type": "Ingress",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{nginx}}",
					"search_line": 326,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "6aa9d1e5b0ce202f2ca6bf0e32aba72e89e3d55ef8025041f9a1ad4106fae8fd",
					"line": 298,
					"resource_type": "Ingress",
					"resource_name": "memcached-ingress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{memcached-ingress}}",
					"search_line": 298,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "4232861da9095bac465f2b241423c361268e0e0c3289ca285dd5552ff053a2b5",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name=memcached",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=memcached has resources defined",
					"actual_value": "spec.template.spec.containers.name=memcached doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "10ae0991bcaf61e2831369f13be456930e442acb3486443f3dcc3af8d04a7175",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name=memcached",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=memcached should have resources defined",
					"actual_value": "spec.template.spec.containers.name=memcached doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "8d94c26126a664bd49eaafd795bf3339fb62af2aee292666fb3c2d3cea03b710",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "df3ac1ad23eb970aab75ac313599ade49c8c78576b31c3002d5fb75d640f8f2b",
					"line": 201,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "455d9b0d6f0b090efc1721821fa7a633fef91f07e7b1d6d6a1f824b98e66667b",
					"line": 255,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "212c84e9d7e3a14a57761738724f7a63e70325f56b1b8a66dc7afb33e27ca757",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{memcached}}",
					"actual_value": "metadata.name={{memcached}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{memcached}}"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "a8e8277fd5eb4fbd159a49f52c483aff1b45928281c98d78268b0a69e89cc8d6",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginx}}",
					"actual_value": "metadata.name={{nginx}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginx}}"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "150dd607d78a1c0541552115540c706c9ccdba9a061cbd8c7bf3d840871ba4ae",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{reviewboard}}",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{reviewboard}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "829e717d47c639699bd5f5925c71d98b21d850b4f63d70da996e244bfe30dab2",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.containers.name=nginx.securityContext should be set",
					"actual_value": "metadata.name={{nginx}}.spec.containers.name=nginx.securityContext is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "23d4bb67ca002fbae3850fdc44f961f33e6481c643ec10332da8d82fa5835f27",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.containers.name=reviewboard",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.containers.name=reviewboard.securityContext should be set",
					"actual_value": "metadata.name={{reviewboard}}.spec.containers.name=reviewboard.securityContext is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "2eacecb5edbb76d070effee9e586c050b217ba6796912b9ceaa673fdee1447db",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.containers.name=memcached",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.containers.name=memcached.securityContext should be set",
					"actual_value": "metadata.name={{memcached}}.spec.containers.name=memcached.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "c54014a12e3b91a00a445a0ff232a31cb16be091ad0a23a38a2f20e350ea6ea4",
					"line": 71,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{reviewboard}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "53e58c15e21c4ed9d4ebae238059137a850fb98071eb286174b519a5e38b59eb",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{memcached}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "b187a04edea9cd2c217d6b34e3fd64c8a8a5bc81b8009fd2e5f56da079b909e6",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nginx}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "5453d09194edf7b6c1b7ba55fb77858454fa43d2960460f1401d0053ed01a079",
					"line": 71,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{reviewboard}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "38bd2c568960a06c9d3c9f047252a33d0f1527826ed3dea15f3851ee9a167c33",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{memcached}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "2dbd6c5d5088ed3184844e68493def1d7339778167c818c37ac4f3fb7efeff63",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nginx}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "b107e25bad6e28229ecd5d1facb1f0d371f496354914cfa4e7ef2a908c36926f",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name=reviewboard",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=reviewboard has a security context",
					"actual_value": "spec.template.spec.containers.name=reviewboard does not have a security context"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "f69cac2d8c6a64c5feac2091beef21c3c8e72128059d83aaab9407a75867f448",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name=memcached",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=memcached has a security context",
					"actual_value": "spec.template.spec.containers.name=memcached does not have a security context"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "44988ba20b990d44a8bd1378acefb0c9c223822867f7a8fd0e18648ecaa61c6a",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name=nginx",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginx has a security context",
					"actual_value": "spec.template.spec.containers.name=nginx does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "085f7931757ec63952837a71291691f830212eff6d5aef24df44b6d6b2f9b8ee",
					"line": 169,
					"resource_type": "Deployment",
					"resource_name": "memcached",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{memcached}}.spec.template.spec.containers.name={{memcached}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "e6f2653f7788e22563400f8b831f960f7c5bd36194db67c24286fa2593d5ea78",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "reviewboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{reviewboard}}.spec.template.spec.containers.name={{reviewboard}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "1ec58b03263711fe054089e95e804c9e4cfe80419915cea605a665fefcdc0945",
					"line": 181,
					"resource_type": "Deployment",
					"resource_name": "nginx",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{nginx}}.spec.template.spec.containers.name={{nginx}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "4ae8711f260958d5bc27f8338679b23b155594dab4749fe29fdbb65f775a8fdd",
					"line": 118,
					"resource_type": "Service",
					"resource_name": "reviewboard",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{reviewboard}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{reviewboard}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{reviewboard}}.spec.ports.port={{80}} does not have a Pod port"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "d1ae6a2f54b141d0b457a5e1db9a48e1f768482fb9a44b5e347b20aff6cbb46f",
					"line": 98,
					"resource_type": "Service",
					"resource_name": "memcached",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{memcached}}.spec.ports.port={{11211}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{memcached}}.spec.ports.port={{11211}} has a Pod port",
					"actual_value": "metadata.name={{memcached}}.spec.ports.port={{11211}} does not have a Pod port"
				},
				{
					"file_name": "templates/reviewboard_template.yaml",
					"similarity_id": "eca704d2cfedfa29985f9e6fde19f473618ddcfe2828205838ddefd446001ee6",
					"line": 118,
					"resource_type": "Service",
					"resource_name": "nginx",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nginx}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nginx}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{nginx}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		}
	]
}
