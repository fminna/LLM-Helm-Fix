{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 223,
	"files_parsed": 1,
	"lines_parsed": 195,
	"lines_ignored": 28,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 24,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:48:33.997722+02:00",
	"end": "2024-05-17T22:48:35.927536+02:00",
	"paths": [
		"templates/hlf-peer_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "3920c28f4b8f938d2930127281d85224ad71226172ef8299f558d151c825c762",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.volumes.name={{dockersocket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-hlf-peer' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/var/run/docker.sock' mounted",
					"actual_value": "Resource name 'release-name-hlf-peer' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/var/run/docker.sock' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "6d9c6eeb76fc29a8327c80c90e590ee4af897c1e6a7f3cbe8ef8805ca913e071",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "db099c12e8634f054f5675a223017d299c2f70c078cd78a6e793e724f19d1bd4",
					"line": 218,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "ebdfa48f6ba8cb8f9c6549f277cb98192b8d83406d9f66fa356af37ecd3e30f9",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.volumes.name={{dockersocket}}.hostPath.path",
					"search_line": 153,
					"search_value": "",
					"expected_value": "Workload name 'release-name-hlf-peer' of kind 'Deployment' should not mount a host sensitive OS directory '/var/run/docker.sock' with hostPath",
					"actual_value": "Workload name 'release-name-hlf-peer' of kind 'Deployment' is mounting a host sensitive OS directory '/var/run/docker.sock' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "cb72d1d59269e8d53420448d535485be80ad8257aa46f389011ffb38c864c002",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "3627b0792c4cb2d01bf315975e4194fa21827cc731c95c1748c110e3ad19eb9c",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "a6f34658-fdfb-4154-9536-56d516f65828",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "0865e6f6",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "caa4dadfce93b5a5adcdaacaf5b1f50e0860782c0da0085ea9dc85af65383d43",
					"line": 153,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.volumes.name={{dockersocket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.volumes.name={{dockersocket}}.hostPath.path should not be '/var/run/docker.sock'",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.volumes.name={{dockersocket}}.hostPath.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "516b86d5ccb2a6467e0bebf00f7569a8ba7d65748e9dd0bd9eca0f389d54307d",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "9c82b04fee0d07dafdd02ad15972fbac35536ab6c01962300a2da1500f9fef9e",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "072b085604aeb847a5c05ec49f914f935c503fa926cde091cbcdf5a87b78fa40",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "0ad373272d81ff0fb838446585503d6643eadca3240129f9e80ddbb39d0030e9",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "2ee7f9d48b663ea1709644792057dde57b2a182fe8b34444cd7ae99f7b4f4bcf",
					"line": 146,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "1d425b5e12d88492d047a76582ef26fba0bd8aa45cdb99f61a4cca447af6003e",
					"line": 98,
					"resource_type": "Service",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-hlf-peer}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-hlf-peer--peer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-hlf-peer--peer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-hlf-peer}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "589263de1f921ae5db095f4bd384182a93041308b20240c3fbbf2446a82b78b9",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=peer has limits defined",
					"actual_value": "spec.template.spec.containers.name=peer doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "e0f6497bef2440daf3458cfbc251e99cc21e5930b4ca4a9544ffa602b810733d",
					"line": 221,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=peer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=peer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "320d29518b25f936a1409e020e03af15a1e95c30bb1bbdb66d888aaa14a134a8",
					"line": 157,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "d4ed45b332216fc89ee45ff9747b818c96d804cf10de2690912b86a6eb0c8916",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{peer}}",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{peer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "2a14e06cc7e139c9748333d0e055ac83aa70753e5393b4e7fa0817f52ef781e9",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.containers.name=peer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.containers.name=peer.securityContext should be set",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.containers.name=peer.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "c13e5442bb99dab63ebd35c126a43d6d0ee03106ba89f3f02435c61f81ed8ca9",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-hlf-peer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "a3d2f2a573c8f0f95b23c19d1cc7e744e41b9519165094db87aee637d86d08c1",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-hlf-peer}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "9515a51c4561a465163e8e3453c8b142656d0cf21d65f85d3e9180232193d69c",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name=peer",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=peer has a security context",
					"actual_value": "spec.template.spec.containers.name=peer does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/hlf-peer_template.yaml",
					"similarity_id": "6debf4e5f635b6f04f383781f636ed249638d2b3627aa47d25246df484b1d7d1",
					"line": 155,
					"resource_type": "Deployment",
					"resource_name": "release-name-hlf-peer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-hlf-peer}}.spec.template.spec.containers.name={{peer}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
