{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 716,
	"files_parsed": 1,
	"lines_parsed": 669,
	"lines_ignored": 47,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 35,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:12:50.73772+02:00",
	"end": "2024-06-26T02:12:52.962685+02:00",
	"paths": [
		"templates/databases_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "991ecfcd119df6ba63a6b81d99506bd8820750509919b1e2404a7d84a0b7b5e0",
					"line": 496,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "f0e7b40bcdada534a705ebd222a139905da74fcd99d112be940a0ee21de6db79",
					"line": 496,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "e8797ae190fbbfd17bd994379700d0ecd7c07198460485a0a67f234f43216d69",
					"line": 401,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "7729fd8d970ab380e2406440bb90dbc2fa25ea56b9b6bb28efbaffab73ccf192",
					"line": 401,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "06cbc3361586b141b116bb23d1a89e433c47b6169c43d72859089cd51533f2ba",
					"line": 270,
					"resource_type": "Service",
					"resource_name": "postgres-slave-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave-hl}}.namespace",
					"search_line": 270,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "c315f1fc035bdf6e155686afa0ebe2b19806f6989292d2699bdb133c88f7d1ab",
					"line": 331,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.namespace",
					"search_line": 331,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "ad94ad5301741eda78bcab39a70e1a7cb2617544e1acbdc63c7f060feb581df9",
					"line": 77,
					"resource_type": "ServiceAccount",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.namespace",
					"search_line": 77,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "9e5ff785eeae3443d9eea5394f7d81d07d41bad190f7ddde26f3af1ebb53b112",
					"line": 163,
					"resource_type": "ConfigMap",
					"resource_name": "postgres-slave-init-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave-init-scripts}}.namespace",
					"search_line": 163,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "7f4cd65edf93ef878f77a3dc1286b51fad6cb08a5e64e3ebcadbea724a6b339a",
					"line": 125,
					"resource_type": "ConfigMap",
					"resource_name": "postgres-master-extended-configuration",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master-extended-configuration}}.namespace",
					"search_line": 125,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "dcbb82d18ccb4c153bd8392a7af5f11d230006e9a51f181ecb2eaaa928f28c47",
					"line": 244,
					"resource_type": "Service",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.namespace",
					"search_line": 244,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "90b119e95ad2ed0482e305b8f3cb4784cd6a7c63a0dc67300b57ed943beb50db",
					"line": 305,
					"resource_type": "Service",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.namespace",
					"search_line": 305,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "af74478af80349701dea20108f8613f84c9cacba318e1d7e898940cab6ba1a45",
					"line": 91,
					"resource_type": "Secret",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.namespace",
					"search_line": 91,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "b2fb63bac6e75c4144c61839e1601a94c5245b120cd3d9b7c9f119b1c889c5f8",
					"line": 142,
					"resource_type": "ConfigMap",
					"resource_name": "postgres-master-init-scripts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master-init-scripts}}.namespace",
					"search_line": 142,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "9f599a5fc2ea0f58faaf2c15b6b2239057570c4d84087cfa8286044b02cb6bd3",
					"line": 108,
					"resource_type": "Secret",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.namespace",
					"search_line": 108,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "d1ce74cb46ea5547855ec19dae197c32ca105f4bad9257fc60b24f936c441352",
					"line": 530,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.namespace",
					"search_line": 530,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "ServiceAccount",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.namespace",
					"search_line": 63,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "82455c716ed795c3d35d0d867061c1f7cfa23014664ef4e0ab5d5a5fa5cf49e5",
					"line": 209,
					"resource_type": "Service",
					"resource_name": "postgres-master-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master-hl}}.namespace",
					"search_line": 209,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "58ae1d53c8b421e876b3b717d9440ee5974fe6cf54b38ad278073b28b9ad0467",
					"line": 391,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "2497a9a4f5c293db3211bceebcabfb19209342d969710ad5dcd42e18ebad164f",
					"line": 391,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "69c0013d9223051de1b7465c6442d1688b62b29d7f72adcb5b3dce17b298bede",
					"line": 351,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{postgres-slave}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "7e26a48d8abfda5963b8b97c8beeeee47f16de267be4bb00dfdc82b7669ed751",
					"line": 360,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-master}}.spec.template.metadata",
					"search_line": 360,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{postgres-master}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "4fa7d988664f50aaa43a57eb3f7d2c3d5c2a49ccfc6c2c5a3e7a273bfea3ea9e",
					"line": 178,
					"resource_type": "PersistentVolumeClaim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "1941c1f1120ed5f044b72126a9a432cda2a9ee88199b111bacb460ac52dc41bd",
					"line": 193,
					"resource_type": "PersistentVolumeClaim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": 193,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "b4adedbb2dcfb4442b0da26306474eed39877df9a1693eb0dd72f490e0e0363d",
					"line": 530,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-slave}}",
					"search_line": 530,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-slave}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "32dd2af85a9848843eb454067cf56799453f6404ee5c54fd2870541ac8b008f3",
					"line": 331,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-master}}",
					"search_line": 331,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-master}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "6780a1e97e7e718a3be9014183ad237a84281cd4646c67b3c6be445dea1e3f38",
					"line": 193,
					"resource_type": "PersistentVolumeClaim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": 193,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "2b2195490453103434c18d121052aee233bdcbaf266bd1dab56df248dc0cab95",
					"line": 178,
					"resource_type": "PersistentVolumeClaim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{null}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.name={{null}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{null}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "8c0a2736078762da217f89d6186b1e8cfe5a9160203ac3d3e2d18db7e9ab4f56",
					"line": 331,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-master}}",
					"search_line": 331,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-master}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "b90589eecbaaa721dcf59389b022f810218436d2f8452ae1a87ff75e381958a9",
					"line": 530,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-slave}}",
					"search_line": 530,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-slave}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "9e8e7383ef8228fb8a7b9747b383f38353d9951cfdd17d4b61d20942c188c886",
					"line": 398,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{postgres-slave}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is false"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "580d3467e54edf13708d5f57f0fa8c4a35baba217dc45d51993ff3af67cc53f6",
					"line": 398,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{postgres-master}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "dbe92af7bf9c6443341857d83577191b03c190441d15ff97f478f4dfa317d77b",
					"line": 416,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "48fc5ac7517695795e677beb8bf6b4a56187e9ec755bff8fdf67d52e20f7c250",
					"line": 416,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "4c3355f8081298aabe50ffc2f7cd7e59a485f84086c37a8a63704a02b18d48c2",
					"line": 522,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-master}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-master}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{postgres-master}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				},
				{
					"file_name": "templates/databases_template.yaml",
					"similarity_id": "1d9dbfcd64f78ce6de5c713fa39c4fa8bccc506d3db1e10e82be9f15f6059d43",
					"line": 522,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-slave",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-slave}}.spec.volumeClaimTemplates.spec.resources.requests.storage=10Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-slave}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{postgres-slave}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 10Gi"
				}
			]
		}
	]
}
