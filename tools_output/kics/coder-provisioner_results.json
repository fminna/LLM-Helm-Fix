{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 136,
	"files_parsed": 1,
	"lines_parsed": 132,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:08:19.709407+02:00",
	"end": "2024-05-18T00:08:21.667491+02:00",
	"paths": [
		"templates/coder-provisioner_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "16d12eae253282eab517a484021f0463ce8ea2d8d660a1b4ff1e4a74ca908093",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "a81133f7734bbb054aefab0a41fe75f9105d0b60b8626dacb29eed52be611e2e",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "3c3d904632569ed4600ccd50163e5a847244c16752216258dfa808da97e8495c",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "bfa41044805942d0f03f2680275debe5cec3ea2bfe1dc8dad9e46b658f7518fb",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "8f1fcad9546de9ee7e7b83e7659da6cad7d6d73e662538e216be66396bbf09dd",
					"line": 24,
					"resource_type": "Role",
					"resource_name": "coder-provisioner-workspace-perms",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coder-provisioner-workspace-perms}}.rules.verbs.create",
					"search_line": 24,
					"search_value": "",
					"expected_value": "metadata.name=coder-provisioner-workspace-perms.rules.verbs should not contain the value 'create' when metadata.name=coder-provisioner-workspace-perms.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=coder-provisioner-workspace-perms.rules.verbs contains the value 'create' and metadata.name=coder-provisioner-workspace-perms.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "0fccf4d240d936bfa2c7ad119b9d719d3c204dc9914d4e21735a812ed4a1680d",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "9af5f508652e31d82c3642df60fc5a7869fc8da21546785d2ff36569d5733513",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "ServiceAccount",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{coder-provisioner}}",
					"search_line": 14,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "9b85d122c5c8f4b877a9185274e7f47797b50d2ce07cc848f8b53694cc3a3b77",
					"line": 62,
					"resource_type": "RoleBinding",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{coder-provisioner}}",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "Role",
					"resource_name": "coder-provisioner-workspace-perms",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{coder-provisioner-workspace-perms}}",
					"search_line": 20,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "868580e3c8be97e647938e9aedf53fe09ec0a72ab60886348324188b3aac5be5",
					"line": 83,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{coder-provisioner}}",
					"search_line": 83,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "93480feca683de56bb2fb091d6885f7ac51ce97a6a3be833469b3c672172323b",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coder has limits defined",
					"actual_value": "spec.template.spec.containers.name=coder doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "528c4420388099b8a947e1c263d4f7b66657caeff306b2d6bda95205902f5750",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coder.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=coder.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "6ec9c323052dc562e27c4ee0afbc9100cbae77717645edb6237e08baad6169a7",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "8355e2d7750982616d69fd78e7f9e61d12362a87558f3a8a773933280d40c6ae",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.metadata",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{coder}}",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{coder}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "d7bdb47f5805c0d48a4565833b0be443d5f752593b1169a2a478a9a39f98564f",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.containers.name={{coder}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.containers.name={{coder}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.containers.name={{coder}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "8e0154e3f860147df7558090e4ed585cc976cc54182aa987ce2ff4d58a3b256c",
					"line": 14,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{coder-provisioner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "d5932634504414476f0908907aeefd6a85a3409a58af212a34bb4bf6e5607bf3",
					"line": 14,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{coder-provisioner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "2c652caf83c61e063837747348833fa63e8616d7bc2a2baa135557c53ff60c7e",
					"line": 123,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.name={{coder}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/coder-provisioner_template.yaml",
					"similarity_id": "a1f71104550e6812e59a8d4058ba1e6647fc9ef399b1ca7258649ba5dc59223e",
					"line": 112,
					"resource_type": "Deployment",
					"resource_name": "coder-provisioner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{coder-provisioner}}.spec.template.spec.containers.env.name={{CODER_PROVISIONER_DAEMON_PSK}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{coder}}.env.name={{CODER_PROVISIONER_DAEMON_PSK}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{coder}}.env.name={{CODER_PROVISIONER_DAEMON_PSK}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
