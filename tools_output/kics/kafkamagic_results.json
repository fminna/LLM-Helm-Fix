{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 167,
	"files_parsed": 1,
	"lines_parsed": 161,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:06:02.847934+02:00",
	"end": "2024-06-26T01:06:04.913527+02:00",
	"paths": [
		"templates/kafkamagic_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "4d72eb134bdb54155ac8fec2b06c594d0398e5024d12533582eb210a47ff7038",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "8edc727e46d022434b8f264432f7c91995b56ebfdfdc31cd947513a2dcc5c058",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "a10178526f4153fb8e3654a812a52f771b18035038d94c1d18e4f80eb8ecf326",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "c642789f5985dced31652faad3b1b57ee0fc22f2e14f67286a527bd5b2cb6914",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "d01ae0956cb946d604c1507bf3fbba8abc1f0ac4d5fca60ba4b621ebc557ccdb",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "4ed17ff086fe4b3d48d3070efb6f44333ba37597ec2d39ddc6277e6965c9528c",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "b1faebe70dd61d9328ee335e575ea9d1d2af35db56ef1f59b0f2fd375d3131dc",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "d38b18bea79fd45ac4d6469d22ba99f2211224340f4b3946b59d54feec35bb69",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "fec3e1be126d3df07591c831ab0f2490f2687a0342b169a86d8e3aa208123069",
					"line": 108,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "2979dbeda5a534d22829a04e8d8b76177d3338a433b5bdcef1786ea3e0aff866",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "99cbbb787915b7f54b7a0dc6d1ab62b74d817ea4ead34d696d313008c85aa58b",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "61a7bae27c268ee2c46a82bdee8656de77da034711d55869c07665b5366cf72c",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "293483b660bc91a127c3e590a71bd6fae56dbbb77fa0290c53c07b04e028798b",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "31933b6e50a6d7fadda7f9e45066a2f6cc7e690d862fa71167206e1c591bbc99",
					"line": 160,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-kafkamagic-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-kafkamagic-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "7156e5f15c999fed9f34bf5fdc2a123e2b8ec9ac0bd393934c8e1bd9cfc508f2",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "2a00e3f5a4f893e091cbbe0eff76110c8f789b4f767440af089e371ee2251294",
					"line": 160,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "47ca45a10301dd9a1c2bc5047ed78c9170831c3033ed4519328afd35845d1840",
					"line": 35,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-kafkamagic}}",
					"search_line": 35,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "07d1c0f65626041fe7938ca0144b1752d18f03671bf60b3e4067f9911562c83a",
					"line": 151,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-kafkamagic-test-connection}}",
					"search_line": 151,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "b9eb42e5d6318ebbbf08e0762182193a387e26abb01d462e9f74cb7ef1740fd8",
					"line": 58,
					"resource_type": "Service",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-kafkamagic}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-kafkamagic}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "aa046e828e49579b6588197bf226463a6a7dc70775dc3e9df106f02f7a465186",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-kafkamagic}}",
					"search_line": 80,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-kafkamagic}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "0846e8a35e2e57f6885bee1d3cb12206c9fbace903b15373fb21c6f9a157c682",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "876d823eb1954898fd85a50bd9f56c9a2d1b092da2fc99b9b4df592a7ed5ed60",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafkamagic has limits defined",
					"actual_value": "spec.template.spec.containers.name=kafkamagic doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "424f1e94dc148f90a2390dc04fd88a337d444ce926f54bce82c3410529d314ce",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "c56152cc315b85b50a02ebc4a707357d9f022be126c4963b343678e201e508b0",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafkamagic.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kafkamagic.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "5b047c8465695435d72f3cc37426923a1cd99da871c984369f9941dc6f40d900",
					"line": 119,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "afb66e859cbb19337b6ca7d53477f004eca97b6b2945288e626ca6bd7a7a416a",
					"line": 163,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "35ea9593833e09725d2bb7a70bc024ed25029591a53d2cfe15ad15b6436cdb25",
					"line": 151,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "adb2ab6b5c4c75d9cdc3f3d588c98237032fafe80950811f08decea8a0fb3c3a",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.metadata",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafkamagic}}",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafkamagic}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "3667319239b787d0ac1dbb6a0156d6550c04afb8e45c4dbc88d69adee3e89353",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "6045492c935ed93c22f21da5db8fecb1feeb97bc6662e063ad6c5c9cc7f823a6",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kafkamagic}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "f6befd50eb6b74f5d94fa912df5aa9a3405259ee65d1582a2c7ef4c0e1e55c63",
					"line": 151,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "fbb9ade3f5f301c59404525095568b7e0d3fc26c98e2307fde4689bf629f03f7",
					"line": 151,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "807eade3cca3802d653588c51e013d5fc63f05cd4b6c80e974886140f2f6fd75",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-kafkamagic}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "9373d7360e1dbafa7ade0c742aacfcea948ab4c5d184ba85026e05b41f4fe3fe",
					"line": 160,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "29b5460e6e73029e6276cf1b0fb937e7d2fef0708bda388cdadf0b0302710502",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "ac38d96a74507933ee40e0aac274cbebda287f1a04735a8c5c34224a1f30b4e4",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}",
					"search_line": 109,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "5fe71fe8216002e6ce56a4beee305002872abf5e0a91e4a06826810f8024a1a3",
					"line": 162,
					"resource_type": "Pod",
					"resource_name": "release-name-kafkamagic-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-kafkamagic-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/kafkamagic_template.yaml",
					"similarity_id": "496fc358436d9f74214c3f3d782e6a404abe90b93f0cb37c05188a285166852a",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-kafkamagic",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-kafkamagic}}.spec.template.spec.containers.name={{kafkamagic}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{kafkamagic}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{kafkamagic}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
