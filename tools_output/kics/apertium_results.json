{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 104,
	"files_parsed": 1,
	"lines_parsed": 100,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 11,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:50:42.748516+02:00",
	"end": "2024-06-26T02:50:44.874334+02:00",
	"paths": [
		"templates/apertium_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "fa979fdb2f7b2310d4120c798877b60e0063cc14b0bf85c178faab8413c69ecf",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "658cac206ad774b0add11dd62a79cdab35c692ea490871944ac7d15997893ae3",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "67a12a4488f8caaf5eee5f51cb32fdc64449c53ad43fbbf34e892e5ac5fccd7d",
					"line": 30,
					"resource_type": "Service",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{apertium-release-name}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "90f4f6707fef51cbeabbc0b49e9a566ec8e7e76173106638d257da9f1b5d8051",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{apertium-release-name}}",
					"search_line": 51,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "6d408d66c926f0c41e348de03d548bc2a022cf341b552a07dd0e21cf1be36959",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "fe75e80ac049e94ff248e516ee1ad571b8514c38fdde7727b9ca63feca36e664",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}.spec.template.metadata",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{apertium-release-name}}",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{apertium-release-name}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "86c5b829f8c030c10a418f3d565f75f5a1b370c5923c09151b1e5b934e949761",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{apertium-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "1596a65bdb34dd645fe279da0ed2f309fd11d51d8482225581816ffa32c1ab3a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{apertium-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "3521879ca57c5ad28cd7555f079c1249245e7e1decdf57d799b815754cec041b",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "apertium-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}",
					"search_line": 96,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.template.spec.containers.name={{apertium-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "9924e7fb46fb3d6fdb7405e7192b1a5f72ca308cdc03cfb719d734d4c789f2ef",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "apertium-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apertium-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{apertium-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{apertium-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/apertium_template.yaml",
					"similarity_id": "705fd37a9b1ca99e3c7b97a47da21a034d89d774f2f1504fe180abbf427be30b",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "apertium-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{apertium-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
