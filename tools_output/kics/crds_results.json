{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 454,
	"files_parsed": 1,
	"lines_parsed": 443,
	"lines_ignored": 11,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:31:39.959948+02:00",
	"end": "2024-05-17T23:31:41.838902+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/crds_template.yaml"
	],
	"queries": [
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "e5b539d44780c163afb638202c8996838dc25b3dc784d8ff3addbeed79fc33fc",
					"line": 409,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "eae9730170f1907abca1595f0013ec30850933e0ded424bb10d87ef4d54b3497",
					"line": 409,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "a1d1ca0dd28fc165cc2046a202324ca1f148a02b27d279dc49c8adc23b73f1b7",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "e76a4cf19109b2ebaaf03f0c67ff2a5dab35240cee61c30c60a0a1f1352f33a4",
					"line": 397,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "2edd1b43519b714a62db59a036c4fba6d3ab29dd8264c38e8fd9c339bbb06fb8",
					"line": 409,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "ae447df536a0e80ceda1538000537bd8a586e5b4b5af790d664b63de362af84a",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "0d8bf996fcf14937a9d0f3be904c8388f7a98b1464d2475764316f0799e27244",
					"line": 386,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "11aa35d50cc1b1bd9c892dd8824f0db0de5671571529d57c7a47b143869a716c",
					"line": 263,
					"resource_type": "Role",
					"resource_name": "release-name-crds-leader-election-role",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Role}}.metadata.name={{release-name-crds-leader-election-role}}",
					"search_line": 263,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "61c96e9a26a2182fca403ff290cf702ccd287a4133282733dee9f8fb22e5530a",
					"line": 310,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-crds-leader-election-rolebinding",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-crds-leader-election-rolebinding}}",
					"search_line": 310,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-crds-controller-manager}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "e16373df47df8f71e06692c575fecb6d7b354739fc4cd4efecb3c8696b550f44",
					"line": 333,
					"resource_type": "Service",
					"resource_name": "release-name-crds-controller-manager-metrics-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-crds-controller-manager-metrics-service}}",
					"search_line": 333,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "60ea9dace7d7eeba38f599775268a69a4684fc9799eab2dc99d5b17e4df6d2e8",
					"line": 360,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-crds-controller-manager}}",
					"search_line": 360,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "4bff3b67030ebdbe7e1bc67294b7f48f21d02551c932706e986fa6f19bbc5e21",
					"line": 424,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "d8d0301a87740c5075e1e8900456f59a5e4f6ab2b8f0cb1387738aeca04d533f",
					"line": 431,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "844b9ef8a216973fc16dad2c9bbb4a299e1a495d293418175dd1d255a539c881",
					"line": 384,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata",
					"search_line": 384,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{manager}}",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{manager}}"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "844b9ef8a216973fc16dad2c9bbb4a299e1a495d293418175dd1d255a539c881",
					"line": 384,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata",
					"search_line": 384,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-rbac-proxy}}",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-rbac-proxy}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "8a4cb4f86e5e2922e24d9bd36939e5f20fd94199c12cb491dc175fce631bd0e9",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "fbaaa22b2240ae745976a3182f24b630aca99cd3ea88560744bd24a5f4539fba",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "82cf71df197cd9f2b250d1215fe9f829149ca4a75491c15f2c39a669ff1b35ae",
					"line": 445,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}",
					"search_line": 445,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{manager}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/crds_template.yaml",
					"similarity_id": "f3168392df27a798b9f2143a078785f67dd7680faea21563f0a34112dfb056e8",
					"line": 409,
					"resource_type": "Deployment",
					"resource_name": "release-name-crds-controller-manager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}",
					"search_line": 409,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-crds-controller-manager}}.spec.template.spec.containers.name={{kube-rbac-proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
