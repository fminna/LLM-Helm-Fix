{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 259,
	"files_parsed": 1,
	"lines_parsed": 254,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 4,
		"MEDIUM": 6,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:52:13.404261+02:00",
	"end": "2024-05-17T23:52:15.380983+02:00",
	"paths": [
		"templates/whereabouts_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "2e3ea2a667ee4f87c66337b1e9dd177ecf5fd07603805d7ba5c484dbbec4b163",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "ca9100ba3c3c36dbb3c2d7eaf8795a4be0c52bccb301a53fe28028415977d3a0",
					"line": 255,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.volumes.name={{cni-bin-dir}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-whereabouts' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/opt/cni/bin' mounted",
					"actual_value": "Resource name 'release-name-whereabouts' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/opt/cni/bin' mounted"
				},
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "365bc2da216e8fdfadcf37d8499e9f7629c0e7a923b0c2cb61407237efbc8031",
					"line": 258,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.volumes.name={{cni-net-dir}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-whereabouts' of kind 'DaemonSet' in non kube-system namespace 'default' should not have hostPath '/etc/cni/net.d' mounted",
					"actual_value": "Resource name 'release-name-whereabouts' of kind 'DaemonSet' in non kube-system namespace 'default' has a hostPath '/etc/cni/net.d' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "f83442d5abd5c0a71617baebef72e27bd90d67eb921bfb4db936c29934e5a5a3",
					"line": 189,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.allowPrivilegeEscalation",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.allowPrivilegeEscalation should be set to false",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.allowPrivilegeEscalation is true"
				}
			]
		},
		{
			"query_name": "RBAC Wildcard In Rule",
			"query_id": "6b896afb-ca07-467a-b256-1a0077a1c08e",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Roles and ClusterRoles with wildcard RBAC permissions provide excessive rights to the Kubernetes API and should be avoided. The principle of least privilege recommends to specify only the set of needed objects and actions",
			"description_id": "ccf4e279",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "36077ac6529844a6cc546b450668048a72c22b32ade6df1f88d7d967b0fdfdac",
					"line": 69,
					"resource_type": "ClusterRole",
					"resource_name": "release-name-whereabouts-default",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts-default}}.rules",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts-default}}.rules[1].verbs should list the minimal set of needed objects or actions",
					"actual_value": "metadata.name={{release-name-whereabouts-default}}.rules[1].verbs uses wildcards to specify objects or actions"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "37545a3fe46183fa959ce7a1eca4a79d83f3e11485bb6dd69bb77d8596c6bb9b",
					"line": 258,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.volumes.name={{cni-net-dir}}.hostPath.path",
					"search_line": 258,
					"search_value": "",
					"expected_value": "Workload name 'release-name-whereabouts' of kind 'DaemonSet' should not mount a host sensitive OS directory '/etc/cni/net.d' with hostPath",
					"actual_value": "Workload name 'release-name-whereabouts' of kind 'DaemonSet' is mounting a host sensitive OS directory '/etc/cni/net.d' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "b30bd014da9e1953b5797d631ff3727fb7751888d6c70d722f158b4a4ffa68c0",
					"line": 197,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "7f5cf714e39e56d835cdbf1b2031fc242e963087b6123ec301be58f3bc494806",
					"line": 197,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "5e95a0f5f1c0f2ccf0fbd15004c380db80f37a9b9e34b9727ed6a16212b40397",
					"line": 175,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "e384d99bc99c45ca4854a3cff1cd2d00bd0b49c2bfa777ab561a0c88ad021819",
					"line": 153,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.namespace",
					"search_line": 31,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "f6f1b30ea59ce8b379c4a95eb254ecd5b5febfa438e87ceaa707e6edd4e70949",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.namespace",
					"search_line": 128,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "1a85034a6b44761d927ddca63ff4c8a13252b899bbcd72aa4a57d16713d646ab",
					"line": 180,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.spec.containers.name={{whereabouts}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "3352caf5afe5a4ea4310871da3a7db3c5eeb5ebfa30549a784f33ec334fce05e",
					"line": 150,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-whereabouts}}.spec.template.metadata",
					"search_line": 150,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{whereabouts}}",
					"actual_value": "metadata.name={{release-name-whereabouts}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{whereabouts}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "37f16770682060739c239d1e686fd6b66efdea467108cc5e2f67327c2c68895d",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-whereabouts}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-whereabouts}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/whereabouts_template.yaml",
					"similarity_id": "7f29b8d4a1c524a6e071910073d3dfc3e1c13ad994dd416ffffe4a1b9d1addd1",
					"line": 128,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-whereabouts",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-whereabouts}}",
					"search_line": 128,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-whereabouts}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-whereabouts}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
