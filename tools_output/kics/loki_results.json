{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 151,
	"files_parsed": 1,
	"lines_parsed": 148,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:17:15.247042+02:00",
	"end": "2024-05-17T23:17:17.156792+02:00",
	"paths": [
		"templates/loki_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "2adacad8c347013950387b158ab48808b0e3cbfc08c7807976269d9a2ea9885c",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}",
					"search_line": 125,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "742ea5979a93626cf4687a91933eb433c31a59f347ed8ec94f1147665d8b424d",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "b85e4285feaaa06a4c2ab42d50649cf58546758135560432167f42228c003624",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "663c0c888873bb9ccf73975f7cc96de5e464e2f214b3abec7e5d98c376fff90d",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "47e4c9d943c6009469932e240daca4a84701f079746404bba86a9042ac956fad",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "9361ea532ba28f1d76ab11e113ff37867bfbd3b0067fe45fa281f291ee9949fa",
					"line": 94,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "Service",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-loki}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-loki}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "e63655551f9cfc8b80092d7963c5d4cd066df1908aaaa40b5e537f99e0660e79",
					"line": 74,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{release-name-loki}}",
					"search_line": 74,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "ddb649680f679267a81c416cb62ac48dfd838348e8578a7d25585d3d6019f914",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name=loki",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=loki has resources defined",
					"actual_value": "spec.template.spec.containers.name=loki doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "7b01012876474f11582366dd7d30b8eb52e5d83de5d65d776564af9be47c42df",
					"line": 101,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name=loki",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=loki should have resources defined",
					"actual_value": "spec.template.spec.containers.name=loki doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "bbefe9d9e9e2d9eb35f1f055146e97fd4ae8173d8627620a43f590d278ffd716",
					"line": 103,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.spec.containers.name={{loki}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "8355e2d7750982616d69fd78e7f9e61d12362a87558f3a8a773933280d40c6ae",
					"line": 92,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.template.metadata",
					"search_line": 92,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{loki}}",
					"actual_value": "metadata.name={{release-name-loki}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{loki}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "2a5d6afcd5f3d7c189c797225f6b4c60681c4569717eee14e69c4c263ff78830",
					"line": 125,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}.spec.containers.name={{loki}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.containers.name={{loki}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-loki}}.spec.containers.name={{loki}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "0debd41b5ff39c573b8a0b187d0a3b64955ec71f511f7a5909fb45aad87df9d4",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-loki}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "a944bf1cfb2a7476fed7ef2a38d5c50ad38d3f1d7e488e2e179fbcab360d886c",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loki}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-loki}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/loki_template.yaml",
					"similarity_id": "3781fdee2bcdeca4e1996b3ff3729ae9784d4953b32808062e72c52b128099bd",
					"line": 150,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-loki",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-loki}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loki}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-loki}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
