{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 64,
	"files_parsed": 1,
	"lines_parsed": 62,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:24:14.609303+02:00",
	"end": "2024-06-26T03:24:16.649291+02:00",
	"paths": [
		"templates/nessus_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "c2c3513ce79cda57568937ff5767d516a41a2b46835dec372c1a05523a5e6225",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "bde08815a69532bd78640009778844f6b75e50eff430d6b4b355a6f377d1aaca",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "2ddfa84f7865ce4fd69fc55afada02e5487aa82ac14a099996c51cfecdb38dab",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "a3890a029906aa7394737898f29c85b675cad3d3ea30f46e5bb37e7c0a298378",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "fc186e9432b6d85bfc6a17b06d866be28c19c422948fa833b78d4d41dbf311df",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "1aeb6f96817f7554a73046c99998a6d529f8a89f3e2ea9f7873370bdf506d721",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "f1499bb35a23c5c4ef5e4ff877db3503340acc4306cdadc0dcf00df459572f4e",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "1f41be31441ba0d871bcb677895ee86fe117dccde558d14ddfdb2b26a00b0695",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "42ff8737ea30d48411007091ca2dad80195743e20d8b2b8a6c8fef9db72d9f0d",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "5f32910c89178e5324be8fe69dea86c3a04bf8012a3abafc61a26e9aedcec87a",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "45a1d91d83af00c14eabbea3e6c43133520029633a001a2117f105755569b0c3",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nessus has limits defined",
					"actual_value": "spec.template.spec.containers.name=nessus doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "e57ec491cb27ffeb0f857467c28a3cd9c26324471e1a6de3b19ee2a9a70f56ec",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nessus.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=nessus.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "c72c6d4f55d6c8b988015510dce8599a1f74e59a2a9771e35ce4ce4345e6139d",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "80726121b3526fb2c5a236896e34b8573cf8489f2c3a4fa13896b0646ae3a4ba",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nessus}}",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nessus}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "582b997aeabfff072c03ff045867e69bb926b27da8f9430bc882380fcb2f4cce",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.containers.name=nessus",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.containers.name=nessus.securityContext should be set",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.containers.name=nessus.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "320a077b68c06f1183f43065e943f2b8987c435046ac5d1b037071bfb4af6a83",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-nessus}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "515afcfcc393a18aeb44ae8408c3e424e79191b6e00aeb69000a74e415e41ec5",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}",
					"search_line": 30,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-nessus}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "0e0acae2fa313e24ec07f2191e24e56467ecfb6a0d2521d57f39aff6fd8e31a1",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name=nessus",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nessus has a security context",
					"actual_value": "spec.template.spec.containers.name=nessus does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/nessus_template.yaml",
					"similarity_id": "e4aeb787176660b98db069f581b648bbc616a9c9bca4693aac73a308023134d5",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-nessus",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-nessus}}.spec.template.spec.containers.name={{nessus}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
