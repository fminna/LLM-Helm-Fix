{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 85,
	"files_parsed": 1,
	"lines_parsed": 82,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 41,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:51:44.335935+02:00",
	"end": "2024-06-26T00:51:46.447234+02:00",
	"paths": [
		"templates/mychart1_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "854082fb4ae23dd8131512e6d421cf793c162b7bfbf19e851af43d76a6e513b2",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "992e55af6f7357698bb27871af0251595db0951bb20d6ce9cb05463d4c3836ca",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "3d3ea6fa6c49e0fd3d2470d390efa6a8f0e543d52597535a46e616eb4ce63a5b",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "29134736189ccadde7e5039a6c25f551e7a3da713a697d43146b9ec0df236627",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "91ca99d8884625a01911b6aaa3c6dbeb41a2e82155ef03f5bbb1d837cd1b7b65",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "24271d084b50c1b9e2db2950e516eb23ef0082e490801ef73642b78d90b24b4e",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "b0a9cf34b43f5a8aaad17c38eee29602dfd21bb5d19e6bdfa412a6275a9990e4",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "130b5620b6d8a01991a8962d88d6c7c9b0e48534ccbbf119593f8c0cc715038e",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "1da38d160e3c9775eb28517fa72f355d540ef9d76f8e368969abb0082814c5cf",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "990de8931b4e2b889245c515fb6d21172df4efbf355d26661d8cbce22565c772",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "9671af1a97255f0e074b87bb66136cc436aa48a1e1159cfe39ec08096e0626d1",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "a809f16a2afc5b2491772aed951c56c729734b70d9c0d8620b95fc3ac63f1ae1",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "3677628c34efc2fbad8f75dad34986845056dc1d8ebb4d2c663cf5cd756345d9",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "2e6fe895af6ba37ed76aca044f5bc8c969d36f536829bebc529a552b0997f607",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "b008cd809a9259388a5aaaa5d982b03089853469c47875c0b363a85666b68898",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "eff34e5820204d8ceb3e3dd2a168acdbf85758962fbdb160b8404628d6cfacaa",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-mychart1-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-mychart1-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "27f3b313aba1437e52d19b07ce27eb0c78249fb04878580319f29d0e03d57e58",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "0c5b6180f933ca543a6b237474f3b85dc9692a9dd93186717c5b05012f4d3e93",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-mychart1}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-mychart1}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-mychart1-test-connection}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "0130fde5c126a3c42860f538d2c486fc9388ff587fc2185bbd571b6b9f200ddf",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "6f9ad40aa791964e584ecaa58bea55aece6558cbb9c3083083baac5679fdaffe",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name=mychart1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart1 has resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart1 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "5ad17288a411698ce3e46707bda1e836a4b8cbee5eb596630741dc2c4f8f0545",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "9cee542cc98990d7e93e41c099ed157cafa6990c8c9cf7d29394ae4db979d44d",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name=mychart1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart1 should have resources defined",
					"actual_value": "spec.template.spec.containers.name=mychart1 doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "6df160c665fc4dcd9271a4cfd7345d8b610fff3a8921428cc1105dc0c110386a",
					"line": 51,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "e30cb57efcd604925cccb146b45765bac953215b4aaf584e170aaa1233bbb20d",
					"line": 81,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "4bbe734c9b56a7c6d16fd41d6cf47d7c0e162ad7ee69851c4864d04ec0ff30a0",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "70fdbc35181d1f5881ec5e55067bc6bc740b06f80cc4af4c1baf82055738ce97",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{mychart1}}",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{mychart1}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "b7e545cb60af5b90e7b7ea4abfedca8575b93472609a1be54e0250484809720a",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.containers.name=mychart1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.containers.name=mychart1.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.containers.name=mychart1.securityContext is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "7dd3ec72b87bf3d0c001af96a6e8083101e0d6ef2d63ab02cb45095b6ce594a0",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "1e8e2952a77963915783715c9700bc158e495568781c49fc68d8f4bee4333df7",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "18ca1a79d25fbdbd0df72531ba16d4452c35c01a31ff0899bb951dfba6c0911d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-mychart1}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "ef7e4e320f74a22e0bb151afdbeacf611e10e20e8dc7bf2125c3f548359e4896",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart1}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "eadd0e703f61ebf76bf7674f4bb58e69a1781d72d88a57e1cd7184361a42839b",
					"line": 69,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "c4f0bd92ef4cf6e891311048ae617c98c95b6c6fc260db6f0d2c8158911881a9",
					"line": 78,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "74e545f50b90d63b4eb8369f2db9b4b29ddc13b008c19a31c2dc83c586798b9a",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "935ff31f3c58fabf692461a07b3967d15c575a2c5a2cded7df64122cc7b98ff4",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name=mychart1",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=mychart1 has a security context",
					"actual_value": "spec.template.spec.containers.name=mychart1 does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "2f3db893fcf28853a224c026ba76ff000487207c92acd7dbf6f9f223ad5788a6",
					"line": 49,
					"resource_type": "Deployment",
					"resource_name": "release-name-mychart1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart1}}.spec.template.spec.containers.name={{mychart1}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "52fa8e41b03218fe488ef64a6a4066eb3163d9e814c1503d090ce586b10dc5cb",
					"line": 80,
					"resource_type": "Pod",
					"resource_name": "release-name-mychart1-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-mychart1-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/mychart1_template.yaml",
					"similarity_id": "2c869aba701cc927256dd1eb37c0d41b15bb4697777d7ca02ceb40d5704adb77",
					"line": 14,
					"resource_type": "Service",
					"resource_name": "release-name-mychart1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-mychart1}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
