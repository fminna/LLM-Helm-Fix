{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 111,
	"files_parsed": 1,
	"lines_parsed": 107,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-05-08T12:26:52.589038+02:00",
	"end": "2024-05-08T12:26:54.707289+02:00",
	"paths": [
		"templates/docker-registry-browser_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "b5ee0aa582209b6c374913a86082d2cf8306d4058e00d4e2218102fbd4ffd330",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "cd7c399622f077f6ab09be33e1240a85e8cec1264ba6827f50c2f97758df24f2",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "bf68ad344e44edc081447ddbaf62a6ae1ad2ff5dbedeae45740dc6c3c37aaa4c",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "1ff43a985d67bba0bc6a6efec8a10dadcf37ba407ad7ebc2881d4d507a26412f",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "502e40da5394ac50fbc67fc54cdd02ee81f65cefc15cdbc1298c9e21b3d0f196",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "dbe502fb216b1fc4539a9b794b4934f4b241788a7c5a8bcda8230bbb380d078a",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "cbe4c0e7cfa52da87334b1715d729c9fa8942adc5954d382ff302b341260375a",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "9ab5eeb876eb08ecf55c93f31dee0f1c0598da57d43a6a7afd2661488536d67f",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "4e5d20cb06311dc0b0fc7fddaf0b8102d8af7a407c6eb884428380dfd696087d",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "c324c29a7a0097f0ba6bbb7f5fa37c572e32de566bb9f45ab7a7bb44287f5906",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "041f35153b8bb8fdccd435e3187857b33299401d5bef0027b1e496a23a4d17e5",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "b78bf2f6229018a52892b51dd00c113a68a0b44068499de30eeaea4aae2daf29",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "bfa774d36f2f7bc4e0fa3f247890f96a8eaa219e82fd1f919f4d769e9401a38f",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "7d06bf038a0e1816e8685ff76ecf943dba43987b8f5053b19a8188ea8cea75f7",
					"line": 104,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-docker-registry-browser-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-docker-registry-browser-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "ac42cad9142e4a13bbf083fef3cb39bc01b8ce7ef3910bbc7e9c22dab26fe61e",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "c3f4f097ae099c93ff1778069fe361626e895b13cd8246e436c47c465204c737",
					"line": 104,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-docker-registry-browser}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "be1e691567e8224e57203781774773ceef1ff0ecc9563f16f096e4073f34a33a",
					"line": 95,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-docker-registry-browser-test-connection}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-docker-registry-browser}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-docker-registry-browser}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "279740e63d504b083d2cee836c400b0914172e3b290a943aba5f6b128d76741e",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "56f698d6ff06d046f1e85ce914f839e5d2737548b73115bcb6cc32996e8382d9",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "31bfb70fb3f7ebca05eba98d5870bdf0160ec8e2a934f64863e1cc6c102bd069",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "0b1db40003dc544daa7163a5dc13c4d089fd2aa58e7beb1aee761648294492ca",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "e6bb353a78037cacd464119b832f50132c863701fa2e3c525704e530fa6c23b5",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{docker-registry-browser}}",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{docker-registry-browser}}"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "2cdd2088b7adfbc1c1b4be4a0a5e03e84d4355ce92513c7fc7729c0409f51840",
					"line": 95,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "91242192c8eecb08e89633bd834f0c0b0208001688fd6c1bacb523392605a57a",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "5d4cb073e6442ad9d88a8adadb52954d76929c4a97325a6bc10433b4fac8694d",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.containers.name={{docker-registry-browser}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.containers.name={{docker-registry-browser}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.containers.name={{docker-registry-browser}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "e9e4e8a0bc074519b90933d462e9fb560ab67fe93bb0530ca8bc93c2f011bd2f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "0c37a35fce12bdf4e32325e153fab093096cf8f6fecee635d08f8de7cfe400d7",
					"line": 95,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "60818fe3a5806c9c67a7d25c1a422b8eadb1c9f2b48cabd1ea76779c95a42bd5",
					"line": 95,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "af180e3fc01b4dd93fa82ce2cbe7ac8e8958fbafb5f968a4a6e8ca43232a4002",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "7708e590decfe1454262d8c7d2e624c24c4c8e83439ceeac6ee16c45750699fd",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "c85d7b33025e6361edd4c081227e70f4b8064f5328d78693bbd0dd6bb06828ec",
					"line": 104,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "cea8edd4d9df46e1d6449c86222f4389e69c9613cec128a96d54100a10a35327",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-docker-registry-browser",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}",
					"search_line": 68,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-browser}}.spec.template.spec.containers.name={{docker-registry-browser}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/docker-registry-browser_template.yaml",
					"similarity_id": "2de339a913518fa59db899676b5aeb03808483529be260fc86b6299a971702e1",
					"line": 106,
					"resource_type": "Pod",
					"resource_name": "release-name-docker-registry-browser-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-docker-registry-browser-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
