{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 95,
	"files_parsed": 1,
	"lines_parsed": 91,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:06:14.660667+02:00",
	"end": "2024-06-26T02:06:16.71792+02:00",
	"paths": [
		"templates/vngcloud-ingress-controller_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "b5d627679c4c2719de3afbed98881bd49f390fd63f2aec18ea08fff09f35b71a",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.volumes.name={{kubernetes-config}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'vngcloud-ingress-controller' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/etc/kubernetes' mounted",
					"actual_value": "Resource name 'vngcloud-ingress-controller' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/etc/kubernetes' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "5ee9038821f980f1bdc3cd28cad84af515e6cf1423a33ca8e8cd91f9c996a447",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "9bf90f2c3532968d264500306d6fed74e90ffe18cc57412879437300b70a1a0a",
					"line": 81,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.volumeMounts.name={{ingress-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.volumeMounts.name={{ingress-config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.volumeMounts.name={{ingress-config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "bfd249681556891c1c37a074651b7c8ada46c4d907a04105ad0f9f0d34a72940",
					"line": 87,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.volumes.name={{kubernetes-config}}.hostPath.path",
					"search_line": 87,
					"search_value": "",
					"expected_value": "Workload name 'vngcloud-ingress-controller' of kind 'StatefulSet' should not mount a host sensitive OS directory '/etc/kubernetes' with hostPath",
					"actual_value": "Workload name 'vngcloud-ingress-controller' of kind 'StatefulSet' is mounting a host sensitive OS directory '/etc/kubernetes' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "72e767d1dce52ba91021b141eb20b214d6bbefb6d04f9b7d2c98a8ba8115b81e",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "51ad4ce7779b3fb29562bd6165aa5eb4186a724bd1353d1d93a1f5985e538c7f",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "a229dd628537c91765f3fd7c37b2694c0388ef68d3dd30d04d327f514bc57ff6",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "85d145b1ca01a4c5e2cfe3c4552a6211ddb5694a121b7a5432254248a4362044",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "ec8f7ee4e7d61002cdddad77d7d179dee2a07bf2e1dceadc93330435ed16cba9",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "5b5a94d42367a71fcd7b57b93e7a6727cb1493ba038297014b2c8400640be47d",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "85e8dda73ea85f0503ba580e152e6ac40c216055a47fec00f8cc84423aba324d",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "98e9c6b5d3b812329bedd460ffdf0f50c29bba295499c72b42e642510af21939",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "1529397cef97cd8931bbbd8e73b740744f9e4d7b2ccf4ba9e76002116f21b2a1",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.namespace",
					"search_line": 47,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "39ee5b2e7df16453f25292c7c92404822fab885073f66f16f2271555bf66becb",
					"line": 14,
					"resource_type": "Secret",
					"resource_name": "vngcloud-ingress-controller-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller-config}}.namespace",
					"search_line": 14,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "ed73d28fdf36d67e78985e030b7e836a2c24156dea0781733fee5e2a4343cf2a",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name=vngcloud-ingress-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vngcloud-ingress-controller has resources defined",
					"actual_value": "spec.template.spec.containers.name=vngcloud-ingress-controller doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "74072d3d39130c34a81cc7b97973f9bf1f2fc442a1661b6b614396038e4eb1ac",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name=vngcloud-ingress-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vngcloud-ingress-controller should have resources defined",
					"actual_value": "spec.template.spec.containers.name=vngcloud-ingress-controller doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "48856050a32b8486887a351aed5651bab09f1a47f595b8ceda929cfbb7a047c0",
					"line": 36,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'vngcloud-ingress-controller' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'vngcloud-ingress-controller' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "5b21aa70051a4d71c33c9a0d7066fa7b96d10a57b94a2d2f8ec1eb6984d7f7a0",
					"line": 57,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{vngcloud-ingress-controller}}",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{vngcloud-ingress-controller}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "0e63fd83e3dd71b91d70e52c276edd30ed3323d0eea0ac0d06aef95a5ad40189",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.containers.name=vngcloud-ingress-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.containers.name=vngcloud-ingress-controller.securityContext should be set",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.containers.name=vngcloud-ingress-controller.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "559465aac18cae3c84fe8af2755eda108d856294ab349f01b2f620ce04f09a52",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "8e01a3ea893c21cfa1e394c6634c72886467b7af1488bce5bc6998c4113ada69",
					"line": 47,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "e2bfce79a191f279b5cb07e911b2620a4a7dd9736e5a6c8be0ba1c9d5f898f2f",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name=vngcloud-ingress-controller",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=vngcloud-ingress-controller has a security context",
					"actual_value": "spec.template.spec.containers.name=vngcloud-ingress-controller does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/vngcloud-ingress-controller_template.yaml",
					"similarity_id": "fb69253a2c22c749004addea8007899905b02bcebdd69bfe85267016690a8083",
					"line": 70,
					"resource_type": "StatefulSet",
					"resource_name": "vngcloud-ingress-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{vngcloud-ingress-controller}}.spec.template.spec.containers.name={{vngcloud-ingress-controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
