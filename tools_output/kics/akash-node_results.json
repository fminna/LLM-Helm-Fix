{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 300,
	"files_parsed": 1,
	"lines_parsed": 296,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:09:50.786996+02:00",
	"end": "2024-06-26T02:09:53.082174+02:00",
	"paths": [
		"templates/akash-node_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "d9bf5f2f4259137b4835bead6750caa4476ca9c976c12ef7babf351b6c6e5a73",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "ee5bb44dce53bdf72dcee154b7f879c62226b1d2f5126a3a5871a93fa2605dcf",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 166,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "fd31f3d492b62e1ee0e755a4e6cb2a6ec550cfe654b3719758b0b690b2392c6b",
					"line": 290,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.volumeMounts.name={{home}}.readOnly is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "6e73f5b580c9e932908892f7f0ceebfe2902ff30556f12896b4abb71864bec07",
					"line": 225,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.volumeMounts.name={{home}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "83db72a21032cad5697e20615ed86fa9ce88ae29f36d5494aef474d780c63026",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "c01f91ccfd9bdc69b9a3c39e757c8f412f001bc3b2a24f189b1421f2339a0175",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 166,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "3d725ba14df7bc2a55785bb9b0f3e0a06e217c145cf466688dfbdd4808992a5c",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "779bd84629f58c6411674d5d89ecafd9824af2166b5359e3a69d7712d497b124",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "bd2d59815e935af2910f7668c6060e1d97ea41526414693be91aa062979426cc",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "06b373acea28be818e308c30356e31df12b3441a6f2848c59919dd2d4ba8db0e",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "b31aed6d070e510bdc900dba8958dbab1b2e61b8415471b8f3778141aa720e2b",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "6e1b84cbf5778d63b3932285e03e4afe4958b602b7c556a98eb8d209290f56e8",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "48cd06acb8226d5895f5c0d79831d862e711d860e041f13979bc1d9a8903a53f",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "e2f4102e2ea5c72096d2012603e79f19dceb3dfe7476557fd4dab763a9cc7851",
					"line": 165,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "7ab5dde4d7f3a81ad8d89b74ce309602d382ba1786dbc6176057e5d8c57a1b47",
					"line": 230,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "bcd1064da4a4a828275059f05a2566414d15001ecdd6ad1f7be213a450303a14",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "cbc3964d0d1377afe9fd4e194b1d6c265f0a478b712d485a3b708c4917e0079c",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "6c2ce51d3c83d69dc27e88d52c931c03cb0aaca51086401274f2eab0d1d64891",
					"line": 160,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "akash-node",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "d83478525ad9b105d7b4e1101708e440c27ee3347bc2f1be0d217f5416465cda",
					"line": 124,
					"resource_type": "Service",
					"resource_name": "akash-node-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node-1}}.namespace",
					"search_line": 124,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "9e39bddcb99942570e02c2130aa13a7edf772230471fa5fde71db4d79bca9e43",
					"line": 144,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node-1}}.namespace",
					"search_line": 144,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "8c0aea17f3c1306c1a1bcef958c07ffdd33924d69e6a3ab4ab681cebc7b71c1a",
					"line": 20,
					"resource_type": "ConfigMap",
					"resource_name": "akash-node-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node-config}}.namespace",
					"search_line": 20,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "4baba89e3f304afccc5a60d6b3d11c32797e70cecb4200c5cf757b68e3fb4543",
					"line": 292,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=akash-node has limits defined",
					"actual_value": "spec.template.spec.containers.name=akash-node doesn't have limits defined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "d4e683ef8eac110c42d4f8e13c85b81739ffb4ace3e8582ad236ee82c7e41475",
					"line": 227,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init has limits defined",
					"actual_value": "spec.template.spec.initContainers.name=init doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "d38e46517e0da89a4ea03579871f108384212b54eba4cfc583a406c9ed5ebf8f",
					"line": 227,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init.resources should have requests defined",
					"actual_value": "spec.template.spec.initContainers.name=init.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "3046b42f0ba522d32e5757a008ae8d0b2923c2e05eb49304987cf7e5c208f418",
					"line": 292,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=akash-node.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=akash-node.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "df3343d8091d6460bfe15d1bed5320e65c9fa6e06fa48a1d70cc269d03e193df",
					"line": 235,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "8f466aa4dfee7316a85911c2ff802c56df45a9b830885596bc9320c8cfa9884c",
					"line": 170,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "55b77b4dbeda9703a593671b84920e2bd04a951f32278d8e649072f518457296",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init}}",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init}}"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "55b77b4dbeda9703a593671b84920e2bd04a951f32278d8e649072f518457296",
					"line": 156,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{akash-node}}",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{akash-node}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "c8266ba2a94e6144dfd916d3f085979624d3fc9cba489b76b87b3e3bdb304f9a",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.containers.name={{akash-node}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.containers.name={{akash-node}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{akash-node-1}}.spec.containers.name={{akash-node}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "e7b88d219a72a4cac0a83cf7df7902be48f08921cb2c35ef776b3ae020913d71",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.initContainers.name={{init}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.initContainers.name={{init}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{akash-node-1}}.spec.initContainers.name={{init}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "9cbae0092ff351041364c99d72cc78a9e6579e42e26d6530e28ca7e7318f37a0",
					"line": 144,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{akash-node-1}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "716bf8aeba8c152cd29ef2151303839c7b82462358eddc08f7d9604787a5270a",
					"line": 144,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}",
					"search_line": 144,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{akash-node-1}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "304d63393a397d58ac8591bcdd33c422276aa4cc0d69e275432523cecf77d54d",
					"line": 166,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": 166,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/akash-node_template.yaml",
					"similarity_id": "667621e7ae19cb1648644a5240738c8e66122c2332503546ecd698c1e355bbdd",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "akash-node-1",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}",
					"search_line": 231,
					"search_value": "",
					"expected_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{akash-node-1}}.spec.template.spec.containers.name={{akash-node}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
