{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 52,
	"files_parsed": 1,
	"lines_parsed": 49,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:17:25.341552+02:00",
	"end": "2024-05-17T21:17:27.309618+02:00",
	"paths": [
		"templates/web-app_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "3c57ba6602b50d4ee5b2d18f950b5c1f5f15659b5d1438b8bbaec1ed12fc8f96",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "8f71eff40e5bd5988d6ab01b8f48513059518ddc36ab64ec4760f17e791959fd",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "757257530371262baabb9cd17aef7e64b6a812efa7097e24e2dcb50d4b48dcc7",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "9ab0cff91f9b31d66654e3035cdf1c6f05fdd20a0e490fc4fc78ee2959c6b4c9",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "4d475f6a3a33d6a49067932ae81f9fc7b1e61919d897d3fd5ea3211a5652a4db",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "389243cc6d2bec72c27e3b0a71b60cd0e0a570c78dec0d7505c56c9164fe2014",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "43707a54fe4ea40588a1e45dc7ff8ba9d7813e89df8ee879b458703ec1ba75c8",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "b8856e601730311bb1e5b2b60e7376c453aff9a12767a2bcd9b055784d7ae9fa",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "5edb86f876a79c22611f2d3b8f6d34a42b547dbbe93250511e8fdc19974f0e2c",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "faeaace0de0e24386a5925a9109835697e67973498c7afc586226869c1e6d28a",
					"line": 8,
					"resource_type": "Service",
					"resource_name": "frontend-nodeport-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{frontend-nodeport-svc}}.namespace",
					"search_line": 8,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{web-app}}.namespace",
					"search_line": 29,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "f2cf4114e2c47578cf9decda2668920b17ac37f79af281cf327b9b1edbc54016",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name=diploma",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diploma has resources defined",
					"actual_value": "spec.template.spec.containers.name=diploma doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "17dee0a3d5dea7b1824870a6f40657e0f220c76295ac43e91e71f7cc37be2dc4",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name=diploma",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diploma should have resources defined",
					"actual_value": "spec.template.spec.containers.name=diploma doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "b7f5117c91fd74ab872fcdaf94d0b995c0117a0e3863d2ff71dfa03caf159f2e",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=web-app is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=web-app is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "5776d33d569c95cd2423954fe483b4675ad2cf8025afd56462aedce4d6f84e15",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "3cca3af48ea6c547504b693ef1bb98715d17abd3952e0148cfc73705b4a1578d",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{diploma}}",
					"actual_value": "metadata.name={{web-app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{diploma}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "38ee33a211786614e78a98f4aebb12cfad15893f5f133db99c0c7371b84fbf86",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.containers.name=diploma",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.containers.name=diploma.securityContext should be set",
					"actual_value": "metadata.name={{web-app}}.spec.containers.name=diploma.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "a4305b96d70af5ffaa6e7daffed7e70af5b0c66690e31ad5b1137ee964ba4cec",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{web-app}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "613d091d1f6caaadfa1e389b9645940437a381b2a5e2d7d0ee659bf99b469322",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{web-app}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "06c2532efaaa5344c7074da5c3928dcdece8949c98cd5702ef37c13883d6987e",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name=diploma",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=diploma has a security context",
					"actual_value": "spec.template.spec.containers.name=diploma does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "c0af2e53a1afcaa6e6138d6b5355e75327483d227c40e56f6ad90e50c1dbaf17",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "web-app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{web-app}}.spec.template.spec.containers.name={{diploma}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/web-app_template.yaml",
					"similarity_id": "d9c084c8db367c80ed193d5981a3a992277ae1a4326f75321ec656636aef10f8",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "frontend-nodeport-svc",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{frontend-nodeport-svc}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
