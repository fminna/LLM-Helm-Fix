{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 134,
	"files_parsed": 1,
	"lines_parsed": 119,
	"lines_ignored": 15,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 22,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:24:45.878417+02:00",
	"end": "2024-06-26T00:24:47.748941+02:00",
	"paths": [
		"templates/observabilitysec_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "420728e56cea312efb039af5f2efd5ea63ac729bff061b1b80f4c3a8261979da",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "825f91a02dd01b1fca2b9c8bdca36dd46a722c0ff934da599f97ae099d2c9d8b",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "e5680c75b2455adb4bd33f8678e01c44ce36c2e1bcd06bfac2f5f0c4930178c6",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "7dc7f1d924ed979dac378b31f80d565d6655a9ac83a0d190392f9478ebb0683a",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "6f0611b6f713abe45a5b3d67f1c8d6bbe47fedb53003fbbff4262d789695d8c5",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "ab1f99cb4d3841d26e19c55c0be698ac78075294646ff446d548f11c25c1202a",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "ae562c11d3557e00b25b5bf95d6f5f4f05a7e1a648bd32cb9aa5560393290aaa",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "8c9026fb6cbe18e35b33b5e9c81a4ff68210bae9fa5cea0fb433fa31a603ae16",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "ea535b59bd7b685820b87c8f29747578ff5411e2a54b62bda44f7fbca498dc97",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "6017a8eab1cd40d0a7aee028de2005e4eb6ed367ef7b17a9e71a9793f2d5db82",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "a82adc9da0b52e34b8a435b36376b00f392615f7d023dbd9e875e959b1664032",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "3ea9869290734953d1d0c43e7e972c2f4aa8979dbdc522c8f2bde7ed5d0b4dd6",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "beeb7c7e2f3314c1f4196db92433a9bcc3384287a6045ad1cf364e40ca77cd7d",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "d739da9315514fd0f17e594c730cf7bfed274474cdaba37e40a45c2615964adb",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "e4d8bd73a0a3a6cb926b5f09f701c798cd445f54f607d83c2ade6d4861c18244",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "e7f0b703b56d2636814f986cc79d55700e747099c07356f29f43b1fbcc6954e3",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "6c3cea68f56a92cec9f6156148cfa58fbe22728fc03e9867035c92dc0af6ab2d",
					"line": 99,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "4d0a382ced6f8c2b7f8ccf0446fb343da8e99c0ad3b0cccdfcb97440ca5f10ef",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name=observabilitysec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=observabilitysec has resources defined",
					"actual_value": "spec.template.spec.containers.name=observabilitysec doesn't have resources defined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "709969daeeed5fce32aea8598bb449369ffe644bce75cf31a413362c4b5ece01",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name=restart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=restart has resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=restart doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "4532188e7463997faab9f2b2585fd685d145959c4c450338ea105ccd283be298",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name=restart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=restart should have resources defined",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=restart doesn't have resources defined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "25d22a0fc85920c1e6e047852dae4f23f79fe9865804c8399acea812f31c3a6a",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name=observabilitysec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=observabilitysec should have resources defined",
					"actual_value": "spec.template.spec.containers.name=observabilitysec doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "192fe40b-b1c3-448a-aba2-6cc19a300fe3",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Cronjobs must have a configured deadline, which means the attribute 'startingDeadlineSeconds' must be defined",
			"description_id": "285952e5",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "6dcc6a520943c9850a1b981568fc53df7e90f86162feba43b030048706bce738",
					"line": 94,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.startingDeadlineSeconds should be defined",
					"actual_value": "spec.startingDeadlineSeconds is not defined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "412a8ed59effc27a67dfad34d5a7a11df58e734146f61766138990c6a221a121",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=observabilitysec is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=observabilitysec is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "c2155c1434f6d4f4fa48b08b03855d38759f6cf6343b55c58deb29021a99d840",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "b98011bcd3f600c8c901c8262258a736e87942377a51056453bc29cb00cdc969",
					"line": 103,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "ec2acf03ceb7b0138602087b91c564e2333c9fb260ff37faf8d9fa595a707b59",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{observabilitysec}}",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{observabilitysec}}"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "f883cb06779070832254133c1231313d29f857b6d43ddb52e00d57ff83788700",
					"line": 92,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.annotations should specify an AppArmor profile for container {{restart}}",
					"actual_value": "metadata.name={{restart}}.annotations does not specify an AppArmor profile for container {{restart}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "e88efd112a63f68a83651aec4f28434e52f2c83d610c513a4ceb051b7dbd722e",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.containers.name=observabilitysec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.containers.name=observabilitysec.securityContext should be set",
					"actual_value": "metadata.name={{observabilitysec}}.spec.containers.name=observabilitysec.securityContext is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "f4e66fbc9cb0fbac6146cb3e0f02e260c51861ca245edd2ac81f2433e8847940",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.containers.name=restart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.containers.name=restart.securityContext should be set",
					"actual_value": "metadata.name={{restart}}.spec.containers.name=restart.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "4141c27eb4e44584d23fab699a5dc40c1c775ca363cdc14fce0484a9ca155bf8",
					"line": 93,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{restart}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{restart}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "49903cf999a81e7b9cdd6692a186727e6b8d1986c4a611e13255d04b4e6f5f3e",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{observabilitysec}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "a1d7be87da65aacea74ed305901d4806990a422d2ed2f47a911391cac1b55d9f",
					"line": 93,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{restart}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{restart}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "6af0c52ac6faa91146c581d8c0f09b37e7852440eec091d2475c1f661b68b292",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{observabilitysec}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "10c21baeb03261e4b8ab182507ff39cf9bdd4c4fef1455276eb47ac64d641e16",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name=observabilitysec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=observabilitysec has a security context",
					"actual_value": "spec.template.spec.containers.name=observabilitysec does not have a security context"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "ff389f5790f5e14ce19ba6481c8b4c02e5e9ae76dc035cdc68433e88b29a42eb",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name=restart",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.jobTemplate.spec.template.spec.containers.name=restart has a security context",
					"actual_value": "spec.jobTemplate.spec.template.spec.containers.name=restart does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "91641d8c91a4cd98bdd78ba69c996e3a3eb1023007c9321fb17e0fafef80defc",
					"line": 102,
					"resource_type": "CronJob",
					"resource_name": "restart",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{restart}}.spec.jobTemplate.spec.template.spec.containers.name={{restart}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "324bc56a27e9308efde164f645e0dd0c2ccfe1a6fab89194e240a0dc33fc3697",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "observabilitysec",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{observabilitysec}}.spec.template.spec.containers.name={{observabilitysec}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "90cb44686c4fd58900fcd5f2d2270c3ca8b017df8dc4cf04f22c29d306d15ff4",
					"line": 61,
					"resource_type": "Service",
					"resource_name": "observabilitysec-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{observabilitysec-service}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{observabilitysec-service}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{observabilitysec-service}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/observabilitysec_template.yaml",
					"similarity_id": "5d225f99009715802618b592b4d611ebc3926a176575b531791362a86c972237",
					"line": 56,
					"resource_type": "Service",
					"resource_name": "observabilitysec-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{observabilitysec-service}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
