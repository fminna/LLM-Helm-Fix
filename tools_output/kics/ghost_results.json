{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 157,
	"files_parsed": 1,
	"lines_parsed": 153,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 19,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:17:30.785974+02:00",
	"end": "2024-05-18T00:17:32.597389+02:00",
	"paths": [
		"templates/ghost_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "be8999b1311580142640e1d4c2ec1a56a879078ba1489590adbfa3bb28bf800b",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "4a32fa907e1d0de95b0a8ec3de48bfeb56e0fb6880ff3d3662d43485a7a565e1",
					"line": 130,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.volumeMounts.name={{ghost-vol}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.volumeMounts.name={{ghost-vol}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.volumeMounts.name={{ghost-vol}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "9ac32c7253fc630ed8186f69bb2277f5a419b528cc84d2f889294329d07b91ee",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "a8a9149b85cb8cbcac5fb8cf192ada9bfa01869f446e8b24eff7287bcdcce173",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "24efe3de9ec0c06d345abfb21d8789524b1096cd05a085bdf9f27cd94470bb34",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "d6f80266d983bb0525d093f7765f1e5b2ddf0523b2cc5adf4e7f3db77cda345e",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "90f3957f58e9ccf93d4a725ba4020c2b2339bf249c5e92d7b05df084255fced1",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "46252f33bf070e4351af5d5df1b2a84451ec8cff59c46627c8cdb14844b18141",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "c75fe59b1f40d60a37170f2ebc71765da35019fae5a77e91f1c308fd01da0267",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "fcf7b196394a4d5b2a693264c863824f8979db20d04e8e44654c6cdbe1217456",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "a3a6c3a18dd6f23a185b95c92a5b818ae94c96ee4c135ea2448defa9bbb33c37",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "a7a029aafe4f0b76e1be8ee04022a41675cea6b24730cbf2ee57cb7d801206ad",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "c2261b04eaa5b66fd810f183202feb2fcede01f80e3792fbb15bd2042c9ca45b",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "66e58cc07e3ea63d081b89f25047feda7ca3d02e41e90ba8c8a8ace1c3096e9d",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "cddf8271a643e76fe733a82cf3da1a7ef4b2b27430c55229b0fc1902f76c3921",
					"line": 150,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-ghost-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-ghost-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "ca3e080a5b19f7c27f0ea2513367e4ef67ab3b29b275fba9dae7834c454491c6",
					"line": 150,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "d9f2c4544404516705bedb1ecce0b1ef179bfeec52feff749e64fc7ed7fafcff",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "b51bc26680b78435560610f1a96c1d68c8c0514b5c25545dcd9153028c69dac1",
					"line": 141,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-ghost-test-connection}}",
					"search_line": 141,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-ghost}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "Service",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-ghost}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-ghost}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "de5050db6a652046b797f9528e7e39013f2b86a920c49e07e7d1233cec3217dd",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name=ghost",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ghost has resources defined",
					"actual_value": "spec.template.spec.containers.name=ghost doesn't have resources defined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "35191a262a72088161ca89e02a41622277847c90bb14b66e20c2da37c9961e27",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "eece8bb2c27e1ddb1cb7a3422d3a1d33bef28c9f246b317b3ac321a8131c3f41",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "596b311879ddbbd277e19409b61c5685e71b40c4872a29b96465688e4c689d85",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name=ghost",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=ghost should have resources defined",
					"actual_value": "spec.template.spec.containers.name=ghost doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "98539aad2dfed13263aa10cfa1d11160bdf8710b0d4bf9e68977f1d6b99423cb",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "5b223a61418917750b7cec9b1116924f56c602dd04f7375ebdacdc23dbb1cbca",
					"line": 153,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "31048ba18921b24ec8a03c16e141053f2373100e3e2dddc7afebcbe91b35717a",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.metadata",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{ghost}}",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{ghost}}"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "f13c5a09ab1c793a1385038ab271c8afbe87d7c64cf06b78d0813e1789d79807",
					"line": 141,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "62b2a7ba6463b08adaeef8e7be6c284a69b69d736b4a6d13334cf2487b2052d9",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "ae40ecedae6320430dffd7bb57321d447eaf50e6a4dde09b9c9f9c27fb78858f",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}.spec.containers.name={{ghost}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}}.spec.containers.name={{ghost}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-ghost}}.spec.containers.name={{ghost}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "6e641da1342fce1874503b85252fd4e7020bcedd50ca038f0d5c52db3a57726a",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ghost}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "3f6c52e54f79a89ea54ac64a1ea16a6d7b23b9313bb2c3106177f54e9b0cdb36",
					"line": 141,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "f8f60215bb8837cc1d46b8f5e36140ce91dabfa890a6aad55c18c1129e16df3c",
					"line": 141,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "6bf51ae917d4ab52ac514050e19e5ac428882f2ea2c8fed2af4dbc1aac3f8650",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-ghost}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "58fc0aeff2f6bcd83f81cf76320e1cef6c4cab2c3075a6da4a84bf538e65f9a1",
					"line": 150,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "57fa2695a2a3e52db670045278aa8630e6f37ef9d558643eb8097f440227fb7f",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "f14fa24737600eb00aeba358dff9ef2c3bf9085be8673ecafab33bcb01f2c580",
					"line": 152,
					"resource_type": "Pod",
					"resource_name": "release-name-ghost-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-ghost-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/ghost_template.yaml",
					"similarity_id": "767982409ba216c08f0c2788cda234b894ef92cfc1ce7cd831f83e0a025dac9e",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-ghost",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-ghost}}.spec.template.spec.containers.name={{ghost}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{ghost}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{ghost}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
