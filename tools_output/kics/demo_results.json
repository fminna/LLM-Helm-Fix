{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 103,
	"files_parsed": 1,
	"lines_parsed": 99,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 18,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:38:20.701063+02:00",
	"end": "2024-05-17T23:38:22.624973+02:00",
	"paths": [
		"templates/demo_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "e22b621cd7083f140d699ca8f9badb045e2985edba17c4b37f13c996e30e5639",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "aa249a23ac81d79c123c9fa2fb55445c83b4bb088789dbf6debdedc110d3bc3b",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "8aeb5e32b31809a2ea6f6657bff3dd73f93d9246e342de9328a197492da0cc0b",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "ed3bdcae71e227397bb4246b41f7c4762e20e0519d15cf113232c9bc2c4271bb",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "621dff4b8430b393ec7339010cb7e4f4d382dfc808a795f3d0e3a871dbb2c696",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "2498d813ba30452e2c6d50021d352872c2c2a6a7e038f86ed18908d2b3a2df2b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "c27de81d1bd36ae991e4eddecda36ca726ae86f90368ad4b6b17274e06a848dc",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "761385de50e8413d3af6b0380740e0ffa90ef784e6eb849fbaecc1066d9ca239",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "44973b47f0d169143dc5261b5d00e45c224124b9b8cee1e6f5810384a78cd732",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "dffac07aa8added077e882a6eeaf7af242e491df2e38ed8f12bbf3cf528266f3",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "25d6363088b1da88da396c1fe2e67f6af16874f5a8fe13e2ba496428b7d026a9",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "71126f13ef13d18919129e6633a3c12ca2eec7449005cdb9a8a0353d4a1137d8",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "b56244d19b36ba469dc9ba54de5e063c5214c80cca6ced5e92aef9826bc5f75f",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "7bb29cec42e3ff4a3461ade7d19905ffcfc846e5ad673ec6396a26ca9bbac7d7",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "58b320c2f1dd54eb5c51ba86807d8d23a9b490c988d10ad741c97c38a9b0cc94",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "003be3a04c29f12ff235f7de1b912f2fee5233390f460006f61f22a3350f0778",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-demo-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-demo-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "6571e134568ce2faf4452fb2399c9a6498b931bc3c110349c7b8beb6f5419f49",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "df902ea706b70249c4b94391f3b0ce83d0f88f0cc88e04765fa1b476a62facab",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-demo}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-demo}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "e8379519129fd4b44bb9dd5f230465e5584ebe270208396db6f0e44610f386f7",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-demo-test-connection}}",
					"search_line": 87,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-demo}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "ce2f98fde8fd5acc291cb452351e446c24b65bc2133502d052eec93e57a6b435",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "d0bb52072431ea3a3d9a74edcef0f972180107bbd7d8f2d54f18b07c1724f264",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=demo has limits defined",
					"actual_value": "spec.template.spec.containers.name=demo doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "f33dbc38c4f1edc8ff1913dc7691b3ab241007dbac80bc98ca79169ba5cb0c05",
					"line": 80,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=demo.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=demo.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "70d2a7a28de982364aaf062cff7ea970bc61ab5858bd05feff4805f3dbcc4b07",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "540a3f28d439a131c6d3d8559b703ab476e7801e4fd4ced1c67b19edb2c68458",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "519d5a222ffee4e6bcb7f9661d42627d17e0e2fd8e3714f1a0713108cdcea6e8",
					"line": 99,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "23e08b7f263dc609771157448474e1f213cc5ef59eebbcdd04f1162890732a61",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{demo}}",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{demo}}"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "837c4617f203d9825eea41a5bf3d0d17e8028cec8e690a42d437652be35043a3",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "9c0cd9fd4cdefc731f89a49cd98335e4a81801bc3e568df3d6917d8db298c6b2",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "cebeb4026895737ebdcc52fb691aca2f7b7a474ba648d3f6cad126203c8f0820",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.containers.name={{demo}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.containers.name={{demo}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-demo}}.spec.containers.name={{demo}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "17bff9ef7a822dc5bd3eb7ded3b4c227606d1ecc206cd719be4bd47945270848",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-demo}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "c8e2cd6f4b515c33fd6486017123f1e8a1283959b6f1f72dc5ec08902c0d60ac",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-demo-test-connection}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "4a81737b1e1111f6020b4e6071be91d5bea12b4c381257315739abe1af5807e8",
					"line": 87,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-demo-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "7bf71489d0b8478afc5c05bf8565383e13e95782e16f0003971c72dea2ba0e76",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-demo}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "395be54a617b0ea590ba3079490ad3a4469aefe81315883b6f9da9f7d63eb475",
					"line": 96,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "0d1a16e23d5189eeeeb23e31a8ef5fa85897f0f8be5ca99234779883d611b346",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "f45865e5d453287f6ccb685e260baf15825b7a74b73b6da3be002c5764136928",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-demo-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-demo-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/demo_template.yaml",
					"similarity_id": "8cdb0e4762352b95c8d5d0c7506accb58dce4a598ed9e5df6aa74cae39e03940",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-demo}}.spec.template.spec.containers.name={{demo}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
