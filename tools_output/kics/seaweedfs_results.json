{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 619,
	"files_parsed": 1,
	"lines_parsed": 606,
	"lines_ignored": 13,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 8,
		"INFO": 0,
		"LOW": 32,
		"MEDIUM": 34,
		"TRACE": 0
	},
	"total_counter": 74,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:11:57.681744+02:00",
	"end": "2024-06-26T02:11:59.910655+02:00",
	"paths": [
		"templates/seaweedfs_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "0e741e60eafd1cdc475653d173b51cd5b41b60125bf6307b9bba5f724ce6aa99",
					"line": 574,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.volumes.name={{logs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'seaweedfs-volume' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/storage/logs/seaweedfs/volume' mounted",
					"actual_value": "Resource name 'seaweedfs-volume' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/storage/logs/seaweedfs/volume' mounted"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "52adb0b4a3a1e689b0720b0eecc1c6fab359ed6058b2a77968e37acc5a628a10",
					"line": 574,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.volumes.name={{data}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'seaweedfs-volume' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/storage/object_store/' mounted",
					"actual_value": "Resource name 'seaweedfs-volume' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/storage/object_store/' mounted"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "5a0fdea952e7c146fccc7e18f51cd0bda3b2fe95d331e39a60168a0d69be5090",
					"line": 307,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.volumes.name={{seaweedfs-filer-log-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'seaweedfs-filer' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/storage/logs/seaweedfs/filer' mounted",
					"actual_value": "Resource name 'seaweedfs-filer' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/storage/logs/seaweedfs/filer' mounted"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "346caa499a029d25774a2ef947c1411ba977654ace9e765d44fc662857641e04",
					"line": 445,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.volumes.name={{seaweedfs-master-log-volume}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'seaweedfs-master' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/storage/logs/seaweedfs/master' mounted",
					"actual_value": "Resource name 'seaweedfs-master' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/storage/logs/seaweedfs/master' mounted"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "889d9dd76268f8c0fee9fa6337c2e0da977c23f3520e51a3389d56d950ea4027",
					"line": 445,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.volumes.name={{data-default}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'seaweedfs-master' of kind 'StatefulSet' in non kube-system namespace 'default' should not have hostPath '/ssd/seaweed-master/' mounted",
					"actual_value": "Resource name 'seaweedfs-master' of kind 'StatefulSet' in non kube-system namespace 'default' has a hostPath '/ssd/seaweed-master/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "8fd4d0d6e48cc4c0f78da382b568926bb8b556ec54e5a856a2c843e3ffae2e8d",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "bac3c7c87ee025e77bde09a9ba09f1dc5e71c4ff32ba0d0d32f0c11fcaa6ecb3",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "f007c6a2c25fe100a96a006df4dcfcd5b6c0743461f2f6fbed96ba45ad454380",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "321489521c091341183991ad0250a5f9f959f904dd3a9056c7cf45b46ae76869",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "5360b2fa456e3d595261bdb3ff4325ef75e6aa2b602f1bb7aba2ff5ff6f3d5e5",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "fe7e5b10912d2cccf6979755ee86b268e900965c431c0b23aea1f08bff4865a8",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ed48af03fdecf6d34107382b3dcb2669e7a134b22a2bed254fcb1ebbb139074a",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "2977103a717af70429192a9cc10ec73b129423bb45b99adea28ebf4cdb8dba7d",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "5d5ac6915f645f7bbd32913aa2f02e77dafc196d670e9d48a041fd1df6e65548",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "3878dc92-8e5d-47cf-9cdd-7590f71d21b9",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "f4e48914",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "57c5e5f5e9c3e9ca088cb2328b9bfbb87763198300410a893ee246b76b0d6eb8",
					"line": 582,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name=seaweedfs-volume.spec.volumeClaimTemplates",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=seaweedfs-volume.spec.volumeClaimTemplates has one template with a 'ReadWriteOnce'",
					"actual_value": "metadata.name=seaweedfs-volume.spec.volumeClaimTemplates does not have a template with a 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ebfe4fcbc2149b927cdc0e5ebbec6876d12048dba4f1d0602cbb2d521bde29bf",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "20a037bc9b2ff2624b8607418650ec33085b7e9b88cf613099034a5ee95c3891",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "44b327ca0909507315e3426cbc710c8c4f740065007435e1a876469180625aeb",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "b4ec0219281654deaac767f9fdbaaab8710ba6f84c2e68e7fde325ce65457d66",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "b7ba2565b4f78b95163d7b2588d9820b1339b68391114348f9be985fb3ef98be",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "cbcad0d757556cb60f8b808d61c7a3b8ecee79bcf1d7efcefb28f67dd8c61256",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "b911cf54144feb4eac422355b028021f90b54e41a0975b138af71d840266c4ec",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "7a2b3871063840b9a4c0132e28f5523777fb349545fe66e6d64dafb16f9cb924",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "657eefc9922fb77ed08cb878a63467663abf633ba93bf73f5cfbf8ba095cc198",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "592ad21d-ad9b-46c6-8d2d-fad09d62a942",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#privilege-escalation-prevention-and-bootstrapping",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "c78cb1a7",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "4a3e101aa5a4299576081493254d4bd0bb2e49e1158aa6f62eb321fa869bcc8e",
					"line": 17,
					"resource_type": "ClusterRole",
					"resource_name": "seaweefds-rw-cr",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweefds-rw-cr}}.rules.verbs.create",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.name=seaweefds-rw-cr.rules.verbs should not contain the value 'create' when metadata.name=seaweefds-rw-cr.rules.resources contains the value 'pods'",
					"actual_value": "metadata.name=seaweefds-rw-cr.rules.verbs contains the value 'create' and metadata.name=seaweefds-rw-cr.rules.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "9e1434a0ff0cf313a2c758e715bb72ff16ba138e5b4992ae9c8519e05bb099a2",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "70e02e1c70ca4b97fd6cfd9a00ff72131e6d17adf49047382c582d8e2b60b219",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "0e4c4d10c1ecfa922eccfb77260174723da4dcb3bfba0d9909d4d681d8a5b765",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "7d950520f8514fcce7de88b21450865ad5a32e606d16329b1971c3d810827f40",
					"line": 191,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ce88e3241404e374af031db4939ad050a84faf8e523d4c86d20f66e4bd27f8b1",
					"line": 191,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "2027328c5febb266f6f9a2c24e15df893ed84faefd3ee064647ecd81beb0cde1",
					"line": 191,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "5cc30473f2dbd3540e656eda4b43e764e4306bff629e6829002b1ccc3b15dd55",
					"line": 94,
					"resource_type": "Service",
					"resource_name": "seaweedfs-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-master}}.namespace",
					"search_line": 94,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "0bff93dfe3cc3e5a935eea76ab413da4e7ea4626613d2719ff3af983fe29f373",
					"line": 610,
					"resource_type": "Secret",
					"resource_name": "secret-seaweedfs-db",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{secret-seaweedfs-db}}.namespace",
					"search_line": 610,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "7db2ca57d8d39ec6c0f97339eb9c24cb9d4d957b862672706c40d69878de263e",
					"line": 121,
					"resource_type": "Service",
					"resource_name": "seaweedfs-s3",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-s3}}.namespace",
					"search_line": 121,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "seaweedfs-filer-client",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer-client}}.namespace",
					"search_line": 38,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "5195f9992429495625c7c405a734dafb11ff394ac7968b11bc811f7de63d660f",
					"line": 140,
					"resource_type": "Service",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.namespace",
					"search_line": 140,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "1e1facf45790cc002f799eec02a6f32139c25a4f236778fe6699639304e90e7d",
					"line": 593,
					"resource_type": "Secret",
					"resource_name": "seaweedfs-s3-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-s3-secret}}.namespace",
					"search_line": 593,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Service",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.namespace",
					"search_line": 69,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "b9b20077fa617e2ce5474ce441f2eca12203602ca57c1be1de22058ab344593e",
					"line": 460,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.namespace",
					"search_line": 460,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "seaweefds-rw-sa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweefds-rw-sa}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.namespace",
					"search_line": 168,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ce2f5bac35d7ee4ea7695640c476d922aaf4eef1dce51fcd8570373ddd27fb4f",
					"line": 325,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-master}}.namespace",
					"search_line": 325,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ce3bd7598a62656a8a3ac88053b1e5efa5690da18a4ce6a70887456552d54886",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "2b503a25354e6e3615d7080a3396d64daadf026bab0f54cd7c2759451dc8cb02",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "773aa8a6611424185e1fb711308af1070c813ac288e6871b099d2c68c6533aa7",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "d4de011fea760617cfcbae3bc6102bbec612b8639d91e28e39c89dc65c107ab2",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs should have resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "14169fc7ff927b4dce811395b3f7127d5a30d15ba1c44735ac27766b3b2a716b",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs should have resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "e57cc529367b201060358445fca743859a8f71e3ceb400912f660d0a78454f65",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs should have resources defined",
					"actual_value": "spec.template.spec.containers.name=seaweedfs doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "084480fa683a75f98f850e1a243ead0789297811d40dd2174059cdc53c96220d",
					"line": 210,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "9091904afec7b5aa91c9f7acafb8328fd9cf6a3420f1756cce834b56db2c1487",
					"line": 210,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "976a8c8e8117d637fc96e32bdd92004efd4fbd08ef252d2d745a343d132f321a",
					"line": 210,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "e5466a3653842a3f77762d0d4e79fbf99ae37a8b98e883f90064b00af0a26d0a",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{seaweedfs}}",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{seaweedfs}}"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "009b1ff39cd5e601dce9fa60a3f33bd3e2500f0af44c21fa9a7d436a0ed859d3",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{seaweedfs}}",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{seaweedfs}}"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ecc765129db7a63f3b7d7d82e0814735201dca6838ef8805cc1fdb787f7cd1b9",
					"line": 185,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{seaweedfs}}",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{seaweedfs}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "09b8df2b378761b87abcf1b1c6ab865ca3306c247db2892d66bf432d0ebe55c9",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.containers.name=seaweedfs.securityContext should be set",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.containers.name=seaweedfs.securityContext is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "8fec4eadd744798dac19f5257f54a2506f1131a4d005984ef9f04a86199bcf09",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.containers.name=seaweedfs.securityContext should be set",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.containers.name=seaweedfs.securityContext is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "88a97842da3a34563446d3a8095f2d9e01c092c3dfe422cc690d7cb39dbce0a9",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.containers.name=seaweedfs.securityContext should be set",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.containers.name=seaweedfs.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "e159c15a744ee416ed1d8163b643ff79ea17250394b081d7c4a790ff29d48abd",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{seaweedfs-filer}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "6cb78dadd40f4459f64f8cd9af1cd9fc78c0045522a1bcc50976c5220e73cfb4",
					"line": 325,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}",
					"search_line": 325,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{seaweedfs-master}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "4a299c1689bc86735a4ba8534455387243bbbfad37e6a7166affff2eabbb0c95",
					"line": 460,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}",
					"search_line": 460,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{seaweedfs-volume}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "55f193482076e772962279be3629a7081b73bbe2163200469680ef8265d0d2c5",
					"line": 460,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}",
					"search_line": 460,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{seaweedfs-volume}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ca5baf4425b08379df0e636670f31a081ee07f1231adc3e3e390f0fe2f565144",
					"line": 168,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{seaweedfs-filer}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "6283725c7653405b794d6eb0accecaa9dcdbbde308ac0f3d4b4c9317490badcc",
					"line": 325,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}",
					"search_line": 325,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{seaweedfs-master}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "d549162e08e78fa47f8e17f77d762e36eb33a475418cfcbdf9095e7af2282d8b",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has a security context",
					"actual_value": "spec.template.spec.containers.name=seaweedfs does not have a security context"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "8a18d0bfbcf6a9abed9f8bb698235647fa22c15f88ec457dbab283e3d32205ec",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has a security context",
					"actual_value": "spec.template.spec.containers.name=seaweedfs does not have a security context"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "d65ad1c3629108fd4e37854505542d6f58dc534dce15b29e8895c0fc3a2fbf4b",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name=seaweedfs",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=seaweedfs has a security context",
					"actual_value": "spec.template.spec.containers.name=seaweedfs does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "53651715d3c0b024b23c9da070d9c1da69a8c1d083bd3296ef99ebbc27098501",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "e485290745515043770ecc53af578a1751f49b19cdbf27685388cb2105bcc6f0",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-volume",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "a2d3326a964b94aada3cd330bf3b27e07b220541a43706deef32f7dd3333889f",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-master",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{seaweedfs-master}}.spec.template.spec.containers.name={{seaweedfs}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "59fc42f475a87a806ef6b3dba535cb25a09c06c84b3f7dcb1cebb2972bbef5ae",
					"line": 231,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.env.name={{WEED_MYSQL_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{seaweedfs}}.env.name={{WEED_MYSQL_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{seaweedfs}}.env.name={{WEED_MYSQL_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "a2e0dd6c3f026f1d62346549738af98ce95f67ae4c71fb6e49e4f10b38ccb5e3",
					"line": 226,
					"resource_type": "StatefulSet",
					"resource_name": "seaweedfs-filer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer}}.spec.template.spec.containers.env.name={{WEED_MYSQL_USERNAME}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{seaweedfs}}.env.name={{WEED_MYSQL_USERNAME}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{seaweedfs}}.env.name={{WEED_MYSQL_USERNAME}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "ef5c822c5e9d2b30f300a38a06a22df96241aa560f358481717fcc556c273f90",
					"line": 156,
					"resource_type": "Service",
					"resource_name": "seaweedfs-volume",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-volume}}.spec.ports.port={{9327}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-volume}}.spec.ports.port={{9327}} has a Pod port",
					"actual_value": "metadata.name={{seaweedfs-volume}}.spec.ports.port={{9327}} does not have a Pod port"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "786b71cc72adb7f9860893f1849dba0693d02b5dacfc5629f22581baff2478cc",
					"line": 55,
					"resource_type": "Service",
					"resource_name": "seaweedfs-filer-client",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-filer-client}}.spec.ports.port={{9327}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-filer-client}}.spec.ports.port={{9327}} has a Pod port",
					"actual_value": "metadata.name={{seaweedfs-filer-client}}.spec.ports.port={{9327}} does not have a Pod port"
				},
				{
					"file_name": "templates/seaweedfs_template.yaml",
					"similarity_id": "68f4fd6099fad4ae826898f375f17926b0b59d699bdd18e71e17a5382655a390",
					"line": 128,
					"resource_type": "Service",
					"resource_name": "seaweedfs-s3",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{seaweedfs-s3}}.spec.ports.port={{8333}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{seaweedfs-s3}}.spec.ports.port={{8333}} has a Pod port",
					"actual_value": "metadata.name={{seaweedfs-s3}}.spec.ports.port={{8333}} does not have a Pod port"
				}
			]
		}
	]
}
