{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 141,
	"files_parsed": 1,
	"lines_parsed": 138,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:12:53.493738+02:00",
	"end": "2024-05-17T23:12:55.490646+02:00",
	"paths": [
		"templates/monolith_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "d2bd8ac1a4b38ea908b77e6ea53c098edca0eb1fd8c05fc9fe0e1fa930b58c24",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{app}}.spec.template.spec.volumes.name={{apmsocketpath}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'app' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/var/run/datadog/' mounted",
					"actual_value": "Resource name 'app' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/var/run/datadog/' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "9e1b545c38f92302424c1f084fd9c1f98bad40c015e90c2c0a7755bccf2c5fcc",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "b6967fe0a45eb45b5958ded3dca90cbef34814a9fd3bb14a26fa4f7005ec5906",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "e919de34de56f0ab831c159a0810b2ba4c7be96f622f66d0e696e4f00ef72e12",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.volumeMounts.name={{apmsocketpath}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.volumeMounts.name={{apmsocketpath}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.volumeMounts.name={{apmsocketpath}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "f7fc4191e3dbdb4644e4ea28bb79ffb35bc57935b46d32188500eb8d398ce7ea",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{app}}.spec.template.spec.volumes.name={{apmsocketpath}}.hostPath.path",
					"search_line": 77,
					"search_value": "",
					"expected_value": "Workload name 'app' of kind 'Deployment' should not mount a host sensitive OS directory '/var/run/datadog/' with hostPath",
					"actual_value": "Workload name 'app' of kind 'Deployment' is mounting a host sensitive OS directory '/var/run/datadog/' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "c570f2e80ac39e56e205ec302fbf6addd7e43b49d5b1c27546c432f7568c86c6",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "2490ca4812c8a5b692633c115764032954dd408f609a92dc2ee7cfcd68579568",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "3d1dda80edefd19756782c52c00ff0ad4ca9367672aece3f8ad967f53579fbc4",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "0571ad8c8466e197b94057fc6a0a90349fcded4a58d923499428b9317a8cff45",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "42c2fbe52bc4f191c44e961d709d3c2e0bfbb5c8127e891a3c9feb09296b0dc0",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "368229e05f94b60bd574649eb89c33b99b46504444d920e7bbb125d7c597b970",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "5d9ded0c032fefcc390e44fb97f849ba944bcb1b6f9479ea719dcb375c5b9fda",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "9b7585ca6dc024b85f50f7b18dea18a3a0c6de02a0cdc9d6ee5233baa65e76e1",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "c30ad54c0508dd19f514cf4b159bcd63864ad694b636093b22fffea7fdad3d01",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "4e92a75048805fdd7c849c55bc93c359e81039515c7dd42311d95ba3dab57a4f",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "75b8a21b55dee0a8040c82e0b72e84670febf95cba42b22a8a805a2d769f10d7",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "e4abdd6f6bca19d11505aebbf5a5740b65f7c7eae29028028d6eea4640b6eb8b",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "ec19972eda174f70640caeb1b1fa2e9ea0db2ba75a60ea3e2a89a8a74c42f0d1",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=app-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=app-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "a96620d399c641e1eec8c5bcdb2a754d432ab8e7061fe652f1a0a418736fa68a",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{app-test-connection}}.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "98913b50c9b4185edd3b69a9da0360fbac563beab5df8123d0eeff4d76fda37c",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{app}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "c836eafa757524be611073638754ce6b64d2a536d12242ef75e8918b48112a68",
					"line": 31,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{app}}",
					"search_line": 31,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{app}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "770f748f5468afe96903d306ee736b06b50d9eae4b1a2a1b4ff53acb2f031f23",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{app-test-connection}}",
					"search_line": 123,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "1b39cfdebd8a791ec6996f55737d2ae62aa42eda19c75fea47dbdfe06a8fa82b",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "911c5bff796b77309ef888eeecab5c067f746166e3305b6b878b9c0b47b61bb2",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "87f6480625879c93315c4aae172b7d071a7bd76c213aeb739412c3f0d94a1779",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "872030ba41e285f824d4cd02cda8a336d006e18010b8e45352baa461e06a6382",
					"line": 137,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "f857f58ba429a1b5f7f73f796ec05c065c410129b70183695a77ae8157a334d6",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{app-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "62d5ceada294d9f5106c18fb6c05f2d655465d62fefdb38c80d45de4aaee2f36",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.metadata",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{app}}",
					"actual_value": "metadata.name={{app}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{app}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "8c0816962c8b24ff3bbad97bc02c97f6b05b929509381dbdae8edeaf32026118",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.containers.name=app.securityContext should be set",
					"actual_value": "metadata.name={{app}}.spec.containers.name=app.securityContext is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "22021bcee9a2b951136529c6a17f94c0b70e183258e93c4ef6dff0c548f7170a",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "db3605be14b1602c41ea800ce87d9d6890f0f296be7eed665c63281789b7eded",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{app-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "24e51bc4eab9fc85ea77f4dbe0f1d76cebb31bc03d90c62502cdb11d99c0a2be",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{app}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "0edcdd92dc46861a7cc9f6b7265723d7032784686079adb8a50418517f0aec6a",
					"line": 123,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{app-test-connection}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "d3a7a9c7ce41c87aa5f26c52518fedae3e498a1025f443a4519b13bd743d06ca",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{app}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "0850e6db14c0d489adde161793b0c41ae96c15171df17bbdb3e538d0b5843c16",
					"line": 134,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{app-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "8cc55d425a329e0bdc674f00384037ef572805df45f4dc136e09d9d35d66d00e",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "9e5d063c0a67f567712c4a01825028b9e596da68139df4f16a0c9b96674adee9",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name=app",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=app has a security context",
					"actual_value": "spec.template.spec.containers.name=app does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "5169f81ec736abdacde1fbb5e8731dc3c6470689c73eda131aa9300f55d69e49",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "app",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{app}}.spec.template.spec.containers.name={{app}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/monolith_template.yaml",
					"similarity_id": "7fe62dd5c64112717d97ac5bedcdebf0bad433053b922000348d89bcaa61d591",
					"line": 136,
					"resource_type": "Pod",
					"resource_name": "app-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{app-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
