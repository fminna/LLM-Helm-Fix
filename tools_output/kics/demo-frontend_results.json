{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 155,
	"files_parsed": 1,
	"lines_parsed": 151,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:02:50.045843+02:00",
	"end": "2024-05-17T21:02:52.004817+02:00",
	"paths": [
		"templates/demo-frontend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "ea0efe270e65702583c61617fa28c4df66339c5178ebeaa722fd5bac329cab36",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "54f7424620b7cf41f2027c162957ed2b3c8db785d9ee4aecbe00760eb5a3fa29",
					"line": 149,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{conf}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{conf}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.volumeMounts.name={{conf}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "a14621aa27f62697fdd6a476d89f1e96dbe341ce04d9ca6d87eea8eed23329f1",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "4cbb6f79502072d294e828067c339911c8f9a6045d5f1577251604673efc86fd",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "ca34a6daa9662c06c6802302e09f0693e55307a77a65db4104978afc9a727eaa",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "11fb33971e1390727a95c5fbdd60b9c127c86d6465682f9e9b3ae5290c98806b",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "0c1343af8bdf2fa4aaa74d722c633ae95fd3c000c721315f6e576996d8ce1387",
					"line": 111,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "ad8f786cd7a5e747030231dec104f5d900231114853f214c1f81808c6b283bd8",
					"line": 116,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "62f7bfc2b3a37152f498a12bb030df847803c02e1d46579c87f53db54b396c7d",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.metadata",
					"search_line": 110,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{main}}",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{main}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "54a474b3c2584174555b5205db5000905260501c0976474c50974534255a7b99",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.containers.name=main.securityContext should be set",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.containers.name=main.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "8274d8f4d501ea3c3fff2c33e16f2d2bff5529b7f4dd08b5f69e5da5432faf64",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-demo-frontend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "5d73301cdc38a0250b41dd2778c5b28f8d573ca36c53d9e33f1f3528cfd28e82",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-demo-frontend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "5f28755c32b39153d6521a130785f634b68ef8b865962d613d5e8fab5fddf745",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name=main",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=main has a security context",
					"actual_value": "spec.template.spec.containers.name=main does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/demo-frontend_template.yaml",
					"similarity_id": "4f7128c7c8feb532521225b83d981f5049be849f744e0deb94c76e5bb27f787e",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-demo-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-demo-frontend}}.spec.template.spec.containers.name={{main}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
