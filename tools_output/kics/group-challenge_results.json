{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 398,
	"files_parsed": 1,
	"lines_parsed": 376,
	"lines_ignored": 22,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 21,
		"MEDIUM": 25,
		"TRACE": 0
	},
	"total_counter": 50,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:42:41.545804+02:00",
	"end": "2024-05-17T20:42:43.539494+02:00",
	"paths": [
		"templates/group-challenge_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "c915a77109fd68ab0a0a0d0d2955d693f461d6c68d3f763d788733068c3cb0ce",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "1cd6989cf0c209642007f175f6d350badbd1ff03064e8316c99f3fd706e30b07",
					"line": 304,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 304,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "1b92f0f5a9a4c9a6c1925c81a03c03af2e12cdd0f30886afc37c4df28f99ea53",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}",
					"search_line": 203,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "a325c506272926ebc033b134902f39ebe8f14b573c1efede74dffbfc3c856eea",
					"line": 381,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "15aaa8027f0ad662d97b50125fdb66fd58ea6202ecd4ed48c92e1caf8e6c2aca",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}",
					"search_line": 203,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "4ff2f15d6beab1011ffc88101d9f7dabccfb4c1ff50b8d2498c62c8604393f1e",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "b2f5eba38695d0da19382b532ff29464e695d73aaa58d28ce4d52d428d17a1b7",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "d2fed6a53d969faeeb7292673a98bc04c6aa7799385f04bfe256b6ceb21dc108",
					"line": 305,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "38d6ad7664b4975a212442fbc12e941823fbf2823930ef29d5ca0c03fc5a458f",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "a82a1166267dd7101838f556d22a4dd276c5642fe60d6e3fe12080066249d8d3",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "be5d944091ef4fe57a1d722e6d11f59d60f7ed4df51b8d2afa06a144e9111e05",
					"line": 376,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 376,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "3825f51a9e56df15062481ed19793ee47e8256db91f118513db1a9217fc6d905",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "232dd063b9515bb4398e70726b721edad2584dbfe57f4a34940a6ca8d1c1634f",
					"line": 167,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "5f57a63ed436e553f73a92bab5150b5ac9efadc1a751b9c5aff6332244bde601",
					"line": 301,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "f31e1f4afab1cb88deb16601ff22305e6ff8d66aba2618746aeefc118e8d2c4f",
					"line": 202,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "e5ee6fef529a09db6424ed88dc1fd747e7a87e5f6b8b8ca49816362ca0b30414",
					"line": 304,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "c382d10f203c2df8fc3657fc4b2129bf5f6c5a38e4910143ffa6fa0380d30261",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "61e25c898ce4189ce23d76e1a5d5a0f166ad8beb9a609422a93592cbfc258f48",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "1790a7f3e0f4030b50c805b341a74504a9d75abdd6ae04fac29d169f0b717ead",
					"line": 161,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "bf018ff409a2d8b65a32d3bdd0013dd033acf180a6c4553ef499696e58d19b42",
					"line": 161,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "2791fc97a920aa4529d3e37448029700019f48f88e1b37db7d65cce92b3960b3",
					"line": 162,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "7d2f12d0def428438b872d42e657e6b701cbe066686a46039e181a847415c8e4",
					"line": 162,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "gc-postgres-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres-hl}}.namespace",
					"search_line": 57,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-group-challenge}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "b51bc26680b78435560610f1a96c1d68c8c0514b5c25545dcd9153028c69dac1",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-group-challenge}}",
					"search_line": 141,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "4e9aeb2c199e2ee054b61199ec2c628ab2303cd4dd67f0409aa7eabd6c234967",
					"line": 115,
					"resource_type": "Service",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-group-challenge}}",
					"search_line": 115,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "Service",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.namespace",
					"search_line": 90,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "cbb1ba1c990a734355429e2b7cfb0ba35a353000dcddc23ccb38ad2d821eb1a4",
					"line": 245,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.namespace",
					"search_line": 245,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "1c41e23f7f92823eba521e14db7b56b5880cd5c50350dee06ff56e75d5494b11",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=img-proxy has limits defined",
					"actual_value": "spec.template.spec.containers.name=img-proxy doesn't have limits defined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "d3793d17a86cdde66f533eebbfe46ef6e753056417574ea49261bd4c793fc56b",
					"line": 376,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "37478561c470f92e08ebb93a6e726a6e3aba93d5fdfcca3da616f81972867ea2",
					"line": 200,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=img-proxy.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=img-proxy.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "5f26839db30af6d491e545687dfd6f32d7f6087f433395a93a41781740a1d022",
					"line": 303,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "62b019f95ab03b1f3f51ec1146ab0d5d900f8dd3b5d8dbf34e207a350e7a3878",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "a4d54e7360b5e1aed75fb6f62904d46fc26788e5b52fd9bab4725e1fd343d3b8",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "41ac812d60e69f193b42432989b8e4365645dfc3ac76274e2ef81fa2835e91bf",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.metadata",
					"search_line": 156,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{group-challenge}}",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{group-challenge}}"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "41ac812d60e69f193b42432989b8e4365645dfc3ac76274e2ef81fa2835e91bf",
					"line": 156,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.metadata",
					"search_line": 156,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{img-proxy}}",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{img-proxy}}"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "b9a5589a583a5c4f8179bacf18625a456c6f2108a858d8262fbd20ce6bf53ed8",
					"line": 273,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.metadata",
					"search_line": 273,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "02e6b19777a6994f6ee3ba007c5750f040dc87bea34f5e7e45e95e65317a27d4",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{group-challenge}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{group-challenge}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{group-challenge}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "f74fe9a45e4cc6626885e1b2582266a0ac4d78e25414cf0646ad0b2bcb32a9a5",
					"line": 304,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.containers.name={{postgresql}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{gc-postgres}}.spec.containers.name={{postgresql}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "de411f1e11da0148bdc8d13a121139f0f72e422c57e6e944e1fff4fef0a1e340",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{img-proxy}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{img-proxy}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.containers.name={{img-proxy}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "dd690ccbb8d1253ec41b6c7464b15bbd2e998b760776e3be0ab85b4cb3954ccf",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-group-challenge}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "aa7b019253cc2b163f58aecddb2465791237b79b2d61d0c1005a5167b6fb9ee5",
					"line": 245,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}",
					"search_line": 245,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{gc-postgres}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "1e8ac2559cc66a26e51f0c7dc386934c6a1a7c3f5fae1ac282cbe1c3e424c66c",
					"line": 245,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}",
					"search_line": 245,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{gc-postgres}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "5d0d2714e57b55f6ded1f07b5684f1f08de1364cd718ac1f04e301eb1feea994",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-group-challenge}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "4dfd7215930823a511c34ecb3449ab85133ab28be090af71001f92e4400e2479",
					"line": 203,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}",
					"search_line": 203,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{group-challenge}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "e742ba9cb17d28270646587829ffe5738f82dcbd20eefb06dba2d6f30ca4a14c",
					"line": 304,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 304,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{gc-postgres}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "90b8a38a44b240a6088b73c60de77ff01a43b68459916370219a9a0dc0f40e00",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-group-challenge",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-group-challenge}}.spec.template.spec.containers.name={{img-proxy}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "fa204aa4c89637f957cedec3fc38c6387cb138cfbbd7c1be75d28fcb2d1793de",
					"line": 318,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/group-challenge_template.yaml",
					"similarity_id": "91c4ecb2582f57d38419993e2a882be52818b58b3fd43ba1c7350e7661ec6c95",
					"line": 397,
					"resource_type": "StatefulSet",
					"resource_name": "gc-postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gc-postgres}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gc-postgres}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{gc-postgres}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		}
	]
}
