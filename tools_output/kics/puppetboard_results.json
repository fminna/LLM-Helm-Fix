{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 144,
	"files_parsed": 1,
	"lines_parsed": 140,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 15,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 39,
	"total_bom_resources": 0,
	"start": "2024-05-17T21:00:23.078484+02:00",
	"end": "2024-05-17T21:00:24.889549+02:00",
	"paths": [
		"templates/puppetboard_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "720a72d877012e21dd2a1c8829e4c6573ac2e79f30d91079b95725a74ec59749",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "86411a5f126736649a50e49396a21694aaefac3d90ccdef90cb4a3ec351b6b1c",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "1c4b0e7211d4a1cd2b19a5e69e4d6e575166db29d5b7f444a2b36b66922bc4e6",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{secrets}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{secrets}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{secrets}}.readOnly is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "f5588ff0e63ba9abae840df29bbe3e44388eaab7676f96cd1427fc3b63ca4b0a",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{ssldir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{ssldir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{ssldir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "bba9c3f762ee7d6b6de6df1d5ad590f89e74ae7e80f85107b7f666858b9ed30c",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{confdir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{confdir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.volumeMounts.name={{confdir}}.readOnly is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "c97c41e6079a0e020bed5ba193bc6c038a4cc7f269d19c4e97833f1e0405173b",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.volumeMounts.name={{ssldir}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.volumeMounts.name={{ssldir}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.volumeMounts.name={{ssldir}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "860e6e5028a6bedc164afa58655142506edf2094708604f53d6832885c9e3ec9",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "df5488693ddbaddc13473129d76d8a5fe3d4cc9ae8eff7338a435ae2f20c10be",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "a2b8870fe09d64b8d00c13fc9e26e442c9173bb1746ff3742cde25089780a844",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "bb851d32d53bd282390de435959075f0444fb092cfdd05d43c6ffe8431cd9701",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "91f04bbf59e047b7789147734cdf4236f56075610f3b0ed344a59811c79d1fbb",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "e475bbd70ab4ee095d6b992f981f847948e11bcc0ad1e843ea7aff65e8f6c5e2",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "b9bf78287fb8c688547cef6999017b9cd4e2c079b8959e240d99373f8ad64a9d",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "03993b0b6b5cd80679b01a9212605de749987d31b437ae3ddad6433b8dc41444",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "32798cd5bbfd53801692f42cecd358e63b4cca9f687d9abdbfd870a62ee72f66",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "d43c20eb195d00154a5b25a470db8c1c60afe1f2e35702f2928ca00064350c90",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "45136a69d1399ccfd39efab07ec97758d91d18630b98abf431db0c2bcae417e8",
					"line": 97,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "63b1b07246788bac142d53056301051bb20bf6d9d40f6d60c204d55b5055aa1e",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "39a10be831173df9bab2c9cafb12d25fa54c279d00acd2c9c1bdc437670e9674",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "0835c0786443d3898c438ef506b03262c931dd17e82a2ea3a545f3d3ba2b31e6",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Service",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-puppetboard}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "8b900a135b6bc1ff03d5ac5c3c153121d2a946d43997a8397bf34984f13a5792",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-puppetboard}}",
					"search_line": 54,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-puppetboard}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Secret",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-puppetboard}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "bcd4a96429dc5a8c2395053993d52cb00010ff704693158a8c9d69df3e476491",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=puppetboard-autosign has limits defined",
					"actual_value": "spec.template.spec.initContainers.name=puppetboard-autosign doesn't have limits defined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "7c99e23f268e944dad786112824d93393d2a0b2b14e98186d820febdaae20747",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=puppetboard has limits defined",
					"actual_value": "spec.template.spec.containers.name=puppetboard doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "2856cea0941de2f5795394c8d61bbe17aa4faab3fa4ae08d69a2af7c1df0cacb",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=puppetboard-autosign.resources should have requests defined",
					"actual_value": "spec.template.spec.initContainers.name=puppetboard-autosign.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "f344cd5254bb5e2e889e6e8883d9b198ba30afea6887dee32300e9e5411afe8d",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=puppetboard.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=puppetboard.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "ec52c567df21232c9fb7afbec9b2d3d142db8a143be83728f54cdc57a3cf64ab",
					"line": 101,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "be22583ad8505e62736c558d2c8c253dcb6f973c1a0f875c34e2d748718bc1b5",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "abe8c59f39ced3e88f6767b9fa4cba3426212abc369a48c73bf34ae327eb1082",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{puppetboard-autosign}}",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{puppetboard-autosign}}"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "abe8c59f39ced3e88f6767b9fa4cba3426212abc369a48c73bf34ae327eb1082",
					"line": 68,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{puppetboard}}",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{puppetboard}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "69fd7c7e481e36b7dcd10fefdb4a70019f1cde59f902c0af0ddebdaefe7c14f8",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.initContainers.name=puppetboard-autosign",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.initContainers.name=puppetboard-autosign.securityContext should be set",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.initContainers.name=puppetboard-autosign.securityContext is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "bfaaf2417b6749d7611c0f641b1e3bfd9f1f256e52b6ea1329e17a615cac3935",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.containers.name={{puppetboard}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.containers.name={{puppetboard}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.containers.name={{puppetboard}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "608ef8187b0c48aeee15807b73b0f1caf6ddf144f861b8e9f984dbdbd993ef0c",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-puppetboard}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "8e3b257958a9ce3f60e4a1ef08318ed7b3bc24425043fdb698b6956514fdc9bd",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-puppetboard}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "ee5119d8f6c0846a0924527500190a6af742a1c47181cbbcb2effb24016f5f74",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name=puppetboard-autosign",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=puppetboard-autosign has a security context",
					"actual_value": "spec.template.spec.initContainers.name=puppetboard-autosign does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "39c63726a62579c36a4984630d12c600bbbe671aa3868137e430775ba0a45a97",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.initContainers.name={{puppetboard-autosign}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/puppetboard_template.yaml",
					"similarity_id": "118c67c4770f0de642136bf9585621b0364e98576d025254d4da0d334c5b36eb",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-puppetboard",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-puppetboard}}.spec.template.spec.containers.name={{puppetboard}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
