{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 84,
	"files_parsed": 1,
	"lines_parsed": 81,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:21:45.44762+02:00",
	"end": "2024-05-17T20:21:47.43655+02:00",
	"paths": [
		"templates/stress_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "379523f5edbbc2d167c8b99aa5f138df5a728d4dbfb259f097956a8fe74aebc7",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}",
					"search_line": 53,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "7cac342d4afc63c29647548c18ee6d81d80bc4e118fc1c62c8aba2930d5c195f",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "19e73fa9f9bf122eca347886ffad4165cb3d7d63d0610d7db5996c028f7cf574",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser=0",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "ab475d7787195a5ea06add2ebb9f3c69f321d76d3b2ef687a635fc30dfd2e616",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "452027f2fd20a6d0443af18605cc34b77ddaeaafade374336c637251fb80fa15",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "4bc791c11695282b041b570a1f6ff90a292e41c66b0038026e3c94947ee16c62",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "20cf851bf7406e781bcfabfdd0b6d79e24165ac0c6556d5602374aae57e80aa6",
					"line": 52,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "a0eea6d0ca3bd9a240ba7cc7c7ddf21d6bf570755dd7f6a8987535d256209f35",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "f252db108975307ad68a612b70bfeae8894542c666cbb0650837db3fea448325",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-stress}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-stress}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-stress}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "c942fce49688b12c7ab5f07b685863516387202468a3060db58d70146e47a4e8",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=stress has limits defined",
					"actual_value": "spec.template.spec.containers.name=stress doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "6cc6d10378fefe7b06ba52e03205965eaff12f63f604004d015edb1a20da73a3",
					"line": 71,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=stress.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=stress.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "322991e61868dec5bc6764b7199b46d1d565d8c7ae013353258d103b13733a41",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "7a16fd4c2a7e4064f4497db719cac45b7e2fa30cdab8322d73df7e32b5c00f2c",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{stress}}",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{stress}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "adbdd62cb6ee56ccf8b093dea42a7e3d8b4d01f3a01d3d52e07a6700d9d4e3e3",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}.spec.containers.name={{stress}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.containers.name={{stress}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-stress}}.spec.containers.name={{stress}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "b2ef91e833e2eaf21303d68a11e004123003c7743e5328fc74af46155a167073",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-stress}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "5b036f27e36e613be0cd3342a848a222ddc1737dc5acb7c4abf6c8d2072de9b1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-stress}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-stress}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/stress_template.yaml",
					"similarity_id": "62c92a1c1c9e00c6de1fe86f4b9e108b74b625de2dcf8f20596fbd55286299c5",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-stress",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{release-name-stress}}.spec.template.spec.containers.name={{stress}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		}
	]
}
