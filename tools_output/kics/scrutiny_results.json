{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 176,
	"files_parsed": 1,
	"lines_parsed": 171,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 5,
		"INFO": 0,
		"LOW": 13,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 27,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:17:53.986412+02:00",
	"end": "2024-06-26T01:17:56.059285+02:00",
	"paths": [
		"templates/scrutiny_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "1a66feeb6b1d133e1c981230937e718c63b8f0320ce61bea2682ca72d631a0dc",
					"line": 118,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "9f5de1ea6edd307a63adc17f222374a297865935d75b44b86821a53e2ffa6a80",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.volumes.name={{udev}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-scrutiny' of kind 'Deployment' in a non kube-system namespace 'default' should not have hostPath '/run/udev' mounted",
					"actual_value": "Resource name 'release-name-scrutiny' of kind 'Deployment' in a non kube-system namespace 'default' has a hostPath '/run/udev' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "1c2194f25e09ab8b0878e960184360db8ef3b322c9366b99af0bf06beaec59d7",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "a41fcb1301776306b1be44edd326d6464cc4ad217ef6028cf638b2b2ab0ddf0a",
					"line": 140,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.volumeMounts.name={{varrun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.volumeMounts.name={{varrun}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.volumeMounts.name={{varrun}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "355900d767faed0ad7c0f4d90abd462e07b4ea45e485c7f3d166e88ae0367153",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.volumes.name={{udev}}.hostPath.path",
					"search_line": 172,
					"search_value": "",
					"expected_value": "Workload name 'release-name-scrutiny' of kind 'Deployment' should not mount a host sensitive OS directory '/run/udev' with hostPath",
					"actual_value": "Workload name 'release-name-scrutiny' of kind 'Deployment' is mounting a host sensitive OS directory '/run/udev' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "38a12d980b8fcdfedc1b1d823a6fddf5627697222292a3e46f468623bea7fdde",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "e428ed6325814ee42f28abba7e7ae8f2d8f7ffbe304140341a2f9c396f6e72e2",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "3e797152303488fd66cecc249da264b17a14b8e1cf4ba94f7e4a6ee337e967c0",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "788a106ffa01b34b5272f01b7269b7927c8f8676dc271ff25b228734ffbd5b90",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "ea361f19de82c01094f422e4c3df46f4f54dccc603ea622382eb9772342741c8",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "5a856de7ca07e8b482007ddb5acb5ecee42e3b937be8c8ff4601ef28ee5f3071",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "4d53632af8347c3cbf6e982f2b09b5e510a529ea6df9b8a9617e7a8d46e3094d",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "929066354a87a485dd81723a61437ba3434df5cf452c6cee32ccd8a94b83c671",
					"line": 63,
					"resource_type": "Service",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-scrutiny}}",
					"search_line": 63,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-scrutiny}}",
					"search_line": 86,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "0f1547ee07055cef153da6fc488fa7403665e09ec9b5190cd831a3679993b77e",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name=release-name-scrutiny",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-scrutiny has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-scrutiny doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "387fc3d657ff050459a5c70b04c45525cefbeefec7496315ba2583e3218e1d9d",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name=release-name-scrutiny",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-scrutiny should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-scrutiny doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "54553a1a27b064bc33d47204297e7a1c915d4f17ecb740c77657abfc630a4950",
					"line": 103,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-scrutiny}}",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-scrutiny}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "dd13f0b2bac6cd8a303f20654ad7c11e5f2ac954cc2d211c0637e1c1c3ef8678",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.containers.name={{release-name-scrutiny}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.containers.name={{release-name-scrutiny}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.containers.name={{release-name-scrutiny}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "6a11b7ecbebadccf12f590f44587f246928383462d7e88d0cebb5b185786ec6c",
					"line": 44,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-varrun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-varrun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-varrun}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-varrun}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "3bbef96cd59c3aab16db15c8ae3c2e5339de1cca3ce058b053a4377e50edee8b",
					"line": 25,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-influxdb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-influxdb}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "ccb7d34fed19898345797a1c6512c99ec5ab777dc01d72ba038b4803d26ae710",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-config}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-config}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "9005030517a6e3493d0fc341b7fc56ae2f10284b0cb1c3092708e08d092d1d56",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "19e0b7e821a13a0715e199acea783150f451d9ad3cfdc427a167633b87455a83",
					"line": 44,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-varrun",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-varrun}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-varrun}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-varrun}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "fb7ee32664945be16887772191bec00f9b1ad9be64155fb6d953d71e32fd92a1",
					"line": 6,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-config",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-config}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-config}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "9aef8f335117cebae4030e337ca08dee1fadf5f4a2609c9682a9ada23ddbbbfe",
					"line": 25,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "release-name-scrutiny-influxdb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny-influxdb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny-influxdb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny-influxdb}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "cc0c1680d458adc40c50a571709eb17ccfff382b3260b91fe3f9cb39b31515b1",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-scrutiny}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/scrutiny_template.yaml",
					"similarity_id": "8a3ba2aec9c31280027139d2cab0e32264bbd2760ef548b191ba7ad901166d8e",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-scrutiny",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-scrutiny}}.spec.template.spec.containers.name={{release-name-scrutiny}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
