{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 428,
	"files_parsed": 1,
	"lines_parsed": 424,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:31:13.806407+02:00",
	"end": "2024-05-17T22:31:15.736237+02:00",
	"paths": [
		"templates/evi-ai-structuring_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "5b2b4b635bf40c3584f87fcba51053e32c8972d8020874204cf26e98570bab2f",
					"line": 362,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}",
					"search_line": 362,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "ea5b03beb7bd4b2d501559bc6a49b093bd56bcac55b1b9bba1af902377d20121",
					"line": 362,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "3d1f60c65a50ba4e196fb8175940aece80531328c984fb226b083b3d31cd85c2",
					"line": 351,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "8805552a5c8ab45e8f2c9722b88113b1b9df95c501ae0ed2a7dc71e92dd04063",
					"line": 351,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "4e22593141794d1e3b96d65c81eaf1de27581c7beb15e1506f4f63e909e39388",
					"line": 341,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "e7be534d289628d5d82096f3ec9f96c30ae51a24fb05b8345e18a8bbdcfcfee3",
					"line": 353,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "90931943dbfb7f23af757be99992433973af1bc25389e2d8bcd66737bb2527b5",
					"line": 336,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{evi-ai-structuring}}",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{evi-ai-structuring}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "9895c0c4d13b5e2dbd55003cd289b1d7c938c35bb1daaddb550a130d8c886195",
					"line": 362,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.containers.name={{evi-ai-structuring}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.containers.name={{evi-ai-structuring}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.containers.name={{evi-ai-structuring}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "e3ca3cb7f389a5678d4e3136350c278fc98d5a50e0e8e7d6ffa4e3130fb31bcd",
					"line": 326,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}",
					"search_line": 326,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{evi-ai-structuring}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "f60dc4046f67bee3757cbf282d9d5a0bcafc0494afddcb12209a36c9419df5a5",
					"line": 326,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}",
					"search_line": 326,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{evi-ai-structuring}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "6601b048037bb5b3cc4f276b4beec2af08364c41acfaff49b4ef5bdaa1774695",
					"line": 362,
					"resource_type": "Deployment",
					"resource_name": "evi-ai-structuring",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}",
					"search_line": 362,
					"search_value": "",
					"expected_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{evi-ai-structuring}}.spec.template.spec.containers.name={{evi-ai-structuring}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/evi-ai-structuring_template.yaml",
					"similarity_id": "cd913d79afbe46a7532668d502ffe8c5905becb763b6eeb3eef960088fbe4864",
					"line": 311,
					"resource_type": "Service",
					"resource_name": "evi-ai-structuring",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-ai-structuring}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
