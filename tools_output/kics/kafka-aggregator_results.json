{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 195,
	"files_parsed": 1,
	"lines_parsed": 192,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 24,
		"MEDIUM": 26,
		"TRACE": 0
	},
	"total_counter": 53,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:57:22.920254+02:00",
	"end": "2024-05-17T20:57:24.839355+02:00",
	"paths": [
		"templates/kafka-aggregator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "7100dfee97330d722a5a4c4002c4f96266d6a57ec988168464727d5f4ae351bf",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "04ecc9e25bf0e5ab21ed68c3cff541fabbb8d483ff49111795d22be4426cf160",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "72a6bb860a822019c11cd135954593e39b666265034c708d2c04635ce087233e",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "77b9e965009a5c6932c005225bc37c45d6574fba0f90f263474b178d591f8b82",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "d83b66734b7588e89efecba92cbeecefe86a9c27359786068a4936e97d634f0f",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "37020ea02f5e31f6f244c43ba68bb1f2ffc0fa6ed1a4525a5fdc4d2f4630c84a",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "f0dba7daecda220e673937a7c262dab7dd9f7c2b0450b67efc645a9b6598ac12",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "2f75cbb8256cbef93a27829fe3feb0486dbdff0c7a80e8c3750a9f3310d0051e",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "ae411cd60a4b31910ecc42dfe0dd1a510195b4a7b43b76eb60d2dfd1f74466f8",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "e1dda80f8374d4bc295386748a071d9040bdc504786fc5061cf0fe5273a80497",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "0850ebb52c48f1e77614747daf47c3fb626118840017cefd7ab2b552f30632a8",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "85fa1c53b868b7c5f94143c3c557651998c98ac4c606c7d29c610bd1c4781808",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "ff06f760356b307cb7cedd21e48cabaea2867cae38c0885b90d5e262c870537a",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "0e2efa8e84e20959f64e609d2e7783f3ff7e4b092c7e9189d8255813de94d842",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "4943753a0c86e9072595533e6ac6d3063346be076236aed267db9f0115cccd5f",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "055826ecd01c63c17a756d9b9d67849fee266af9dd015cb96d1648ab5529cf2f",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "64d9620f31a8103505f74984bb94bc5dbebc7884229d64f2c1a6b11d54c339bf",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "41dddbfa59637d7815af6cbe6c149e6e46e41bc315510754fc1234bb6f2dcf66",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "db8415b5a7a7193f95e25aae852a837c16f3afafc8aea23a382435c248340cd0",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "70b61838c5eb36ed9ed13bbf0731ebceb6c4bcb03469fd6cd91e80981d126594",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "1994c6f77e283101f3867038d7febfba3f1e255de4a50e93ad52a3ea103497d7",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "d41e390feaa39154240e9870d7d0cb84ae579c1cad801e9bb902f4e7e33f98db",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "fddb74e6ed76e79d60b0f3e1f3dd1cffa2a49ac68e2e1094aeb287971c69f49a",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "60259936e868b21d8fd525a8ba7aebfff7268f52762bd5f80e6b325890dd71da",
					"line": 151,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "a6e1bdb4baf2453449758aebe15b8411bed448218afa444cd447f753ec8be1bd",
					"line": 24,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "766784d0a49e879df28b4c4348fedd37b9e9cdaaed8f3d3b5607b214613a8011",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{producer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "567ff5b31cbe0eb49b7dc4578cd9f6606c2f4cc70945588253928581bc1dda8f",
					"line": 138,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Job}}.metadata.name={{init-example}}",
					"search_line": 138,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "07a23520c6c9a5fe6dac911140b60062bb98a2c39bc50d5c4f113fb164d59c80",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{worker}}",
					"search_line": 76,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "6a56f6ad27ff49bf48af02fd896c357de746f1d7a722925059b24c3c2ad88c6e",
					"line": 162,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has limits defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator doesn't have limits defined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "c66ed63efe6fe61d5d409c73d65b0c20ffad6b70557583d68761b1d334107e48",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has limits defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator doesn't have limits defined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "61d276e48e09aa57c55b7bbe8fcdefb7fdd9495b053e206a0a6483c9594eea13",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has limits defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "3d268b51cbd2cf70e4c97a2aafe4f56517504e4372ea8bdb244b412a166ec15d",
					"line": 162,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "d81a66c635de38a0afda0c6146adee13d945639945f5483be945d6c4df8503c3",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "5cae2e54de2814978b22463a86c51635d8ecff65dcb9e8dd2021e7f4028f7665",
					"line": 34,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "540e2d14088119b49b433fdf73d38f8187b350548eabb87b7620c91430b462bc",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka-aggregator}}",
					"actual_value": "metadata.name={{worker}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka-aggregator}}"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "a667e470c61e76e9623314db062cec853ddebb8d646d89ee7a8bf60f0af8a167",
					"line": 20,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka-aggregator}}",
					"actual_value": "metadata.name={{producer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka-aggregator}}"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "28c001a9b54a7bcc8b20bb45ba7a9d041a66f1473614a190823be3da90828f8c",
					"line": 147,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kafka-aggregator}}",
					"actual_value": "metadata.name={{init-example}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kafka-aggregator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "86b518bae2cf1a2df3c37e8cb2b12e186aa57a66b537c6c741e66ab54751f3a9",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.containers.name=kafka-aggregator.securityContext should be set",
					"actual_value": "metadata.name={{init-example}}.spec.containers.name=kafka-aggregator.securityContext is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "bef5a784853e7adbc3f519d5a5a48994f5804b2acb67aa00fe445e17018644a3",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.containers.name=kafka-aggregator.securityContext should be set",
					"actual_value": "metadata.name={{worker}}.spec.containers.name=kafka-aggregator.securityContext is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "2aca52b82904983929f8567c93acd19d3bdf68c27e5d16c895586c66ed97eaad",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.containers.name=kafka-aggregator.securityContext should be set",
					"actual_value": "metadata.name={{producer}}.spec.containers.name=kafka-aggregator.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "c935a287b7d3cf40d55da50400b9bed5ae1d330daf66bd45c62389b5f7167536",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{producer}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "7ef48bfc22f96c20abc92c78a9db721f9dd0a827a52114f1c14c625238de9963",
					"line": 138,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{init-example}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "f099f1839eb089a7c2b743e8d7c7e6e8131d20732f1f2ddfbf7b5c2010c7f09d",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{worker}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "65a36dd2d547fb61ef77f9a09a2294ce78a278c12878f551e1547f4b0704f732",
					"line": 138,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{init-example}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "fa47255d6ce01e58c535fb1f11916c53defb65fff19611bddef5427af2bdf74b",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{producer}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "0242788fc6953e02d92039fdd84002dc10221158f0bc076f31dc523052ead0a1",
					"line": 76,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{worker}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "13a307129f3161a73d5418bca2fbf36a237a9a421a5973c6a3a0496a5905d91e",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has a security context",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator does not have a security context"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "6e37940aac514dcfef4e638601996d35647d693e73577d34e04c4165288a05e0",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has a security context",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator does not have a security context"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "a164fcbb2607bc31c158ab63e949f14f49fcc7a77b000e7ac120920eec368abf",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name=kafka-aggregator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kafka-aggregator has a security context",
					"actual_value": "spec.template.spec.containers.name=kafka-aggregator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "8e407a8901c924ad6c8ffe8e7fa8ba772c82770eb991020d2f19eb15973902cc",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "worker",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{worker}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "89c62063175940cb8c8ffa71f530b341bb7c58742a05770e8a8e2d417ab7d931",
					"line": 154,
					"resource_type": "Job",
					"resource_name": "init-example",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{init-example}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/kafka-aggregator_template.yaml",
					"similarity_id": "0d84ef3a8b5b78140552a8b004f872d948dff4f587f8bad7444de94eb9ed8ee5",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{producer}}.spec.template.spec.containers.name={{kafka-aggregator}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
