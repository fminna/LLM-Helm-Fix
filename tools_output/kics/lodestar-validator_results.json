{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 121,
	"files_parsed": 1,
	"lines_parsed": 118,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 17,
		"MEDIUM": 17,
		"TRACE": 0
	},
	"total_counter": 36,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:57:52.489596+02:00",
	"end": "2024-06-26T02:57:54.570508+02:00",
	"paths": [
		"templates/lodestar-validator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "a46dbae5ccb337a4ca286e3fab3702280b30976b0e358f5a74cbf4aa025f1055",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "c6f285113c25e992f5b5dc6e61b801eb03489646d7c2d57ed1213520bb8cf4f0",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "cac669e30705744db98338445504b9e6d15f11f84a58e378ecf2366835fef86d",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "a3976a324e998a1a94b9ce3fdc539f3225fa5fc781f863b5c6f9bd478636dc46",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "43fb6977f6086a0c25df223e7a4620e9a7798e14ddf8c550e7a46def0efaf0b0",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "99aa0cbccd64370334ca77b8e5ac91630ea91cee1a3f08de982379e65c08d659",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "c789ec3f9c3577e97956012732427608f1d55c363c8b81b22d117d139789f8b3",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "9ff681d60fc34c57222e2fac8e8e7cb73b526907aa3539ae2773121b57d5fc1a",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "1f444c7c8125413c399f27c53ab55f2a88a527154e26afdfe31c8118039eef60",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "1b3bed78a3592f299a311da3e7977567ffc4686e6535731e79b4b75814327b14",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "ce99b61a2544457e596861ab042217ec60b882da711aacff35958a885e524b03",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "d173662059ba99b90abb5003767917cf791536d37cb6bc0e4e2966669e926148",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "482cf4a7b9c3f815c1dd5a1a5465d9f94c141aba536a496c1c1188ba49b3f4f2",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "82851d8398dfb47c9833d57872dc68b0e16811cdd02d895a6b24483a6268fcda",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "ab2c08cf4c9df1b403d7051e8d23de2da04aacf5679b98d527a2f07daf8c4a23",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "5db807c9f25584938ba783487883a125bba80dae5fb4d9795e21aa4efe479185",
					"line": 57,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{lstar-validator}}",
					"search_line": 38,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "0458da1b4dae3d086c44596bc4cce8a40e08199d471b3c658aca86dcef617746",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{lstar-validator}}",
					"search_line": 17,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{lstar-validator}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "d2e5590e79703e5470c86ab63879a781f96d10f81ca5a20cda9f638512df6f98",
					"line": 95,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lodestar-validator has limits defined",
					"actual_value": "spec.template.spec.containers.name=lodestar-validator doesn't have limits defined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "0711b1b9cc99ad4d3305b55392c2d53fa3ddb523cbbd96c4ac6a8a52ff3ae731",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name=import",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=import has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=import doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "1a1b4fc59d1a9ba068d4c2a1756c96f7d82b64ac3b3fceac1c326c366dd4ad1e",
					"line": 95,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lodestar-validator.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=lodestar-validator.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "fdc9debdd18b4dc470b39e246ba4c3218ce5a1be55f65b2d7881e2e109c71a1f",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name=import",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=import should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=import doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "f13d0a9c17b3f59202dd37d0eaf1b133036c06c3c1b68c12490e0033cd0040d7",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "f646f9274d92319a929f9e48377db8c0dccbee849806ac7a183910b9f1c09cbb",
					"line": 62,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "92aa6e5cadd20f0599d1ca5638ee7fc77bbcdd5f090554566dafc59496caa560",
					"line": 53,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{import}}",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{import}}"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "92aa6e5cadd20f0599d1ca5638ee7fc77bbcdd5f090554566dafc59496caa560",
					"line": 53,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{lodestar-validator}}",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{lodestar-validator}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "1e9aa7522b1bb8ed837162845d2b07ee779bd9f34d1b9dae5edd089918e95f74",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.containers.name=lodestar-validator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.containers.name=lodestar-validator.securityContext should be set",
					"actual_value": "metadata.name={{lstar-validator}}.spec.containers.name=lodestar-validator.securityContext is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "225312e508a5d1f04ac17f82c430e8295912f0fe3d31ff9f392b94cd9a54b1dc",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.initContainers.name=import",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.initContainers.name=import.securityContext should be set",
					"actual_value": "metadata.name={{lstar-validator}}.spec.initContainers.name=import.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "a5c4009c4323305f2bc919ccc33286520f2e0065bea7e5fe3307eaf201d36d67",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{lstar-validator}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "c3c557c42546e5dbf482b62291068f0bc223ca93f18d840e1803fdea9a8620a9",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{lstar-validator}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "7e710fb3ef2c354062c366b63926de2432675668e77eef450338ccb3bc8f8b22",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name=import",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=import has a security context",
					"actual_value": "spec.template.spec.initContainers.name=import does not have a security context"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "33f2d85b87cc5925ed3060d57dee42450f249e79ed61b4cecf5cd08b840a504e",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name=lodestar-validator",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=lodestar-validator has a security context",
					"actual_value": "spec.template.spec.containers.name=lodestar-validator does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "0e133f3365167f588f1b796a22a331c8378b76963d7653ab40a6d35bd5a14e29",
					"line": 76,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.containers.name={{lodestar-validator}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "c1da7245c9484e40eeb7f81c342f6838caedad0d895a4a5276c8c0c43ce64d6a",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{lstar-validator}}.spec.template.spec.initContainers.name={{import}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/lodestar-validator_template.yaml",
					"similarity_id": "fc44d3e0f2beb8d17a064647edf3075d568106398ee1950f1d13d323fd6f29b8",
					"line": 120,
					"resource_type": "StatefulSet",
					"resource_name": "lstar-validator",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{lstar-validator}}.spec.volumeClaimTemplates.spec.resources.requests.storage=5Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{lstar-validator}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{lstar-validator}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 5Gi"
				}
			]
		}
	]
}
