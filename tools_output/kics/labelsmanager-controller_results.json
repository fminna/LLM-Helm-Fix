{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 204,
	"files_parsed": 1,
	"lines_parsed": 199,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:04:21.895699+02:00",
	"end": "2024-06-26T01:04:24.024604+02:00",
	"paths": [
		"templates/labelsmanager-controller_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "d39a412e440d1de09a09835efcf1385f0213e135c5ea4719548157f96c26f18c",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "34023ddf89150c834dfbb22a4ef91c34698abba281dcf1347313b994abe5f3e1",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "c6b31ac90568f1dfdc6c8b145e993b670a2aef0e6b98175553de6f8b5995a423",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "2aba6dde23454e5c1a994121857bddd71f692398bb8db0d85a3e5ca2d6627d78",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "ac9b9a98553e3a397417092218b72e74ddf99e656cabc9f42713bddbc1604306",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "c1c1238e04eaf521eaaacecbbd90ac9b462f5aa92c112553c8834a4ca38414f6",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "7d401d937d5ac9be2bf192a1b58c12136aece100369459073386fe0b4ef5407d",
					"line": 183,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "7fc809b53b98081aca28d7d81b98b3ff9d12accbc31b6b603d7139a08b9ef6a5",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "0f581c251d54c5f19fe5df19d205d714ed0da668cc1d9ec84903c41d0e73d427",
					"line": 178,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-labelsmanager-controller}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "1e3c17e3cb97a7bae7a0ec45e13339417b678ed945721ca135505ce345cc6451",
					"line": 158,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-labelsmanager-controller}}",
					"search_line": 158,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "b87b9b561dc59d0eb9d2f3e99ba832931d5f3819a4df779e91ccc69345aeddee",
					"line": 202,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=labelsmanager-controller has limits defined",
					"actual_value": "spec.template.spec.containers.name=labelsmanager-controller doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "685082a72182bf71e1671bc948e6b4e306fbc29f0c0bc20b63876923b2df00e2",
					"line": 202,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=labelsmanager-controller.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=labelsmanager-controller.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "87b5ddf14570463e63439bcc07c5272e3a0f14aab6ea4e4950a6d0a9513f4816",
					"line": 193,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "7f7c41462c8257ac9be267aa47bcacc0d6610350a2115e8b11f2298d7bb3e2f6",
					"line": 171,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{labelsmanager-controller}}",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{labelsmanager-controller}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "ba2075ed547cb3e7671007cda58501fe40db3336eaae6d92a240af28ff5b277d",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.containers.name={{labelsmanager-controller}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.containers.name={{labelsmanager-controller}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.containers.name={{labelsmanager-controller}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "9fdea4c4f12da894838586de1492f63f33b853075f22d8697b949c3f42099d9b",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "48c335397e59a28dd329b449789b4375adef8994e0cd6f77ed5fcd1f7e18fa36",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/labelsmanager-controller_template.yaml",
					"similarity_id": "e9c6d27029fc17889d82d236ce510f1387eacc4ea5574858395fb968402b2f1c",
					"line": 190,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-labelsmanager-controller",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}",
					"search_line": 190,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-labelsmanager-controller}}.spec.template.spec.containers.name={{labelsmanager-controller}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
