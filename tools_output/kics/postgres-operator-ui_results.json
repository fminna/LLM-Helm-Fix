{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 185,
	"files_parsed": 1,
	"lines_parsed": 180,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 16,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:29:54.119979+02:00",
	"end": "2024-06-26T00:29:56.116458+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/postgres-operator-ui_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "a6536b322ecd1a913a6edaef5447da1d9b26199d6c1ee6f6d6f1ef4d86a6ef6a",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "e4862a957ea1110e215beb04b21a01aaa0687fbe55437a728f4faf556f13ac68",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "0821a33d939a99fb9fc714e66befb984b583c9f8121f3f636ef357ea235524d8",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "eec61c401b8a87f9ff046e716fe48d2ef83a46f76bea6e90b6e43ffc8a60bbdd",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "d750d628947e3b5fb00e51ea726b02e374188912de7b95b3f947ed6f328cbf00",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "0f0f6c94ee4c0f4b06cc708bfa1cb8a4beff9d07f5f251c1fcc8d3676f49c565",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "f10455d8e77dd29cc2c80bc17c641c9f8a12fd90be212f3b8e9dd6e5f6413e0d",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.namespace",
					"search_line": 117,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "fd3b7afd157d4532561cf995a7d723691e96f31f8acf53d702ec461bdc420a78",
					"line": 96,
					"resource_type": "Service",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.namespace",
					"search_line": 96,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "2784b55a302f9706c1cbaa80988cd29e0e9068fa3b3b3921394249894e32e192",
					"line": 134,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "63562631332febdea6dc3e9ba6af85d1513c8cd9cb32d6bd585518a1dd1f8eb6",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{service}}",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{service}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "851a26c6f9b97bf01bd6397bfd12df03146e0a0733cad68d65b29f5c7c853d13",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.containers.name=service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.containers.name=service.securityContext should be set",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.containers.name=service.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "ddc2907a4a6bd6f24f0876b2f7bd8c6bc4c8df3a4a2aa6c5df9bc4d81a452fc1",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "7965b048ce56301e9003a74967e6048ca2017d5235d18dfdee97ba1a567e9dcb",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}",
					"search_line": 117,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "cfc06ba0ab8e6eb4cd5b46b7197503a524b94bc63fa1faaf83eb6e3758608831",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name=service",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=service has a security context",
					"actual_value": "spec.template.spec.containers.name=service does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgres-operator-ui_template.yaml",
					"similarity_id": "6801860d9f8ba1e2380c91196fc70891c6bcbcc4e3965a2847c57092d8e6d6ea",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-postgres-operator-ui",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgres-operator-ui}}.spec.template.spec.containers.name={{service}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
