{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 292,
	"files_parsed": 1,
	"lines_parsed": 280,
	"lines_ignored": 12,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 44,
		"MEDIUM": 42,
		"TRACE": 0
	},
	"total_counter": 92,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:18:21.012882+02:00",
	"end": "2024-05-17T23:18:23.012484+02:00",
	"paths": [
		"templates/treenity_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "933733ca66f539ba3483a421f3ce1b8cee04238fb46b6b2ebc936ef7969b4508",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "b1cade6c3564942ee58846c3ace75099c47f944101d81b376e4ecc047584e1b9",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "485057a6d8af50ef16b7464c09acb7c2d4b2389ce819e224beb33b8faab0a3df",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "4f7c7cc53ee76deccc5225e448626e9141b6aea057d12117d035f81e18fb65c7",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "493efe37bb45b5c0f4b6c5549492693dcd5f2316e2414875ce9422deeddf720c",
					"line": 188,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.volumeMounts.name={{configmap-volume}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.volumeMounts.name={{configmap-volume}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.volumeMounts.name={{configmap-volume}}.readOnly is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "2f523aaab7097826304950f61f68ded1666f05f0b3f5ffde326dbd214ccec0da",
					"line": 261,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{postgredb}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "af9c291ee4e3d2fa9e8eab6d4b4f4edcd9520ce0f8201962551299fcbdddcebd",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "ead51243d8bd65842e4dd0351303e624332b1190f8a9be1a5b00bfe8c58ae648",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "9ec1280a9ea8656ce87f475cea4c25600390fda5c1cf8b6a21da14e23771cc5a",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "d84e1ed3e72c13f2fae1d962c48eca2b403d760d1d6bb5a2f5fb15e3ba7cc7ec",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "e1c777f31832a757f9df8d1bdabcf17dbf2fcc646db1bb52ac8c9128a5e9756d",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "e4901efae9fab02ef7d4a8475295cd19423fede82d1b4002595f46c853d36b26",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "973e0ca80e73ba7cfbbb49da94c8d53734bb36047a2615ea5aa87151e6692ec7",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "84f30974fe063c37e22ab282be2c9ce6cb8413b8aff81deabab04a3992c03121",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "1057b20764ecfde121b067267974fcb6662c29ee0c29e111f0b419e9791e371c",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "444ccc7f4b04510a8d8ec90ac19f8cb84940b227b32893ab4c62f3cce38c7d4c",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a5a9bf3125994b553b9c693ce5171a851cd72b29e2ff68fd5690c6a35e5ad7be",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "7f9114643b75c0904d2fd984d33e8dd5d198e16698c1a9e13abb0b43cf3457f9",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "1037a75baa52f5b421f14d390098f5b91a1e32c8a5054eb4aa06129773321d66",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "ab78b615716b4cf70623ae19a2b441be69c79f56cd943e46797166e0eadf7760",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "e263ab6cfd3e03d9c9ecf17755c60f7bd7b22f4015aa36402dbe4e0018aee3dc",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "c1dd787f4d94739a6ff484fbe07093d93bb83fdfdbe2a3938a14273687442595",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "975eafd553d248662bdffb7fb3601c24ece7ca48f861a450f89d9ea22c92f786",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "914a7175a3277a961189c2be7dfe2beab2abaf8e13cff1ea24f1dc28912219bc",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "0ab3ebee2299b55f0b37575dd5b266794164c33e8f3887349adda3868e7f7e5d",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3f8b39e4d9f810c2aea8e9e44973ebcd37422ea3a429e20fc8a6f7bf97fd3931",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "482997171e45b68ae8640df6f06eea65627adf8750e4d50ca477d868e5a882d7",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "b3e567699afe3ba2e1d49b4120b4806f9a3e6924608bf7c96760b9df82affdbb",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "37e3c6902ae71d4ca5893924b9b53be7bb9d052ebb89867e67b36403b6f0e7fb",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "eb6567aaec2e302a6d7a329a91417f18fe228954ce9833749b209e55b9ad243d",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "7ba2fdf1c9e0643f2dda01c7d33794ef79da23edf58aed09fc1ad065d807349e",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "292943de74e63cd20b976e5446717cbf3ad58e83d254e482c90e77856b1268da",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "134d57744f252e3454327700f8d7677470b1359c150fba3115afdcafbc1d42dd",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "14cd47390e4a1758854db8084c3820ac69e82af484dc1bb28462d81c3ac78a9c",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "2aa95b82cea03c7efa8e0b0e1615626de25fa60adb97dd77597d86744a5ac626",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "cda2e884704c1bd4b1b13f6a83d582108b070458ecd774c3ca490ab79ec4403c",
					"line": 176,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "b5fff1fe340baeaec5f903f2274c07ede3a7ba9641a461b0ed93b2ee68fd8f25",
					"line": 85,
					"resource_type": "Service",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3acfd8532ba5b41089cd8a297067d407f06a63ed05e70ee2c0a6b9da1058cca4",
					"line": 23,
					"resource_type": "Secret",
					"resource_name": "pull-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{pull-secret}}.namespace",
					"search_line": 23,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "8661bdbc1fd3da274309c794d68b533725bb2eb6e00094f64bbcd8e2045a4cec",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nats}}.namespace",
					"search_line": 195,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "9e5ff785eeae3443d9eea5394f7d81d07d41bad190f7ddde26f3af1ebb53b112",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gateway}}.namespace",
					"search_line": 163,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "f737aa0202886875337755a2710775e0d194f4be331a99bf7d67787cd3a409a6",
					"line": 86,
					"resource_type": "Service",
					"resource_name": "gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gateway}}.namespace",
					"search_line": 86,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "db-credentials",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{db-credentials}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Service",
					"resource_name": "nats",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nats}}.namespace",
					"search_line": 105,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "e335b40fb3daa1e1d3ddf21ed216af4213e7bf62d39edea1f0bccd27fe753438",
					"line": 146,
					"resource_type": "Service",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.namespace",
					"search_line": 146,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "e444a317c4047021e46bdf3f3d0e0a591b709fbeffb6c0b473c7fd8d4411f66b",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.namespace",
					"search_line": 232,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "6520089cef731b2727566fdbf6685c79bd7fd07a6684278229d546f1ef0490ca",
					"line": 272,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.namespace",
					"search_line": 272,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "93142a03521798b0d9e1898ec808404e9e41923edf7e4823b4833e27caa335e6",
					"line": 129,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.namespace",
					"search_line": 129,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "ConfigMap",
					"resource_name": "nginxconfigmap",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nginxconfigmap}}.namespace",
					"search_line": 33,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "c8b0549ebdba92cc372a2ae424b32b8a9a615444d3b74e24e3af588ed474fefc",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "8a48d735129c8bb8348e1eda10496adab8d3b15df99e3714c4b2ff59978df4ca",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis has resources defined",
					"actual_value": "spec.template.spec.containers.name=redis doesn't have resources defined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "09336751e403a060f3f583ecd25e711cecbc4855b765df5d8e4028205475e22a",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name=nginxhttps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginxhttps has resources defined",
					"actual_value": "spec.template.spec.containers.name=nginxhttps doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "102e58170c2beb9e8dd8fb98eeb55240b41f1dff5ed2ae7ba76b5dc30861ffad",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis should have resources defined",
					"actual_value": "spec.template.spec.containers.name=redis doesn't have resources defined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "96a856d3f8a31120fefd23a7bb1cfa7e5ac5abdb7791ad1d9cdd685508ef1483",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres should have resources defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have resources defined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "62945a6de094c26f2704db20c2cf375d7ee8ed6f61db83a422aefc059259fb64",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name=nginxhttps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginxhttps should have resources defined",
					"actual_value": "spec.template.spec.containers.name=nginxhttps doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "edf16b8a31bfbab380af418f81a1614353621f8f71504eff45d727cf89e30d0c",
					"line": 250,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "fec0523d3359ff581b1f8765867e8bdf0853437ad0f2467b229d64bc814f56cb",
					"line": 250,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "0dc4145b79c68ee08f693455cd4efa66f81a828b7e7d8d6fc99b5d360d6aca18",
					"line": 250,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "254e8e1246ec416df14cae5839029ce04cc7e22bd11df2acf3eef396e15c84a0",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "895bc390bc11d172fc1124fd63f75c49e4228826e383a6161ab89ff2cfcc6685",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{redis}}",
					"actual_value": "metadata.name={{redis}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{redis}}"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "41e1e9f17f236d338cf10dc1c8c593e7cbe6d27649bb35ac20d4ffcb4d6ae229",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nginxhttps}}",
					"actual_value": "metadata.name={{gateway}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nginxhttps}}"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "1c17ba62c5fc6c348c7a3687bf1d09f2b80418e71ba754df315926c904bdee31",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgres}}",
					"actual_value": "metadata.name={{postgres}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgres}}"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "d3b6a49df377d46236dbf0df41a3bbbaa1366ade89ef82e9be4d08bd7267fe80",
					"line": 172,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{nats}}",
					"actual_value": "metadata.name={{nats}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{nats}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "6d0f0c6557a854b9f15822e9d32c585f4d27fd48474ffa0c741762c875ac7e82",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.containers.name=postgres.securityContext should be set",
					"actual_value": "metadata.name={{postgres}}.spec.containers.name=postgres.securityContext is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "20cebbe7abbf451596eaab9a8bada1a6695d1c587486a015639e6784090bace0",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.containers.name=nginxhttps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.containers.name=nginxhttps.securityContext should be set",
					"actual_value": "metadata.name={{gateway}}.spec.containers.name=nginxhttps.securityContext is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3ca8c5aed0416fa358393ec52b2bfaf91afb494da052bf0fc700fd4784e77ffd",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.containers.name=redis.securityContext should be set",
					"actual_value": "metadata.name={{redis}}.spec.containers.name=redis.securityContext is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "c72d4c8e7815de4eac7a1a339212e1661e838cc866bbd7f04a441c5eb88b78d0",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.containers.name=nats",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.containers.name=nats.securityContext should be set",
					"actual_value": "metadata.name={{nats}}.spec.containers.name=nats.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "faa86da708589c9bc83170fd3c3531856852e94605faaad13c667582c6d55213",
					"line": 70,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pv-claim}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pv-claim}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-pv-claim}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "d54ef9f2486dafa97c78513a0909a57ede6df496583966d2c2ec1e6cba31f5fb",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{gateway}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "49007bd02bcadea55daf6f5f1c37e4ba945618808cd6d7931459a4de5f2d1c7f",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}",
					"search_line": 195,
					"search_value": "",
					"expected_value": "metadata.name={{nats}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{nats}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "f97e230a802040c419b8569e35d464b19ef9a2d7bafcf5becdcb8e10767ed3c0",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}",
					"search_line": 232,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a90a53321418a004557f1d73e74dc75351a749a647cd2e0682fb5fff63ab5825",
					"line": 272,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}",
					"search_line": 272,
					"search_value": "",
					"expected_value": "metadata.name={{redis}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{redis}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "19d4d263d5c6f1acd879920deb49919d5cacc40dfbf325efce497ee77886e70d",
					"line": 232,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}",
					"search_line": 232,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "008607919ecb73c3c9fb1b79705f09ab32f8ad8a970023f639cfc57df74f387d",
					"line": 70,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pv-claim",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pv-claim}}",
					"search_line": 70,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pv-claim}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-pv-claim}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "cba5fc1c329668792a2c45a02c8174137e02a9118cd4d3c36df48782af1c8dda",
					"line": 195,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}",
					"search_line": 195,
					"search_value": "",
					"expected_value": "metadata.name={{nats}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{nats}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "6e6ce41116f56db9ec2f143a9db35f150a42dadd16ace563951153a2fcb36183",
					"line": 163,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{gateway}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "6c01a05de9462980c8b8777cb5d260231fc851fb5f2e556035e5c13cef9a5c41",
					"line": 272,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}",
					"search_line": 272,
					"search_value": "",
					"expected_value": "metadata.name={{redis}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{redis}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "3213cbe0165d41ece3b29737d56220d34d594c64c15e2a5793b2eb74316d2357",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name=nats",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nats has a security context",
					"actual_value": "spec.template.spec.containers.name=nats does not have a security context"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a99218ac8b98251d312bc592b27f2686205fe0d2917392a6692d6fc0d0290e72",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name=nginxhttps",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=nginxhttps has a security context",
					"actual_value": "spec.template.spec.containers.name=nginxhttps does not have a security context"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "de0b79ae36272382c5f737c075a8802fd8056ab82fe436cc583dc1865e8c73eb",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name=redis",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=redis has a security context",
					"actual_value": "spec.template.spec.containers.name=redis does not have a security context"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a51c12a3a20a36ce242f33b025e918910b2f7869f0142abcc1ba7444cf392ff5",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has a security context",
					"actual_value": "spec.template.spec.containers.name=postgres does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "ee200819c932accf686ac1feb31c063f9ea9d5b17014caec457faeff2a859c57",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "nats",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{nats}}.spec.template.spec.containers.name={{nats}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "94fa573f92b39ce41c41d1c850d0752add2a3283f161444dee58a428925d8011",
					"line": 231,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a53bc904ef69fae893507fc7f568bad0376dc5678744a31ba1720e394015f86a",
					"line": 182,
					"resource_type": "Deployment",
					"resource_name": "gateway",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{gateway}}.spec.template.spec.containers.name={{nginxhttps}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a4ac5f3f1c06668332155de6ab8290b704c9940eb66e34690c0322a702973aed",
					"line": 271,
					"resource_type": "Deployment",
					"resource_name": "redis",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{redis}}.spec.template.spec.containers.name={{redis}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "ed4dffe119fedba545c2cd9fc6948b91fdf8b3b5bdfd90d911c7f23a823d4564",
					"line": 256,
					"resource_type": "Deployment",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.template.spec.containers.name={{postgres}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgres}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgres}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "4f22b4432eee24594041b0b5192635b93a02963456916da03f89edba4c1d10d2",
					"line": 151,
					"resource_type": "Service",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{redis}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{redis}}.spec.selector label does not match with any Pod label"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "08e7c1415c93cdfd5d735fb4a61b62a49449a8b39a695de4a243827cd9de1779",
					"line": 134,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{postgres}}.spec.selector label does not match with any Pod label"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "a5ec625fb11ec51cb7bef48c2259fe588273b258c6bc5f12a69776cff2e47166",
					"line": 110,
					"resource_type": "Service",
					"resource_name": "nats",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nats}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{nats}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{nats}}.spec.selector label does not match with any Pod label"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "313bdc83d125a309698f9ef4775b480b5ff36cc42f2e3866becb1740d52551fe",
					"line": 96,
					"resource_type": "Service",
					"resource_name": "gateway",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{gateway}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{gateway}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{gateway}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "9ae43f52aa60ff441c130565fc699c919e2bd3dafdd7acc70223215a3d325f94",
					"line": 109,
					"resource_type": "Service",
					"resource_name": "nats",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{nats}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "57814a6ea3e2aa0fcd62f183eacaf46aeb09b50ccba6f5ff2f1528f9b536a0db",
					"line": 150,
					"resource_type": "Service",
					"resource_name": "redis",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{redis}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				},
				{
					"file_name": "templates/treenity_template.yaml",
					"similarity_id": "903ac0b6f3c07e4aec2d7f30defd189bcdfdf6293633ed8b1e15bf8cb410db33",
					"line": 133,
					"resource_type": "Service",
					"resource_name": "postgres",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
