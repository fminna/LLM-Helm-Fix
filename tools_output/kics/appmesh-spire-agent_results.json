{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 171,
	"files_parsed": 1,
	"lines_parsed": 166,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 6,
		"INFO": 0,
		"LOW": 16,
		"MEDIUM": 18,
		"TRACE": 0
	},
	"total_counter": 40,
	"total_bom_resources": 0,
	"start": "2024-06-26T01:34:48.741883+02:00",
	"end": "2024-06-26T01:34:50.870401+02:00",
	"paths": [
		"templates/appmesh-spire-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "a9bf0adcbcd29e392369b57bd678ef4d1910c39878201f37f353caa136af7c45",
					"line": 141,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.volumes.name={{spire-agent-socket}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'spire-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/run/spire/sockets' mounted",
					"actual_value": "Resource name 'spire-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/run/spire/sockets' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "20fc0dd3df7b2f9d8ef371efc9bb7b71d81b7a36cd1a84bede51074652148d12",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "51a8d3f205ac89d539a6db85b5543dd01369cac90fe160055ea5a61121fafc19",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "4ba25b95d4d6a14ad98133dbdc06b075012be2830ba300250bccb86fe9dbfb50",
					"line": 121,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "ed58ecc063254e0b6af209b993e22a365959d7a07ef63150334f96dfdd45af53",
					"line": 170,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.volumeMounts.name={{spire-agent-socket}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.volumeMounts.name={{spire-agent-socket}}.readOnly is true",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.volumeMounts.name={{spire-agent-socket}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "118610dac72aa6969018a03369a925e158af4ea3140a5f80ad1807ce293df609",
					"line": 141,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.volumes.name={{spire-agent-socket}}.hostPath.path",
					"search_line": 141,
					"search_value": "",
					"expected_value": "Workload name 'spire-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/run/spire/sockets' with hostPath",
					"actual_value": "Workload name 'spire-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/run/spire/sockets' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "440dc5bb32c8008c415df7d4392b162b9b124544c2fad6a2ea55a246ff13658b",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "97f50206ff5de86a8dcb2452b48b16c60806d4f7815cbce514891fad4901dba3",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "f6d5f1a3c08dceea534f9dc3125c210a49fbd5f3b55b1b33adfbab6f8e6de3fb",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "3fe7459ff7182b57d48c5ef7eeb56e979f533823f529bcafc83aabb313cdac3b",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "bfacfe76a6234bd873e80e9357a2d7ccf02b552f839cec40e0b8755f40002ff8",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "bdb4b01f4690e046bcbc0dae3f24ed7812b9fc22e4aad97acc3858266d7628ea",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "8d4c354c5456e61eeb633f59404f1239e3a7536a586d1328f01b6fbbc4d42efd",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "5ad80e7d54d52264c591844c5776b4d1dbcce5f2bcb618c69add2f23565e2b88",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "5ff9e2a59c623900fe6c903ad68d0feb347840f6cdf1f52f4452ea8036b29cae",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "338b42b2251959ab556a3d9435c6676c57466681b71139e2e518b314cbdfefd3",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "aa4fd489e1e30abce7ac182772843023da964cb88c0c447cb6a23954fe2f1521",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "c7a27c7c52c6ef383af45df4b5342a5f08e3964059586389737493acaaf15690",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "ef9ab6525440938f83d44b48afa99c9b605372d6413132adcbe10107d38bf8f7",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "79b19af4ca5e66cb3596a3210acf1af54d9f49d5506ef09d90c348837df024f7",
					"line": 120,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "4055e0d6a4dc97320e32ec1d7985d7b90f71e85ad091e401c3fd79ea1e3c2a70",
					"line": 122,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "ac62723221996756aeb5a150a2027dc2f98f85d49d2e23c0af76d8bb6f46612e",
					"line": 102,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{spire-agent}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{spire-agent}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "ae8711c6a3663aa555cbaad7f197ab8bad0d4a1c8ad9080af4964ed5bbdd574b",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name=init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init doesn't have resources defined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "618af63ac6f04fb0e59c610b41f0f0227f39ad8693043bbc44de6e3ab4e05d33",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name=appmesh-spire-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=appmesh-spire-agent has resources defined",
					"actual_value": "spec.template.spec.containers.name=appmesh-spire-agent doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "221b7422df24c913cda780dd44638320211c88c3ebfd4c62ebfe526c1f2f13dc",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name=appmesh-spire-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=appmesh-spire-agent should have resources defined",
					"actual_value": "spec.template.spec.containers.name=appmesh-spire-agent doesn't have resources defined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "5eb5e7dd3ecfafd14b227c4b777f4d6046285710a985ef8aa4e5495c68e0ce14",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name=init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=init doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "b8c5f67a1184f538adedbf746268ad3ed899662af1994acbd69beb978e09b61d",
					"line": 146,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "4510acbd523b88469c54bc9d677cf32f14c1e627fa064e94d295ebd0e58fc938",
					"line": 127,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "d9162a5bd393661ccc768bcf34f99c3c49c9a62cb267baca2d36b5e20cac7252",
					"line": 115,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{appmesh-spire-agent}}",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{appmesh-spire-agent}}"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "d9162a5bd393661ccc768bcf34f99c3c49c9a62cb267baca2d36b5e20cac7252",
					"line": 115,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{init}}",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{init}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "7679ff63c52968b31ba4f60ae68fc68e0dd8962deb1ba2af9cd52d17a5d09d4a",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.initContainers.name=init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.initContainers.name=init.securityContext should be set",
					"actual_value": "metadata.name={{spire-agent}}.spec.initContainers.name=init.securityContext is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "df106ac5ea39ed7081ff3c2dac2523172a395ba102df68ec27a1677fa64b3953",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.containers.name=appmesh-spire-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.containers.name=appmesh-spire-agent.securityContext should be set",
					"actual_value": "metadata.name={{spire-agent}}.spec.containers.name=appmesh-spire-agent.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "f994a3a34d296cdfac0e455fdbd36831aeee513e9e769d703cdcd7c7f0148c42",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{spire-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "39134f9b3b9cff8fc82e6c52f08aa9cb3eebc92951b8f33b86ae9ffecaf4b7d5",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{spire-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "a98418506af5a9212737aeb35fdf4d1c4c8815c8168a394cd9c662448511be02",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name=init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=init has a security context",
					"actual_value": "spec.template.spec.initContainers.name=init does not have a security context"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "9456db9e30c28dff5dacf72d779b8d18942a445536ec0f6dbdcf36e84d72c4f9",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name=appmesh-spire-agent",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=appmesh-spire-agent has a security context",
					"actual_value": "spec.template.spec.containers.name=appmesh-spire-agent does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "2f1e364e3102ba383a39e0bee270d8e53f34c3acab42d663835562e96e575ab8",
					"line": 126,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.initContainers.name={{init}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/appmesh-spire-agent_template.yaml",
					"similarity_id": "7a2a19ef64c022411b81f0dbf7197118d9e703879b12be15fecc4e3673949fe1",
					"line": 144,
					"resource_type": "DaemonSet",
					"resource_name": "spire-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{spire-agent}}.spec.template.spec.containers.name={{appmesh-spire-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
