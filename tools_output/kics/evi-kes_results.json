{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 205,
	"files_parsed": 1,
	"lines_parsed": 202,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 14,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:32:03.109765+02:00",
	"end": "2024-05-17T22:32:05.07744+02:00",
	"paths": [
		"templates/evi-kes_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "a4fe6418592f41d99fc53f18eb9ba362ab9c2d616254b147259e2558b015120c",
					"line": 137,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.allowPrivilegeEscalation",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.allowPrivilegeEscalation should be set to false",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.allowPrivilegeEscalation is true"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "7f66878466ba1622f672d0af771c8ff173e6cf3084d4dcdc06513b5f52c1a8d6",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}",
					"search_line": 136,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "cc3f30e2a4f5526591c20493d467abc7ab9e8b16fe9e728f431bf5e708876ecd",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "41b5457922d954f4aabc94a7a95b09e729555df85c3edd3d0e74441b710a5b54",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "4a9e8081a8e2d27e9f9afac887fe1986a79936ccbd3c7aee9eeb2286c5fac316",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "d6833665b8a671bb0e03f06353a994d59a514f8039a04dbea510d9169d26697b",
					"line": 77,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "a6c7225269a34c355e8b48fb5a8913fe104cede21424a28361af12638709cdeb",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "bc202daaeeedc39136442a0564de653338af69bf91e30bdc6d1046142b34d0ad",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{evi-kes}}",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{evi-kes}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "e051701ae5d20ba50e43266afa59c616a975868ba57955214cbc7cfd5666bf23",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}.spec.containers.name={{evi-kes}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.containers.name={{evi-kes}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{evi-kes}}.spec.containers.name={{evi-kes}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "6c01af44e363952934887fda82f3594c7f1cd8a5e021936ef682490fc48c963b",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{evi-kes}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "722a70158a53535e9864f6887f5cd2870d44cfc0f0dbd228cef3837fa16835f9",
					"line": 62,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{evi-kes}}",
					"search_line": 62,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{evi-kes}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "9587e5e51d7786e1f57c3515888e64e86cd172917f56a08dc05a60dacad05c50",
					"line": 138,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.readOnlyRootFilesystem",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.readOnlyRootFilesystem is true",
					"actual_value": "metadata.name={{evi-kes}}.spec.template.spec.containers.name={{evi-kes}}.securityContext.readOnlyRootFilesystem is false"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "8c555834d90af587a865eedbc07acb92d3e954ef48f823301152a6e752a5661c",
					"line": 94,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{APP_IDENTITY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_IDENTITY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_IDENTITY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "c5c5d88800c8a2c7a7fd4b7689c42c7f39bc8162b9f43621f3710d68941a6bdf",
					"line": 110,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{VAULT_SKIP_VERIFY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{VAULT_SKIP_VERIFY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{VAULT_SKIP_VERIFY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "46b07640a4562860fe5541f585f8502d66c3760e34f40a27c6e1694c30f8a76a",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{VAULT_TOKEN}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{VAULT_TOKEN}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{VAULT_TOKEN}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "ee8f0244746557de9843612c74df24453411f694a49eff7fad1c3ee8c299f217",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{KES_CLIENT_KEY}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{KES_CLIENT_KEY}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{KES_CLIENT_KEY}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "40dd108a1451bcda05d514e4dfba16b421e88b341b1e9f140a7b9991f84ac6da",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{APP_ROLE_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_ROLE_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_ROLE_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "143bb4a1f6ae10fd68199a79d695f577b5634d1f0201486b1b44e0a3ad10bf65",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{APP_SECRET_ID}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_SECRET_ID}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{APP_SECRET_ID}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "191ca2762cfab2e09910eb191258a55ce5252881c03b91b3ba5a34cd0cdda0ca",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "evi-kes",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes}}.spec.template.spec.containers.env.name={{KES_CLIENT_CERT}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{KES_CLIENT_CERT}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{evi-kes}}.env.name={{KES_CLIENT_CERT}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/evi-kes_template.yaml",
					"similarity_id": "fdadcd3205a9c7a9ce7638aec3cab3dacf21c99a8c0ab96a1c5d48ef1a8c1c1b",
					"line": 34,
					"resource_type": "Service",
					"resource_name": "evi-kes-svc-node",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{evi-kes-svc-node}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
