{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 239,
	"files_parsed": 1,
	"lines_parsed": 230,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 14,
		"TRACE": 0
	},
	"total_counter": 27,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:10:41.870154+02:00",
	"end": "2024-05-17T20:10:43.77364+02:00",
	"paths": [
		"templates/appmesh-spire-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "3ac4e87f2d5892039aca3d25c2310097e48502e3e754d2a3c58c63cce513a13b",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "e738fc7a38ab8c1c27b90652579e46534384c4e456b09426cb580d28adc66410",
					"line": 228,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.volumeMounts.name={{spire-data}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.volumeMounts.name={{spire-data}}.readOnly is true",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.volumeMounts.name={{spire-data}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "5bb393c707f48ab33c62ed363b9d2303bd75aaf093e32bd6ffbba904d164c985",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "af0b87516df10a49c151a5a6f2c389a2639fb1a0fd14647fc9da40d96eac0ad7",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "96614b7a943bb324087412cf11eeec28d82885b1b97b9ddec91bf4054b543ee4",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "0e565d1a35f39842f1f18de13d8d6e5822d87c586362451f05cf76d5072401a5",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "bc18b4f878320bf176e5c73419b9c429db57862671930b2fd4eb2c4f441f1195",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "984f2e602a741e0c1f220afba8ac3c454a12f7789d16f8fe43db4581236703fc",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "02599677ecd1887b94315a7ce37078290ceef85f1338be7271254c5e5395a5db",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "7cab722e0958556062548463d9831366bcfddeb7e0e78420b9ac31fac1854b0b",
					"line": 198,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "spire-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "b5f051f2df85ecf5f311bf6c863ff9bbc869584819defe982d0a4ca4348cd5e9",
					"line": 126,
					"resource_type": "Role",
					"resource_name": "spire-server-configmap-role",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server-configmap-role}}.namespace",
					"search_line": 126,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "be4bd01ceb08821632f0f913de3b4de80b7f649d893f9b3978203562e4d514a5",
					"line": 143,
					"resource_type": "RoleBinding",
					"resource_name": "spire-server-configmap-rolebinding",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server-configmap-rolebinding}}.namespace",
					"search_line": 143,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "ConfigMap",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{spire-server}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "06fe1159e457b08437a043218077a57ea2e1e8419a4602159cfb216f3cab4b4b",
					"line": 178,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{spire-server}}",
					"search_line": 178,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "9e5ff785eeae3443d9eea5394f7d81d07d41bad190f7ddde26f3af1ebb53b112",
					"line": 163,
					"resource_type": "Service",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{spire-server}}",
					"search_line": 163,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "1c0776d4ebf660888d5661463a4b48a98cb76cf0a5b6e727c8ce249801d75b94",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name=spire-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spire-server has resources defined",
					"actual_value": "spec.template.spec.containers.name=spire-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "adbdc71cd7dd53be01025d16b02e51eaa13f5deb9ef0cc37e5cfbf1e58bec324",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name=spire-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spire-server should have resources defined",
					"actual_value": "spec.template.spec.containers.name=spire-server doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "1b5f12bcaff45b4408a27ef89514c6b3d41c66d25e1e015cfd56ca881bcd201d",
					"line": 207,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "2fbd661abcd40fc2abffaba2c5c4dae3e3a789bcd1829d2402f45bb3f4521b54",
					"line": 193,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{spire-server}}",
					"actual_value": "metadata.name={{spire-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{spire-server}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "8cf4de88e800d8e3bc747e779f1152b83cd5b0e6b32b023fe75d802e32814a58",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.containers.name=spire-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.containers.name=spire-server.securityContext should be set",
					"actual_value": "metadata.name={{spire-server}}.spec.containers.name=spire-server.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "29905233adb44c9214697e6eca79357a2c6011e0de22e1e1136aa42f95c68201",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{spire-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "2b181ac227537a50fc59b0ce0f15fa05ff29a50fd650028a93f2195e2dd24db8",
					"line": 6,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{spire-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "eaeabea80ac3300da79da5306e86916fa837553e3efe16528da4b06c6a4b451c",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name=spire-server",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spire-server has a security context",
					"actual_value": "spec.template.spec.containers.name=spire-server does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "0f1081882a75448167fa4e8ce2860246c3f872a47cf77ccd9fc11de0059c2bc3",
					"line": 205,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{spire-server}}.spec.template.spec.containers.name={{spire-server}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "2f7514214e497aa5665a468bc129eabd41c2f00ce1ef0dbb05b27a914fb0bc3a",
					"line": 165,
					"resource_type": "Service",
					"resource_name": "spire-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/appmesh-spire-server_template.yaml",
					"similarity_id": "45471bbc634e9207153f733c72b7e6d48660344d0d19d8e7fd8a55ff97be0218",
					"line": 238,
					"resource_type": "StatefulSet",
					"resource_name": "spire-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{spire-server}}.spec.volumeClaimTemplates.spec.resources.requests.storage=1Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{spire-server}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{spire-server}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 1Gi"
				}
			]
		}
	]
}
