{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 197,
	"files_parsed": 1,
	"lines_parsed": 189,
	"lines_ignored": 8,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:25:13.78364+02:00",
	"end": "2024-05-17T20:25:15.644157+02:00",
	"paths": [
		"templates/loft-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "b0f73d0d56ba6bf1dc9ac261c8bd68e3c831a64e0f36f936ced56474f705901f",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "f5cca71a81e8d1981f7cee89e7794b36e5d5b2524ede10bc6833495b90a5a63e",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "23b29307d634ef994a32e54a9f1f914e94067c11538fd5530675e42b850497e2",
					"line": 136,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "loft-agent-apiservice",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent-apiservice}}.namespace",
					"search_line": 38,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "loft-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent}}.namespace",
					"search_line": 59,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "loft-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "88a1943e5d9fef661231d3f9373fd37bb57d19505dcda706718c8f305e1ccb22",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-loft-agent}}.namespace",
					"search_line": 114,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "e62ceca1c4aa8886c59ed149cc6fe493f7b5a4fa8aaef4da33e6754d07062b56",
					"line": 92,
					"resource_type": "Service",
					"resource_name": "loft-agent-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent-webhook}}.namespace",
					"search_line": 92,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "7918a35b76dd057105303bb90b884e9871b7d62719a7a9f2138d3c8a82e32408",
					"line": 30,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "loft-agent-binding",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent-binding}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'loft-agent-binding' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'loft-agent-binding' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "a1c049db4828d03e0caee672b0e5c4ce64aa37dbb9687286323fb6c8a508b9c7",
					"line": 141,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "95140c5e2b32f52fe0125a005df25f779d52848126b0aa3bf493db1b3f4226fb",
					"line": 132,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{agent}}",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{agent}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "42647d01a259dbef9506c3940f3955375510cc331639e20e7108a73febf9e742",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-loft-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "68266c1557a8db28991f87ee1b9066f3e55a17fb955c26de527d55dc8a90d3ac",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}",
					"search_line": 114,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-loft-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "7407be3dd7a1dd3661532aaa89c615590e737e1b91809c5625fdf7a205c2c7e8",
					"line": 171,
					"resource_type": "Deployment",
					"resource_name": "release-name-loft-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}",
					"search_line": 171,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-loft-agent}}.spec.template.spec.containers.name={{agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "3e144bb6ab688dc34f193911fc5f5c3ad0f8f1ea865ccf6fd934248e9c618e29",
					"line": 102,
					"resource_type": "Service",
					"resource_name": "loft-agent-webhook",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent-webhook}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{loft-agent-webhook}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{loft-agent-webhook}}.spec.ports.port={{443}} does not have a Pod port"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "82dbae74f340c9493d44950f59a44e6e7ce5eca1f00da0aad651641e27df7e5c",
					"line": 47,
					"resource_type": "Service",
					"resource_name": "loft-agent-apiservice",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent-apiservice}}.spec.ports.port={{443}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{loft-agent-apiservice}}.spec.ports.port={{443}} has a Pod port",
					"actual_value": "metadata.name={{loft-agent-apiservice}}.spec.ports.port={{443}} does not have a Pod port"
				},
				{
					"file_name": "templates/loft-agent_template.yaml",
					"similarity_id": "d05fb1cec46249be75ef23ddfd4ec66771af4d8f3bab959f83f380c96c7594eb",
					"line": 80,
					"resource_type": "Service",
					"resource_name": "loft-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{loft-agent}}.spec.ports.port={{9090}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{loft-agent}}.spec.ports.port={{9090}} has a Pod port",
					"actual_value": "metadata.name={{loft-agent}}.spec.ports.port={{9090}} does not have a Pod port"
				}
			]
		}
	]
}
