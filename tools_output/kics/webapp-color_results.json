{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 48,
	"files_parsed": 1,
	"lines_parsed": 46,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 8,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:47:34.59104+02:00",
	"end": "2024-05-17T20:47:36.492019+02:00",
	"paths": [
		"templates/webapp-color_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "3d1a50d7b83a991666ad454ecd6d4c1056bdcd3eda3432a14427801f6523d334",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "682f77198259416430fd89cb319d18e2f946bd23b6402148adc170431fcc7025",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "dac3156f1a6daf75b7fb13b873fce728023bba4cfaee5badc75dce13b2d9e617",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "a603206302cfc598f66f32beb555f74a8e92a66fe6b8d2694f18b9683da32d47",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "e36e3b51c4deb6bd95b13f05efc06062577ad3087321d6ae58ebeef17ea1d071",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "6e7f1d4f74d83af6aa1d70acd3567d265a4ea5313c841d94251a796df17a3831",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "264f2900a5c539e5606514308d68026ca658ca6ef13e78b95d378065bac10fe1",
					"line": 32,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-deployment}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-service}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "afc90556dd5085eeec1b958018ae0ade32b0d0f169f96ac7dde519f34b68c211",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "f21304a64b6a82e25f966ead0b92478116a0a11d49de971ddabd753d66b794d9",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{webapp-color}}",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{webapp-color}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "96a53260d8459c9dcb32444786cb586b8cdba779160d102848bb8a4e22785729",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.containers.name=webapp-color",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.containers.name=webapp-color.securityContext should be set",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.containers.name=webapp-color.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "aaa09b3be38344468a6732ddc2d0a5fab5cfed839a7dbb44f8409616d61e9528",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-deployment}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "d119863d12a0b930ca09f9c079547636e4b6492484971f94c0b27e9981374f26",
					"line": 22,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-deployment}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "bfde867f44f668fb7ba6cff783167eb700fc385bbfcf5893bc449cf2ec9cb54a",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name=webapp-color",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=webapp-color has a security context",
					"actual_value": "spec.template.spec.containers.name=webapp-color does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "41bd7852aa82a7415064bd1f876bd2fa6e128f95cb0285db70231bcd465c0163",
					"line": 35,
					"resource_type": "Deployment",
					"resource_name": "release-name-deployment",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-deployment}}.spec.template.spec.containers.name={{webapp-color}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/webapp-color_template.yaml",
					"similarity_id": "c67994b03eca6fd50588856f8b9e287310a0bec386312a6014e05520bad38851",
					"line": 12,
					"resource_type": "Service",
					"resource_name": "release-name-service",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-service}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-service}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{release-name-service}}.spec.selector label does not match with any Pod label"
				}
			]
		}
	]
}
