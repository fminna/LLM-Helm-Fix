{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 181,
	"files_parsed": 1,
	"lines_parsed": 176,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 10,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:27:47.564108+02:00",
	"end": "2024-05-17T20:27:49.505239+02:00",
	"paths": [
		"templates/datahub-gms_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "8d4e42a183444f759bb6763bedeb3b39113f81ec756ecc33a7b7cb5c07676ed6",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "4d7e8b8131331e85d1ad81de404aec62874a995cb72010dd180097df14f3be17",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "b6d0f753180e859428c820f8a16d2116ed8fff11392b718096c01bb5f01ecf7b",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "e0b2c56e8b990267f882fd082805a28eac79df991075ce95d56cf602bf562906",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "13a6ffa19359fe1555d530d8b427e51e5942e25dcccf6c9031ac7d976886c381",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "c91358491e263c78ce988695d32944dd7459a355b14cd4634fb4aafce37f45a1",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "f25664a8cca7b9be76d25a4ef36e5b2850d4a6f0c58ab7d4e8647da804f14af4",
					"line": 87,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "37ef1d20c3d6f99bce67d2dc6927d1d6bee6eac885937e2caeec80965ed5d01a",
					"line": 32,
					"resource_type": "Secret",
					"resource_name": "datahub-gms-release-name-secret-config",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{datahub-gms-release-name-secret-config}}",
					"search_line": 32,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "810a04c3a482b2c78415fcb7d1a35336638459b611e30d00db88f8180d2ac4bc",
					"line": 44,
					"resource_type": "Service",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{datahub-gms-release-name}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "3cf0790d198e327a94d3cad7913bba0c9a6d1dba8bb5b14cbf8f35fbb56d37ec",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{datahub-gms-release-name}}",
					"search_line": 64,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "191863318c899ff9ac330307b937e684772ad9fe1e6693760124f55c3d47973e",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "168dffbb0538153991137e58f5c5123b21f79c984db19b67726b9ab2a8c6ad1e",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.metadata",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{datahub-gms-release-name}}",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{datahub-gms-release-name}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "a0e0ba6bd4b50dcdfe8cf593843a4b879598114d562e1eab3a1812d09e6dfe6a",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.containers.name=datahub-gms-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.containers.name=datahub-gms-release-name.securityContext should be set",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.containers.name=datahub-gms-release-name.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "a83f0ee0478868a4bd75656cb1a145431c4d67dc658636f8ec45fd2684275429",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{datahub-gms-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "ef1e9f1d4193abc9998f235c3049cfee6e76a95d17575c7acf1fd4d1259aa5cc",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{datahub-gms-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "f84506cc3bde6e44c6ff5aca9e4eac23262ceb87dcdc105ee05d927675260c11",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name=datahub-gms-release-name",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=datahub-gms-release-name has a security context",
					"actual_value": "spec.template.spec.containers.name=datahub-gms-release-name does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "af37e2b688e781343e48570fc4c9a8114f9926bea8074a8a2426f09dd3013698",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.name={{datahub-gms-release-name}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "b64c30c11a4237069810dbd5c29db7e48b3f8b1cb3057ccfcd9712553f8cc347",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.template.spec.containers.env.name={{EBEAN_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{datahub-gms-release-name}}.env.name={{EBEAN_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{datahub-gms-release-name}}.env.name={{EBEAN_DATASOURCE_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "d42e239adca8ca6c49ae2f862ec60a2b5bcffc61fe2b7335a08575ba4fdc75e1",
					"line": 52,
					"resource_type": "Service",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.selector",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{datahub-gms-release-name}}.spec.selector label refers to a Pod label",
					"actual_value": "metadata.name={{datahub-gms-release-name}}.spec.selector label does not match with any Pod label"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/datahub-gms_template.yaml",
					"similarity_id": "12c3d5f62007d3383b9e158525102b4860814858793bf4bd72a5fdf03c0adb13",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "datahub-gms-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{datahub-gms-release-name}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
