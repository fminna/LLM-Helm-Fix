{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 107,
	"files_parsed": 1,
	"lines_parsed": 103,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:40:02.615858+02:00",
	"end": "2024-05-17T23:40:04.496245+02:00",
	"paths": [
		"templates/skooner_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "d635e65bed7c208779f183040f06eecfe84a8e5f1d0ac81cfb798cc3570b57de",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}",
					"search_line": 102,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "850150abbe52410a04d26848270024982d75df6fde96c8b33bf549e5c6a29a3c",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "f52d5f6ef549321fb2b98c233a1a05ce0d7ab7e81e13949748b94a75a67afbee",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "e659f40d05486f8ff503febefcd2b80f96d2ba68936b25a2f14986e6eaeeaa24",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "54ac0d4972a73b826c6ea21306be21fdb59c44f9d6fa722884e1cdf1af3e8f03",
					"line": 66,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "017b1290b99819870842b0543c3bd1572beb71bfb0c96f32a34a26aeade627fd",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "6b4be205afaf320009b7a4d1e641195fc960d12bcf4854dd38da12df819eb52b",
					"line": 64,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{skooner}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "8f2e7e68edee857966f6443a72feb813aa2d78eccecf0579b725661aea5c8b61",
					"line": 26,
					"resource_type": "Service",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{skooner}}",
					"search_line": 26,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "29895e763cad8002756d6cad487a02a65c47ca19e4945214e5b29ff0f7e4b393",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{skooner}}",
					"search_line": 46,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "skooner-sa",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{skooner-sa}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "157b0b35ee2c76a6cabbec9e14452215aa938b40681084b32222c1398e949580",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=skooner has limits defined",
					"actual_value": "spec.template.spec.containers.name=skooner doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "e05d22aafa61793277feb43d4d4e5b27e0bb40b6e2275d7ea6fb7143a1b1a766",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.spec.containers.name={{skooner}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=skooner.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=skooner.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "249328b8-5f0f-409f-b1dd-029f07882e11",
			"query_url": "https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "567eee7e",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "25d7bd697f2986dbf812c226dade8479fe089a6918936d8634bd1e4f94548169",
					"line": 16,
					"resource_type": "ClusterRoleBinding",
					"resource_name": "skooner-sa",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{skooner-sa}}.roleRef.name=cluster-admin",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'skooner-sa' of kind 'ClusterRoleBinding' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'skooner-sa' of kind 'ClusterRoleBinding' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "e46a6c72688571dc68142af0363c5010e6663a0b08034f966f64e50db12e5735",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{skooner}}",
					"actual_value": "metadata.name={{skooner}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{skooner}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "e71c14ba0caec14ab84a4cc0b557e9c8647751c969396b66c6489493e1e62f53",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}.spec.containers.name={{skooner}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}}.spec.containers.name={{skooner}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{skooner}}.spec.containers.name={{skooner}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "5e4acb2d7e280cb4c96c6d0a48e8ffbf957e9fc5ff6be2b48da216ca470678cb",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{skooner}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/skooner_template.yaml",
					"similarity_id": "1501b7dd7c5bb1bf65a15804273e905621c43f97b7e94b61ab419fa96e836d07",
					"line": 26,
					"resource_type": "Deployment",
					"resource_name": "skooner",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{skooner}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{skooner}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{skooner}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
