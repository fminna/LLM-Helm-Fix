{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 111,
	"files_parsed": 1,
	"lines_parsed": 107,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 12,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-05-17T22:38:55.570843+02:00",
	"end": "2024-05-17T22:38:57.478808+02:00",
	"paths": [
		"templates/postgres_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "4852e3b75905967f0d8cb37e9eff265388fe69c2d7c7b7149b6077d35e8395f5",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "1502ca8e8d509ac107169a75e548137b6641873bfa417ee600022d36cdc2cdb7",
					"line": 102,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{data}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{data}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.volumeMounts.name={{data}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "ef423632575e9362d6b23cbf8971359b59909a347fe4c71314b36b0e8730d6a2",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "1788a44786fbca5ee4cde01235cdc165a9b59180a823ba8a8a4d1d3a6bfa58f2",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "cb9b81d4a5ad025ffee6912f00a49231a557b5bf4c0f4a97b7a01971c96fb4a4",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "156074b4eefc1a8f715f71b9c3992cdd03c36d7b5de2a876c1cab5101ddadb45",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "77163a997647f04e8a02b6c122a5d8bdd9f98153ad50e69f0e03245e77256e33",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "d75cda4925152d3c702a051355c743143078de4459e2d7148b246e8e660f2dff",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "d276a1380963e01ce3f8ed09fca0066617840d743c581feec5a770713ba8743d",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "8b0388b833105f5afdb693ee325f7b3de527f2f5fc3f5ba45b6b353d578964fe",
					"line": 81,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "postgres-secret",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{postgres-secret}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{StatefulSet}}.metadata.name={{postgres-statefuleset}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "dc01837aee8e1524e2a6c2bbc7960233a05cb48993f03d4927b926c90f3999d5",
					"line": 36,
					"resource_type": "Service",
					"resource_name": "postgres-svc",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{postgres-svc}}",
					"search_line": 36,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "19fc3d55c4fabd2062cf43a459c6c2d139e3c168d7afe4e5bf36d8240e209029",
					"line": 86,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has limits defined",
					"actual_value": "spec.template.spec.containers.name=postgres doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "adae510d22bfab3a80420407441e22f69008678db036021072ced254e00fbff0",
					"line": 86,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=postgres.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "1006b2da965e98ced337bb66d4aa8cf201a8a98649cb7734d9ee9ef7903dbffb",
					"line": 85,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "73ae250b79d9120023cccbedf7c0d62ee367932dfbc36d0e2669720075b9b4e7",
					"line": 78,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgres}}",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgres}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "8d7187c43a86d2a8808844a30f8929401e2251b3c6a806a94f01bc96c95315af",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.containers.name=postgres.securityContext should be set",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.containers.name=postgres.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "473b153a90be66ece5582cd67e73ae601a1888712902023c67deb261db99fd66",
					"line": 24,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pvc}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-pvc}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "837b59b8c99804521dbb23f07661c52224a047b58a543ef4dbb6224934db4588",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgres-statefuleset}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "9f7a24e0964ea378fffa0365af753fdc7a5744d0f14c85465ced0a004a96ebef",
					"line": 60,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-statefuleset}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "98e54e37f000ce9855319a02be2ef4453b76f7ebe67a780c640c9905900560f5",
					"line": 24,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgres-pvc",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-pvc}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-pvc}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgres-pvc}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "9e953e51303135bcd527cd7366a796ae482089d13a0c17d315665d357292d167",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name=postgres",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgres has a security context",
					"actual_value": "spec.template.spec.containers.name=postgres does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "68f21e3fa0112364cd915a7df9bc496add78db9a274f4d5d1507105c06c9057a",
					"line": 83,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.name={{postgres}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/postgres_template.yaml",
					"similarity_id": "8368c2d415a4660f31199ebe4b4dab04c4d9e3681dc4de1d10832431d0a82872",
					"line": 91,
					"resource_type": "StatefulSet",
					"resource_name": "postgres-statefuleset",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgres-statefuleset}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgres}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgres}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		}
	]
}
