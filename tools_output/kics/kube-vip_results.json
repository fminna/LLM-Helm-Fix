{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 105,
	"files_parsed": 1,
	"lines_parsed": 101,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 12,
		"TRACE": 0
	},
	"total_counter": 21,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:42:09.165296+02:00",
	"end": "2024-06-26T00:42:11.22155+02:00",
	"paths": [
		"templates/kube-vip_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "275d32a2adda18be31ac4fbf915e74a3a8739d6e24e4c432c06601ba3ce21952",
					"line": 94,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "9adcea6f06340f6a4fa5b5dac996022a1895f56ef3a963b7caaa10be71f082d3",
					"line": 94,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "1163e09cebf7f32a51959664f0bacfc9c26475528735ec7e37d0fa518479cedd",
					"line": 94,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "a5c2c8c0fe95cc8ef6cbdc9eac4c6efbd96ae10fce929e0b3f8176e0febb0622",
					"line": 96,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "2b1f33430165a64a9814d0841ec51dc5190d843a50c105904a1582cd25b59aee",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "1722338324688951ce4c2a741be6cee89556c0ff89619c093372051339aa38e9",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "e871dc629bb9e1765f25652ad51d4f880605d427c2dac388cd620338766c7a8e",
					"line": 95,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": 95,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "05cfaae7fc7fa27bf363ebf2a68e1c7c00402948a5c9d7c1417f42cdb022b866",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "48b8f1a862ea375aa64339ebcddcd1ef2fb953dcdd00dd2a93ba60f6186c1275",
					"line": 94,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "1485a8590b510d505ee5aa7865888f4bda65e13dc127ef4af6ac2088888b7c4c",
					"line": 66,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "6b6bdfb3-c3ae-44cb-88e4-7405c1ba2c8a",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Container should not share the host network namespace",
			"description_id": "50e5de80",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "f9b74d12975e1843e1adab255694f889566ac2be55328eb738f70fb36fd431d6",
					"line": 99,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.hostNetwork",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostNetwork' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "e2b9cc8a256befb5fabd67e8395db38264f81e70bcad4392d4a8c552d5717ac8",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-vip}}.namespace",
					"search_line": 55,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "kube-vip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-vip}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "d4e5ce0b0cc0ce77e3463f9369b9657cdc43dd192d7c06ea3ab138aa89bbfb60",
					"line": 92,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kube-vip has limits defined",
					"actual_value": "spec.template.spec.containers.name=kube-vip doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "fd4ae7ec281abe3db92fa17888480b18515856705e12dcbe888c898899ea2c45",
					"line": 92,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=kube-vip.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=kube-vip.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "b92a9d037501465a07c86a5ac1591d7847ed9b0148db30465f2cc308e9e885e0",
					"line": 91,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "0a7310f560636e3e56699fab2df12ccd172d1caf3ad7beb35ce1a62645a03574",
					"line": 62,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{kube-vip}}",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{kube-vip}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "4e891fd0019fc8c3e5750bcb45f03d04c0647f108fba6059bdaea033b05efe6a",
					"line": 95,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.containers.name={{kube-vip}}.securityContext.capabilities",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers[kube-vip].securityContext.capabilities.drop should be defined",
					"actual_value": "spec.containers[kube-vip].securityContext.capabilities.drop is not defined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "f644aa32a50e7e3a230eba6b7c94b3bfec37b3700ab4c576e1cf096a460783b9",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{kube-vip}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "6d1a88d8cceead45870d209403c032d9eded15e717ae8aa700dfb538c81ec31a",
					"line": 55,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{kube-vip}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/kube-vip_template.yaml",
					"similarity_id": "a5a1f3d03f1664333c5b2b448fb742d2d2df0ec14cb7183836afe9f4b4748cd2",
					"line": 94,
					"resource_type": "DaemonSet",
					"resource_name": "kube-vip",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}",
					"search_line": 94,
					"search_value": "",
					"expected_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{kube-vip}}.spec.template.spec.containers.name={{kube-vip}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
