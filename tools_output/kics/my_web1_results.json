{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 46,
	"files_parsed": 1,
	"lines_parsed": 44,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 22,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:33:26.756798+02:00",
	"end": "2024-06-26T00:33:28.735839+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/my_web1_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "35516c07b55ec9f2c53ea13ed4a2f7be904e917c4bd50a0f6ef80049d15b73ec",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "5d75af540258c8b03a6f0d2dd261a8e8ed5e4118bfe4cb303eaaff98fc118ae0",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "b8eef3ad092a0584f685534249aa4de802b7d15cce31ace08ec69365ba683356",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "fd4b7b11e26003369be90d32e6e536fb72c5b29ffb1ad76d414be138b6b7c99c",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "83d9b0eb492e8cf3bd75e38653a3afa2b6331987a527683a9c46cb36e53a5e98",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "82ab1bc7f2da9e8d3a98f378a2700ce6e80700ce6ca9ce41e9fa70ef9f1e2e38",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "36a8cbe86c47053156d87fc78e0ab9052f1612d55c11dd274c95f3657a2dab4b",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "f766c64ce2b04ba32fff1da1122a697c639ce4619d43bb57b7df901daee9a5e6",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "3878bd4250bc427aa50df4eca4c4619ce34e508373e26f16572a86da52160cca",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "17292fab6d316bebaf6df62526cc19df530977a6c819db9eb867fb2d3c302bbb",
					"line": 9,
					"resource_type": "Service",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{myweb}}",
					"search_line": 9,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "e6a9e891f82a3a30854338285f78ed67736b2e6c2577a1a48744c56dc24d66d4",
					"line": 28,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{myweb}}",
					"search_line": 28,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "86be79a292ac3226d45174c8c90bdcaed898703b28007bac39bd57c647057bbf",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=httpd has limits defined",
					"actual_value": "spec.template.spec.containers.name=httpd doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "5d09a2bc73e0dabbf1231fd02f6b21a7d1fa4998a39a6e694ec7fc775b20630b",
					"line": 44,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=httpd.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=httpd.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "16714b6de47aa37a7ec9a997a11c3b701d0fd9937b39c4848576b497517164ff",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "b06a1918c914a06cfe62eeeee1fdefa50f350884e0dd94cc224b8a9586e89bbb",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{httpd}}",
					"actual_value": "metadata.name={{myweb}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{httpd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "15c67b2da7fdf85c5a1e79f52d180491d7d608725d4997b12a3eb313d0ee6773",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.containers.name=httpd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.containers.name=httpd.securityContext should be set",
					"actual_value": "metadata.name={{myweb}}.spec.containers.name=httpd.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "900c4a8453cf4fbc40deac33c866fc79e57ac5fa0fb2c25661715700ec23605c",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{myweb}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "a131d851abad04b2132f1859998f924f05cbf27fade7189da6b45c57f56909e8",
					"line": 9,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{myweb}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "ebef0a726e74146043f97ba334810fd2637c9aa9cb5a762f091706bdf8ec82df",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name=httpd",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=httpd has a security context",
					"actual_value": "spec.template.spec.containers.name=httpd does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "3bd47adc76cc284dc5619147ff7223a990e0dc80f28f04800322e557821623d5",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "myweb",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{myweb}}.spec.template.spec.containers.name={{httpd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "32540b465da7a86ecb7fad9692f0659cc9049c8a898a4e8073bf1a8374487e53",
					"line": 12,
					"resource_type": "Service",
					"resource_name": "myweb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myweb}}.spec.ports.port={{80}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{myweb}}.spec.ports.port={{80}} has a Pod port",
					"actual_value": "metadata.name={{myweb}}.spec.ports.port={{80}} does not have a Pod port"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "845acfbe-3e10-4b8e-b656-3b404d36dfb2",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service type should not be NodePort",
			"description_id": "4744714e",
			"files": [
				{
					"file_name": "templates/my_web1_template.yaml",
					"similarity_id": "3b844eac5d5e4a51f802f60249af4b2f259624dbda5916d063af41829f1a1c81",
					"line": 17,
					"resource_type": "Service",
					"resource_name": "myweb",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{myweb}}.spec.type",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.type should not be 'NodePort'",
					"actual_value": "spec.type is 'NodePort'"
				}
			]
		}
	]
}
