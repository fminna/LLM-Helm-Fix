{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 179,
	"files_parsed": 1,
	"lines_parsed": 174,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 7,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 17,
	"total_bom_resources": 0,
	"start": "2024-05-18T00:04:45.41093+02:00",
	"end": "2024-05-18T00:04:47.383718+02:00",
	"paths": [
		"templates/flowmanager_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "cd1253fcb8902448a79f98f5dd28ce3453ccf0e178fd65b2a64079cb76f6ebe3",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "fd3054c320ee711854a82792acae8d45e32a13569003eea87b588c72147ee975",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "fef5848b2c73ea2f2509103151360065e31fdbd6e382c49eeaca606bdd79b7ea",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "841c29948dd7d024b408b958d0758cbbc231cd5a576a5ae7a4f0ac715b3bc3c7",
					"line": 84,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "45cfb7477cabcbfdceefebf33114987defc84efb2c0f0680bbcb51e4ded14954",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "ef992d0fce5a23f5ba46c7de67545017e134831a69c47d6b3ed70a2e74d7b508",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-flowmanager}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{flowmanager}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-flowmanager}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-configmap",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-configmap}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "0a81d82af88ef163a83f014351f97f7decf2029cd315292f8623381eda906218",
					"line": 88,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "618d20411e6d4451381f44e24a090086daea8c5c51eb3c8a998e5f03e1ac06d1",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{flowmanager}}",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{flowmanager}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "e99a383817a23920e7bdc43efce19de589c722962f75d993857115829ffa71cc",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.containers.name={{flowmanager}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.containers.name={{flowmanager}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.containers.name={{flowmanager}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "982582d6658716e6cd7e14dca6a39c7429f9d007bd50f050e3532bf440f1f29c",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-flowmanager}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "59aca02b8c668e5753e5e1c6790ea93a33292a025ad8e639abfb9bc550eca549",
					"line": 37,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-flowmanager}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "500d24e0ec42ba4cdb126055929c4622ffd1066f72772ebaa05ac47e3c637bcc",
					"line": 85,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}",
					"search_line": 85,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/flowmanager_template.yaml",
					"similarity_id": "36acfb87c596e16630c018de76f9deebdac5c46e179002019b49926348fdc3e6",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-flowmanager",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-flowmanager}}.spec.template.spec.containers.name={{flowmanager}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{flowmanager}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{flowmanager}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
