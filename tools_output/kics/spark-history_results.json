{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 184,
	"files_parsed": 1,
	"lines_parsed": 178,
	"lines_ignored": 6,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 25,
		"MEDIUM": 28,
		"TRACE": 0
	},
	"total_counter": 57,
	"total_bom_resources": 0,
	"start": "2024-06-26T02:33:30.970288+02:00",
	"end": "2024-06-26T02:33:33.04995+02:00",
	"paths": [
		"templates/spark-history_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "03820c48a0fa2d3ea2cb22bedd537c73d5f5aa7775a41fd84bbe52fe3951d6ab",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "101958b9814a9b8a153d715c6e0f50e1e3c9ccf3da99df9d99f595080b1ad169",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "661390e2cab9d420498b510a7b25138ed0d92f411e027e3470e7061f86ae8163",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "ad5ccfc4d2d980a1ecc2bb100004ca45b7ea866622b8706fd714c8588a858acf",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.volumeMounts.name={{home}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.volumeMounts.name={{home}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.volumeMounts.name={{home}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "47045b4a73b68d20cb83285767f90586a1c1c4d766160a747628481a6b6106d5",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "fb27255fac2416deab9334488d4e40ed64ef748149bb6a14fdedcfa886014b83",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "7f1fde16295b1175097e3b97ff93b381ef0c562670d6694645428e0ce3ba3c02",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "c221361e82816a61551420c94eaf22d1c860854e9d7a698d063c563cffafba3a",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "900513677c7d549513c62d0b46dd0589f8f23ab5c237cd0a2aed053bb9bd0374",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "234b01a9a6bbefba168913a0eb8f3ffac528ab9203c91a853a28692e749d1970",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "94b9c3b6b1bf0c6db7fc52b20025ade7bb63fc8fccb5c024b905c42b9b44f2ea",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "acf22342d0359cf0fcb2e84afda3b834ca936bbe52359f1e0ae613b6a81fdd0e",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "ce98a517cb3181697037bb69db6f8315d37b12a786ff14983367a7205d37fe80",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "ad1adbef6de250689e91801829d9550969f0ce7033f3962b7f498457769490d8",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "df3da51a5e8a580592f13a4373014c63eb91d6daea6b02a8b61a07cc9a45fe7a",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "e767cd1a869efd9b3390b7c5a4a4c7ee8441373c5679e227f9e45e891fad2e8b",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "ef70ae60b82e2d6e9654b8320b46b32fd27f99ba0d11ffbcea9209f0832c608e",
					"line": 92,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "8425995ff74eff1dd620bba4ac91d56cc511471667bd63103a7001eb6b4614a3",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "4662cb05d386efb6c3bedb6c03a5ddf859a2d653108a64ca03507627d9fee3fe",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "7e13d05dc926b33e9b379231ddeb249ca51cf857bb95ce720e64a781693c35f8",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "fff4ecd063cbed4f31e7083cec534ec034d2b574fe8a1e2e3776011fb95bc412",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "f5619c88ae9d7641f2d7c0cc53177dcb4606018e711f8caa83ae83e872030005",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "f17a3752b7af101d5ce01790d14219ff78ca76fdd4c63a98f1946cbaa99636b8",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "4d7bfa8fdfe4a7d6021342ea0121de6754b373bc51bc9813d5363d4e75ad8b61",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-spark-history-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-spark-history-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "1ea751f9e26c8ed899663ccdcd78c63a44677eb904ae6998a89a7e1e5d6187d3",
					"line": 79,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "a6e0948bfc2d8c2051c41507a2ceef75a96014c4901eb757faab72d0706a696c",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "ba95e16cc9b71b9d33f1ba5a817b7dc0636b317c187e81911c57e0f115bb07fb",
					"line": 61,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-spark-history}}",
					"search_line": 61,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "dd237f5745eb3edf3c3d74f8addb44e226ed905062fa9ecc472eee3915ff39d6",
					"line": 38,
					"resource_type": "Service",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-spark-history}}",
					"search_line": 38,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{RoleBinding}}.metadata.name={{release-name-spark-history}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-spark-history}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-spark-history-test-connection}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "567ff5b31cbe0eb49b7dc4578cd9f6606c2f4cc70945588253928581bc1dda8f",
					"line": 138,
					"resource_type": "Ingress",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{release-name-spark-history}}",
					"search_line": 138,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "389f7621ef5cd225c2136bbc0df14f60c0de87ee75c470c70695b4ecf9405901",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name=standard-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=standard-init has resources defined",
					"actual_value": "spec.template.spec.initContainers.name=standard-init doesn't have resources defined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "12f549d408ec210d77caa7671ad1aa7bbbb87a65455933931a200541e0a5d6c3",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "5a33581d7b418c59182bb1e17a19e8d46440ac2db6828cf8a14736af6cf98191",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spark-history has limits defined",
					"actual_value": "spec.template.spec.containers.name=spark-history doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "9b0c6b8fefabb9bdc5772d42103227e4d609adfe338b0d65f56993869cb562f7",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name=standard-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=standard-init should have resources defined",
					"actual_value": "spec.template.spec.initContainers.name=standard-init doesn't have resources defined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "66ae31abcd1ac4a7f3ff494ed93c12bfc41452bfc84ab9c24332243d476fcb5c",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "d5d30ec04febba6184a4d89eb16e3b21a88182336bb6ffd7f2c855944e713268",
					"line": 115,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=spark-history.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=spark-history.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "5bde527a2bd4bb8b45ab5107e11b6744fb6827970aa4c8ad68040835aecf89aa",
					"line": 98,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "c3aed6651bbc85ef27e6b5d24942ff44c50b98727a094943fa971bf253719bf3",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.image tag is not provided or latest"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "61b0b67b88ac926704a99f164633fc17732011ea66c22a90548aa2dd73908878",
					"line": 180,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "c3e3ac4494ca3893daf6cc7e9fe53644d92ff8770bd2474d1def50ff606b5dd9",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{spark-history}}",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{spark-history}}"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "108f62543aec075746ca0e8a2b7a134ef31dbe1e39431c4a78ce83a29a3711e4",
					"line": 168,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "c3e3ac4494ca3893daf6cc7e9fe53644d92ff8770bd2474d1def50ff606b5dd9",
					"line": 75,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{standard-init}}",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{standard-init}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "d45151654a768a6a9e82a46e49ff46f891542f701d59332543f5b004f72162f3",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "0c42626fb24a323aa70c9e4c21d8fd5110a12998a0b2cff1e5abdeab68d0cd58",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.containers.name={{spark-history}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.containers.name={{spark-history}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.containers.name={{spark-history}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "266cfa0a3e5fef96136f90e17da50859602f8c15ea0c82ce3543b79d9f30e8fb",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.initContainers.name=standard-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.initContainers.name=standard-init.securityContext should be set",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.initContainers.name=standard-init.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "39731c4990375c434b859149974fb9160cc4aafa921d9e7fa0ceee128104fca3",
					"line": 168,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "b58260ed07c55694ed64246993cb4f35c82bb768ca9096f4bb0b829f4264b18d",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-spark-history}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "88eddeab9b243ed697d3251642671fd0f41cfedb5019e1ed35804b1ac5678750",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-spark-history}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "7f9ecd949869dfc4f3143a3b1615541ec2e552a0a578c7eecb6c4fee64d17f85",
					"line": 168,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "8a3642849667ea9936d2df215558a02db008f0515bf6da1240282056849cded3",
					"line": 177,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "076beddab48e3d540edb737547f05e20d7969af051d2b00d134abdf25f8f651c",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "9bdfede5d0fa2caaeb507d115561e3be60d65ae4422765ce1dbde8089bd61cfd",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name=standard-init",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.initContainers.name=standard-init has a security context",
					"actual_value": "spec.template.spec.initContainers.name=standard-init does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "654bd99faea1000cfd2693b19d0e63f070f46330bbac1634ef31dd637dc632c2",
					"line": 126,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.initContainers.name={{standard-init}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "f17257bc258f3800cb89901479aaf218fe00bca619917f30e726d5ee8a3c7428",
					"line": 93,
					"resource_type": "Deployment",
					"resource_name": "release-name-spark-history",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}",
					"search_line": 93,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-spark-history}}.spec.template.spec.containers.name={{spark-history}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/spark-history_template.yaml",
					"similarity_id": "9f695cfad9ca8f35c6aee9957efe94efebc9657fa6fe59b6701ffe5bbbc87148",
					"line": 179,
					"resource_type": "Pod",
					"resource_name": "release-name-spark-history-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-spark-history-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
