{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 159,
	"files_parsed": 1,
	"lines_parsed": 154,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 20,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:28:48.995539+02:00",
	"end": "2024-06-26T03:28:51.051788+02:00",
	"paths": [
		"templates/argocd-operator_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "0c0522056798775155703fc5db0210f030996c1defac44e987634827b76b1304",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "f8822a87953ef523386fac85f746a722bea887dfec69bec40a325cb8002efec4",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "40840a1056d46212fe2b79fdd7a6b98cde536acd2f9e6a591d1d1bf190cf4c9c",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "2c48bd6045245abe748c2c20d3eff6fd9520ebe08af2481efac36265a406a9e9",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "2db70594667d1bca3e64c5590389d54b3b3c5d125c6b0e65ebe2a8901efcaffe",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "f466e87e8449a4fae5f5425f567e92e2f03767b6631081f24da6c083784828fc",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "4a82b37095e8cbdbd111babfd54f28b76ec739bfb5c196b549d1fa628e174a18",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "9f9dee15347a4e55aae4420ebcafa8919abb2eaa906320be83f7b103e1311c87",
					"line": 138,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "job-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{job-release-name}}.namespace",
					"search_line": 6,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "3ec9e9507de8e1a276ef545174a3bbab20b5593fedc5b64069a93205d1c175b6",
					"line": 52,
					"resource_type": "ConfigMap",
					"resource_name": "config-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{config-release-name}}.namespace",
					"search_line": 52,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "164224c207f73fcf68501ad40220aa1a1b152d19a2b5d2319af9d33f12c2ecde",
					"line": 118,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{job-release-name}}.namespace",
					"search_line": 118,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "b45bc44f4e824750d7b4dc8b79f1dadc3a835967c0beaffd11296d9292c157ef",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name=create-instance",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=create-instance has resources defined",
					"actual_value": "spec.template.spec.containers.name=create-instance doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "3e2c50a3638e7185541c8c6397251a1af3304f0ce4b052b881a71443f16102f5",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name=create-instance",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=create-instance should have resources defined",
					"actual_value": "spec.template.spec.containers.name=create-instance doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "f52626fc4262203393eb4ddf449fff87c1295ce78089d463013247463a630510",
					"line": 147,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "1ab2effda82a11d2ddea3121954c0600d5223e1a21fab79b24ac09dbc5ec79fc",
					"line": 130,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{create-instance}}",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{create-instance}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "a2ad133c2e13cbad03200bacc9b6dde7d12995f1c730b59d934729f4c0673ec2",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.containers.name=create-instance",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.containers.name=create-instance.securityContext should be set",
					"actual_value": "metadata.name={{job-release-name}}.spec.containers.name=create-instance.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "84990ed5090a3266edaa6b4cb9c60fc056bbf8dbc2793b2f1ed01ebef0dc66d6",
					"line": 118,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{job-release-name}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "95041ee01a2975a17102a824e607bca746cd68fb62ee8622c997e6f7f9b1b6ec",
					"line": 118,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}",
					"search_line": 118,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{job-release-name}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "41dacfe55484fdc0509d95864c3b675b08af4d3e2086f0a5c7383c67f1a1f2f0",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name=create-instance",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=create-instance has a security context",
					"actual_value": "spec.template.spec.containers.name=create-instance does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/argocd-operator_template.yaml",
					"similarity_id": "b9647f609c00d1d1aa1529f35858874360a05cf3f992b1349ae40768e335c791",
					"line": 146,
					"resource_type": "Job",
					"resource_name": "job-release-name",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{job-release-name}}.spec.template.spec.containers.name={{create-instance}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
