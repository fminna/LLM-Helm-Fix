{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 136,
	"files_parsed": 1,
	"lines_parsed": 132,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 4,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 13,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:16:30.867823+02:00",
	"end": "2024-06-26T03:16:33.025678+02:00",
	"paths": [
		"templates/shhd_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "71210900ebeb06620b6604958aec1a8ebcf0be31f0d19cc85fe8394fca97fa9d",
					"line": 121,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "66d96a7e15cfb4109ac2626b1fa4fc5790315ae5b97d33a3852173b07e38ffe2",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "e3a98861c6c4b8e4d5ff62f100b7cb2b7a87904ebb57957d73f85f77e7a197e2",
					"line": 127,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{secrets}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{secrets}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{secrets}}.readOnly is undefined"
				},
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "d681303a9e4080f3e3da5ff8d0760ada199698379248705e21dec79fe316b2e5",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{config}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{config}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.volumeMounts.name={{config}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "d73117283896f95faa1a702b74d9b7388bf3a169aacfb9b3cec069a5b1b46795",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "f4f7b22e3d8ab4716f660faecf92577b312d9a609932a0e80ca59cde168189f7",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "6c77fb65deae838f040d3f4f47c22b57dd0ed83a701b2f0e5d08d13369e19731",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "9877bb82f95ec247689077de18afead343156e757dd65576ac586993e7fcfc95",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "0d0b2f3ad0d5a69eb657f08f4a89152a6b3594f9f6de22fa76f5dc77c9a4b248",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "243cac2f94a8e39daf4d719660778eeac16b8cb3ae2be6dfb4021185d0a28b3d",
					"line": 102,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "517ecc661717664fdff4a6098d3476ca2b41956d22bdcfd40b91c70d7c9fd675",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "2bf5fa244666dfd117873bac0d7bac36bd4b27bd6e63f907becdf731f3f12c33",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "b3b37fab112a969633facab4bb134a077b2e10616b965485bb024d5d0186156c",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-shhd}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-shhd}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "92773631981a8a39c8259695451039140d1f13f900ab74f97ae7042213bb1c85",
					"line": 60,
					"resource_type": "Service",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-shhd}}",
					"search_line": 60,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "6b3dadf62e36f9de05061ac5d18116f0869dad41a0e62154151afe7797bbd6ac",
					"line": 21,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-shhd}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "5e21d46071c18b1e692823c14f03afa9a34017a2efb8527823f82a37c2dd01d0",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=shhd has limits defined",
					"actual_value": "spec.template.spec.containers.name=shhd doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "1b6aaca498f6150665397bd44358d665c61ff33f6d7ade01680080e862454b28",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=shhd.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=shhd.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "e4f746e8d58afa323dcef4e5aa47902b5601e576217d940eeba74f9f00d50a3e",
					"line": 104,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "dfc110380feb0408aaaa87c523fd8c9165986bda5bc8585090f9d679392ce5b0",
					"line": 96,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{shhd}}",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{shhd}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "6d900c91def93765d1b350f522aeaa7d9cbcb57c328f932c2502ce72b104884f",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.containers.name={{shhd}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.containers.name={{shhd}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.containers.name={{shhd}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "706c68741a1c8cadd532362a83bb5107f83ab4678d788373841e4f117a889ea2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-shhd}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "aa3e8f9ded10ef124a654113073757f45c2f08790a24bcfb2d8dfb8b602df1a2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-shhd}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/shhd_template.yaml",
					"similarity_id": "fff65e0eb22f71a7c93f9c158dd2e41b053bc3389f977253e33b03470e2b4f5c",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-shhd",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}",
					"search_line": 120,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-shhd}}.spec.template.spec.containers.name={{shhd}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
