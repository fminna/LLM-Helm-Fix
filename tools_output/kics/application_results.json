{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 62,
	"files_parsed": 1,
	"lines_parsed": 60,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 14,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:03:12.48374+02:00",
	"end": "2024-05-17T23:03:14.409695+02:00",
	"paths": [
		"templates/application_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "13dafcde84f103ed5a2ec40355778362f024aae82d9987f782c510400f6491a0",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}",
					"search_line": 58,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "bf82c51c4b9ca99f087000713a93744a4561b1655fa0dca50a95e6d503806d22",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "de756f5c507fc2408e4a8b95248b3aeaae75a575e9d00e4632c5ebf4d2832564",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "e79f72d3f287f6a710d7f0ddaa4ee27fa19a1dc7c05d7624884246fde0ae3ff2",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "d26ec07f5c9412fb8e7f40489279c887b4d70ae66bcecb6e5b9b035f681bb71f",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "85a0ef404af475dfc01a7ba1d1db2472e0f305551fd97cb177dcd6733b8ec111",
					"line": 45,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{application}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Service",
					"resource_name": "application",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{application}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "11b84907faba6951dd6886301edf575b96f0d5a021ff820f3fc894ba89233d12",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{application}}.namespace",
					"search_line": 33,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "24d93cac6b23e0770856cab382625da05665b6e0377a7e69d62754dcb60d428f",
					"line": 48,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{application}}.spec.template.spec.containers.name={{application}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "494a42a36be773a3a9fb4969b838599a144035a0be57d6915b6e57a6c7d75282",
					"line": 42,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{application}}",
					"actual_value": "metadata.name={{application}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{application}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "3a036e1ec8cbac2f9ee187d1ca8132fd727465e77fa1cfedcdf94fe45040c4c9",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}.spec.containers.name={{application}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.containers.name={{application}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{application}}.spec.containers.name={{application}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "e985b054541fe1ed30ae9f1b37ca690def347329e832de34ea043f15fe9f3942",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{application}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{application}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "03e20b29edee6ec7e4b31cb92e3415d023ad9363034bdf55e99a0d2ba21c766c",
					"line": 33,
					"resource_type": "Deployment",
					"resource_name": "application",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{application}}",
					"search_line": 33,
					"search_value": "",
					"expected_value": "metadata.name={{application}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{application}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/application_template.yaml",
					"similarity_id": "a67e0f0e0e3cceb8d9574666e429f09d9d6b0937c907d046ab85cb6386a2a9c1",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "application",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{application}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{application}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{application}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
