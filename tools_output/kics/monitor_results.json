{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 78,
	"files_parsed": 1,
	"lines_parsed": 75,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 11,
		"MEDIUM": 11,
		"TRACE": 0
	},
	"total_counter": 23,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:47:50.584521+02:00",
	"end": "2024-05-17T23:47:52.475332+02:00",
	"paths": [
		"templates/monitor_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "1bbb5e1b5bc2a8f4c95a8b6f85659506d5387320e93cbfd023a7006ccdb8efc5",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "24742d4b7496d04308b8555b3ffafd4e5b9a4e5092eb264121dbb9416b10e6ae",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "368202897a3b1dbb0d0f3f1aeb2982a7ac41b412e01c38e288281928f801757a",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "9ab6544ab3d3f54917eac3576bdf79273a632e882e2818ef1a160b38d74bd5ae",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "f232ff7a95c56569bb96f306a3c1d013fa87d1c8b7601f9744d254cfd7ab8d49",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "34ff1471ebbc80209299471cec1a632903b2f1025e032f44dd9dac11e1476891",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "250473d7c5dc0979c2e37d3f0c58e9f9a23f091c4ee2ab4f724cd79ace5dd77f",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "3d88cfd6ae2953636c295fcdee3fe8e96eaf8b00e4c5394b4e53d04049318fe2",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "e42ca39d2190f78101783baf656ca19bc1a859e305ae8151ed8791f980675979",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "Service",
					"resource_name": "neuvector-prometheus-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-prometheus-exporter}}.namespace",
					"search_line": 22,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "neuvector-prometheus-exporter-pod-secret",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod-secret}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "a5ff4f113395db02d2313aba51595ec9ba8222eaae6cbfafa330e17a7ed63857",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name=neuvector-prometheus-exporter-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod has resources defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "e0140ef4e6c83aab82865177ac32d5bd8cded791002511af849a553e70db12e7",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name=neuvector-prometheus-exporter-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod should have resources defined",
					"actual_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "c9158252306b6743ec43b5235a697aae4c405bf7c2700a95f6b0cc65fb13bfe3",
					"line": 67,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "f536d8fc46769a560ac65c30cd3ebefa7ba8bde27a64217a7b60dc0caf753066",
					"line": 55,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.metadata",
					"search_line": 55,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{neuvector-prometheus-exporter-pod}}",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{neuvector-prometheus-exporter-pod}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "386d9de7f3fdd4e9108b35ac04ca35873c657a4d38d4c671a7994bb192606429",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.containers.name=neuvector-prometheus-exporter-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.containers.name=neuvector-prometheus-exporter-pod.securityContext should be set",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.containers.name=neuvector-prometheus-exporter-pod.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "f1a7d4b2eae3b28c2e52ebbf9c9a640af0beb2ab75126f20fa287879bbd65bb7",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "4e24c2fe5773f11cd6a50a8d46812ddf618cf0a9091e85e552088f9757043dce",
					"line": 43,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": 43,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "419efffb207df23183bf39599a7e8352282b584b37305e521fc309f5001bacb1",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name=neuvector-prometheus-exporter-pod",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod has a security context",
					"actual_value": "spec.template.spec.containers.name=neuvector-prometheus-exporter-pod does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "9d25f8cc082397bb103aa2dec1000da3f52f1a0ea374fdb9a82981b5c03852fb",
					"line": 65,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "0f3189e26c7c35d24130b22e497fb8e1c31f45bcadfc30d247a25129930f8a9c",
					"line": 74,
					"resource_type": "Deployment",
					"resource_name": "neuvector-prometheus-exporter-pod",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-prometheus-exporter-pod}}.spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{neuvector-prometheus-exporter-pod}}.envFrom.secretRef' is defined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/monitor_template.yaml",
					"similarity_id": "f9caa830663cd2f9ddb6eee3726cc461229cdb2ea1d61b8c514767b89e02125f",
					"line": 31,
					"resource_type": "Service",
					"resource_name": "neuvector-prometheus-exporter",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{neuvector-prometheus-exporter}}.spec.ports.port={{8068}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{neuvector-prometheus-exporter}}.spec.ports.port={{8068}} has a Pod port",
					"actual_value": "metadata.name={{neuvector-prometheus-exporter}}.spec.ports.port={{8068}} does not have a Pod port"
				}
			]
		}
	]
}
