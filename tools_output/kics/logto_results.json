{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 127,
	"files_parsed": 1,
	"lines_parsed": 122,
	"lines_ignored": 5,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 15,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:28:00.492897+02:00",
	"end": "2024-05-17T20:28:02.475463+02:00",
	"paths": [
		"templates/logto_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "1610c312728cfc70a38982cc3c6bb874eebdd44219dbec67a4d638f76bf307b4",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "abd00ac04fa4c795e357c0124fc6c3ba310a160f3f0617db982fbced949cac22",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "893d45b849f448227d39751a075985ad190eef81e5ae34b84dbfa9c9ea094663",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "085f02bccf02291d6d0f2f20e2b8748def32e680e4a298f60ba5a6c0499e1b57",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "9ae9d1451dba869add4265a8696ba6835d01962149aefd30519715c68dfe4ada",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "bb6a46c7f3694a59663f330a808be3eeced05af3c7a359624e550553b8ae43ff",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "b8c768d20a7d4e5e4cdce5df73500885bf56352dd5a628ad4c31df94d6ce6187",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "7516ed3d5ff50c7f89a0a85c5b84f22fb00b49de52fb31c67e139a1f00374170",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "6b7282aab74282b0f27aa3633cdaaa26436fd6c9e500fd6afd937c2943c4c9f5",
					"line": 99,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Service With External Load Balancer",
			"query_id": "26763a1c-5dda-4772-b507-5fca7fb5f165",
			"query_url": "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "2e090344",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "2d2bd71e841fdffbeb46b0fc3cebf18ddb5e7a04c6dd81b7b30f17d12894347a",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "release-name-logto-admin",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto-admin}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				},
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "0e7926980039c2c7f1cf47c725dc6670cd6f7e7d994da9888a1b6ab4c8f8eae6",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "release-name-logto-core",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto-core}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'metadata.annotations' should be set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "98334e610701d89e37ac70f28225e682729fa8c7e086a483e516a9e2a646795e",
					"line": 81,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-logto}}",
					"search_line": 81,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "c4f5532e87f8140c669bcfb76eecdcc6a891c163116374e6e7c9a28559b8393e",
					"line": 22,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{release-name-logto}}",
					"search_line": 22,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Secret",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Secret}}.metadata.name={{release-name-logto}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "b3bdd3322b694908ea148b5dfe48aa00eb8269fe8e1074cfa3f81b3f6b420f16",
					"line": 59,
					"resource_type": "Service",
					"resource_name": "release-name-logto-core",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-logto-core}}",
					"search_line": 59,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "da285080f91f02446374d6cfcf59308d75701edfd01531a9aafdce91258cbafa",
					"line": 37,
					"resource_type": "Service",
					"resource_name": "release-name-logto-admin",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-logto-admin}}",
					"search_line": 37,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "62693d973e75530ebb2d3fc431f147863e27be845721595c0e0d44c443f6d901",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=logto has limits defined",
					"actual_value": "spec.template.spec.containers.name=logto doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "9d93ee557691290db9f71ae81f9df862c24aead48be28180418366cd73cc1a37",
					"line": 125,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=logto.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=logto.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "0e7409fdc1a5b90907622593593fb67226ee37528ae246aabd1cc9c11cd292f4",
					"line": 109,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "2471b6749cb98d90a4720c6201f44815594c2e02a881e22b3d01cbf66941df80",
					"line": 95,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{logto}}",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{logto}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "7533940ba15742354a18df437437da55093f3d4642661575c728787e179516c3",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.containers.name={{logto}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.containers.name={{logto}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-logto}}.spec.containers.name={{logto}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "2daf90dae980f3cd9e93b50ee1f0a00edf24e06f3031449fb3e2ff42f926764e",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-logto}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "b8cfe180ba33dc26251aa74cce5adba93e70d2f0734132f2aaf7c82cbcba0dd1",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-logto}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "89b1e40f9c6d72376e4bf6ce2ddd77a1c0e1108499581b75a59c893b3004875c",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}",
					"search_line": 106,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/logto_template.yaml",
					"similarity_id": "42c0fe48728e6ac23c533a759ec77ce095da5a62da6e30d0a1008e2346324182",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "release-name-logto",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-logto}}.spec.template.spec.containers.name={{logto}}.envFrom",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{logto}}.envFrom.secretRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{logto}}.envFrom.secretRef' is defined"
				}
			]
		}
	]
}
