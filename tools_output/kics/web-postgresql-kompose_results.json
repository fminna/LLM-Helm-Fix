{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 240,
	"files_parsed": 1,
	"lines_parsed": 233,
	"lines_ignored": 7,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 22,
		"TRACE": 0
	},
	"total_counter": 45,
	"total_bom_resources": 0,
	"start": "2024-05-17T20:20:19.416036+02:00",
	"end": "2024-05-17T20:20:21.381431+02:00",
	"paths": [
		"templates/web-postgresql-kompose_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "7f4d1523dabdb56ec655d0ec857e996b571f0c30268fdeb141a556cfc2aea922",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "8a1446222dd5e5cd9a26f9790fc0556dae986948cdc3670c1489959c36c0e821",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "596c9089025a117173776670a68dda66472512ba2982de17a8a8874fb27478c4",
					"line": 120,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql-claim0}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql-claim0}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{postgresql-claim0}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "5555f3a16e5a30c4514904f628453a2bc2779d33dbdccc3fd7a26b5883e6acd3",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "a94ccb4e641fcc9cad42124af644b4b30ed97bb15d28bbe6f51037c4f5fb7195",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "bf9120d16deb11560fad63ce32f748428803924ade1bf7489350495c25ebae6b",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "dfa49da44356dbefabaa34625eb4722e72b4f4687dd388b7a62b763c29bd0ed8",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "cd72f31f2646d4c8524d40c6ac62be3a64fc1e245eb43f39f6a044bc2cfcea62",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "a9935b09068bb7999883352c0b549cf2ed9a6fa6f360b0e4c070c5a11142c312",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "e7c3f81bc26a435b0a714a9a12432609380a89914ca6c1a4b68deed3e3c0611b",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "954307b28018cd4dbd73ae6633bc65cab53ce0c2a956dfbcfeb71b590f38fd50",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "b064bc682c616b80bbe824a309e7dc848b07ee1c9085eefd9bbc5bc997706c14",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "a4dbc26064bd05469f1a4656fd129decf39a79bb225b837f4820a78409ad1fee",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "ee8cb5099110b18bece9080d046c0aeb20d57af2ea67cdfbc0c4ac9a59dbe980",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.readinessProbe is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "f6043684f3df141553702bffd9d1b0d1d339d16daafaec3e4f38739ffc26d037",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "bb1eed2575504d95efbf6a02b98a6d37ed50a57cb45bc394f5cbee13ca88e276",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "28d64e396d69bf25a990d12cf9f0606c4052b84f0e5826764f98779fef632cae",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "54d35ed6e4689d5293e4e1805e4ecda97d7d200327d7981b7da9a1d44e24a21a",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{web}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "0dd33392c2df4e02a9a1d668f8e98ce9515b472e33b076296807cfa0a59ff06a",
					"line": 106,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "44120660c40faf1c62892b2fa7dbe255674cb302a7a2382764168049b591e44b",
					"line": 90,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{postgresql}}",
					"search_line": 90,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "6c949637ae1bcedc80607b9ab1969ab87067a7d507a54d12f25b993cb54ae914",
					"line": 19,
					"resource_type": "ConfigMap",
					"resource_name": "web-variables-env",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ConfigMap}}.metadata.name={{web-variables-env}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "e2949dcdaf37eca1c04800119ebb3108fd635dfd56e447b93f707ca7bfb40230",
					"line": 47,
					"resource_type": "Service",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{postgresql}}",
					"search_line": 47,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "a355988771e7fcb244dd4e85d01a719034da28c7731631885f598954082b1435",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{web}}",
					"search_line": 139,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "f530e49b86f8da46a2a22a8ebf91e3e61db0d016943696e5b8e9564c582e09d1",
					"line": 69,
					"resource_type": "Service",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{web}}",
					"search_line": 69,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "a7c7ac86aa2b0fe7f144d35629799d1f388fbd8536aa2fb8d111dd5c164d4c49",
					"line": 225,
					"resource_type": "Ingress",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Ingress}}.metadata.name={{web}}",
					"search_line": 225,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "45a2ac7e56fd38cdb77ad054bb9fcf4d750bf621f237b820aeb4285fb5688d57",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=web has limits defined",
					"actual_value": "spec.template.spec.containers.name=web doesn't have limits defined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "f053eae0b485a4739c0bba1ab2bf603bdbc6279aa8b511331f17b24390c84e77",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has limits defined",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "ed30e7ca95a7d6d56c7192887f641d119c816fc949bfbab0df7b1b02f26342d7",
					"line": 117,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=postgresql.resources doesn't have requests defined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "e016353cd65d141910e550bd457e0cc2ae10045e9c66ef0b0949bf9cf1223370",
					"line": 209,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=web.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=web.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "ee537e2ba6a7b5176a11c7f65c314a06b20bf653a44aeec2fbec55a2683bff0a",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "892a5f4fba8e5da1ecafa567e5e655cea626df4ebd66a953dafc16b6c782cf4b",
					"line": 205,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "adb2ab6b5c4c75d9cdc3f3d588c98237032fafe80950811f08decea8a0fb3c3a",
					"line": 100,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.metadata",
					"search_line": 100,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "6bd0a570867930cd84d3928870883a52d593adae9f8b65ab1830a0f83b825d3f",
					"line": 148,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.metadata",
					"search_line": 148,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{web}}",
					"actual_value": "metadata.name={{web}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{web}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "fc34688f88ccaefbe1ae6f119c5a687f563fb9f52bee4a8acffeeee98fd0b03f",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.containers.name=web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.containers.name=web.securityContext should be set",
					"actual_value": "metadata.name={{web}}.spec.containers.name=web.securityContext is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "f937cb7e8fe205614beca6e897a39eaf0facbf9acfa52c6dc540f8a3d0539daf",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext should be set",
					"actual_value": "metadata.name={{postgresql}}.spec.containers.name=postgresql.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "7e1cedca20933c88d7563a2506a730bedb0c4e31971037d11055a1919d6be069",
					"line": 28,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgresql-claim0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql-claim0}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql-claim0}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgresql-claim0}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "1b082f5dc0c93db4dd937cccdab8b28c17ccdbc4cd6ab1b0adf989833191c215",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "10b0104c0f881d934d027e0e22ae905b680be75dd23f3b4b49c87a59884e94f2",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{web}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "da4aa371d38ffd0b08dc706c171f0f0657287d114c12645d9c93670ef87c0c84",
					"line": 69,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{web}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "4e66c565ed45a9cdef7861b0aafb1f3f66f622df50655ffb048690438802d7c3",
					"line": 28,
					"resource_type": "PersistentVolumeClaim",
					"resource_name": "postgresql-claim0",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql-claim0}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql-claim0}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgresql-claim0}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "14c3472f2ef561287ef09109f7405283ec078456f180aef2134f40347085e68e",
					"line": 47,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{postgresql}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "dbd63cb430fdea770365cdcea321cd4794124a4815687127ae083325499a5e53",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name=postgresql",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has a security context",
					"actual_value": "spec.template.spec.containers.name=postgresql does not have a security context"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "1a78f7c605fc44c077fffa076efe129471e065f48be6740d2da209afde4fe0e6",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name=web",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=web has a security context",
					"actual_value": "spec.template.spec.containers.name=web does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "21fa7143f402e8b2a761c4e9dba1e04829d832df54a01d7bd15e0e0f40c42937",
					"line": 139,
					"resource_type": "Deployment",
					"resource_name": "web",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{web}}.spec.template.spec.containers.name={{web}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/web-postgresql-kompose_template.yaml",
					"similarity_id": "bc01071b548a946705a30d16b99b84a27e6cad4c29fd11af49e1f29c4320ffd7",
					"line": 114,
					"resource_type": "Deployment",
					"resource_name": "postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
