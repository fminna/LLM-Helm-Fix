{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 96,
	"files_parsed": 1,
	"lines_parsed": 94,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 1,
		"INFO": 0,
		"LOW": 9,
		"MEDIUM": 9,
		"TRACE": 0
	},
	"total_counter": 19,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:51:36.985866+02:00",
	"end": "2024-05-17T23:51:38.732437+02:00",
	"paths": [
		"templates/node-red_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "c5e063d33af427e909af46ef33e8ebecce2219ffdb9338fda00a46fb6326b019",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "d2326d5f4938c1af6f2eed90b186283f93c619fe36250753466dcb4cc7244324",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "c46f866fb5e698b8d0418a6df59ce2135a64b7cc7835679eb1cec23c29f0e3a9",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "14319d1e06aa9b6b80c8c8d5ebd0d0f5dacec762865042753e311522b2db488e",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "6ce3217433f4762e8ec03f969ad8395470ad5316532aa40b51cbe5b713aba1ab",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "b16ddea7b25c736aa59fc704a4872568c63f5b9bb6148b3af114d2314e6820f1",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "63b3ae12fc3442b61031d76bbadd3252162ea6215f94672c7ecb38d215a0152e",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "1264cd5c709599b5adcee53923c27f8159a04c5e21f9600d0d3166bef0bbb287",
					"line": 53,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "f2b8fff96925bd9420b0464a3eedc0b1121e88f78346ca31f2a40edee74dff15",
					"line": 29,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-node-red}}",
					"search_line": 29,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "Service",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-node-red}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "d4bcbd357dfd0130dcdd8b93a5048917a88baf8252a1f8d600e8303ba4547b46",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name=release-name-node-red",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-node-red has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-node-red doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "83f6ea977c35c6968cfdf5899012a428252e30c029adffd4aa5c962e65c9c790",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name=release-name-node-red",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-node-red should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-node-red doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "4b98c6cf4c870761b5e03d746b7637ea9c3ef395880418bd71f41b17b907a83f",
					"line": 59,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "def5f331dc7e9b53213a31c50393c969eb3a72283308996d73562e7e0d024850",
					"line": 46,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-node-red}}",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-node-red}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "7527a8ea6fafae5661cccb047f3db853dd99a3f87c2bdb3c8bde0ad8f5a91c1e",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.containers.name=release-name-node-red",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.containers.name=release-name-node-red.securityContext should be set",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.containers.name=release-name-node-red.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "cfca062eefe6c81176e3f6c405860a31086ef4de624d8b54e219b78aeafdec17",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-node-red}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "657aff094d0e1ca63ae8e5341f5c1111275261e032ae8d2e11fdb2dd077701a2",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-node-red}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "65f55f5a4f349491f60e3682f63c6e86c2b3817484d19f19b91148826ce1b9a2",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name=release-name-node-red",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-node-red has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-node-red does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/node-red_template.yaml",
					"similarity_id": "81e5fff5e6de5fcb4b89bf65236104d6bb9efc921ee575d7d236b58ff165f177",
					"line": 57,
					"resource_type": "Deployment",
					"resource_name": "release-name-node-red",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-node-red}}.spec.template.spec.containers.name={{release-name-node-red}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
