{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 69,
	"files_parsed": 1,
	"lines_parsed": 67,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 7,
		"INFO": 0,
		"LOW": 8,
		"MEDIUM": 10,
		"TRACE": 0
	},
	"total_counter": 25,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:25:42.602649+02:00",
	"end": "2024-06-26T03:25:44.667741+02:00",
	"paths": [
		"templates/coroot-node-agent_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Is Privileged",
			"query_id": "dd29336b-fe57-445b-a26e-e6aa867ae609",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/#privileged-mode-for-containers",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Privileged containers lack essential security restrictions and should be avoided by removing the 'privileged' flag or by changing its value to false",
			"description_id": "55f59030",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "65ac75f2ec4a747ca2975c10a9a0c64744da77571e0fb3ce08e4ba192984ee93",
					"line": 45,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.privileged",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.privileged is unset or false",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.privileged is true"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "aa8f7a35-9923-4cad-bd61-a19b7f6aac91",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "e8553157",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "7dccff07e058f17ff51f90ca834d245dc9cec5f5f44bd0edcbea2f0887876b0f",
					"line": 68,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.volumes.name={{debugfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-coroot-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys/kernel/debug' mounted",
					"actual_value": "Resource name 'release-name-coroot-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys/kernel/debug' mounted"
				},
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "d40e78178182585c0248389efcb1581a33f9edb13f1363e5c7efa2ad48147d05",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.volumes.name={{cgroupfs}}.hostPath.path",
					"search_line": -1,
					"search_value": "",
					"expected_value": "Resource name 'release-name-coroot-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' should not have hostPath '/sys/fs/cgroup' mounted",
					"actual_value": "Resource name 'release-name-coroot-node-agent' of kind 'DaemonSet' in a non kube-system namespace 'default' has a hostPath '/sys/fs/cgroup' mounted"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "4a4e95876b04d4458d234b40569f16ca43f00a13ae421a175b962848aa1bde94",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Shared Host PID Namespace",
			"query_id": "302736f4-b16c-41b8-befe-c0baffa0bd9d",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Container should not share the host process ID namespace",
			"description_id": "c34092eb",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "4cce94f3f9301f178c347fabdd0bbf1bc2de6a8fe64b3dc57132c6349c883e37",
					"line": 39,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.hostPID",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.hostPID' should be set to false or undefined",
					"actual_value": "'spec.template.spec.hostPID' is true"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "5308a7a8-06f8-45ac-bf10-791fe21de46e",
			"query_url": "https://kubernetes.io/docs/concepts/policy/pod-security-policy/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "73339cde",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "b4304bf84bf20e26b37dd4d04ab8634a5bc0a679d7bef1d0f4076d00302f2f0c",
					"line": 64,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.volumes.name={{cgroupfs}}.hostPath.path",
					"search_line": 64,
					"search_value": "",
					"expected_value": "Workload name 'release-name-coroot-node-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/fs/cgroup' with hostPath",
					"actual_value": "Workload name 'release-name-coroot-node-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/fs/cgroup' with hostPath"
				},
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "ea351b079f8b6eed6138e256460282d76cf73be985f3c7756e4225fc52eaf0b0",
					"line": 67,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.volumes.name={{debugfs}}.hostPath.path",
					"search_line": 67,
					"search_value": "",
					"expected_value": "Workload name 'release-name-coroot-node-agent' of kind 'DaemonSet' should not mount a host sensitive OS directory '/sys/kernel/debug' with hostPath",
					"actual_value": "Workload name 'release-name-coroot-node-agent' of kind 'DaemonSet' is mounting a host sensitive OS directory '/sys/kernel/debug' with hostPath"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "383195ac4ddb5cd4d240b52a57bf4ad1f0646017733797c50aeab490a75e10ae",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "61df4cfbaa4f3709e58fc69f39c383a84bb036d50d932278fc5853167c73501d",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "8e2bc99d54cdcebb486282588bd34ace4cf86783462d598cc2158112eb8be305",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "deee28d7b1a8491a39843128d3d589a69c24755a9bbaf323b515f0cda485b98f",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "191e6cbc515657b9146be77bde77fa6af5fb63a009e1f6f780a1913fa859e1a7",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "118e6a27a28087deea4bc0e157a0883d2b2623e2598a49a2ea59629e65125132",
					"line": 43,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "9b789781a873dfb14bc826ed99b5be7b409ccd008f52c4f9619bfcff89f3052b",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "912711f3854ffef1c5ccadd33266e41a1a2e21df1e1731f15060318100a02654",
					"line": 35,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{DaemonSet}}.metadata.name={{release-name-coroot-node-agent}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-coroot-node-agent}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "5054a5f8796bf8801b2d43b6713025a688085154f26ec64a5b80a928a7380812",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coroot-node-agent has limits defined",
					"actual_value": "spec.template.spec.containers.name=coroot-node-agent doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "b3be13ea42bc5dd097898b3f58cdebecd4d33382cdf1cae5651c0c654578dea9",
					"line": 60,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=coroot-node-agent.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=coroot-node-agent.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "42188e1adc300548b421b5ffb9dbefb2f9acb5a8d3c96b29a91482bb70c5dd40",
					"line": 47,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "f090217d8536e20cf2c6b5cad8dcab9724d3a8a984aa9bd9f535fdb7639fe40c",
					"line": 31,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{coroot-node-agent}}",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{coroot-node-agent}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "62e7fc499dfebaf61826746eea2e92b4e6219599ead8715346fdd6b5e5e514ec",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.containers.name={{coroot-node-agent}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.containers.name={{coroot-node-agent}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.containers.name={{coroot-node-agent}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "67ff77c6990e4898d1c4c36700bbde417be311656e1858c30ad013d82edf6727",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "fde72013bd88d9270bf71ebf5499695780a0b415e1d8ed9e9988ab670c7e3826",
					"line": 6,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/coroot-node-agent_template.yaml",
					"similarity_id": "2e0ba14289942728a1b865d3bbab5cfff30f6d075f58f4276be892f4261f3c98",
					"line": 44,
					"resource_type": "DaemonSet",
					"resource_name": "release-name-coroot-node-agent",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}",
					"search_line": 44,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-coroot-node-agent}}.spec.template.spec.containers.name={{coroot-node-agent}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		}
	]
}
