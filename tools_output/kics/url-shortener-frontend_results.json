{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 55,
	"files_parsed": 1,
	"lines_parsed": 53,
	"lines_ignored": 2,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 6,
		"MEDIUM": 5,
		"TRACE": 0
	},
	"total_counter": 11,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:13:03.365104+02:00",
	"end": "2024-06-26T03:13:05.454558+02:00",
	"paths": [
		"templates/url-shortener-frontend_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "19638c3700ed06017f5f5fbe4288d177bae9c9e9db8e74db5b607bc82de94fef",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}",
					"search_line": 50,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "c51c036f10c3d9ead960cd59a6364aa977c32673953b7a2f4192df18e31e4c1d",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "19ebaa28-fc86-4a58-bcfa-015c9e22fe40",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not have extra capabilities allowed",
			"description_id": "719acefd",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "2e2334b62f1306e14250dc52c9f9c95131c1d142f89d99ae680efcf1dbf6a770",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.capabilities.add",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}} has no capability added other than NET_BIND_SERVICE",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}} has a capability added other than NET_BIND_SERVICE"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "c46399ad4cccd779713f8f04714dd67919a543dcbf6fa61b400a49e7a4176799",
					"line": 36,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "46f50840a0a5654c9b0dda25f1dd470ca9ff4b0435abf4b15c66cd8e11ccab8e",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "7b4b62f0dfd2112d6359cff628bf44e5609a893207b9db09aac381d2bf5e3a6c",
					"line": 38,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "69a95c77dea089ec98f68d9179804d032a1b6fed88a08b8717ea4b1f2c487d86",
					"line": 30,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{url-shortener-frontend}}",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{url-shortener-frontend}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "ff6bbfd797a5efb6f4c95f54c9698c6f6ab587bf985aee0d2f866224043affda",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{url-shortener-frontend}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "743bb5160be1b73ca4136f949715160b8862dd9640a609e255958c1fb9fd7a1c",
					"line": 21,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}",
					"search_line": 21,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{url-shortener-frontend}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "54e8909caedaacf7523dafbe375b3c1cfcf7a730b720bfea01dcd6cabcd11423",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "url-shortener-frontend",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}",
					"search_line": 50,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.template.spec.containers.name={{url-shortener-frontend}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/url-shortener-frontend_template.yaml",
					"similarity_id": "afca1cb557f32d81e62b70ba36165248cd26397447ce56a1466f11fff46379c7",
					"line": 13,
					"resource_type": "Service",
					"resource_name": "url-shortener-frontend",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{url-shortener-frontend}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{url-shortener-frontend}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{url-shortener-frontend}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
