{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 261,
	"files_parsed": 1,
	"lines_parsed": 258,
	"lines_ignored": 3,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 3,
		"MEDIUM": 4,
		"TRACE": 0
	},
	"total_counter": 10,
	"total_bom_resources": 0,
	"start": "2024-06-26T00:47:04.272274+02:00",
	"end": "2024-06-26T00:47:06.306152+02:00",
	"paths": [
		"templates/littlelink_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "6e79aca5882bd61a6dc4c0c2d5b25169fa7210a2cca57a43960b82610e71a933",
					"line": 174,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varlogs}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varlogs}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varlogs}}.readOnly is false"
				},
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "efa9eff5ad0b9ab37d7b80908e06cf03aa0f194bb4092e38522eed2dbcfd83d2",
					"line": 165,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{devshm}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{devshm}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{devshm}}.readOnly is false"
				},
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "ad5328de057ff5023abd5df7990c184e91cec95bbe884316ed49cae442ccf50e",
					"line": 177,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varrun}}.readOnly",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varrun}}.readOnly is true",
					"actual_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.volumeMounts.name={{varrun}}.readOnly is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "bb1506ce0eb61b48d2a8211caf148e1b4c1f3ab69ad95928788b8ef54bef9e0a",
					"line": 217,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.securityContext.runAsUser=568",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-littlelink}}.spec.template.spec.containers.name={{release-name-littlelink}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "6da7878077dc4c1a53976921c39692ae6269c99a07fabc1063f065ed87e09ef9",
					"line": 43,
					"resource_type": "Service",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.namespace",
					"search_line": 43,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "13dd733df14a877fee100030648ead2c23c77e3c24fa47da75b6752efddbe960",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink}}.namespace",
					"search_line": 72,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ConfigMap",
					"resource_name": "release-name-littlelink-config",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-littlelink-config}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "cf6f77b29b9b51478a652bbe4f7e171c6de955d1f7761a369fbe06e7ae676325",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-littlelink}}.spec.template.metadata",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-littlelink}}",
					"actual_value": "metadata.name={{release-name-littlelink}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-littlelink}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "49903cf999a81e7b9cdd6692a186727e6b8d1986c4a611e13255d04b4e6f5f3e",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-littlelink}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-littlelink}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/littlelink_template.yaml",
					"similarity_id": "6af0c52ac6faa91146c581d8c0f09b37e7852440eec091d2475c1f661b68b292",
					"line": 72,
					"resource_type": "Deployment",
					"resource_name": "release-name-littlelink",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-littlelink}}",
					"search_line": 72,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-littlelink}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-littlelink}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
