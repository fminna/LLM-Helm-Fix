{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 268,
	"files_parsed": 1,
	"lines_parsed": 259,
	"lines_ignored": 9,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 0,
		"INFO": 0,
		"LOW": 5,
		"MEDIUM": 7,
		"TRACE": 0
	},
	"total_counter": 12,
	"total_bom_resources": 0,
	"start": "2024-05-17T23:35:48.05173+02:00",
	"end": "2024-05-17T23:35:49.973188+02:00",
	"paths": [
		"templates/rke2-metrics-server_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "bbe61e0c10c9b1dd818a1677aa060882fb7f48216b7b5187294e3b707b5f3f38",
					"line": 202,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser=1000",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.securityContext.runAsUser is set to a low UID"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "2344eedbb4a40b4fafe8d14dcedf6732caefe0405518268bc1d0439828a98e53",
					"line": 194,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "942a9a998e1e1b2e4ec0841b988d6c0990bd19968ea212ab867e9d6dbd921aba",
					"line": 189,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "b2fb63bac6e75c4144c61839e1601a94c5245b120cd3d9b7c9f119b1c889c5f8",
					"line": 142,
					"resource_type": "Service",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.namespace",
					"search_line": 142,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "18bd6d5b1eb240c27528b15e6a79fbde6d5dbed88a41f781c9a219b06448cff8",
					"line": 120,
					"resource_type": "RoleBinding",
					"resource_name": "release-name-rke2-metrics-server-auth-reader",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server-auth-reader}}.namespace",
					"search_line": 120,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to kube-system"
				},
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "0e4d5f121eac1ebe5d463a0f60d05af99fc0a651f847572d9ab6e24ec4280dcc",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.namespace",
					"search_line": 168,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "65b24c254688e1c2f90fdff5923147b133a8be4339ba6ad55d2b6cb6e0dddfbd",
					"line": 236,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=metrics-server has limits defined",
					"actual_value": "spec.template.spec.containers.name=metrics-server doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "90511afb027d4c7faeeca28f9b921e3168938eb9dd63605a175769fd75c3a8e6",
					"line": 206,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.spec.containers.name={{metrics-server}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "5e874dce7eb8672899aa6cff482b0a1f1c336eee36f3b62ca646326314c0785c",
					"line": 184,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{metrics-server}}",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{metrics-server}}"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "e159c15a744ee416ed1d8163b643ff79ea17250394b081d7c4a790ff29d48abd",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/rke2-metrics-server_template.yaml",
					"similarity_id": "ca5baf4425b08379df0e636670f31a081ee07f1231adc3e3e390f0fe2f565144",
					"line": 168,
					"resource_type": "Deployment",
					"resource_name": "release-name-rke2-metrics-server",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-rke2-metrics-server}}",
					"search_line": 168,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-rke2-metrics-server}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-rke2-metrics-server}} does not have a 'ResourceQuota' policy associated"
				}
			]
		}
	]
}
