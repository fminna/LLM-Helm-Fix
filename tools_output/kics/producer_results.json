{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 114,
	"files_parsed": 1,
	"lines_parsed": 110,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 0,
		"LOW": 20,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:10:01.904363+02:00",
	"end": "2024-06-26T03:10:03.789487+02:00",
	"paths": [
		"/usr/local/opt/kics/share/kics/assets/queries",
		"templates/producer_template.yaml"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "85909f9cdc15b101e1edd34e38039ffe71aaa6ae7303eb860dc04c6a9938d35d",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "ab0b65b3062e9b30aa00cb168aae5496f3a5af425f42243f1669f5e58d96ce4f",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "65391011efaa4bb6e343a5926d6464aa7885a5c4d7e1d8d66cbe5d04970e9570",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "d441cbda1c4b8eae3932086af5bc93cddec7b3eca8807e9cabd43e67fae26319",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "afeaacf6482f556034488ae207091d8bdec34a172762ef2436592e5c5a8e49f5",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.runAsUser is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "4b3a38b56f22076844124587fd3a6d115d73f7004010d3ffc32ec6e75b882031",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "ec428dabfdf7e6305fb6d9bb88692dad8b492ce5efa7f57e59f306593944e62b",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "975bf09eedd6cf54f121e031523ceedd157e1b2dfd0fdc5e4ed52a362da12fcd",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "67ffa338da2bfdadc1effc81d6640101330ac1c3f3334646135c199bc9f4a949",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.resources.requests.memory is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "db6e0d38a207a15c931f58bae6cd83fdb556288aa37c265d07ea5433db3449c4",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "6ad3e5d3c18d8302e7c0a213c4067442e22dbb5cfe94a903b991b10b1374a380",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "4445163f29f583f45dd16138a6a75b0c517662d5ec667550cd6aa2af7c1e2082",
					"line": 63,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "28c0498a",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "fd2d3ae9a6f5b9dd772bb7194992c47abe5f4fee5a3157210d71f09ad91743ee",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.readinessProbe should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.readinessProbe is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "7047b04593b424718b102523b63667e9682ee999c3cc192bd24ee55a93fe1305",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "b44b0e0943b60ce9932f7ad3890dc2ca6c3f4d1fa7a0128e9b9c95f1e11c3815",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "591ade62-d6b0-4580-b1ae-209f80ba1cd9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'serviceAccountName' should be defined and not empty.",
			"description_id": "2940f843",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "e3b9608ab7b3624c7773d2f5616c7383e3ae5c9ffa43f472df598b80fcb21d46",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-producer-test-connection.spec.serviceAccountName should be defined",
					"actual_value": "metadata.name=release-name-producer-test-connection.spec.serviceAccountName is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "1948d0dc72ad5717c855bb3a1568c285f5683aa30859525567e5b16db78c2895",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "c2dcb5456f30ee82562f79e4154a5717e2c2b2b9ce80aa7ef6c37f928eb9aa7b",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.automountServiceAccountToken is undefined"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "400f6dc4cd112714683ac627622b291d4028cdc32d425be30428e558e006056f",
					"line": 6,
					"resource_type": "ServiceAccount",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{ServiceAccount}}.metadata.name={{release-name-producer}}",
					"search_line": 6,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "4851c6ab672ca27098f4e610f7a35c174c0bd8e401de60ada2310e6b13977fdc",
					"line": 18,
					"resource_type": "Service",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-producer}}",
					"search_line": 18,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "1d425b5e12d88492d047a76582ef26fba0bd8aa45cdb99f61a4cca447af6003e",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Pod}}.metadata.name={{release-name-producer-test-connection}}",
					"search_line": 98,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "e5d9cad5bb948d6b221a9b30d4ea358743d01646629fe4521137dd85c5725b1c",
					"line": 40,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-producer}}",
					"search_line": 40,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "35816361ceda593153e8c9408cb39648caf1c8e228d1fe5a7e3a65282622af18",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "fa11e8ac2061f434ff1e018884571dcfbcf4450c08bab70e88ab771260ec5a30",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=producer has limits defined",
					"actual_value": "spec.template.spec.containers.name=producer doesn't have limits defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "63e0506873dfcd51bf0ec3b1be1c8dff8dfc63818cecc51336984271d20605af",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget should have resources defined",
					"actual_value": "spec.containers.name=wget doesn't have resources defined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "815b66be8fdd02fe6390160ecc8c817596a5fc9aa1eea7f9440ed49efa9955e6",
					"line": 91,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.resources",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=producer.resources should have requests defined",
					"actual_value": "spec.template.spec.containers.name=producer.resources doesn't have requests defined"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "a31b7b82-d994-48c4-bd21-3bab6c31827a",
			"query_url": "https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "22146f41",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "e9ee11b2b4f2450902602a5574df57cb1c07c79656032912c704c1336ca3b52f",
					"line": 58,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.affinity' should be set",
					"actual_value": "'spec.template.spec.affinity' is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "b23e9b98-0cb6-4fc9-b257-1f3270442678",
			"query_url": "https://kubernetes.io/docs/tasks/run-application/configure-pdb/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Availability",
			"experimental": false,
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "df941cb9",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "d8d5ce6c1e9df049937355e35ab84bd639d01376f2e77d7fb360edc465b54b00",
					"line": 50,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.selector.matchLabels",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name=release-name-producer is targeted by a PodDisruptionBudget",
					"actual_value": "metadata.name=release-name-producer is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "Invalid Image Tag",
			"query_id": "583053b7-e632-46f0-b989-f81ff8045385",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Supply-Chain",
			"experimental": false,
			"description": "Image tag must be defined and not be empty or equal to latest.",
			"description_id": "30154626",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "f5339f043222576b7b8fcc8ddc390b34fd4fb9150788881d6b8e28f273f30265",
					"line": 110,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.image",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.image tag is provided and not latest",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.image tag is not provided or latest"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "c2c8229516b1bfad4f8761e6f84d3c4df8277c5312fc9ebe44ffa4aeed3fe24c",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.annotations should specify an AppArmor profile for container {{wget}}",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.annotations does not specify an AppArmor profile for container {{wget}}"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "708816d9d50a05589f0020c8b62764a4a1dd938445568f8116a2cfa0bcf9bbf0",
					"line": 54,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{producer}}",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{producer}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "34d2530a3eeac42cf7bdf481603d96136116d3c1484013918f45b4823453a581",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget.securityContext should be set",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget.securityContext is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "3997f09d8d5bf72d77d21a6dc9fe1c1fc6646ddf035414189757369616fb2b3c",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.containers.name={{producer}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.containers.name={{producer}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-producer}}.spec.containers.name={{producer}}.securityContext.capabilities is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "f7daa0f0dfedc0eeb64a460615a78393946c7807e7ddc907574e988e7ce90ab8",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-producer-test-connection}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "82d88d5ed381f4655ade1a51e1ea474cd4b48ec261762a286950d67812d16466",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-producer}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "a7852d4d18f68be75fde7bbc294f317e1f4bf6339ef34157dfb17a17a6177f27",
					"line": 6,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-producer}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "6ec2ae1dfeabf9830cc30a64859b850f03bf2440f3c1c011a95ed04afc620613",
					"line": 98,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-producer-test-connection}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "ec7c2ce5400cb98a8df4a46c33423e87bce72182651be272c57cdc0b0bf426bf",
					"line": 107,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec has a security context",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec does not have a security context"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "a20f54e75a68f14353e391d929e000aa0b40ebe0ab9f02b0b42c6f0900995fa3",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name=wget",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.containers.name=wget has a security context",
					"actual_value": "spec.containers.name=wget does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "f858f8b68f8a16e10b1c6f3f6f30be2e1ca14e15b6705df75a2d079dc2b90e4e",
					"line": 73,
					"resource_type": "Deployment",
					"resource_name": "release-name-producer",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}",
					"search_line": 73,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-producer}}.spec.template.spec.containers.name={{producer}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "0777bf92c792513bf9746c045016251190947cd2888b08f024bc4a8915d4eedd",
					"line": 109,
					"resource_type": "Pod",
					"resource_name": "release-name-producer-test-connection",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-producer-test-connection}}.spec.containers.name={{wget}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Service Does Not Target Pod",
			"query_id": "3ca03a61-3249-4c16-8427-6f8e47dda729",
			"query_url": "https://kubernetes.io/docs/concepts/services-networking/service/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Service should Target a Pod",
			"description_id": "e7c26645",
			"files": [
				{
					"file_name": "templates/producer_template.yaml",
					"similarity_id": "1de2a4ffb3bc325e9b0364a4edd1292950eb9408c55599fe5e55fcce1c411f90",
					"line": 28,
					"resource_type": "Service",
					"resource_name": "release-name-producer",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-producer}}.spec.ports.port={{8080}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-producer}}.spec.ports.port={{8080}} has a Pod port",
					"actual_value": "metadata.name={{release-name-producer}}.spec.ports.port={{8080}} does not have a Pod port"
				}
			]
		}
	]
}
