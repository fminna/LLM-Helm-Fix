{
	"kics_version": "2.0.0",
	"files_scanned": 1,
	"lines_scanned": 339,
	"files_parsed": 1,
	"lines_parsed": 318,
	"lines_ignored": 21,
	"files_failed_to_scan": 0,
	"queries_total": 134,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 3,
		"INFO": 0,
		"LOW": 19,
		"MEDIUM": 20,
		"TRACE": 0
	},
	"total_counter": 42,
	"total_bom_resources": 0,
	"start": "2024-06-26T03:27:12.533413+02:00",
	"end": "2024-06-26T03:27:14.648953+02:00",
	"paths": [
		"templates/tt-rss_template.yaml",
		"/usr/local/opt/kics/share/kics/assets/queries"
	],
	"queries": [
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "5572cc5e-1e4c-4113-92a6-7a8a3bd25e6d",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should not run with allowPrivilegeEscalation in order to prevent them from gaining more privileges than their parent process",
			"description_id": "525fccf4",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "d039cd7ca30588154d01eaa1991e2246476c534c644ba50112f351f97611664e",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.allowPrivilegeEscalation is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "eb0850ddd187dc59ece81fd20ba2fbfb26cde50eb351b8db14ffad4301fdcb12",
					"line": 238,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 238,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation should be set and should be set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.allowPrivilegeEscalation is undefined"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "b7652612-de4e-4466-a0bf-1cd81f0c6063",
			"query_url": "https://kubernetes.io/docs/concepts/storage/volumes/",
			"severity": "HIGH",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "e42b7901",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "2ccef189fff175cf9f71ea209db2cd50462ddf717e43162e4b78eea16fa36d2a",
					"line": 322,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly should be defined and set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.volumeMounts.name={{dshm}}.readOnly is undefined"
				}
			]
		},
		{
			"query_name": "Container Running As Root",
			"query_id": "cf34805e-3872-4c08-bf92-6ff7bb0cfadb",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Containers should only run as non-root user. This limits the exploitability of security misconfigurations and restricts an attacker's possibilities in case of compromise",
			"description_id": "9d5b1d16",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "f2ac49a8cf0328bcf4a69d704b949560c0abda0c0ff0978356f2ae52b31a3bb7",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.runAsUser is higher than 0 and/or 'runAsNonRoot' is true",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.runAsUser is 0 and 'runAsNonRoot' is false"
				}
			]
		},
		{
			"query_name": "Container Running With Low UID",
			"query_id": "02323c00-cdc3-4fdc-a310-4f2b3e7a1660",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Check if containers are running with low UID, which might cause conflicts with the host's user table.",
			"description_id": "fc2c11f9",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "84e2aea859b61e05902e6b1bcf0bcf0be92ffbd089e3d9d859f9c5b9dc1a6c74",
					"line": 239,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser=1001",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser should be set to a UID \u003e= 10000",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.runAsUser is set to a low UID"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "b58f0025e9cece5ee57700ba60557e6dae5d77d4edde620f72a2db8ab2bb10ee",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.runAsUser should be defined",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.runAsUser is undefined"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "b14d1bc4-a208-45db-92f0-e21f8e2588e9",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory",
			"description_id": "e0ba95cc",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "7d6cad292c1d647eb7b6ef5dc49b650f0a9681e8dffc96f82ee1bffacf8b4d12",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.resources.limits.memory is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "f933019222c1ba13a6f74ff4b730909ad8000a76f94a9b91516b067ed2378be2",
					"line": 317,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 317,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits.memory is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "229588ef-8fde-40c8-8756-f4f2b5825ded",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "Memory requests should be defined for each container. This allows the kubelet to reserve the requested amount of system resources and prevents over-provisioning on individual nodes",
			"description_id": "3dcbd683",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "c70dae1dbbcfcb63e16cfd104ba090112c9587548da9c97c294167255a7456fa",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.resources.requests.memory should be defined",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.resources.requests.memory is undefined"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "dbbc6705-d541-43b0-b166-dd4be8208b54",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should drop 'ALL' or at least 'NET_RAW' capabilities",
			"description_id": "e9790956",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "d9694e44a856497aa793851ab330f6d938d9997e4306b0ac40fce1981e0ceeae",
					"line": 235,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.capabilities.drop is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "4ba1bb396a820f25244cf739ac6162cf12544f2ac398a1b2825f75eaab1d2708",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.capabilities.drop should be defined",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.capabilities.drop is undefined"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "f377b83e-bd07-4f48-a591-60c82b14a78b",
			"query_url": "https://kubernetes.io/docs/tutorials/security/seccomp/#create-pod-that-uses-the-container-runtime-default-seccomp-profile",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls",
			"description_id": "d943c7e7",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "c4e1baeeb9d2c1e92a0f2c0a1b82626773012dc486a83c8c905bcad04a3f81a9",
					"line": 238,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.seccompProfile.type is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "b21b1acebabb88059e9e4101a248cb80b6d2745d8600d95260d4cd1290ae82c8",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.seccompProfile.type should be defined",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.seccompProfile.type is undefined"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "48471392-d4d0-47c0-b135-cdec95eb3eef",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Defaults",
			"experimental": false,
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "51cade0f",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "f206e32452f6d36b154e1b259667cb8deb7f9fb65c822e9c02ff541aec0c591b",
					"line": 126,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken should be defined and set to false",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.automountServiceAccountToken is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "5eb2ca46c72e94b95e118c7d017267ba598613f6696d70e4ab6dcab0070d94b7",
					"line": 129,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.automountServiceAccountToken",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.automountServiceAccountToken should be set to false",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.automountServiceAccountToken is true"
				}
			]
		},
		{
			"query_name": "Shared Service Account",
			"query_id": "c1032cf7-3628-44e2-bd53-38c17cf31b6b",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "A Service Account token is shared between workloads",
			"description_id": "f1c94544",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "f1f91e32738e0bcafecc6556b6df15b63a5b1b9da5bb677af12ce363b9e1002c",
					"line": 128,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "fa27b022b81ffcfddbe67dc728c08aa567bb25017508b5baa42deedf5938b18e",
					"line": 128,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.serviceAccountName",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.serviceAccountName' should not be shared with other workloads",
					"actual_value": "'spec.template.spec.serviceAccountName' is shared with other workloads"
				}
			]
		},
		{
			"query_name": "Using Unrecommended Namespace",
			"query_id": "611ab018-c4aa-4ba2-b0f6-a448337509a6",
			"query_url": "https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/",
			"severity": "MEDIUM",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Namespaces like 'default', 'kube-system' or 'kube-public' should not be used",
			"description_id": "29549ea9",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "3f1e235c2a80860a7ceda70df1bf75d02e6202dd1371d3cd8dc9c0db8a3f33d5",
					"line": 105,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Deployment}}.metadata.name={{release-name-tt-rss}}",
					"search_line": 105,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "ef57df79460dde3d8044103a001f938a3e42f9a20b1cf7f93423649cc3f20fe3",
					"line": 24,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql-hl",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql-hl}}.namespace",
					"search_line": 24,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "ee60472e1cb341e09f09573764c32b8b91c8c094e495711ecfa53f8e08453515",
					"line": 82,
					"resource_type": "Service",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "kind={{Service}}.metadata.name={{release-name-tt-rss}}",
					"search_line": 82,
					"search_value": "",
					"expected_value": "metadata.namespace should be defined and not null",
					"actual_value": "metadata.namespace is undefined or null"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "3f31a81195f136b5622324e938828c418481cb0c4a51720d33c11d3df1e91776",
					"line": 7,
					"resource_type": "Secret",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 7,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "e0bfc54238037c64e40271bb2b37e02df64f586e4be2456f392e8a4c785b0f9b",
					"line": 57,
					"resource_type": "Service",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 57,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "16e39e083c692a38163ae6c34e96f40d3bf29bed3fbaa50b4e5bc86e826af947",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.namespace",
					"search_line": 180,
					"search_value": "",
					"expected_value": "'metadata.namespace' should not be set to default, kube-system or kube-public",
					"actual_value": "'metadata.namespace' is set to default"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "4ac0e2b7-d2d2-4af7-8799-e8de6721ccda",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9a2ef763",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "c50b199100efa0ad24c91fe66c4ffbcf2467f700b50be0f6e2b70a7b351ef49d",
					"line": 317,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.resources.limits",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=postgresql has CPU limits",
					"actual_value": "spec.template.spec.containers.name=postgresql doesn't have CPU limits"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "cbce184d3a8fb56244c33a75a42608cf283cd096060b7024ee4838ea999fa420",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name=release-name-tt-rss",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-tt-rss has resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-tt-rss doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "ca469dd4-c736-448f-8ac1-30a642705e0a",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Resource Management",
			"experimental": false,
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "ac7ad5df",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "5b6d5714e2de75211f44ee8e285743ce482b4afc56bf3fcdcc54c7415fe3590c",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name=release-name-tt-rss",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-tt-rss should have resources defined",
					"actual_value": "spec.template.spec.containers.name=release-name-tt-rss doesn't have resources defined"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "caa3479d-885d-4882-9aac-95e5e78ef5c2",
			"query_url": "https://kubernetes.io/docs/concepts/containers/images/#updating-images",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "201e3c8d",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "a9a448a72bbdf3e6c53f1d59bfe98004957001511095ff7b5b3b6eaa6b517aec",
					"line": 237,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.imagePullPolicy relies on mutable images in cache"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "1f929c8d3af5dc7fee74439ba324378afcb580fdbee7853493052613b6494bc7",
					"line": 135,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.imagePullPolicy",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.imagePullPolicy should be set to 'Always'",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.imagePullPolicy relies on mutable images in cache"
				}
			]
		},
		{
			"query_name": "Missing AppArmor Profile",
			"query_id": "8b36775e-183d-4d46-b0f7-96a6f34a723f",
			"query_url": "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Access Control",
			"experimental": false,
			"description": "Containers should be configured with an AppArmor profile to enforce fine-grained access control over low-level system resources",
			"description_id": "59c17c0a",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "0a9a9356df4cf3e472d4372f37bfda08a7f2502d86a79be26a3687d305c20b36",
					"line": 208,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.metadata",
					"search_line": 208,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{postgresql}}",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{postgresql}}"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "9b16eb1179237c0c03edee7e156ab0d3a6c65fe3bb932a982e8b99cc11c15935",
					"line": 122,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.metadata",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.metadata.annotations should specify an AppArmor profile for container {{release-name-tt-rss}}",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.metadata.annotations does not specify an AppArmor profile for container {{release-name-tt-rss}}"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "268ca686-7fb7-4ae9-b129-955a2a89064e",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Best Practices",
			"experimental": false,
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "9d3ca6db",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "fde959cd065307b3e2cda614152bbaeffef165b4d6064922dfa9222731c3537f",
					"line": 238,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities should be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.containers.name={{postgresql}}.securityContext.capabilities is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "993700a8c2270a1cb8a6678efdb07081c11129128e8f459e18b847e483e56e2e",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.containers.name=release-name-tt-rss",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.containers.name=release-name-tt-rss.securityContext should be set",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.containers.name=release-name-tt-rss.securityContext is undefined"
				}
			]
		},
		{
			"query_name": "Pod or Container Without LimitRange",
			"query_id": "4a20ebac-1060-4c81-95d1-1f7f620e983b",
			"query_url": "https://kubernetes.io/docs/concepts/policy/limit-range/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries",
			"description_id": "142ed21f",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "3483b4058766ea259836ad1297ea95016e21bb19023d8514e1ffc3f2acf3b818",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'LimitRange' policy associated"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "591551d95f3eb7e870a99ab0fa1516d2b4ce4ec715a94f8a81bdcb4f1f0257fe",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}} has a 'LimitRange' policy associated",
					"actual_value": "metadata.name={{release-name-tt-rss}} does not have a 'LimitRange' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without ResourceQuota",
			"query_id": "48a5beba-e4c0-4584-a2aa-e6894e4cf424",
			"query_url": "https://kubernetes.io/docs/concepts/policy/resource-quotas/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume",
			"description_id": "86499ed5",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "1d2a3978198d02d71c6d6a2ac8ab365490e7392043277ec8091105d5fb3bcccc",
					"line": 82,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-tt-rss}} does not have a 'ResourceQuota' policy associated"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "19f4d8588749735f2443dee49e77d971198dfb04f29f30b88789d2ad93bf2d61",
					"line": 180,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}",
					"search_line": 180,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}} has a 'ResourceQuota' policy associated",
					"actual_value": "metadata.name={{release-name-postgresql}} does not have a 'ResourceQuota' policy associated"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "a97a340a-0063-418e-b3a1-3028941d0995",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Insecure Configurations",
			"experimental": false,
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "68a1650b",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "af589e5cb69a3bd904d74406634cb5a4f2d0e861d33853fef4e369a5ba5f7cfe",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name=release-name-tt-rss",
					"search_line": -1,
					"search_value": "",
					"expected_value": "spec.template.spec.containers.name=release-name-tt-rss has a security context",
					"actual_value": "spec.template.spec.containers.name=release-name-tt-rss does not have a security context"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted Read-only",
			"query_id": "a9c2f49d-0671-4fc9-9ece-f4e261e128d0",
			"query_url": "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "Check if the root container filesystem is not being mounted read-only.",
			"description_id": "0d2df1e5",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "fb444f02a8896925a9fd9d224a2c4fdb225f607b4bd5832f0f871fda8abd463d",
					"line": 238,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}",
					"search_line": 238,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.name={{postgresql}}.securityContext.readOnlyRootFilesystem is undefined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "38cd0beaed10f67a909acf8d5ea7f1adfa1eda7361f15c8c3f780073e16cc7e1",
					"line": 133,
					"resource_type": "Deployment",
					"resource_name": "release-name-tt-rss",
					"issue_type": "MissingAttribute",
					"search_key": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.readOnlyRootFilesystem should be set to true",
					"actual_value": "metadata.name={{release-name-tt-rss}}.spec.template.spec.containers.name={{release-name-tt-rss}}.securityContext.readOnlyRootFilesystem is undefined"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "3d658f8b-d988-41a0-a841-40043121de1e",
			"query_url": "https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Secret Management",
			"experimental": false,
			"description": "Container should not use secrets as environment variables",
			"description_id": "99365a7d",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "98e5b43a7d1326ee5a00795071095ef05411559d0a21bb136eaf69d983912000",
					"line": 254,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				},
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "63d8be275e3e989a60bf672e24622e18a1f511e275088cb99dbf161b8b2c414e",
					"line": 259,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.template.spec.containers.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' should be undefined",
					"actual_value": "'spec.template.spec.containers.name={{postgresql}}.env.name={{POSTGRES_PASSWORD}}.valueFrom.secretKeyRef' is defined"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "8cf4671a-cf3d-46fc-8389-21e7405063a2",
			"query_url": "https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/",
			"severity": "LOW",
			"platform": "Kubernetes",
			"category": "Build Process",
			"experimental": false,
			"description": "A StatefulSet requests volume storage.",
			"description_id": "6210afe6",
			"files": [
				{
					"file_name": "templates/tt-rss_template.yaml",
					"similarity_id": "738555fe8f3dd5911e4410b0079f41de00324f64d91eeb18b7965a41f00aa73b",
					"line": 338,
					"resource_type": "StatefulSet",
					"resource_name": "release-name-postgresql",
					"issue_type": "IncorrectValue",
					"search_key": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage=8Gi",
					"search_line": -1,
					"search_value": "",
					"expected_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage should not be set",
					"actual_value": "metadata.name={{release-name-postgresql}}.spec.volumeClaimTemplates.spec.resources.requests.storage is set to 8Gi"
				}
			]
		}
	]
}
